name: Build and Deploy

on:
  push:
    branches: [master, main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3.1.0
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install and Build üîß
        run: |
          yarn
          yarn run build:page

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages # The branch the action should deploy to.
          folder: dist # The folder the action should deploy.

  # scrape-docs:
  #   needs: build-and-deploy
  #   runs-on: ubuntu-18.04

  #   steps:
  #     - name: Checkout üõéÔ∏è
  #       uses: actions/checkout@v2.3.4
  #       with:
  #         persist-credentials: false
  #         fetch-depth: 0

  #     - name: Run docs-scraper
  #       env:
  #         HOST_URL: ${{ secrets.MEILISEARCH_HOST_URL }}
  #         API_KEY: ${{ secrets.MEILISEARCH_API_KEY }}
  #         CONFIG_FILE_PATH: ${{ github.workspace }}/docs/.vuepress/docs-scraper/docs-scraper.config.json
  #       run: |
  #         docker run -t --rm \
  #           -e MEILISEARCH_HOST_URL=$HOST_URL \
  #           -e MEILISEARCH_API_KEY=$API_KEY \
  #           -v $CONFIG_FILE_PATH:/docs-scraper/config.json \
  #           getmeili/docs-scraper:v0.10.4 pipenv run ./docs_scraper config.json
