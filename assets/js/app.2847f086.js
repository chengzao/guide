(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,i,s=e[0],l=e[1],c=e[2],u=0,p=[];u<s.length;u++)i=s[u],Object.prototype.hasOwnProperty.call(o,i)&&o[i]&&p.push(o[i][0]),o[i]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(d&&d(e);p.length;)p.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],r=!0,s=1;s<t.length;s++){var l=t[s];0!==o[l]&&(r=!1)}r&&(a.splice(e--,1),n=i(i.s=t[0]))}return n}var r={},o={3:0},a=[];function i(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.e=function(n){var e=[],t=o[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=o[n]=[e,r]}));e.push(t[2]=r);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(n){return i.p+"assets/js/"+({1:"vendors~layout-Category~layout-Layout~layout-Tag~layout-Tags~layout-TimeLines",4:"layout-Category",5:"layout-NotFound",6:"layout-Tag",7:"layout-Tags",8:"layout-TimeLines",9:"page-01608806",10:"page-01f8c78b",11:"page-07a67efd",12:"page-0bc04495",13:"page-0cc8204b",14:"page-0e770a8b",15:"page-0eb1eaaa",16:"page-0f06b62b",17:"page-0fab4a4b",18:"page-10abb235",19:"page-1100e1ea",20:"page-12b6f6ca",21:"page-13384609",22:"page-14db9dcd",23:"page-17d3d140",24:"page-19de71fe",25:"page-1a60816e",26:"page-1c92ac2f",27:"page-1cdf13eb",28:"page-1e971e6a",29:"page-20211497",30:"page-21d64666",31:"page-221adb60",32:"page-237eb20e",33:"page-2393b2ea",34:"page-252b916a",35:"page-25a66a6a",36:"page-26103f0b",37:"page-26ab0fa5",38:"page-26fec7c0",39:"page-2d684fe3",40:"page-2f8561ea",41:"page-331a0a4b",42:"page-36067c56",43:"page-373cc9a0",44:"page-374104bf",45:"page-39a24c06",46:"page-39e916f0",47:"page-3ac5b8eb",48:"page-3dfb9b42",49:"page-40d1a56d",50:"page-416fae73",51:"page-4392c46a",52:"page-43e29632",53:"page-44ff270b",54:"page-45d5daeb",55:"page-47686c8e",56:"page-477b89cb",57:"page-498c77a1",58:"page-4e03900b",59:"page-4f096bb7",60:"page-51221e6a",61:"page-5290c2e6",62:"page-54bc546a",63:"page-568b66a6",64:"page-56cbd6f0",65:"page-57d0c947",66:"page-5d5f8230",67:"page-5df87458",68:"page-5f067c2b",69:"page-6158e156",70:"page-63739c6b",71:"page-663c3184",72:"page-66e4e26b",73:"page-67b761d5",74:"page-68f2ea4d",75:"page-696b2493",76:"page-69dc8923",77:"page-6b871485",78:"page-6da2cf71",79:"page-71f3782b",80:"page-73897db4",81:"page-73b9822b",82:"page-73c7fac3",83:"page-73d8ef87",84:"page-73fc990b",85:"page-74169cd1",86:"page-759141f1",87:"page-75920260",88:"page-7b6d1e4d",89:"page-800333ea",90:"page-898c4eaa",91:"page-909fc8aa",92:"page-bf44082a",93:"page-c4dcad62",94:"page-c8bebff2",95:"page-cb23c32a",96:"page-cd67ccaa",97:"page-d40032aa",98:"page-d4461d4e",99:"page-d4a672aa",100:"page-d6a7842a",101:"page-e3a2eb6a",102:"page-f03e012a",103:"page-f1c651ee",104:"page-f6b60f8a",105:"page-f757d046",106:"page-fd43afaa",107:"vendors~layout-Layout"}[n]||n)+"."+{1:"61ac5162",2:"f2c06a0d",4:"4afce811",5:"454c058a",6:"022aada4",7:"3399f42f",8:"515b4060",9:"f6cbdf6f",10:"130e33c9",11:"ca8444a8",12:"53f1df63",13:"d7ec5e90",14:"f27b9a4b",15:"8feb875e",16:"cd4cf16d",17:"c405cdfd",18:"651672b2",19:"7cd78450",20:"69395ddc",21:"94d16389",22:"f3825529",23:"e63996de",24:"439543cb",25:"4fc9913b",26:"09d7383b",27:"fc7f91f3",28:"00e6769b",29:"2925ddf1",30:"2f48743b",31:"cfcfbc6f",32:"0f952735",33:"2827d8f9",34:"6176a433",35:"29ad7f33",36:"60276f41",37:"f5960bac",38:"9c3de67d",39:"03f48b6e",40:"0097616d",41:"06f6ea56",42:"7047af20",43:"97d9c316",44:"40a41058",45:"c58a5081",46:"9c6a2dc4",47:"c79937f8",48:"74ac43c3",49:"219f9674",50:"37ea9718",51:"295e2f7b",52:"eb626a16",53:"6572e14e",54:"d1a475e3",55:"ab09f288",56:"b533f7f9",57:"ba631b21",58:"ab6c0920",59:"8743460e",60:"a246f65f",61:"d676ec94",62:"0e03a70b",63:"d05164d6",64:"2817baea",65:"79a38885",66:"4b2886ab",67:"40c4b7fe",68:"5d5ef62f",69:"44394831",70:"744937c4",71:"5496167a",72:"cf2a560b",73:"fc31a64c",74:"4f400968",75:"93bf2f6e",76:"c0e89e3c",77:"50d15957",78:"ff198cf0",79:"d8d38f09",80:"063ebef9",81:"94edb245",82:"78b8e9c5",83:"a24e0e4e",84:"09eaa579",85:"f6483d40",86:"ced9c3a5",87:"3f2008b5",88:"36b61051",89:"d261a226",90:"fd555b68",91:"50d1f327",92:"39235fbf",93:"876100cf",94:"2a0e372c",95:"7b0cada1",96:"d633c4fb",97:"3abef46f",98:"b28cbc3d",99:"7c2a1b0d",100:"74bef8a6",101:"ac444b1d",102:"e48d145c",103:"17f992fe",104:"0769ad6e",105:"4101144b",106:"5e2c35ea",107:"cd0422f9",108:"dc264d2b",109:"7dc44a81",110:"1c596c66",111:"154fffda",112:"6a90caf3",113:"5022e90d"}[n]+".js"}(n);var l=new Error;a=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=o[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+r+": "+a+")",l.name="ChunkLoadError",l.type=r,l.request=a,t[1](l)}o[n]=void 0}};var c=setTimeout((function(){a({type:"timeout",target:s})}),12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(e)},i.m=n,i.c=r,i.d=function(n,e,t){i.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,e){if(1&e&&(n=i(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)i.d(t,r,function(e){return n[e]}.bind(null,r));return t},i.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="/",i.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var d=l;a.push([289,0]),t()}([function(n,e,t){"use strict";t.d(e,"e",(function(){return w})),t.d(e,"d",(function(){return k})),t.d(e,"c",(function(){return j})),t.d(e,"f",(function(){return _})),t.d(e,"a",(function(){return T})),t.d(e,"g",(function(){return S})),t.d(e,"b",(function(){return C})),t.d(e,"h",(function(){return z})),t.d(e,"i",(function(){return $}));t(23),t(280),t(64),t(36),t(218),t(16),t(35),t(281),t(50),t(40),t(66);var r=t(97),o=t(37),a=(t(108),t(60)),i=t(1),s={NotFound:function(){return Promise.all([t.e(0),t.e(5)]).then(t.bind(null,671))},Category:function(){return Promise.all([t.e(0),t.e(1),t.e(4)]).then(t.bind(null,672))},Layout:function(){return Promise.all([t.e(0),t.e(1),t.e(107)]).then(t.bind(null,668))},Tag:function(){return Promise.all([t.e(0),t.e(1),t.e(6)]).then(t.bind(null,673))},Tags:function(){return Promise.all([t.e(0),t.e(1),t.e(7)]).then(t.bind(null,674))},TimeLines:function(){return Promise.all([t.e(0),t.e(1),t.e(8)]).then(t.bind(null,675))}},l={"v-39e916f0":function(){return t.e(46).then(t.bind(null,679))},"v-12b6f6ca":function(){return t.e(20).then(t.bind(null,680))},"v-2393b2ea":function(){return t.e(33).then(t.bind(null,681))},"v-f6b60f8a":function(){return t.e(104).then(t.bind(null,682))},"v-73d8ef87":function(){return t.e(83).then(t.bind(null,683))},"v-0fab4a4b":function(){return t.e(17).then(t.bind(null,684))},"v-73897db4":function(){return t.e(80).then(t.bind(null,685))},"v-0f06b62b":function(){return t.e(16).then(t.bind(null,686))},"v-1100e1ea":function(){return t.e(19).then(t.bind(null,687))},"v-26fec7c0":function(){return t.e(38).then(t.bind(null,688))},"v-898c4eaa":function(){return t.e(90).then(t.bind(null,689))},"v-c4dcad62":function(){return t.e(93).then(t.bind(null,690))},"v-416fae73":function(){return t.e(50).then(t.bind(null,691))},"v-07a67efd":function(){return t.e(11).then(t.bind(null,692))},"v-2d684fe3":function(){return t.e(39).then(t.bind(null,693))},"v-17d3d140":function(){return t.e(23).then(t.bind(null,694))},"v-759141f1":function(){return t.e(86).then(t.bind(null,695))},"v-c8bebff2":function(){return t.e(94).then(t.bind(null,696))},"v-237eb20e":function(){return t.e(32).then(t.bind(null,697))},"v-10abb235":function(){return t.e(18).then(t.bind(null,698))},"v-73b9822b":function(){return t.e(81).then(t.bind(null,699))},"v-3dfb9b42":function(){return t.e(48).then(t.bind(null,700))},"v-1c92ac2f":function(){return t.e(26).then(t.bind(null,701))},"v-1cdf13eb":function(){return t.e(27).then(t.bind(null,702))},"v-44ff270b":function(){return t.e(53).then(t.bind(null,703))},"v-73c7fac3":function(){return t.e(82).then(t.bind(null,704))},"v-67b761d5":function(){return t.e(73).then(t.bind(null,705))},"v-25a66a6a":function(){return t.e(35).then(t.bind(null,706))},"v-477b89cb":function(){return t.e(56).then(t.bind(null,707))},"v-71f3782b":function(){return t.e(79).then(t.bind(null,708))},"v-4e03900b":function(){return t.e(58).then(t.bind(null,709))},"v-221adb60":function(){return t.e(31).then(t.bind(null,710))},"v-909fc8aa":function(){return t.e(91).then(t.bind(null,711))},"v-0eb1eaaa":function(){return t.e(15).then(t.bind(null,712))},"v-01608806":function(){return t.e(9).then(t.bind(null,713))},"v-d40032aa":function(){return t.e(97).then(t.bind(null,714))},"v-26ab0fa5":function(){return t.e(37).then(t.bind(null,715))},"v-2f8561ea":function(){return t.e(40).then(t.bind(null,716))},"v-d6a7842a":function(){return t.e(100).then(t.bind(null,717))},"v-1e971e6a":function(){return t.e(28).then(t.bind(null,718))},"v-43e29632":function(){return t.e(52).then(t.bind(null,719))},"v-5f067c2b":function(){return t.e(68).then(t.bind(null,720))},"v-4392c46a":function(){return t.e(51).then(t.bind(null,721))},"v-54bc546a":function(){return t.e(62).then(t.bind(null,722))},"v-696b2493":function(){return t.e(75).then(t.bind(null,723))},"v-51221e6a":function(){return t.e(60).then(t.bind(null,724))},"v-663c3184":function(){return t.e(71).then(t.bind(null,725))},"v-39a24c06":function(){return t.e(45).then(t.bind(null,726))},"v-69dc8923":function(){return t.e(76).then(t.bind(null,727))},"v-40d1a56d":function(){return t.e(49).then(t.bind(null,728))},"v-d4461d4e":function(){return t.e(98).then(t.bind(null,729))},"v-56cbd6f0":function(){return t.e(64).then(t.bind(null,730))},"v-68f2ea4d":function(){return t.e(74).then(t.bind(null,731))},"v-13384609":function(){return t.e(21).then(t.bind(null,732))},"v-20211497":function(){return t.e(29).then(t.bind(null,733))},"v-498c77a1":function(){return t.e(57).then(t.bind(null,734))},"v-57d0c947":function(){return t.e(65).then(t.bind(null,735))},"v-cd67ccaa":function(){return t.e(96).then(t.bind(null,736))},"v-fd43afaa":function(){return t.e(106).then(t.bind(null,737))},"v-bf44082a":function(){return t.e(92).then(t.bind(null,738))},"v-19de71fe":function(){return t.e(24).then(t.bind(null,739))},"v-f757d046":function(){return t.e(105).then(t.bind(null,740))},"v-800333ea":function(){return t.e(89).then(t.bind(null,741))},"v-5df87458":function(){return t.e(67).then(t.bind(null,742))},"v-5290c2e6":function(){return t.e(61).then(t.bind(null,743))},"v-45d5daeb":function(){return t.e(54).then(t.bind(null,744))},"v-74169cd1":function(){return t.e(85).then(t.bind(null,745))},"v-7b6d1e4d":function(){return t.e(88).then(t.bind(null,746))},"v-36067c56":function(){return t.e(42).then(t.bind(null,747))},"v-331a0a4b":function(){return t.e(41).then(t.bind(null,748))},"v-66e4e26b":function(){return t.e(72).then(t.bind(null,749))},"v-f1c651ee":function(){return t.e(103).then(t.bind(null,750))},"v-1a60816e":function(){return t.e(25).then(t.bind(null,751))},"v-6da2cf71":function(){return t.e(78).then(t.bind(null,752))},"v-47686c8e":function(){return t.e(55).then(t.bind(null,753))},"v-75920260":function(){return t.e(87).then(t.bind(null,754))},"v-63739c6b":function(){return t.e(70).then(t.bind(null,755))},"v-cb23c32a":function(){return t.e(95).then(t.bind(null,756))},"v-f03e012a":function(){return t.e(102).then(t.bind(null,757))},"v-73fc990b":function(){return t.e(84).then(t.bind(null,758))},"v-5d5f8230":function(){return t.e(66).then(t.bind(null,759))},"v-0bc04495":function(){return t.e(12).then(t.bind(null,760))},"v-568b66a6":function(){return t.e(63).then(t.bind(null,761))},"v-6158e156":function(){return t.e(69).then(t.bind(null,762))},"v-01f8c78b":function(){return t.e(10).then(t.bind(null,763))},"v-e3a2eb6a":function(){return t.e(101).then(t.bind(null,764))},"v-4f096bb7":function(){return t.e(59).then(t.bind(null,765))},"v-14db9dcd":function(){return t.e(22).then(t.bind(null,766))},"v-21d64666":function(){return t.e(30).then(t.bind(null,767))},"v-0cc8204b":function(){return t.e(13).then(t.bind(null,768))},"v-d4a672aa":function(){return t.e(99).then(t.bind(null,769))},"v-0e770a8b":function(){return t.e(14).then(t.bind(null,770))},"v-252b916a":function(){return t.e(34).then(t.bind(null,771))},"v-373cc9a0":function(){return t.e(43).then(t.bind(null,772))},"v-26103f0b":function(){return t.e(36).then(t.bind(null,773))},"v-6b871485":function(){return t.e(77).then(t.bind(null,774))},"v-3ac5b8eb":function(){return t.e(47).then(t.bind(null,775))},"v-374104bf":function(){return t.e(44).then(t.bind(null,776))}};function c(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var d=/-(\w)/g,u=c((function(n){return n.replace(d,(function(n,e){return e?e.toUpperCase():""}))})),p=/\B([A-Z])/g,m=c((function(n){return n.replace(p,"-$1").toLowerCase()})),h=c((function(n){return n.charAt(0).toUpperCase()+n.slice(1)}));function f(n,e){if(e)return n(e)?n(e):e.includes("-")?n(h(u(e))):n(h(e))||n(m(e))}var g=Object.assign({},s,l),v=function(n){return g[n]},b=function(n){return l[n]},y=function(n){return s[n]},x=function(n){return i.default.component(n)};function w(n){return f(b,n)}function k(n){return f(y,n)}function j(n){return f(v,n)}function _(n){return f(x,n)}function T(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return Promise.all(e.filter((function(n){return n})).map(function(){var n=Object(a.a)(regeneratorRuntime.mark((function n(e){var t;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(_(e)||!j(e)){n.next=5;break}return n.next=3,j(e)();case 3:t=n.sent,i.default.component(e,t.default);case 5:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()))}function S(n,e,t){var r;switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),(r=n[e]).push.apply(r,Object(o.a)(t));break;default:throw new Error("Unknown option name.")}}function C(n,e){for(var t=0;t<n.length;t++){var r=n[t];if(r.key===e)return r}return{path:"",frontmatter:{}}}function z(n,e){var t=n.$localePath;return"object"===Object(r.a)(e)&&e[t]?e[t]:e}function $(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}},function(n,e,t){"use strict";t.r(e);
/*!
 * Vue.js v2.6.12
 * (c) 2014-2020 Evan You
 * Released under the MIT License.
 */
var r=Object.freeze({});function o(n){return null==n}function a(n){return null!=n}function i(n){return!0===n}function s(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function l(n){return null!==n&&"object"==typeof n}var c=Object.prototype.toString;function d(n){return"[object Object]"===c.call(n)}function u(n){return"[object RegExp]"===c.call(n)}function p(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function m(n){return a(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function h(n){return null==n?"":Array.isArray(n)||d(n)&&n.toString===c?JSON.stringify(n,null,2):String(n)}function f(n){var e=parseFloat(n);return isNaN(e)?n:e}function g(n,e){for(var t=Object.create(null),r=n.split(","),o=0;o<r.length;o++)t[r[o]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}g("slot,component",!0);var v=g("key,ref,slot,slot-scope,is");function b(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var y=Object.prototype.hasOwnProperty;function x(n,e){return y.call(n,e)}function w(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var k=/-(\w)/g,j=w((function(n){return n.replace(k,(function(n,e){return e?e.toUpperCase():""}))})),_=w((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),T=/\B([A-Z])/g,S=w((function(n){return n.replace(T,"-$1").toLowerCase()}));var C=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function z(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function $(n,e){for(var t in e)n[t]=e[t];return n}function I(n){for(var e={},t=0;t<n.length;t++)n[t]&&$(e,n[t]);return e}function O(n,e,t){}var E=function(n,e,t){return!1},A=function(n){return n};function P(n,e){if(n===e)return!0;var t=l(n),r=l(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var o=Array.isArray(n),a=Array.isArray(e);if(o&&a)return n.length===e.length&&n.every((function(n,t){return P(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(o||a)return!1;var i=Object.keys(n),s=Object.keys(e);return i.length===s.length&&i.every((function(t){return P(n[t],e[t])}))}catch(n){return!1}}function N(n,e){for(var t=0;t<n.length;t++)if(P(n[t],e))return t;return-1}function M(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}var R=["component","directive","filter"],L=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],D={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:E,isReservedAttr:E,isUnknownElement:E,getTagNamespace:O,parsePlatformTagName:A,mustUseProp:E,async:!0,_lifecycleHooks:L},q=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function F(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var U=new RegExp("[^"+q.source+".$_\\d]");var B,H="__proto__"in{},V="undefined"!=typeof window,W="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,X=W&&WXEnvironment.platform.toLowerCase(),G=V&&window.navigator.userAgent.toLowerCase(),J=G&&/msie|trident/.test(G),Y=G&&G.indexOf("msie 9.0")>0,K=G&&G.indexOf("edge/")>0,Q=(G&&G.indexOf("android"),G&&/iphone|ipad|ipod|ios/.test(G)||"ios"===X),Z=(G&&/chrome\/\d+/.test(G),G&&/phantomjs/.test(G),G&&G.match(/firefox\/(\d+)/)),nn={}.watch,en=!1;if(V)try{var tn={};Object.defineProperty(tn,"passive",{get:function(){en=!0}}),window.addEventListener("test-passive",null,tn)}catch(n){}var rn=function(){return void 0===B&&(B=!V&&!W&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),B},on=V&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function an(n){return"function"==typeof n&&/native code/.test(n.toString())}var sn,ln="undefined"!=typeof Symbol&&an(Symbol)&&"undefined"!=typeof Reflect&&an(Reflect.ownKeys);sn="undefined"!=typeof Set&&an(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var cn=O,dn=0,un=function(){this.id=dn++,this.subs=[]};un.prototype.addSub=function(n){this.subs.push(n)},un.prototype.removeSub=function(n){b(this.subs,n)},un.prototype.depend=function(){un.target&&un.target.addDep(this)},un.prototype.notify=function(){var n=this.subs.slice();for(var e=0,t=n.length;e<t;e++)n[e].update()},un.target=null;var pn=[];function mn(n){pn.push(n),un.target=n}function hn(){pn.pop(),un.target=pn[pn.length-1]}var fn=function(n,e,t,r,o,a,i,s){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=o,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},gn={child:{configurable:!0}};gn.child.get=function(){return this.componentInstance},Object.defineProperties(fn.prototype,gn);var vn=function(n){void 0===n&&(n="");var e=new fn;return e.text=n,e.isComment=!0,e};function bn(n){return new fn(void 0,void 0,void 0,String(n))}function yn(n){var e=new fn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var xn=Array.prototype,wn=Object.create(xn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=xn[n];F(wn,n,(function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];var o,a=e.apply(this,t),i=this.__ob__;switch(n){case"push":case"unshift":o=t;break;case"splice":o=t.slice(2)}return o&&i.observeArray(o),i.dep.notify(),a}))}));var kn=Object.getOwnPropertyNames(wn),jn=!0;function _n(n){jn=n}var Tn=function(n){this.value=n,this.dep=new un,this.vmCount=0,F(n,"__ob__",this),Array.isArray(n)?(H?function(n,e){n.__proto__=e}(n,wn):function(n,e,t){for(var r=0,o=t.length;r<o;r++){var a=t[r];F(n,a,e[a])}}(n,wn,kn),this.observeArray(n)):this.walk(n)};function Sn(n,e){var t;if(l(n)&&!(n instanceof fn))return x(n,"__ob__")&&n.__ob__ instanceof Tn?t=n.__ob__:jn&&!rn()&&(Array.isArray(n)||d(n))&&Object.isExtensible(n)&&!n._isVue&&(t=new Tn(n)),e&&t&&t.vmCount++,t}function Cn(n,e,t,r,o){var a=new un,i=Object.getOwnPropertyDescriptor(n,e);if(!i||!1!==i.configurable){var s=i&&i.get,l=i&&i.set;s&&!l||2!==arguments.length||(t=n[e]);var c=!o&&Sn(t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(n):t;return un.target&&(a.depend(),c&&(c.dep.depend(),Array.isArray(e)&&In(e))),e},set:function(e){var r=s?s.call(n):t;e===r||e!=e&&r!=r||s&&!l||(l?l.call(n,e):t=e,c=!o&&Sn(e),a.notify())}})}}function zn(n,e,t){if(Array.isArray(n)&&p(e))return n.length=Math.max(n.length,e),n.splice(e,1,t),t;if(e in n&&!(e in Object.prototype))return n[e]=t,t;var r=n.__ob__;return n._isVue||r&&r.vmCount?t:r?(Cn(r.value,e,t),r.dep.notify(),t):(n[e]=t,t)}function $n(n,e){if(Array.isArray(n)&&p(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||x(n,e)&&(delete n[e],t&&t.dep.notify())}}function In(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&In(e)}Tn.prototype.walk=function(n){for(var e=Object.keys(n),t=0;t<e.length;t++)Cn(n,e[t])},Tn.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Sn(n[e])};var On=D.optionMergeStrategies;function En(n,e){if(!e)return n;for(var t,r,o,a=ln?Reflect.ownKeys(e):Object.keys(e),i=0;i<a.length;i++)"__ob__"!==(t=a[i])&&(r=n[t],o=e[t],x(n,t)?r!==o&&d(r)&&d(o)&&En(r,o):zn(n,t,o));return n}function An(n,e,t){return t?function(){var r="function"==typeof e?e.call(t,t):e,o="function"==typeof n?n.call(t,t):n;return r?En(r,o):o}:e?n?function(){return En("function"==typeof e?e.call(this,this):e,"function"==typeof n?n.call(this,this):n)}:e:n}function Pn(n,e){var t=e?n?n.concat(e):Array.isArray(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Nn(n,e,t,r){var o=Object.create(n||null);return e?$(o,e):o}On.data=function(n,e,t){return t?An(n,e,t):e&&"function"!=typeof e?n:An(n,e)},L.forEach((function(n){On[n]=Pn})),R.forEach((function(n){On[n+"s"]=Nn})),On.watch=function(n,e,t,r){if(n===nn&&(n=void 0),e===nn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var o={};for(var a in $(o,n),e){var i=o[a],s=e[a];i&&!Array.isArray(i)&&(i=[i]),o[a]=i?i.concat(s):Array.isArray(s)?s:[s]}return o},On.props=On.methods=On.inject=On.computed=function(n,e,t,r){if(!n)return e;var o=Object.create(null);return $(o,n),e&&$(o,e),o},On.provide=An;var Mn=function(n,e){return void 0===e?n:e};function Rn(n,e,t){if("function"==typeof e&&(e=e.options),function(n,e){var t=n.props;if(t){var r,o,a={};if(Array.isArray(t))for(r=t.length;r--;)"string"==typeof(o=t[r])&&(a[j(o)]={type:null});else if(d(t))for(var i in t)o=t[i],a[j(i)]=d(o)?o:{type:o};else 0;n.props=a}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(Array.isArray(t))for(var o=0;o<t.length;o++)r[t[o]]={from:t[o]};else if(d(t))for(var a in t){var i=t[a];r[a]=d(i)?$({from:a},i):{from:i}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];"function"==typeof r&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=Rn(n,e.extends,t)),e.mixins))for(var r=0,o=e.mixins.length;r<o;r++)n=Rn(n,e.mixins[r],t);var a,i={};for(a in n)s(a);for(a in e)x(n,a)||s(a);function s(r){var o=On[r]||Mn;i[r]=o(n[r],e[r],t,r)}return i}function Ln(n,e,t,r){if("string"==typeof t){var o=n[e];if(x(o,t))return o[t];var a=j(t);if(x(o,a))return o[a];var i=_(a);return x(o,i)?o[i]:o[t]||o[a]||o[i]}}function Dn(n,e,t,r){var o=e[n],a=!x(t,n),i=t[n],s=Un(Boolean,o.type);if(s>-1)if(a&&!x(o,"default"))i=!1;else if(""===i||i===S(n)){var l=Un(String,o.type);(l<0||s<l)&&(i=!0)}if(void 0===i){i=function(n,e,t){if(!x(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return"function"==typeof r&&"Function"!==qn(e.type)?r.call(n):r}(r,o,n);var c=jn;_n(!0),Sn(i),_n(c)}return i}function qn(n){var e=n&&n.toString().match(/^\s*function (\w+)/);return e?e[1]:""}function Fn(n,e){return qn(n)===qn(e)}function Un(n,e){if(!Array.isArray(e))return Fn(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(Fn(e[t],n))return t;return-1}function Bn(n,e,t){mn();try{if(e)for(var r=e;r=r.$parent;){var o=r.$options.errorCaptured;if(o)for(var a=0;a<o.length;a++)try{if(!1===o[a].call(r,n,e,t))return}catch(n){Vn(n,r,"errorCaptured hook")}}Vn(n,e,t)}finally{hn()}}function Hn(n,e,t,r,o){var a;try{(a=t?n.apply(e,t):n.call(e))&&!a._isVue&&m(a)&&!a._handled&&(a.catch((function(n){return Bn(n,r,o+" (Promise/async)")})),a._handled=!0)}catch(n){Bn(n,r,o)}return a}function Vn(n,e,t){if(D.errorHandler)try{return D.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Wn(e,null,"config.errorHandler")}Wn(n,e,t)}function Wn(n,e,t){if(!V&&!W||"undefined"==typeof console)throw n;console.error(n)}var Xn,Gn=!1,Jn=[],Yn=!1;function Kn(){Yn=!1;var n=Jn.slice(0);Jn.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&an(Promise)){var Qn=Promise.resolve();Xn=function(){Qn.then(Kn),Q&&setTimeout(O)},Gn=!0}else if(J||"undefined"==typeof MutationObserver||!an(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Xn="undefined"!=typeof setImmediate&&an(setImmediate)?function(){setImmediate(Kn)}:function(){setTimeout(Kn,0)};else{var Zn=1,ne=new MutationObserver(Kn),ee=document.createTextNode(String(Zn));ne.observe(ee,{characterData:!0}),Xn=function(){Zn=(Zn+1)%2,ee.data=String(Zn)},Gn=!0}function te(n,e){var t;if(Jn.push((function(){if(n)try{n.call(e)}catch(n){Bn(n,e,"nextTick")}else t&&t(e)})),Yn||(Yn=!0,Xn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}var re=new sn;function oe(n){!function n(e,t){var r,o,a=Array.isArray(e);if(!a&&!l(e)||Object.isFrozen(e)||e instanceof fn)return;if(e.__ob__){var i=e.__ob__.dep.id;if(t.has(i))return;t.add(i)}if(a)for(r=e.length;r--;)n(e[r],t);else for(o=Object.keys(e),r=o.length;r--;)n(e[o[r]],t)}(n,re),re.clear()}var ae=w((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function ie(n,e){function t(){var n=arguments,r=t.fns;if(!Array.isArray(r))return Hn(r,null,arguments,e,"v-on handler");for(var o=r.slice(),a=0;a<o.length;a++)Hn(o[a],null,n,e,"v-on handler")}return t.fns=n,t}function se(n,e,t,r,a,s){var l,c,d,u;for(l in n)c=n[l],d=e[l],u=ae(l),o(c)||(o(d)?(o(c.fns)&&(c=n[l]=ie(c,s)),i(u.once)&&(c=n[l]=a(u.name,c,u.capture)),t(u.name,c,u.capture,u.passive,u.params)):c!==d&&(d.fns=c,n[l]=d));for(l in e)o(n[l])&&r((u=ae(l)).name,e[l],u.capture)}function le(n,e,t){var r;n instanceof fn&&(n=n.data.hook||(n.data.hook={}));var s=n[e];function l(){t.apply(this,arguments),b(r.fns,l)}o(s)?r=ie([l]):a(s.fns)&&i(s.merged)?(r=s).fns.push(l):r=ie([s,l]),r.merged=!0,n[e]=r}function ce(n,e,t,r,o){if(a(e)){if(x(e,t))return n[t]=e[t],o||delete e[t],!0;if(x(e,r))return n[t]=e[r],o||delete e[r],!0}return!1}function de(n){return s(n)?[bn(n)]:Array.isArray(n)?function n(e,t){var r,l,c,d,u=[];for(r=0;r<e.length;r++)o(l=e[r])||"boolean"==typeof l||(c=u.length-1,d=u[c],Array.isArray(l)?l.length>0&&(ue((l=n(l,(t||"")+"_"+r))[0])&&ue(d)&&(u[c]=bn(d.text+l[0].text),l.shift()),u.push.apply(u,l)):s(l)?ue(d)?u[c]=bn(d.text+l):""!==l&&u.push(bn(l)):ue(l)&&ue(d)?u[c]=bn(d.text+l.text):(i(e._isVList)&&a(l.tag)&&o(l.key)&&a(t)&&(l.key="__vlist"+t+"_"+r+"__"),u.push(l)));return u}(n):void 0}function ue(n){return a(n)&&a(n.text)&&!1===n.isComment}function pe(n,e){if(n){for(var t=Object.create(null),r=ln?Reflect.ownKeys(n):Object.keys(n),o=0;o<r.length;o++){var a=r[o];if("__ob__"!==a){for(var i=n[a].from,s=e;s;){if(s._provided&&x(s._provided,i)){t[a]=s._provided[i];break}s=s.$parent}if(!s)if("default"in n[a]){var l=n[a].default;t[a]="function"==typeof l?l.call(e):l}else 0}}return t}}function me(n,e){if(!n||!n.length)return{};for(var t={},r=0,o=n.length;r<o;r++){var a=n[r],i=a.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,a.context!==e&&a.fnContext!==e||!i||null==i.slot)(t.default||(t.default=[])).push(a);else{var s=i.slot,l=t[s]||(t[s]=[]);"template"===a.tag?l.push.apply(l,a.children||[]):l.push(a)}}for(var c in t)t[c].every(he)&&delete t[c];return t}function he(n){return n.isComment&&!n.asyncFactory||" "===n.text}function fe(n,e,t){var o,a=Object.keys(e).length>0,i=n?!!n.$stable:!a,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(i&&t&&t!==r&&s===t.$key&&!a&&!t.$hasNormal)return t;for(var l in o={},n)n[l]&&"$"!==l[0]&&(o[l]=ge(e,l,n[l]))}else o={};for(var c in e)c in o||(o[c]=ve(e,c));return n&&Object.isExtensible(n)&&(n._normalized=o),F(o,"$stable",i),F(o,"$key",s),F(o,"$hasNormal",a),o}function ge(n,e,t){var r=function(){var n=arguments.length?t.apply(null,arguments):t({});return(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:de(n))&&(0===n.length||1===n.length&&n[0].isComment)?void 0:n};return t.proxy&&Object.defineProperty(n,e,{get:r,enumerable:!0,configurable:!0}),r}function ve(n,e){return function(){return n[e]}}function be(n,e){var t,r,o,i,s;if(Array.isArray(n)||"string"==typeof n)for(t=new Array(n.length),r=0,o=n.length;r<o;r++)t[r]=e(n[r],r);else if("number"==typeof n)for(t=new Array(n),r=0;r<n;r++)t[r]=e(r+1,r);else if(l(n))if(ln&&n[Symbol.iterator]){t=[];for(var c=n[Symbol.iterator](),d=c.next();!d.done;)t.push(e(d.value,t.length)),d=c.next()}else for(i=Object.keys(n),t=new Array(i.length),r=0,o=i.length;r<o;r++)s=i[r],t[r]=e(n[s],s,r);return a(t)||(t=[]),t._isVList=!0,t}function ye(n,e,t,r){var o,a=this.$scopedSlots[n];a?(t=t||{},r&&(t=$($({},r),t)),o=a(t)||e):o=this.$slots[n]||e;var i=t&&t.slot;return i?this.$createElement("template",{slot:i},o):o}function xe(n){return Ln(this.$options,"filters",n)||A}function we(n,e){return Array.isArray(n)?-1===n.indexOf(e):n!==e}function ke(n,e,t,r,o){var a=D.keyCodes[e]||t;return o&&r&&!D.keyCodes[e]?we(o,r):a?we(a,n):r?S(r)!==e:void 0}function je(n,e,t,r,o){if(t)if(l(t)){var a;Array.isArray(t)&&(t=I(t));var i=function(i){if("class"===i||"style"===i||v(i))a=n;else{var s=n.attrs&&n.attrs.type;a=r||D.mustUseProp(e,s,i)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=j(i),c=S(i);l in a||c in a||(a[i]=t[i],o&&((n.on||(n.on={}))["update:"+i]=function(n){t[i]=n}))};for(var s in t)i(s)}else;return n}function _e(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||Se(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),r}function Te(n,e,t){return Se(n,"__once__"+e+(t?"_"+t:""),!0),n}function Se(n,e,t){if(Array.isArray(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&Ce(n[r],e+"_"+r,t);else Ce(n,e,t)}function Ce(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function ze(n,e){if(e)if(d(e)){var t=n.on=n.on?$({},n.on):{};for(var r in e){var o=t[r],a=e[r];t[r]=o?[].concat(o,a):a}}else;return n}function $e(n,e,t,r){e=e||{$stable:!t};for(var o=0;o<n.length;o++){var a=n[o];Array.isArray(a)?$e(a,e,t):a&&(a.proxy&&(a.fn.proxy=!0),e[a.key]=a.fn)}return r&&(e.$key=r),e}function Ie(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function Oe(n,e){return"string"==typeof n?e+n:n}function Ee(n){n._o=Te,n._n=f,n._s=h,n._l=be,n._t=ye,n._q=P,n._i=N,n._m=_e,n._f=xe,n._k=ke,n._b=je,n._v=bn,n._e=vn,n._u=$e,n._g=ze,n._d=Ie,n._p=Oe}function Ae(n,e,t,o,a){var s,l=this,c=a.options;x(o,"_uid")?(s=Object.create(o))._original=o:(s=o,o=o._original);var d=i(c._compiled),u=!d;this.data=n,this.props=e,this.children=t,this.parent=o,this.listeners=n.on||r,this.injections=pe(c.inject,o),this.slots=function(){return l.$slots||fe(n.scopedSlots,l.$slots=me(t,o)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return fe(n.scopedSlots,this.slots())}}),d&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=fe(n.scopedSlots,this.$slots)),c._scopeId?this._c=function(n,e,t,r){var a=qe(s,n,e,t,r,u);return a&&!Array.isArray(a)&&(a.fnScopeId=c._scopeId,a.fnContext=o),a}:this._c=function(n,e,t,r){return qe(s,n,e,t,r,u)}}function Pe(n,e,t,r,o){var a=yn(n);return a.fnContext=t,a.fnOptions=r,e.slot&&((a.data||(a.data={})).slot=e.slot),a}function Ne(n,e){for(var t in e)n[j(t)]=e[t]}Ee(Ae.prototype);var Me={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;Me.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;a(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ye)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,o,a){0;var i=o.data.scopedSlots,s=n.$scopedSlots,l=!!(i&&!i.$stable||s!==r&&!s.$stable||i&&n.$scopedSlots.$key!==i.$key),c=!!(a||n.$options._renderChildren||l);n.$options._parentVnode=o,n.$vnode=o,n._vnode&&(n._vnode.parent=o);if(n.$options._renderChildren=a,n.$attrs=o.data.attrs||r,n.$listeners=t||r,e&&n.$options.props){_n(!1);for(var d=n._props,u=n.$options._propKeys||[],p=0;p<u.length;p++){var m=u[p],h=n.$options.props;d[m]=Dn(m,h,e,n)}_n(!0),n.$options.propsData=e}t=t||r;var f=n.$options._parentListeners;n.$options._parentListeners=t,Je(n,t,f),c&&(n.$slots=me(a,o.context),n.$forceUpdate());0}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,nt(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,tt.push(e)):Ze(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(t&&(e._directInactive=!0,Qe(e)))return;if(!e._inactive){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);nt(e,"deactivated")}}(e,!0):e.$destroy())}},Re=Object.keys(Me);function Le(n,e,t,s,c){if(!o(n)){var d=t.$options._base;if(l(n)&&(n=d.extend(n)),"function"==typeof n){var u;if(o(n.cid)&&void 0===(n=function(n,e){if(i(n.error)&&a(n.errorComp))return n.errorComp;if(a(n.resolved))return n.resolved;var t=Ue;t&&a(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t);if(i(n.loading)&&a(n.loadingComp))return n.loadingComp;if(t&&!a(n.owners)){var r=n.owners=[t],s=!0,c=null,d=null;t.$on("hook:destroyed",(function(){return b(r,t)}));var u=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==c&&(clearTimeout(c),c=null),null!==d&&(clearTimeout(d),d=null))},p=M((function(t){n.resolved=Be(t,e),s?r.length=0:u(!0)})),h=M((function(e){a(n.errorComp)&&(n.error=!0,u(!0))})),f=n(p,h);return l(f)&&(m(f)?o(n.resolved)&&f.then(p,h):m(f.component)&&(f.component.then(p,h),a(f.error)&&(n.errorComp=Be(f.error,e)),a(f.loading)&&(n.loadingComp=Be(f.loading,e),0===f.delay?n.loading=!0:c=setTimeout((function(){c=null,o(n.resolved)&&o(n.error)&&(n.loading=!0,u(!1))}),f.delay||200)),a(f.timeout)&&(d=setTimeout((function(){d=null,o(n.resolved)&&h(null)}),f.timeout)))),s=!1,n.loading?n.loadingComp:n.resolved}}(u=n,d)))return function(n,e,t,r,o){var a=vn();return a.asyncFactory=n,a.asyncMeta={data:e,context:t,children:r,tag:o},a}(u,e,t,s,c);e=e||{},kt(n),a(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var o=e.on||(e.on={}),i=o[r],s=e.model.callback;a(i)?(Array.isArray(i)?-1===i.indexOf(s):i!==s)&&(o[r]=[s].concat(i)):o[r]=s}(n.options,e);var p=function(n,e,t){var r=e.options.props;if(!o(r)){var i={},s=n.attrs,l=n.props;if(a(s)||a(l))for(var c in r){var d=S(c);ce(i,l,c,d,!0)||ce(i,s,c,d,!1)}return i}}(e,n);if(i(n.options.functional))return function(n,e,t,o,i){var s=n.options,l={},c=s.props;if(a(c))for(var d in c)l[d]=Dn(d,c,e||r);else a(t.attrs)&&Ne(l,t.attrs),a(t.props)&&Ne(l,t.props);var u=new Ae(t,l,i,o,n),p=s.render.call(null,u._c,u);if(p instanceof fn)return Pe(p,t,u.parent,s,u);if(Array.isArray(p)){for(var m=de(p)||[],h=new Array(m.length),f=0;f<m.length;f++)h[f]=Pe(m[f],t,u.parent,s,u);return h}}(n,p,e,t,s);var h=e.on;if(e.on=e.nativeOn,i(n.options.abstract)){var f=e.slot;e={},f&&(e.slot=f)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<Re.length;t++){var r=Re[t],o=e[r],a=Me[r];o===a||o&&o._merged||(e[r]=o?De(a,o):a)}}(e);var g=n.options.name||c;return new fn("vue-component-"+n.cid+(g?"-"+g:""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:p,listeners:h,tag:c,children:s},u)}}}function De(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}function qe(n,e,t,r,c,d){return(Array.isArray(t)||s(t))&&(c=r,r=t,t=void 0),i(d)&&(c=2),function(n,e,t,r,s){if(a(t)&&a(t.__ob__))return vn();a(t)&&a(t.is)&&(e=t.is);if(!e)return vn();0;Array.isArray(r)&&"function"==typeof r[0]&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===s?r=de(r):1===s&&(r=function(n){for(var e=0;e<n.length;e++)if(Array.isArray(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var c,d;if("string"==typeof e){var u;d=n.$vnode&&n.$vnode.ns||D.getTagNamespace(e),c=D.isReservedTag(e)?new fn(D.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!a(u=Ln(n.$options,"components",e))?new fn(e,t,r,void 0,void 0,n):Le(u,t,n,r,e)}else c=Le(e,t,n,r);return Array.isArray(c)?c:a(c)?(a(d)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(a(e.children))for(var s=0,l=e.children.length;s<l;s++){var c=e.children[s];a(c.tag)&&(o(c.ns)||i(r)&&"svg"!==c.tag)&&n(c,t,r)}}(c,d),a(t)&&function(n){l(n.style)&&oe(n.style);l(n.class)&&oe(n.class)}(t),c):vn()}(n,e,t,r,c)}var Fe,Ue=null;function Be(n,e){return(n.__esModule||ln&&"Module"===n[Symbol.toStringTag])&&(n=n.default),l(n)?e.extend(n):n}function He(n){return n.isComment&&n.asyncFactory}function Ve(n){if(Array.isArray(n))for(var e=0;e<n.length;e++){var t=n[e];if(a(t)&&(a(t.componentOptions)||He(t)))return t}}function We(n,e){Fe.$on(n,e)}function Xe(n,e){Fe.$off(n,e)}function Ge(n,e){var t=Fe;return function r(){var o=e.apply(null,arguments);null!==o&&t.$off(n,r)}}function Je(n,e,t){Fe=n,se(e,t||{},We,Xe,Ge,n),Fe=void 0}var Ye=null;function Ke(n){var e=Ye;return Ye=n,function(){Ye=e}}function Qe(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function Ze(n,e){if(e){if(n._directInactive=!1,Qe(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)Ze(n.$children[t]);nt(n,"activated")}}function nt(n,e){mn();var t=n.$options[e],r=e+" hook";if(t)for(var o=0,a=t.length;o<a;o++)Hn(t[o],n,null,n,r);n._hasHookEvent&&n.$emit("hook:"+e),hn()}var et=[],tt=[],rt={},ot=!1,at=!1,it=0;var st=0,lt=Date.now;if(V&&!J){var ct=window.performance;ct&&"function"==typeof ct.now&&lt()>document.createEvent("Event").timeStamp&&(lt=function(){return ct.now()})}function dt(){var n,e;for(st=lt(),at=!0,et.sort((function(n,e){return n.id-e.id})),it=0;it<et.length;it++)(n=et[it]).before&&n.before(),e=n.id,rt[e]=null,n.run();var t=tt.slice(),r=et.slice();it=et.length=tt.length=0,rt={},ot=at=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,Ze(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r._watcher===t&&r._isMounted&&!r._isDestroyed&&nt(r,"updated")}}(r),on&&D.devtools&&on.emit("flush")}var ut=0,pt=function(n,e,t,r,o){this.vm=n,o&&(n._watcher=this),n._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++ut,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new sn,this.newDepIds=new sn,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(n){if(!U.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()};pt.prototype.get=function(){var n;mn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Bn(n,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&oe(n),hn(),this.cleanupDeps()}return n},pt.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},pt.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},pt.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var e=n.id;if(null==rt[e]){if(rt[e]=!0,at){for(var t=et.length-1;t>it&&et[t].id>n.id;)t--;et.splice(t+1,0,n)}else et.push(n);ot||(ot=!0,te(dt))}}(this)},pt.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||l(n)||this.deep){var e=this.value;if(this.value=n,this.user)try{this.cb.call(this.vm,n,e)}catch(n){Bn(n,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,n,e)}}},pt.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},pt.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},pt.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||b(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var mt={enumerable:!0,configurable:!0,get:O,set:O};function ht(n,e,t){mt.get=function(){return this[e][t]},mt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,mt)}function ft(n){n._watchers=[];var e=n.$options;e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props={},o=n.$options._propKeys=[];n.$parent&&_n(!1);var a=function(a){o.push(a);var i=Dn(a,e,t,n);Cn(r,a,i),a in n||ht(n,"_props",a)};for(var i in e)a(i);_n(!0)}(n,e.props),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?O:C(e[t],n)}(n,e.methods),e.data?function(n){var e=n.$options.data;d(e=n._data="function"==typeof e?function(n,e){mn();try{return n.call(e,e)}catch(n){return Bn(n,e,"data()"),{}}finally{hn()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,o=(n.$options.methods,t.length);for(;o--;){var a=t[o];0,r&&x(r,a)||(i=void 0,36!==(i=(a+"").charCodeAt(0))&&95!==i&&ht(n,"_data",a))}var i;Sn(e,!0)}(n):Sn(n._data={},!0),e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=rn();for(var o in e){var a=e[o],i="function"==typeof a?a:a.get;0,r||(t[o]=new pt(n,i||O,O,gt)),o in n||vt(n,o,a)}}(n,e.computed),e.watch&&e.watch!==nn&&function(n,e){for(var t in e){var r=e[t];if(Array.isArray(r))for(var o=0;o<r.length;o++)xt(n,t,r[o]);else xt(n,t,r)}}(n,e.watch)}var gt={lazy:!0};function vt(n,e,t){var r=!rn();"function"==typeof t?(mt.get=r?bt(e):yt(t),mt.set=O):(mt.get=t.get?r&&!1!==t.cache?bt(e):yt(t.get):O,mt.set=t.set||O),Object.defineProperty(n,e,mt)}function bt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),un.target&&e.depend(),e.value}}function yt(n){return function(){return n.call(this,this)}}function xt(n,e,t,r){return d(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var wt=0;function kt(n){var e=n.options;if(n.super){var t=kt(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var o in t)t[o]!==r[o]&&(e||(e={}),e[o]=t[o]);return e}(n);r&&$(n.extendOptions,r),(e=n.options=Rn(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function jt(n){this._init(n)}function _t(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,o=n._Ctor||(n._Ctor={});if(o[r])return o[r];var a=n.name||t.options.name;var i=function(n){this._init(n)};return(i.prototype=Object.create(t.prototype)).constructor=i,i.cid=e++,i.options=Rn(t.options,n),i.super=t,i.options.props&&function(n){var e=n.options.props;for(var t in e)ht(n.prototype,"_props",t)}(i),i.options.computed&&function(n){var e=n.options.computed;for(var t in e)vt(n.prototype,t,e[t])}(i),i.extend=t.extend,i.mixin=t.mixin,i.use=t.use,R.forEach((function(n){i[n]=t[n]})),a&&(i.options.components[a]=i),i.superOptions=t.options,i.extendOptions=n,i.sealedOptions=$({},i.options),o[r]=i,i}}function Tt(n){return n&&(n.Ctor.options.name||n.tag)}function St(n,e){return Array.isArray(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!u(n)&&n.test(e)}function Ct(n,e){var t=n.cache,r=n.keys,o=n._vnode;for(var a in t){var i=t[a];if(i){var s=Tt(i.componentOptions);s&&!e(s)&&zt(t,a,r,o)}}}function zt(n,e,t,r){var o=n[e];!o||r&&o.tag===r.tag||o.componentInstance.$destroy(),n[e]=null,b(t,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=wt++,e._isVue=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var o=r.componentOptions;t.propsData=o.propsData,t._parentListeners=o.listeners,t._renderChildren=o.children,t._componentTag=o.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=Rn(kt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Je(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,o=t&&t.context;n.$slots=me(e._renderChildren,o),n.$scopedSlots=r,n._c=function(e,t,r,o){return qe(n,e,t,r,o,!1)},n.$createElement=function(e,t,r,o){return qe(n,e,t,r,o,!0)};var a=t&&t.data;Cn(n,"$attrs",a&&a.attrs||r,null,!0),Cn(n,"$listeners",e._parentListeners||r,null,!0)}(e),nt(e,"beforeCreate"),function(n){var e=pe(n.$options.inject,n);e&&(_n(!1),Object.keys(e).forEach((function(t){Cn(n,t,e[t])})),_n(!0))}(e),ft(e),function(n){var e=n.$options.provide;e&&(n._provided="function"==typeof e?e.call(n):e)}(e),nt(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(jt),function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=zn,n.prototype.$delete=$n,n.prototype.$watch=function(n,e,t){if(d(e))return xt(this,n,e,t);(t=t||{}).user=!0;var r=new pt(this,n,e,t);if(t.immediate)try{e.call(this,r.value)}catch(n){Bn(n,this,'callback for immediate watcher "'+r.expression+'"')}return function(){r.teardown()}}}(jt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(Array.isArray(n))for(var o=0,a=n.length;o<a;o++)r.$on(n[o],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(n)){for(var r=0,o=n.length;r<o;r++)t.$off(n[r],e);return t}var a,i=t._events[n];if(!i)return t;if(!e)return t._events[n]=null,t;for(var s=i.length;s--;)if((a=i[s])===e||a.fn===e){i.splice(s,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?z(t):t;for(var r=z(arguments,1),o='event handler for "'+n+'"',a=0,i=t.length;a<i;a++)Hn(t[a],e,r,e,o)}return e}}(jt),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,o=t._vnode,a=Ke(t);t._vnode=n,t.$el=o?t.__patch__(o,n):t.__patch__(t.$el,n,e,!1),a(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){nt(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||b(e.$children,n),n._watcher&&n._watcher.teardown();for(var t=n._watchers.length;t--;)n._watchers[t].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),nt(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(jt),function(n){Ee(n.prototype),n.prototype.$nextTick=function(n){return te(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,r=t.render,o=t._parentVnode;o&&(e.$scopedSlots=fe(o.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=o;try{Ue=e,n=r.call(e._renderProxy,e.$createElement)}catch(t){Bn(t,e,"render"),n=e._vnode}finally{Ue=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof fn||(n=vn()),n.parent=o,n}}(jt);var $t=[String,RegExp,Array],It={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:$t,exclude:$t,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)zt(this.cache,n,this.keys)},mounted:function(){var n=this;this.$watch("include",(function(e){Ct(n,(function(n){return St(e,n)}))})),this.$watch("exclude",(function(e){Ct(n,(function(n){return!St(e,n)}))}))},render:function(){var n=this.$slots.default,e=Ve(n),t=e&&e.componentOptions;if(t){var r=Tt(t),o=this.include,a=this.exclude;if(o&&(!r||!St(o,r))||a&&r&&St(a,r))return e;var i=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;i[l]?(e.componentInstance=i[l].componentInstance,b(s,l),s.push(l)):(i[l]=e,s.push(l),this.max&&s.length>parseInt(this.max)&&zt(i,s[0],s,this._vnode)),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return D}};Object.defineProperty(n,"config",e),n.util={warn:cn,extend:$,mergeOptions:Rn,defineReactive:Cn},n.set=zn,n.delete=$n,n.nextTick=te,n.observable=function(n){return Sn(n),n},n.options=Object.create(null),R.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,$(n.options.components,It),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=z(arguments,1);return t.unshift(this),"function"==typeof n.install?n.install.apply(n,t):"function"==typeof n&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=Rn(this.options,n),this}}(n),_t(n),function(n){R.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&d(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&"function"==typeof t&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(jt),Object.defineProperty(jt.prototype,"$isServer",{get:rn}),Object.defineProperty(jt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(jt,"FunctionalRenderContext",{value:Ae}),jt.version="2.6.12";var Ot=g("style,class"),Et=g("input,textarea,option,select,progress"),At=g("contenteditable,draggable,spellcheck"),Pt=g("events,caret,typing,plaintext-only"),Nt=g("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Mt="http://www.w3.org/1999/xlink",Rt=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},Lt=function(n){return Rt(n)?n.slice(6,n.length):""},Dt=function(n){return null==n||!1===n};function qt(n){for(var e=n.data,t=n,r=n;a(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=Ft(r.data,e));for(;a(t=t.parent);)t&&t.data&&(e=Ft(e,t.data));return function(n,e){if(a(n)||a(e))return Ut(n,Bt(e));return""}(e.staticClass,e.class)}function Ft(n,e){return{staticClass:Ut(n.staticClass,e.staticClass),class:a(n.class)?[n.class,e.class]:e.class}}function Ut(n,e){return n?e?n+" "+e:n:e||""}function Bt(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,o=n.length;r<o;r++)a(e=Bt(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):l(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var Ht={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Vt=g("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Wt=g("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Xt=function(n){return Vt(n)||Wt(n)};var Gt=Object.create(null);var Jt=g("text,number,password,search,email,tel,url");var Yt=Object.freeze({createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(Ht[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Kt={create:function(n,e){Qt(e)},update:function(n,e){n.data.ref!==e.data.ref&&(Qt(n,!0),Qt(e))},destroy:function(n){Qt(n,!0)}};function Qt(n,e){var t=n.data.ref;if(a(t)){var r=n.context,o=n.componentInstance||n.elm,i=r.$refs;e?Array.isArray(i[t])?b(i[t],o):i[t]===o&&(i[t]=void 0):n.data.refInFor?Array.isArray(i[t])?i[t].indexOf(o)<0&&i[t].push(o):i[t]=[o]:i[t]=o}}var Zt=new fn("",{},[]),nr=["create","activate","update","remove","destroy"];function er(n,e){return n.key===e.key&&(n.tag===e.tag&&n.isComment===e.isComment&&a(n.data)===a(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=a(t=n.data)&&a(t=t.attrs)&&t.type,o=a(t=e.data)&&a(t=t.attrs)&&t.type;return r===o||Jt(r)&&Jt(o)}(n,e)||i(n.isAsyncPlaceholder)&&n.asyncFactory===e.asyncFactory&&o(e.asyncFactory.error))}function tr(n,e,t){var r,o,i={};for(r=e;r<=t;++r)a(o=n[r].key)&&(i[o]=r);return i}var rr={create:or,update:or,destroy:function(n){or(n,Zt)}};function or(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,o,a=n===Zt,i=e===Zt,s=ir(n.data.directives,n.context),l=ir(e.data.directives,e.context),c=[],d=[];for(t in l)r=s[t],o=l[t],r?(o.oldValue=r.value,o.oldArg=r.arg,lr(o,"update",e,n),o.def&&o.def.componentUpdated&&d.push(o)):(lr(o,"bind",e,n),o.def&&o.def.inserted&&c.push(o));if(c.length){var u=function(){for(var t=0;t<c.length;t++)lr(c[t],"inserted",e,n)};a?le(e,"insert",u):u()}d.length&&le(e,"postpatch",(function(){for(var t=0;t<d.length;t++)lr(d[t],"componentUpdated",e,n)}));if(!a)for(t in s)l[t]||lr(s[t],"unbind",n,n,i)}(n,e)}var ar=Object.create(null);function ir(n,e){var t,r,o=Object.create(null);if(!n)return o;for(t=0;t<n.length;t++)(r=n[t]).modifiers||(r.modifiers=ar),o[sr(r)]=r,r.def=Ln(e.$options,"directives",r.name);return o}function sr(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function lr(n,e,t,r,o){var a=n.def&&n.def[e];if(a)try{a(t.elm,n,t,r,o)}catch(r){Bn(r,t.context,"directive "+n.name+" "+e+" hook")}}var cr=[Kt,rr];function dr(n,e){var t=e.componentOptions;if(!(a(t)&&!1===t.Ctor.options.inheritAttrs||o(n.data.attrs)&&o(e.data.attrs))){var r,i,s=e.elm,l=n.data.attrs||{},c=e.data.attrs||{};for(r in a(c.__ob__)&&(c=e.data.attrs=$({},c)),c)i=c[r],l[r]!==i&&ur(s,r,i);for(r in(J||K)&&c.value!==l.value&&ur(s,"value",c.value),l)o(c[r])&&(Rt(r)?s.removeAttributeNS(Mt,Lt(r)):At(r)||s.removeAttribute(r))}}function ur(n,e,t){n.tagName.indexOf("-")>-1?pr(n,e,t):Nt(e)?Dt(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):At(e)?n.setAttribute(e,function(n,e){return Dt(e)||"false"===e?"false":"contenteditable"===n&&Pt(e)?e:"true"}(e,t)):Rt(e)?Dt(t)?n.removeAttributeNS(Mt,Lt(e)):n.setAttributeNS(Mt,e,t):pr(n,e,t)}function pr(n,e,t){if(Dt(t))n.removeAttribute(e);else{if(J&&!Y&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var mr={create:dr,update:dr};function hr(n,e){var t=e.elm,r=e.data,i=n.data;if(!(o(r.staticClass)&&o(r.class)&&(o(i)||o(i.staticClass)&&o(i.class)))){var s=qt(e),l=t._transitionClasses;a(l)&&(s=Ut(s,Bt(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var fr,gr={create:hr,update:hr};function vr(n,e,t){var r=fr;return function o(){var a=e.apply(null,arguments);null!==a&&xr(n,o,t,r)}}var br=Gn&&!(Z&&Number(Z[1])<=53);function yr(n,e,t,r){if(br){var o=st,a=e;e=a._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=o||n.timeStamp<=0||n.target.ownerDocument!==document)return a.apply(this,arguments)}}fr.addEventListener(n,e,en?{capture:t,passive:r}:t)}function xr(n,e,t,r){(r||fr).removeEventListener(n,e._wrapper||e,t)}function wr(n,e){if(!o(n.data.on)||!o(e.data.on)){var t=e.data.on||{},r=n.data.on||{};fr=e.elm,function(n){if(a(n.__r)){var e=J?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}a(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),se(t,r,yr,xr,vr,e.context),fr=void 0}}var kr,jr={create:wr,update:wr};function _r(n,e){if(!o(n.data.domProps)||!o(e.data.domProps)){var t,r,i=e.elm,s=n.data.domProps||{},l=e.data.domProps||{};for(t in a(l.__ob__)&&(l=e.data.domProps=$({},l)),s)t in l||(i[t]="");for(t in l){if(r=l[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===s[t])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===t&&"PROGRESS"!==i.tagName){i._value=r;var c=o(r)?"":String(r);Tr(i,c)&&(i.value=c)}else if("innerHTML"===t&&Wt(i.tagName)&&o(i.innerHTML)){(kr=kr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var d=kr.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;d.firstChild;)i.appendChild(d.firstChild)}else if(r!==s[t])try{i[t]=r}catch(n){}}}}function Tr(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(a(r)){if(r.number)return f(t)!==f(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Sr={create:_r,update:_r},Cr=w((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function zr(n){var e=$r(n.style);return n.staticStyle?$(n.staticStyle,e):e}function $r(n){return Array.isArray(n)?I(n):"string"==typeof n?Cr(n):n}var Ir,Or=/^--/,Er=/\s*!important$/,Ar=function(n,e,t){if(Or.test(e))n.style.setProperty(e,t);else if(Er.test(t))n.style.setProperty(S(e),t.replace(Er,""),"important");else{var r=Nr(e);if(Array.isArray(t))for(var o=0,a=t.length;o<a;o++)n.style[r]=t[o];else n.style[r]=t}},Pr=["Webkit","Moz","ms"],Nr=w((function(n){if(Ir=Ir||document.createElement("div").style,"filter"!==(n=j(n))&&n in Ir)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<Pr.length;t++){var r=Pr[t]+e;if(r in Ir)return r}}));function Mr(n,e){var t=e.data,r=n.data;if(!(o(t.staticStyle)&&o(t.style)&&o(r.staticStyle)&&o(r.style))){var i,s,l=e.elm,c=r.staticStyle,d=r.normalizedStyle||r.style||{},u=c||d,p=$r(e.data.style)||{};e.data.normalizedStyle=a(p.__ob__)?$({},p):p;var m=function(n,e){var t,r={};if(e)for(var o=n;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(t=zr(o.data))&&$(r,t);(t=zr(n.data))&&$(r,t);for(var a=n;a=a.parent;)a.data&&(t=zr(a.data))&&$(r,t);return r}(e,!0);for(s in u)o(m[s])&&Ar(l,s,"");for(s in m)(i=m[s])!==u[s]&&Ar(l,s,null==i?"":i)}}var Rr={create:Mr,update:Mr},Lr=/\s+/;function Dr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Lr).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" "+(n.getAttribute("class")||"")+" ";t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function qr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Lr).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" "+(n.getAttribute("class")||"")+" ",r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function Fr(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&$(e,Ur(n.name||"v")),$(e,n),e}return"string"==typeof n?Ur(n):void 0}}var Ur=w((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),Br=V&&!Y,Hr="transition",Vr="transitionend",Wr="animation",Xr="animationend";Br&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Hr="WebkitTransition",Vr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Wr="WebkitAnimation",Xr="webkitAnimationEnd"));var Gr=V?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Jr(n){Gr((function(){Gr(n)}))}function Yr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),Dr(n,e))}function Kr(n,e){n._transitionClasses&&b(n._transitionClasses,e),qr(n,e)}function Qr(n,e,t){var r=no(n,e),o=r.type,a=r.timeout,i=r.propCount;if(!o)return t();var s="transition"===o?Vr:Xr,l=0,c=function(){n.removeEventListener(s,d),t()},d=function(e){e.target===n&&++l>=i&&c()};setTimeout((function(){l<i&&c()}),a+1),n.addEventListener(s,d)}var Zr=/\b(transform|all)(,|$)/;function no(n,e){var t,r=window.getComputedStyle(n),o=(r[Hr+"Delay"]||"").split(", "),a=(r[Hr+"Duration"]||"").split(", "),i=eo(o,a),s=(r[Wr+"Delay"]||"").split(", "),l=(r[Wr+"Duration"]||"").split(", "),c=eo(s,l),d=0,u=0;return"transition"===e?i>0&&(t="transition",d=i,u=a.length):"animation"===e?c>0&&(t="animation",d=c,u=l.length):u=(t=(d=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===t?a.length:l.length:0,{type:t,timeout:d,propCount:u,hasTransform:"transition"===t&&Zr.test(r[Hr+"Property"])}}function eo(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return to(e)+to(n[t])})))}function to(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function ro(n,e){var t=n.elm;a(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=Fr(n.data.transition);if(!o(r)&&!a(t._enterCb)&&1===t.nodeType){for(var i=r.css,s=r.type,c=r.enterClass,d=r.enterToClass,u=r.enterActiveClass,p=r.appearClass,m=r.appearToClass,h=r.appearActiveClass,g=r.beforeEnter,v=r.enter,b=r.afterEnter,y=r.enterCancelled,x=r.beforeAppear,w=r.appear,k=r.afterAppear,j=r.appearCancelled,_=r.duration,T=Ye,S=Ye.$vnode;S&&S.parent;)T=S.context,S=S.parent;var C=!T._isMounted||!n.isRootInsert;if(!C||w||""===w){var z=C&&p?p:c,$=C&&h?h:u,I=C&&m?m:d,O=C&&x||g,E=C&&"function"==typeof w?w:v,A=C&&k||b,P=C&&j||y,N=f(l(_)?_.enter:_);0;var R=!1!==i&&!Y,L=io(E),D=t._enterCb=M((function(){R&&(Kr(t,I),Kr(t,$)),D.cancelled?(R&&Kr(t,z),P&&P(t)):A&&A(t),t._enterCb=null}));n.data.show||le(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),E&&E(t,D)})),O&&O(t),R&&(Yr(t,z),Yr(t,$),Jr((function(){Kr(t,z),D.cancelled||(Yr(t,I),L||(ao(N)?setTimeout(D,N):Qr(t,s,D)))}))),n.data.show&&(e&&e(),E&&E(t,D)),R||L||D()}}}function oo(n,e){var t=n.elm;a(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=Fr(n.data.transition);if(o(r)||1!==t.nodeType)return e();if(!a(t._leaveCb)){var i=r.css,s=r.type,c=r.leaveClass,d=r.leaveToClass,u=r.leaveActiveClass,p=r.beforeLeave,m=r.leave,h=r.afterLeave,g=r.leaveCancelled,v=r.delayLeave,b=r.duration,y=!1!==i&&!Y,x=io(m),w=f(l(b)?b.leave:b);0;var k=t._leaveCb=M((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),y&&(Kr(t,d),Kr(t,u)),k.cancelled?(y&&Kr(t,c),g&&g(t)):(e(),h&&h(t)),t._leaveCb=null}));v?v(j):j()}function j(){k.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),p&&p(t),y&&(Yr(t,c),Yr(t,u),Jr((function(){Kr(t,c),k.cancelled||(Yr(t,d),x||(ao(w)?setTimeout(k,w):Qr(t,s,k)))}))),m&&m(t,k),y||x||k())}}function ao(n){return"number"==typeof n&&!isNaN(n)}function io(n){if(o(n))return!1;var e=n.fns;return a(e)?io(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function so(n,e){!0!==e.data.show&&ro(e)}var lo=function(n){var e,t,r={},l=n.modules,c=n.nodeOps;for(e=0;e<nr.length;++e)for(r[nr[e]]=[],t=0;t<l.length;++t)a(l[t][nr[e]])&&r[nr[e]].push(l[t][nr[e]]);function d(n){var e=c.parentNode(n);a(e)&&c.removeChild(e,n)}function u(n,e,t,o,s,l,d){if(a(n.elm)&&a(l)&&(n=l[d]=yn(n)),n.isRootInsert=!s,!function(n,e,t,o){var s=n.data;if(a(s)){var l=a(n.componentInstance)&&s.keepAlive;if(a(s=s.hook)&&a(s=s.init)&&s(n,!1),a(n.componentInstance))return p(n,e),m(t,n.elm,o),i(l)&&function(n,e,t,o){var i,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(i=s.data)&&a(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](Zt,s);e.push(s);break}m(t,n.elm,o)}(n,e,t,o),!0}}(n,e,t,o)){var u=n.data,f=n.children,g=n.tag;a(g)?(n.elm=n.ns?c.createElementNS(n.ns,g):c.createElement(g,n),b(n),h(n,f,e),a(u)&&v(n,e),m(t,n.elm,o)):i(n.isComment)?(n.elm=c.createComment(n.text),m(t,n.elm,o)):(n.elm=c.createTextNode(n.text),m(t,n.elm,o))}}function p(n,e){a(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,f(n)?(v(n,e),b(n)):(Qt(n),e.push(n))}function m(n,e,t){a(n)&&(a(t)?c.parentNode(t)===n&&c.insertBefore(n,e,t):c.appendChild(n,e))}function h(n,e,t){if(Array.isArray(e)){0;for(var r=0;r<e.length;++r)u(e[r],t,n.elm,null,!0,e,r)}else s(n.text)&&c.appendChild(n.elm,c.createTextNode(String(n.text)))}function f(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return a(n.tag)}function v(n,t){for(var o=0;o<r.create.length;++o)r.create[o](Zt,n);a(e=n.data.hook)&&(a(e.create)&&e.create(Zt,n),a(e.insert)&&t.push(n))}function b(n){var e;if(a(e=n.fnScopeId))c.setStyleScope(n.elm,e);else for(var t=n;t;)a(e=t.context)&&a(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e),t=t.parent;a(e=Ye)&&e!==n.context&&e!==n.fnContext&&a(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e)}function y(n,e,t,r,o,a){for(;r<=o;++r)u(t[r],a,n,e,!1,t,r)}function x(n){var e,t,o=n.data;if(a(o))for(a(e=o.hook)&&a(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(a(e=n.children))for(t=0;t<n.children.length;++t)x(n.children[t])}function w(n,e,t){for(;e<=t;++e){var r=n[e];a(r)&&(a(r.tag)?(k(r),x(r)):d(r.elm))}}function k(n,e){if(a(e)||a(n.data)){var t,o=r.remove.length+1;for(a(e)?e.listeners+=o:e=function(n,e){function t(){0==--t.listeners&&d(n)}return t.listeners=e,t}(n.elm,o),a(t=n.componentInstance)&&a(t=t._vnode)&&a(t.data)&&k(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);a(t=n.data.hook)&&a(t=t.remove)?t(n,e):e()}else d(n.elm)}function j(n,e,t,r){for(var o=t;o<r;o++){var i=e[o];if(a(i)&&er(n,i))return o}}function _(n,e,t,s,l,d){if(n!==e){a(e.elm)&&a(s)&&(e=s[l]=yn(e));var p=e.elm=n.elm;if(i(n.isAsyncPlaceholder))a(e.asyncFactory.resolved)?C(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(i(e.isStatic)&&i(n.isStatic)&&e.key===n.key&&(i(e.isCloned)||i(e.isOnce)))e.componentInstance=n.componentInstance;else{var m,h=e.data;a(h)&&a(m=h.hook)&&a(m=m.prepatch)&&m(n,e);var g=n.children,v=e.children;if(a(h)&&f(e)){for(m=0;m<r.update.length;++m)r.update[m](n,e);a(m=h.hook)&&a(m=m.update)&&m(n,e)}o(e.text)?a(g)&&a(v)?g!==v&&function(n,e,t,r,i){var s,l,d,p=0,m=0,h=e.length-1,f=e[0],g=e[h],v=t.length-1,b=t[0],x=t[v],k=!i;for(0;p<=h&&m<=v;)o(f)?f=e[++p]:o(g)?g=e[--h]:er(f,b)?(_(f,b,r,t,m),f=e[++p],b=t[++m]):er(g,x)?(_(g,x,r,t,v),g=e[--h],x=t[--v]):er(f,x)?(_(f,x,r,t,v),k&&c.insertBefore(n,f.elm,c.nextSibling(g.elm)),f=e[++p],x=t[--v]):er(g,b)?(_(g,b,r,t,m),k&&c.insertBefore(n,g.elm,f.elm),g=e[--h],b=t[++m]):(o(s)&&(s=tr(e,p,h)),o(l=a(b.key)?s[b.key]:j(b,e,p,h))?u(b,r,n,f.elm,!1,t,m):er(d=e[l],b)?(_(d,b,r,t,m),e[l]=void 0,k&&c.insertBefore(n,d.elm,f.elm)):u(b,r,n,f.elm,!1,t,m),b=t[++m]);p>h?y(n,o(t[v+1])?null:t[v+1].elm,t,m,v,r):m>v&&w(e,p,h)}(p,g,v,t,d):a(v)?(a(n.text)&&c.setTextContent(p,""),y(p,null,v,0,v.length-1,t)):a(g)?w(g,0,g.length-1):a(n.text)&&c.setTextContent(p,""):n.text!==e.text&&c.setTextContent(p,e.text),a(h)&&a(m=h.hook)&&a(m=m.postpatch)&&m(n,e)}}}function T(n,e,t){if(i(t)&&a(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var S=g("attrs,class,staticClass,staticStyle,key");function C(n,e,t,r){var o,s=e.tag,l=e.data,c=e.children;if(r=r||l&&l.pre,e.elm=n,i(e.isComment)&&a(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(a(l)&&(a(o=l.hook)&&a(o=o.init)&&o(e,!0),a(o=e.componentInstance)))return p(e,t),!0;if(a(s)){if(a(c))if(n.hasChildNodes())if(a(o=l)&&a(o=o.domProps)&&a(o=o.innerHTML)){if(o!==n.innerHTML)return!1}else{for(var d=!0,u=n.firstChild,m=0;m<c.length;m++){if(!u||!C(u,c[m],t,r)){d=!1;break}u=u.nextSibling}if(!d||u)return!1}else h(e,c,t);if(a(l)){var f=!1;for(var g in l)if(!S(g)){f=!0,v(e,t);break}!f&&l.class&&oe(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,s){if(!o(e)){var l,d=!1,p=[];if(o(n))d=!0,u(e,p);else{var m=a(n.nodeType);if(!m&&er(n,e))_(n,e,p,null,null,s);else{if(m){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),i(t)&&C(n,e,p))return T(e,p,!0),n;l=n,n=new fn(c.tagName(l).toLowerCase(),{},[],void 0,l)}var h=n.elm,g=c.parentNode(h);if(u(e,p,h._leaveCb?null:g,c.nextSibling(h)),a(e.parent))for(var v=e.parent,b=f(e);v;){for(var y=0;y<r.destroy.length;++y)r.destroy[y](v);if(v.elm=e.elm,b){for(var k=0;k<r.create.length;++k)r.create[k](Zt,v);var j=v.data.hook.insert;if(j.merged)for(var S=1;S<j.fns.length;S++)j.fns[S]()}else Qt(v);v=v.parent}a(g)?w([n],0,0):a(n.tag)&&x(n)}}return T(e,p,d),e.elm}a(n)&&x(n)}}({nodeOps:Yt,modules:[mr,gr,jr,Sr,Rr,V?{create:so,activate:so,remove:function(n,e){!0!==n.data.show?oo(n,e):e()}}:{}].concat(cr)});Y&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&vo(n,"input")}));var co={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?le(t,"postpatch",(function(){co.componentUpdated(n,e,t)})):uo(n,e,t.context),n._vOptions=[].map.call(n.options,ho)):("textarea"===t.tag||Jt(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",fo),n.addEventListener("compositionend",go),n.addEventListener("change",go),Y&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){uo(n,e,t.context);var r=n._vOptions,o=n._vOptions=[].map.call(n.options,ho);if(o.some((function(n,e){return!P(n,r[e])})))(n.multiple?e.value.some((function(n){return mo(n,o)})):e.value!==e.oldValue&&mo(e.value,o))&&vo(n,"change")}}};function uo(n,e,t){po(n,e,t),(J||K)&&setTimeout((function(){po(n,e,t)}),0)}function po(n,e,t){var r=e.value,o=n.multiple;if(!o||Array.isArray(r)){for(var a,i,s=0,l=n.options.length;s<l;s++)if(i=n.options[s],o)a=N(r,ho(i))>-1,i.selected!==a&&(i.selected=a);else if(P(ho(i),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));o||(n.selectedIndex=-1)}}function mo(n,e){return e.every((function(e){return!P(e,n)}))}function ho(n){return"_value"in n?n._value:n.value}function fo(n){n.target.composing=!0}function go(n){n.target.composing&&(n.target.composing=!1,vo(n.target,"input"))}function vo(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function bo(n){return!n.componentInstance||n.data&&n.data.transition?n:bo(n.componentInstance._vnode)}var yo={model:co,show:{bind:function(n,e,t){var r=e.value,o=(t=bo(t)).data&&t.data.transition,a=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&o?(t.data.show=!0,ro(t,(function(){n.style.display=a}))):n.style.display=r?a:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=bo(t)).data&&t.data.transition?(t.data.show=!0,r?ro(t,(function(){n.style.display=n.__vOriginalDisplay})):oo(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,o){o||(n.style.display=n.__vOriginalDisplay)}}},xo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function wo(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?wo(Ve(e.children)):n}function ko(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var o=t._parentListeners;for(var a in o)e[j(a)]=o[a];return e}function jo(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var _o=function(n){return n.tag||He(n)},To=function(n){return"show"===n.name},So={name:"transition",props:xo,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(_o)).length){0;var r=this.mode;0;var o=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return o;var a=wo(o);if(!a)return o;if(this._leaving)return jo(n,o);var i="__transition-"+this._uid+"-";a.key=null==a.key?a.isComment?i+"comment":i+a.tag:s(a.key)?0===String(a.key).indexOf(i)?a.key:i+a.key:a.key;var l=(a.data||(a.data={})).transition=ko(this),c=this._vnode,d=wo(c);if(a.data.directives&&a.data.directives.some(To)&&(a.data.show=!0),d&&d.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(a,d)&&!He(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var u=d.data.transition=$({},l);if("out-in"===r)return this._leaving=!0,le(u,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),jo(n,o);if("in-out"===r){if(He(a))return c;var p,m=function(){p()};le(l,"afterEnter",m),le(l,"enterCancelled",m),le(u,"delayLeave",(function(n){p=n}))}}return o}}},Co=$({tag:String,moveClass:String},xo);function zo(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function $o(n){n.data.newPos=n.elm.getBoundingClientRect()}function Io(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,o=e.top-t.top;if(r||o){n.data.moved=!0;var a=n.elm.style;a.transform=a.WebkitTransform="translate("+r+"px,"+o+"px)",a.transitionDuration="0s"}}delete Co.mode;var Oo={Transition:So,TransitionGroup:{props:Co,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var o=Ke(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,o(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,o=this.$slots.default||[],a=this.children=[],i=ko(this),s=0;s<o.length;s++){var l=o[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))a.push(l),t[l.key]=l,(l.data||(l.data={})).transition=i;else;}if(r){for(var c=[],d=[],u=0;u<r.length;u++){var p=r[u];p.data.transition=i,p.data.pos=p.elm.getBoundingClientRect(),t[p.key]?c.push(p):d.push(p)}this.kept=n(e,null,c),this.removed=d}return n(e,null,a)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(zo),n.forEach($o),n.forEach(Io),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;Yr(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(Vr,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(Vr,n),t._moveCb=null,Kr(t,e))})}})))},methods:{hasMove:function(n,e){if(!Br)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){qr(t,n)})),Dr(t,e),t.style.display="none",this.$el.appendChild(t);var r=no(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};jt.config.mustUseProp=function(n,e,t){return"value"===t&&Et(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},jt.config.isReservedTag=Xt,jt.config.isReservedAttr=Ot,jt.config.getTagNamespace=function(n){return Wt(n)?"svg":"math"===n?"math":void 0},jt.config.isUnknownElement=function(n){if(!V)return!0;if(Xt(n))return!1;if(n=n.toLowerCase(),null!=Gt[n])return Gt[n];var e=document.createElement(n);return n.indexOf("-")>-1?Gt[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Gt[n]=/HTMLUnknownElement/.test(e.toString())},$(jt.options.directives,yo),$(jt.options.components,Oo),jt.prototype.__patch__=V?lo:O,jt.prototype.$mount=function(n,e){return function(n,e,t){var r;return n.$el=e,n.$options.render||(n.$options.render=vn),nt(n,"beforeMount"),r=function(){n._update(n._render(),t)},new pt(n,r,O,{before:function(){n._isMounted&&!n._isDestroyed&&nt(n,"beforeUpdate")}},!0),t=!1,null==n.$vnode&&(n._isMounted=!0,nt(n,"mounted")),n}(this,n=n&&V?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},V&&setTimeout((function(){D.devtools&&on&&on.emit("init",jt)}),0),e.default=jt},function(n,e,t){var r=t(7),o=t(43).f,a=t(25),i=t(28),s=t(130),l=t(202),c=t(135);n.exports=function(n,e){var t,d,u,p,m,h=n.target,f=n.global,g=n.stat;if(t=f?r:g?r[h]||s(h,{}):(r[h]||{}).prototype)for(d in e){if(p=e[d],u=n.noTargetGet?(m=o(t,d))&&m.value:t[d],!c(f?d:h+(g?".":"#")+d,n.forced)&&void 0!==u){if(typeof p==typeof u)continue;l(p,u)}(n.sham||u&&u.sham)&&a(p,"sham",!0),i(t,d,p,n)}}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){"use strict";t.d(e,"a",(function(){return u}));var r=t(1);
/**
  * vue-class-component v7.2.6
  * (c) 2015-present Evan You
  * @license MIT
  */function o(n){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n){return function(n){if(Array.isArray(n)){for(var e=0,t=new Array(n.length);e<n.length;e++)t[e]=n[e];return t}}(n)||function(n){if(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n))return Array.from(n)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function s(){return"undefined"!=typeof Reflect&&Reflect.defineMetadata&&Reflect.getOwnMetadataKeys}function l(n,e){c(n,e),Object.getOwnPropertyNames(e.prototype).forEach((function(t){c(n.prototype,e.prototype,t)})),Object.getOwnPropertyNames(e).forEach((function(t){c(n,e,t)}))}function c(n,e,t){(t?Reflect.getOwnMetadataKeys(e,t):Reflect.getOwnMetadataKeys(e)).forEach((function(r){var o=t?Reflect.getOwnMetadata(r,e,t):Reflect.getOwnMetadata(r,e);t?Reflect.defineMetadata(r,o,n,t):Reflect.defineMetadata(r,o,n)}))}var d={__proto__:[]}instanceof Array;function u(n){return function(e,t,r){var o="function"==typeof e?e:e.constructor;o.__decorators__||(o.__decorators__=[]),"number"!=typeof r&&(r=void 0),o.__decorators__.push((function(e){return n(e,t,r)}))}}function p(n,e){var t=e.prototype._init;e.prototype._init=function(){var e=this,t=Object.getOwnPropertyNames(n);if(n.$options.props)for(var r in n.$options.props)n.hasOwnProperty(r)||t.push(r);t.forEach((function(t){Object.defineProperty(e,t,{get:function(){return n[t]},set:function(e){n[t]=e},configurable:!0})}))};var r=new e;e.prototype._init=t;var o={};return Object.keys(r).forEach((function(n){void 0!==r[n]&&(o[n]=r[n])})),o}var m=["data","beforeCreate","created","beforeMount","mounted","beforeDestroy","destroyed","beforeUpdate","updated","activated","deactivated","render","errorCaptured","serverPrefetch"];function h(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e.name=e.name||n._componentTag||n.name;var t=n.prototype;Object.getOwnPropertyNames(t).forEach((function(n){if("constructor"!==n)if(m.indexOf(n)>-1)e[n]=t[n];else{var r=Object.getOwnPropertyDescriptor(t,n);void 0!==r.value?"function"==typeof r.value?(e.methods||(e.methods={}))[n]=r.value:(e.mixins||(e.mixins=[])).push({data:function(){return a({},n,r.value)}}):(r.get||r.set)&&((e.computed||(e.computed={}))[n]={get:r.get,set:r.set})}})),(e.mixins||(e.mixins=[])).push({data:function(){return p(this,n)}});var o=n.__decorators__;o&&(o.forEach((function(n){return n(e)})),delete n.__decorators__);var i=Object.getPrototypeOf(n.prototype),c=i instanceof r.default?i.constructor:r.default,d=c.extend(e);return g(d,n,c),s()&&l(d,n),d}var f={prototype:!0,arguments:!0,callee:!0,caller:!0};function g(n,e,t){Object.getOwnPropertyNames(e).forEach((function(r){if(!f[r]){var a=Object.getOwnPropertyDescriptor(n,r);if(!a||a.configurable){var i,s,l=Object.getOwnPropertyDescriptor(e,r);if(!d){if("cid"===r)return;var c=Object.getOwnPropertyDescriptor(t,r);if(i=l.value,s=o(i),null!=i&&("object"===s||"function"===s)&&c&&c.value===l.value)return}0,Object.defineProperty(n,r,l)}}}))}function v(n){return"function"==typeof n?h(n):function(e){return h(e,n)}}v.registerHooks=function(n){m.push.apply(m,i(n))},e.b=v},function(n,e,t){"use strict";function r(n,e,t,r,o,a,i,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),a&&(c._scopeId="data-v-"+a),i?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),o&&o.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(i)},c._ssrRegister=l):o&&(l=s?function(){o.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:o),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(n,e){return l.call(e),d(n,e)}}else{var u=c.beforeCreate;c.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return r}))},function(n,e,t){var r=t(7),o=t(132),a=t(13),i=t(95),s=t(136),l=t(206),c=o("wks"),d=r.Symbol,u=l?d:d&&d.withoutSetter||i;n.exports=function(n){return a(c,n)||(s&&a(d,n)?c[n]=d[n]:c[n]=u("Symbol."+n)),c[n]}},function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e,t){var r=t(3);n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));t(78),t(23),t(45),t(444),t(88),t(277),t(214),t(85),t(46);var r=t(82);function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){Object(r.a)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}},function(n,e,t){var r=t(10);n.exports=function(n){if(!r(n))throw TypeError(String(n)+" is not an object");return n}},function(n,e){var t={}.hasOwnProperty;n.exports=function(n,e){return t.call(n,e)}},function(n,e,t){var r=t(8),o=t(199),a=t(12),i=t(58),s=Object.defineProperty;e.f=r?s:function(n,e,t){if(a(n),e=i(e,!0),a(t),o)try{return s(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){"use strict";function r(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}t.d(e,"a",(function(){return r}))},function(n,e,t){var r=t(138),o=t(28),a=t(326);r||o(Object.prototype,"toString",a,{unsafe:!0})},function(n,e,t){"use strict";var r=t(252),o=Object.prototype.toString;function a(n){return"[object Array]"===o.call(n)}function i(n){return void 0===n}function s(n){return null!==n&&"object"==typeof n}function l(n){if("[object Object]"!==o.call(n))return!1;var e=Object.getPrototypeOf(n);return null===e||e===Object.prototype}function c(n){return"[object Function]"===o.call(n)}function d(n,e){if(null!=n)if("object"!=typeof n&&(n=[n]),a(n))for(var t=0,r=n.length;t<r;t++)e.call(null,n[t],t,n);else for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&e.call(null,n[o],o,n)}n.exports={isArray:a,isArrayBuffer:function(n){return"[object ArrayBuffer]"===o.call(n)},isBuffer:function(n){return null!==n&&!i(n)&&null!==n.constructor&&!i(n.constructor)&&"function"==typeof n.constructor.isBuffer&&n.constructor.isBuffer(n)},isFormData:function(n){return"undefined"!=typeof FormData&&n instanceof FormData},isArrayBufferView:function(n){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(n):n&&n.buffer&&n.buffer instanceof ArrayBuffer},isString:function(n){return"string"==typeof n},isNumber:function(n){return"number"==typeof n},isObject:s,isPlainObject:l,isUndefined:i,isDate:function(n){return"[object Date]"===o.call(n)},isFile:function(n){return"[object File]"===o.call(n)},isBlob:function(n){return"[object Blob]"===o.call(n)},isFunction:c,isStream:function(n){return s(n)&&c(n.pipe)},isURLSearchParams:function(n){return"undefined"!=typeof URLSearchParams&&n instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:d,merge:function n(){var e={};function t(t,r){l(e[r])&&l(t)?e[r]=n(e[r],t):l(t)?e[r]=n({},t):a(t)?e[r]=t.slice():e[r]=t}for(var r=0,o=arguments.length;r<o;r++)d(arguments[r],t);return e},extend:function(n,e,t){return d(e,(function(e,o){n[o]=t&&"function"==typeof e?r(e,t):e})),n},trim:function(n){return n.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(n){return 65279===n.charCodeAt(0)&&(n=n.slice(1)),n}}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(88);function r(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function o(n,e,t){return e&&r(n.prototype,e),t&&r(n,t),n}},function(n,e,t){var r=t(9),o=t(175),a=t(32),i=t(178),s=t(179),l=t(292),c=o("wks"),d=r.Symbol,u=l?d:d&&d.withoutSetter||i;n.exports=function(n){return a(c,n)||(s&&a(d,n)?c[n]=d[n]:c[n]=u("Symbol."+n)),c[n]}},function(n,e,t){var r=t(65),o=Math.min;n.exports=function(n){return n>0?o(r(n),9007199254740991):0}},function(n,e,t){var r=t(22);n.exports=function(n){return Object(r(n))}},function(n,e){n.exports=function(n){if(null==n)throw TypeError("Can't call method on "+n);return n}},function(n,e,t){"use strict";var r=t(2),o=t(53).filter,a=t(86),i=t(27),s=a("filter"),l=i("filter");r({target:"Array",proto:!0,forced:!s||!l},{filter:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(89),o=t(22);n.exports=function(n){return r(o(n))}},function(n,e,t){var r=t(8),o=t(14),a=t(69);n.exports=r?function(n,e,t){return o.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){n.exports=t(468)},function(n,e,t){var r=t(8),o=t(3),a=t(13),i=Object.defineProperty,s={},l=function(n){throw n};n.exports=function(n,e){if(a(s,n))return s[n];e||(e={});var t=[][n],c=!!a(e,"ACCESSORS")&&e.ACCESSORS,d=a(e,0)?e[0]:l,u=a(e,1)?e[1]:void 0;return s[n]=!!t&&!o((function(){if(c&&!r)return!0;var n={length:-1};c?i(n,1,{enumerable:!0,get:l}):n[1]=1,t.call(n,d,u)}))}},function(n,e,t){var r=t(7),o=t(25),a=t(13),i=t(130),s=t(201),l=t(68),c=l.get,d=l.enforce,u=String(String).split("String");(n.exports=function(n,e,t,s){var l,c=!!s&&!!s.unsafe,p=!!s&&!!s.enumerable,m=!!s&&!!s.noTargetGet;"function"==typeof t&&("string"!=typeof e||a(t,"name")||o(t,"name",e),(l=d(t)).source||(l.source=u.join("string"==typeof e?e:""))),n!==r?(c?!m&&n[e]&&(p=!0):delete n[e],p?n[e]=t:o(n,e,t)):p?n[e]=t:i(e,t)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(n,e,t){"use strict";t.d(e,"d",(function(){return a})),t.d(e,"j",(function(){return i})),t.d(e,"g",(function(){return l})),t.d(e,"h",(function(){return c})),t.d(e,"i",(function(){return d})),t.d(e,"e",(function(){return u})),t.d(e,"f",(function(){return p})),t.d(e,"l",(function(){return m})),t.d(e,"m",(function(){return h})),t.d(e,"k",(function(){return f})),t.d(e,"c",(function(){return v})),t.d(e,"a",(function(){return b})),t.d(e,"b",(function(){return y}));t(23),t(45),t(49),t(67),t(163),t(64),t(38),t(286),t(35),t(110),t(276),t(40),t(273),t(46);var r=/#.*$/,o=/\.(md|html)$/,a=/\/$/,i=/^(https?:|mailto:|tel:)/;function s(n){return decodeURI(n).replace(r,"").replace(o,"")}function l(n){return i.test(n)}function c(n){return/^mailto:/.test(n)}function d(n){return/^tel:/.test(n)}function u(n){if(l(n))return n;var e=n.match(r),t=e?e[0]:"",o=s(n);return a.test(o)?n:o+".html"+t}function p(n,e){var t=n.hash,o=function(n){var e=n.match(r);if(e)return e[0]}(e);return(!o||t===o)&&s(n.path)===s(e)}function m(n,e,t){t&&(e=function(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var o=e.split("/");t&&o[o.length-1]||o.pop();for(var a=n.replace(/^\//,"").split("/"),i=0;i<a.length;i++){var s=a[i];".."===s?o.pop():"."!==s&&o.push(s)}""!==o[0]&&o.unshift("");return o.join("/")}(e,t));for(var r=s(e),o=0;o<n.length;o++)if(s(n[o].regularPath)===r)return Object.assign({},n[o],{type:"page",path:u(n[o].path)});return console.error('[vuepress] No matching page found for sidebar item "'.concat(e,'"')),{}}function h(n,e,t,r){var o=t.pages,a=t.themeConfig,i=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(var t in e)if(0===(r=n,/(\.html|\/)$/.test(r)?r:r+"/").indexOf(encodeURI(t)))return{base:t,config:e[t]};var r;return{}}(e,(r&&a.locales&&a.locales[r]||a).sidebar||a.sidebar),s=i.base,l=i.config;return l?l.map((function(n){return function n(e,t,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if("string"==typeof e)return m(t,e,r);if(Array.isArray(e))return Object.assign(m(t,e[0],r),{title:e[1]});o>3&&console.error("[vuepress] detected a too deep nested sidebar group.");var a=e.children||[];return 0===a.length&&e.path?Object.assign(m(t,e.path,r),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,children:a.map((function(e){return n(e,t,r,o+1)})),collapsable:!1!==e.collapsable}}(n,o,s)})):[]}function f(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function g(n){return new Date(n.frontmatter.date).getTime()}function v(n,e){return g(e)-g(n)}function b(n){var e=document.createElement("link");e.rel="stylesheet",e.href=n,document.head.append(e)}function y(n){var e=document.createElement("script");e.src=n,document.head.append(e)}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var r=t(42);n.exports=function(n){if(!r(n))throw TypeError(String(n)+" is not an object");return n}},function(n,e){var t={}.hasOwnProperty;n.exports=function(n,e){return t.call(n,e)}},function(n,e,t){var r=t(224),o="object"==typeof self&&self&&self.Object===Object&&self,a=r||o||Function("return this")();n.exports=a},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){"use strict";var r=t(2),o=t(96);r({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},function(n,e,t){"use strict";var r=t(2),o=t(10),a=t(71),i=t(161),s=t(20),l=t(24),c=t(87),d=t(6),u=t(86),p=t(27),m=u("slice"),h=p("slice",{ACCESSORS:!0,0:0,1:2}),f=d("species"),g=[].slice,v=Math.max;r({target:"Array",proto:!0,forced:!m||!h},{slice:function(n,e){var t,r,d,u=l(this),p=s(u.length),m=i(n,p),h=i(void 0===e?p:e,p);if(a(u)&&("function"!=typeof(t=u.constructor)||t!==Array&&!a(t.prototype)?o(t)&&null===(t=t[f])&&(t=void 0):t=void 0,t===Array||void 0===t))return g.call(u,m,h);for(r=new(void 0===t?Array:t)(v(h-m,0)),d=0;m<h;m++,d++)m in u&&c(r,d,u[m]);return r.length=d,r}})},function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));t(67);var r=t(84);t(78),t(98),t(144),t(222),t(16),t(50),t(66);var o=t(104);function a(n){return function(n){if(Array.isArray(n))return Object(r.a)(n)}(n)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(n)||Object(o.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){var r=t(28),o=Date.prototype,a=o.toString,i=o.getTime;new Date(NaN)+""!="Invalid Date"&&r(o,"toString",(function(){var n=i.call(this);return n==n?a.call(this):"Invalid Date"}))},function(n,e,t){var r=t(2),o=t(7),a=t(207),i=[].slice,s=function(n){return function(e,t){var r=arguments.length>2,o=r?i.call(arguments,2):void 0;return n(r?function(){("function"==typeof e?e:Function(e)).apply(this,o)}:e,t)}};r({global:!0,bind:!0,forced:/MSIE .\./.test(a)},{setTimeout:s(o.setTimeout),setInterval:s(o.setInterval)})},function(n,e,t){"use strict";var r=t(114),o=t(12),a=t(20),i=t(65),s=t(22),l=t(143),c=t(334),d=t(115),u=Math.max,p=Math.min;r("replace",2,(function(n,e,t,r){var m=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,h=r.REPLACE_KEEPS_$0,f=m?"$":"$0";return[function(t,r){var o=s(this),a=null==t?void 0:t[n];return void 0!==a?a.call(t,o,r):e.call(String(o),t,r)},function(n,r){if(!m&&h||"string"==typeof r&&-1===r.indexOf(f)){var s=t(e,n,this,r);if(s.done)return s.value}var g=o(n),v=String(this),b="function"==typeof r;b||(r=String(r));var y=g.global;if(y){var x=g.unicode;g.lastIndex=0}for(var w=[];;){var k=d(g,v);if(null===k)break;if(w.push(k),!y)break;""===String(k[0])&&(g.lastIndex=l(v,a(g.lastIndex),x))}for(var j,_="",T=0,S=0;S<w.length;S++){k=w[S];for(var C=String(k[0]),z=u(p(i(k.index),v.length),0),$=[],I=1;I<k.length;I++)$.push(void 0===(j=k[I])?j:String(j));var O=k.groups;if(b){var E=[C].concat($,z,v);void 0!==O&&E.push(O);var A=String(r.apply(void 0,E))}else A=c(C,v,z,$,O,r);z>=T&&(_+=v.slice(T,z)+A,T=z+C.length)}return _+v.slice(T)}]}))},function(n,e,t){var r=t(30);n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,e,t){var r=t(8),o=t(164),a=t(69),i=t(24),s=t(58),l=t(13),c=t(199),d=Object.getOwnPropertyDescriptor;e.f=r?d:function(n,e){if(n=i(n),e=s(e,!0),c)try{return d(n,e)}catch(n){}if(l(n,e))return a(!o.f.call(n,e),n[e])}},function(n,e){var t={}.toString;n.exports=function(n){return t.call(n).slice(8,-1)}},function(n,e,t){"use strict";var r=t(2),o=t(212);r({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},function(n,e,t){var r=t(7),o=t(211),a=t(212),i=t(25);for(var s in o){var l=r[s],c=l&&l.prototype;if(c&&c.forEach!==a)try{i(c,"forEach",a)}catch(n){c.forEach=a}}},function(n,e,t){var r=t(358),o=t(361);n.exports=function(n,e){var t=o(n,e);return r(t)?t:void 0}},function(n,e,t){var r=t(456),o=t(250),a=/[T ]/,i=/:/,s=/^(\d{2})$/,l=[/^([+-]\d{2})$/,/^([+-]\d{3})$/,/^([+-]\d{4})$/],c=/^(\d{4})/,d=[/^([+-]\d{4})/,/^([+-]\d{5})/,/^([+-]\d{6})/],u=/^-(\d{2})$/,p=/^-?(\d{3})$/,m=/^-?(\d{2})-?(\d{2})$/,h=/^-?W(\d{2})$/,f=/^-?W(\d{2})-?(\d{1})$/,g=/^(\d{2}([.,]\d*)?)$/,v=/^(\d{2}):?(\d{2}([.,]\d*)?)$/,b=/^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,y=/([Z+-].*)$/,x=/^(Z)$/,w=/^([+-])(\d{2})$/,k=/^([+-])(\d{2}):?(\d{2})$/;function j(n,e,t){e=e||0,t=t||0;var r=new Date(0);r.setUTCFullYear(n,0,4);var o=7*e+t+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+o),r}n.exports=function(n,e){if(o(n))return new Date(n.getTime());if("string"!=typeof n)return new Date(n);var t=(e||{}).additionalDigits;t=null==t?2:Number(t);var _=function(n){var e,t={},r=n.split(a);i.test(r[0])?(t.date=null,e=r[0]):(t.date=r[0],e=r[1]);if(e){var o=y.exec(e);o?(t.time=e.replace(o[1],""),t.timezone=o[1]):t.time=e}return t}(n),T=function(n,e){var t,r=l[e],o=d[e];if(t=c.exec(n)||o.exec(n)){var a=t[1];return{year:parseInt(a,10),restDateString:n.slice(a.length)}}if(t=s.exec(n)||r.exec(n)){var i=t[1];return{year:100*parseInt(i,10),restDateString:n.slice(i.length)}}return{year:null}}(_.date,t),S=T.year,C=function(n,e){if(null===e)return null;var t,r,o,a;if(0===n.length)return(r=new Date(0)).setUTCFullYear(e),r;if(t=u.exec(n))return r=new Date(0),o=parseInt(t[1],10)-1,r.setUTCFullYear(e,o),r;if(t=p.exec(n)){r=new Date(0);var i=parseInt(t[1],10);return r.setUTCFullYear(e,0,i),r}if(t=m.exec(n)){r=new Date(0),o=parseInt(t[1],10)-1;var s=parseInt(t[2],10);return r.setUTCFullYear(e,o,s),r}if(t=h.exec(n))return a=parseInt(t[1],10)-1,j(e,a);if(t=f.exec(n)){a=parseInt(t[1],10)-1;var l=parseInt(t[2],10)-1;return j(e,a,l)}return null}(T.restDateString,S);if(C){var z,$=C.getTime(),I=0;if(_.time&&(I=function(n){var e,t,r;if(e=g.exec(n))return(t=parseFloat(e[1].replace(",",".")))%24*36e5;if(e=v.exec(n))return t=parseInt(e[1],10),r=parseFloat(e[2].replace(",",".")),t%24*36e5+6e4*r;if(e=b.exec(n)){t=parseInt(e[1],10),r=parseInt(e[2],10);var o=parseFloat(e[3].replace(",","."));return t%24*36e5+6e4*r+1e3*o}return null}(_.time)),_.timezone)z=6e4*function(n){var e,t;if(e=x.exec(n))return 0;if(e=w.exec(n))return t=60*parseInt(e[2],10),"+"===e[1]?-t:t;if(e=k.exec(n))return t=60*parseInt(e[2],10)+parseInt(e[3],10),"+"===e[1]?-t:t;return 0}(_.timezone);else{var O=$+I,E=new Date(O);z=r(E);var A=new Date(O);A.setDate(E.getDate()+1);var P=r(A)-r(E);P>0&&(z+=P)}return new Date($+I+z)}return new Date(n)}},function(n,e,t){"use strict";var r=t(2),o=t(133).indexOf,a=t(51),i=t(27),s=[].indexOf,l=!!s&&1/[1].indexOf(1,-0)<0,c=a("indexOf"),d=i("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:l||!c||!d},{indexOf:function(n){return l?s.apply(this,arguments)||0:o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(167).charAt,o=t(68),a=t(208),i=o.set,s=o.getterFor("String Iterator");a(String,"String",(function(n){i(this,{type:"String Iterator",string:String(n),index:0})}),(function(){var n,e=s(this),t=e.string,o=e.index;return o>=t.length?{value:void 0,done:!0}:(n=r(t,o),e.index+=n.length,{value:n,done:!1})}))},function(n,e,t){"use strict";var r=t(3);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){throw 1},1)}))}},function(n,e,t){var r=t(204),o=t(7),a=function(n){return"function"==typeof n?n:void 0};n.exports=function(n,e){return arguments.length<2?a(r[n])||a(o[n]):r[n]&&r[n][e]||o[n]&&o[n][e]}},function(n,e,t){var r=t(162),o=t(89),a=t(21),i=t(20),s=t(158),l=[].push,c=function(n){var e=1==n,t=2==n,c=3==n,d=4==n,u=6==n,p=7==n,m=5==n||u;return function(h,f,g,v){for(var b,y,x=a(h),w=o(x),k=r(f,g,3),j=i(w.length),_=0,T=v||s,S=e?T(h,j):t||p?T(h,0):void 0;j>_;_++)if((m||_ in w)&&(y=k(b=w[_],_,x),n))if(e)S[_]=y;else if(y)switch(n){case 3:return!0;case 5:return b;case 6:return _;case 2:l.call(S,b)}else switch(n){case 4:return!1;case 7:l.call(S,b)}return u?-1:c||d?d:S}};n.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterOut:c(7)}},function(n,e,t){var r,o=t(12),a=t(168),i=t(134),s=t(75),l=t(327),c=t(200),d=t(94),u=d("IE_PROTO"),p=function(){},m=function(n){return"<script>"+n+"<\/script>"},h=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(n){}var n,e;h=r?function(n){n.write(m("")),n.close();var e=n.parentWindow.Object;return n=null,e}(r):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(m("document.F=Object")),n.close(),n.F);for(var t=i.length;t--;)delete h.prototype[i[t]];return h()};s[u]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(p.prototype=o(n),t=new p,p.prototype=null,t[u]=n):t=h(),void 0===e?t:a(t,e)}},function(n,e,t){var r=t(41),o=t(56),a=t(120);n.exports=r?function(n,e,t){return o.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(41),o=t(176),a=t(31),i=t(177),s=Object.defineProperty;e.f=r?s:function(n,e,t){if(a(n),e=i(e,!0),a(t),o)try{return s(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(296),o=t(9),a=function(n){return"function"==typeof n?n:void 0};n.exports=function(n,e){return arguments.length<2?a(r[n])||a(o[n]):r[n]&&r[n][e]||o[n]&&o[n][e]}},function(n,e,t){var r=t(10);n.exports=function(n,e){if(!r(n))return n;var t,o;if(e&&"function"==typeof(t=n.toString)&&!r(o=t.call(n)))return o;if("function"==typeof(t=n.valueOf)&&!r(o=t.call(n)))return o;if(!e&&"function"==typeof(t=n.toString)&&!r(o=t.call(n)))return o;throw TypeError("Can't convert object to primitive value")}},function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(String(n)+" is not a function");return n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(16);function r(n,e,t,r,o,a,i){try{var s=n[a](i),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,o)}function o(n){return function(){var e=this,t=arguments;return new Promise((function(o,a){var i=n.apply(e,t);function s(n){r(i,o,a,s,l,"next",n)}function l(n){r(i,o,a,s,l,"throw",n)}s(void 0)}))}}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";var r=t(453),o=t(454),a=t(249);n.exports={formats:a,parse:o,stringify:r}},function(n,e,t){"use strict";var r=t(1);e.a=new r.default},function(n,e,t){"use strict";var r=t(2),o=t(53).map,a=t(86),i=t(27),s=a("map"),l=i("map");r({target:"Array",proto:!0,forced:!s||!l},{map:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e){var t=Math.ceil,r=Math.floor;n.exports=function(n){return isNaN(n=+n)?0:(n>0?r:t)(n)}},function(n,e,t){var r=t(7),o=t(211),a=t(279),i=t(25),s=t(6),l=s("iterator"),c=s("toStringTag"),d=a.values;for(var u in o){var p=r[u],m=p&&p.prototype;if(m){if(m[l]!==d)try{i(m,l,d)}catch(n){m[l]=d}if(m[c]||i(m,c,u),o[u])for(var h in a)if(m[h]!==a[h])try{i(m,h,a[h])}catch(n){m[h]=a[h]}}}},function(n,e,t){t(2)({target:"Array",stat:!0},{isArray:t(71)})},function(n,e,t){var r,o,a,i=t(325),s=t(7),l=t(10),c=t(25),d=t(13),u=t(131),p=t(94),m=t(75),h=s.WeakMap;if(i){var f=u.state||(u.state=new h),g=f.get,v=f.has,b=f.set;r=function(n,e){return e.facade=n,b.call(f,n,e),e},o=function(n){return g.call(f,n)||{}},a=function(n){return v.call(f,n)}}else{var y=p("state");m[y]=!0,r=function(n,e){return e.facade=n,c(n,y,e),e},o=function(n){return d(n,y)?n[y]:{}},a=function(n){return d(n,y)}}n.exports={set:r,get:o,has:a,enforce:function(n){return a(n)?o(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=o(e)).type!==n)throw TypeError("Incompatible receiver, "+n+" required");return t}}}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e){n.exports=!1},function(n,e,t){var r=t(44);n.exports=Array.isArray||function(n){return"Array"==r(n)}},function(n,e){n.exports=!1},function(n,e){n.exports={}},function(n,e,t){var r=t(9),o=t(55),a=t(32),i=t(118),s=t(125),l=t(124),c=l.get,d=l.enforce,u=String(String).split("String");(n.exports=function(n,e,t,s){var l,c=!!s&&!!s.unsafe,p=!!s&&!!s.enumerable,m=!!s&&!!s.noTargetGet;"function"==typeof t&&("string"!=typeof e||a(t,"name")||o(t,"name",e),(l=d(t)).source||(l.source=u.join("string"==typeof e?e:""))),n!==r?(c?!m&&n[e]&&(p=!0):delete n[e],p?n[e]=t:o(n,e,t)):p?n[e]=t:i(e,t)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(n,e){n.exports={}},function(n,e,t){var r=t(205),o=t(134).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,o)}},function(n,e){n.exports={}},function(n,e,t){"use strict";var r=t(2),o=t(7),a=t(52),i=t(70),s=t(8),l=t(136),c=t(206),d=t(3),u=t(13),p=t(71),m=t(10),h=t(12),f=t(21),g=t(24),v=t(58),b=t(69),y=t(54),x=t(111),w=t(76),k=t(335),j=t(165),_=t(43),T=t(14),S=t(164),C=t(25),z=t(28),$=t(132),I=t(94),O=t(75),E=t(95),A=t(6),P=t(220),N=t(221),M=t(109),R=t(68),L=t(53).forEach,D=I("hidden"),q=A("toPrimitive"),F=R.set,U=R.getterFor("Symbol"),B=Object.prototype,H=o.Symbol,V=a("JSON","stringify"),W=_.f,X=T.f,G=k.f,J=S.f,Y=$("symbols"),K=$("op-symbols"),Q=$("string-to-symbol-registry"),Z=$("symbol-to-string-registry"),nn=$("wks"),en=o.QObject,tn=!en||!en.prototype||!en.prototype.findChild,rn=s&&d((function(){return 7!=y(X({},"a",{get:function(){return X(this,"a",{value:7}).a}})).a}))?function(n,e,t){var r=W(B,e);r&&delete B[e],X(n,e,t),r&&n!==B&&X(B,e,r)}:X,on=function(n,e){var t=Y[n]=y(H.prototype);return F(t,{type:"Symbol",tag:n,description:e}),s||(t.description=e),t},an=c?function(n){return"symbol"==typeof n}:function(n){return Object(n)instanceof H},sn=function(n,e,t){n===B&&sn(K,e,t),h(n);var r=v(e,!0);return h(t),u(Y,r)?(t.enumerable?(u(n,D)&&n[D][r]&&(n[D][r]=!1),t=y(t,{enumerable:b(0,!1)})):(u(n,D)||X(n,D,b(1,{})),n[D][r]=!0),rn(n,r,t)):X(n,r,t)},ln=function(n,e){h(n);var t=g(e),r=x(t).concat(pn(t));return L(r,(function(e){s&&!cn.call(t,e)||sn(n,e,t[e])})),n},cn=function(n){var e=v(n,!0),t=J.call(this,e);return!(this===B&&u(Y,e)&&!u(K,e))&&(!(t||!u(this,e)||!u(Y,e)||u(this,D)&&this[D][e])||t)},dn=function(n,e){var t=g(n),r=v(e,!0);if(t!==B||!u(Y,r)||u(K,r)){var o=W(t,r);return!o||!u(Y,r)||u(t,D)&&t[D][r]||(o.enumerable=!0),o}},un=function(n){var e=G(g(n)),t=[];return L(e,(function(n){u(Y,n)||u(O,n)||t.push(n)})),t},pn=function(n){var e=n===B,t=G(e?K:g(n)),r=[];return L(t,(function(n){!u(Y,n)||e&&!u(B,n)||r.push(Y[n])})),r};(l||(z((H=function(){if(this instanceof H)throw TypeError("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=E(n),t=function(n){this===B&&t.call(K,n),u(this,D)&&u(this[D],e)&&(this[D][e]=!1),rn(this,e,b(1,n))};return s&&tn&&rn(B,e,{configurable:!0,set:t}),on(e,n)}).prototype,"toString",(function(){return U(this).tag})),z(H,"withoutSetter",(function(n){return on(E(n),n)})),S.f=cn,T.f=sn,_.f=dn,w.f=k.f=un,j.f=pn,P.f=function(n){return on(A(n),n)},s&&(X(H.prototype,"description",{configurable:!0,get:function(){return U(this).description}}),i||z(B,"propertyIsEnumerable",cn,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!l,sham:!l},{Symbol:H}),L(x(nn),(function(n){N(n)})),r({target:"Symbol",stat:!0,forced:!l},{for:function(n){var e=String(n);if(u(Q,e))return Q[e];var t=H(e);return Q[e]=t,Z[t]=e,t},keyFor:function(n){if(!an(n))throw TypeError(n+" is not a symbol");if(u(Z,n))return Z[n]},useSetter:function(){tn=!0},useSimple:function(){tn=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(n,e){return void 0===e?y(n):ln(y(n),e)},defineProperty:sn,defineProperties:ln,getOwnPropertyDescriptor:dn}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:un,getOwnPropertySymbols:pn}),r({target:"Object",stat:!0,forced:d((function(){j.f(1)}))},{getOwnPropertySymbols:function(n){return j.f(f(n))}}),V)&&r({target:"JSON",stat:!0,forced:!l||d((function(){var n=H();return"[null]"!=V([n])||"{}"!=V({a:n})||"{}"!=V(Object(n))}))},{stringify:function(n,e,t){for(var r,o=[n],a=1;arguments.length>a;)o.push(arguments[a++]);if(r=e,(m(e)||void 0!==n)&&!an(n))return p(e)||(e=function(n,e){if("function"==typeof r&&(e=r.call(this,n,e)),!an(e))return e}),o[1]=e,V.apply(null,o)}});H.prototype[q]||C(H.prototype,q,H.prototype.valueOf),M(H,"Symbol"),O[D]=!0},function(n,e,t){var r=t(33).Symbol;n.exports=r},function(n,e,t){var r=t(79),o=t(343),a=t(344),i=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":i&&i in Object(n)?o(n):a(n)}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o})),t.d(e,"c",(function(){return a})),t.d(e,"b",(function(){return i}));t(23),t(49),t(243);var r=t(29);function o(n,e){return n=n.filter((function(t,r){var o=t.title,a=t.frontmatter,i=a.home,s=a.date,l=a.publish;if(n.indexOf(t)!==r)return!1;var c=1==i||null==o||!1===l;return!0===e?!(c||void 0===s):!c}))}function a(n){n.sort((function(n,e){var t=n.frontmatter.sticky,o=e.frontmatter.sticky;return t&&o?t==o?Object(r.c)(n,e):t-o:t&&!o?-1:!t&&o?1:Object(r.c)(n,e)}))}function i(n){n.sort((function(n,e){return Object(r.c)(n,e)}))}},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(88);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(67);t(78),t(98),t(144),t(16),t(50),t(66);var r=t(104);function o(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,o=!1,a=void 0;try{for(var i,s=n[Symbol.iterator]();!(r=(i=s.next()).done)&&(t.push(i.value),!e||t.length!==e);r=!0);}catch(n){o=!0,a=n}finally{try{r||null==s.return||s.return()}finally{if(o)throw a}}return t}}(n,e)||Object(r.a)(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";function r(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}t.d(e,"a",(function(){return r}))},function(n,e,t){var r=t(2),o=t(21),a=t(111);r({target:"Object",stat:!0,forced:t(3)((function(){a(1)}))},{keys:function(n){return a(o(n))}})},function(n,e,t){var r=t(3),o=t(6),a=t(137),i=o("species");n.exports=function(n){return a>=51||!r((function(){var e=[];return(e.constructor={})[i]=function(){return{foo:1}},1!==e[n](Boolean).foo}))}},function(n,e,t){"use strict";var r=t(58),o=t(14),a=t(69);n.exports=function(n,e,t){var i=r(e);i in n?o.f(n,i,a(0,t)):n[i]=t}},function(n,e,t){var r=t(2),o=t(8);r({target:"Object",stat:!0,forced:!o,sham:!o},{defineProperty:t(14).f})},function(n,e,t){var r=t(3),o=t(44),a="".split;n.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(n){return"String"==o(n)?a.call(n,""):Object(n)}:Object},function(n,e,t){var r=t(8),o=t(14).f,a=Function.prototype,i=a.toString,s=/^\s*function ([^ (]*)/;r&&!("name"in a)&&o(a,"name",{configurable:!0,get:function(){try{return i.call(this).match(s)[1]}catch(n){return""}}})},function(n,e,t){var r=t(173),o=t(174);n.exports=function(n){return r(o(n))}},function(n,e,t){var r=t(9),o=t(126).f,a=t(55),i=t(74),s=t(118),l=t(299),c=t(188);n.exports=function(n,e){var t,d,u,p,m,h=n.target,f=n.global,g=n.stat;if(t=f?r:g?r[h]||s(h,{}):(r[h]||{}).prototype)for(d in e){if(p=e[d],u=n.noTargetGet?(m=o(t,d))&&m.value:t[d],!c(f?d:h+(g?".":"#")+d,n.forced)&&void 0!==u){if(typeof p==typeof u)continue;l(p,u)}(n.sham||u&&u.sham)&&a(p,"sham",!0),i(t,d,p,n)}}},function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(String(n)+" is not a function");return n}},function(n,e,t){var r=t(132),o=t(95),a=r("keys");n.exports=function(n){return a[n]||(a[n]=o(n))}},function(n,e){var t=0,r=Math.random();n.exports=function(n){return"Symbol("+String(void 0===n?"":n)+")_"+(++t+r).toString(36)}},function(n,e,t){"use strict";var r,o,a=t(142),i=t(219),s=RegExp.prototype.exec,l=String.prototype.replace,c=s,d=(r=/a/,o=/b*/g,s.call(r,"a"),s.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),u=i.UNSUPPORTED_Y||i.BROKEN_CARET,p=void 0!==/()??/.exec("")[1];(d||p||u)&&(c=function(n){var e,t,r,o,i=this,c=u&&i.sticky,m=a.call(i),h=i.source,f=0,g=n;return c&&(-1===(m=m.replace("y","")).indexOf("g")&&(m+="g"),g=String(n).slice(i.lastIndex),i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==n[i.lastIndex-1])&&(h="(?: "+h+")",g=" "+g,f++),t=new RegExp("^(?:"+h+")",m)),p&&(t=new RegExp("^"+h+"$(?!\\s)",m)),d&&(e=i.lastIndex),r=s.call(c?t:i,g),c?r?(r.input=r.input.slice(f),r[0]=r[0].slice(f),r.index=i.lastIndex,i.lastIndex+=r[0].length):i.lastIndex=0:d&&r&&(i.lastIndex=i.global?r.index+r[0].length:e),p&&r&&r.length>1&&l.call(r[0],t,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r}),n.exports=c},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(78),t(98),t(144),t(16),t(50),t(66);function r(n){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}},function(n,e,t){"use strict";var r=t(2),o=t(8),a=t(7),i=t(13),s=t(10),l=t(14).f,c=t(202),d=a.Symbol;if(o&&"function"==typeof d&&(!("description"in d.prototype)||void 0!==d().description)){var u={},p=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof p?new d(n):void 0===n?d():d(n);return""===n&&(u[e]=!0),e};c(p,d);var m=p.prototype=d.prototype;m.constructor=p;var h=m.toString,f="Symbol(test)"==String(d("test")),g=/^Symbol\((.*)\)[^)]+$/;l(m,"description",{configurable:!0,get:function(){var n=s(this)?this.valueOf():this,e=h.call(n);if(i(u,n))return"";var t=f?e.slice(7,-1):e.replace(g,"$1");return""===t?void 0:t}}),r({global:!0,forced:!0},{Symbol:p})}},function(n,e,t){var r=t(348),o=t(349),a=t(350),i=t(351),s=t(352);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(226);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(47)(Object,"create");n.exports=r},function(n,e,t){var r=t(370);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(152);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(222),t(36),t(38),t(90),t(16),t(110),t(50);var r=t(84);function o(n,e){if(n){if("string"==typeof n)return Object(r.a)(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(r.a)(n,e):void 0}}},function(n,e,t){var r,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(n,e,t){return n<e?e:n>t?t:n}function a(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=o(n,r.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(r.barSelector),d=r.speed,u=r.easing;return l.offsetWidth,i((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var o;return(o="translate3d"===r.positionUsing?{transform:"translate3d("+a(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+a(n)+"%,0)"}:{"margin-left":a(n)+"%"}).transition="all "+e+"ms "+t,o}(n,d,u)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),d)}),d)):setTimeout(e,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*o(Math.random()*e,.1,.95)),e=o(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var o,i=e.querySelector(r.barSelector),l=n?"-100":a(t.status||0),d=document.querySelector(r.parent);return s(i,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(o=e.querySelector(r.spinnerSelector))&&p(o),d!=document.body&&c(d,"nprogress-custom-parent"),d.appendChild(e),e},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&p(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var i=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,o=n.length,a=e.charAt(0).toUpperCase()+e.slice(1);o--;)if((r=n[o]+a)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,o,a=arguments;if(2==a.length)for(t in e)void 0!==(o=e[t])&&e.hasOwnProperty(t)&&r(n,t,o);else r(n,a[1],a[2])}}();function l(n,e){return("string"==typeof n?n:u(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=u(n),r=t+e;l(t,e)||(n.className=r.substring(1))}function d(n,e){var t,r=u(n);l(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function u(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function p(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=o)},function(n,e,t){"use strict";var r=t(2),o=t(3),a=t(71),i=t(10),s=t(21),l=t(20),c=t(87),d=t(158),u=t(86),p=t(6),m=t(137),h=p("isConcatSpreadable"),f=m>=51||!o((function(){var n=[];return n[h]=!1,n.concat()[0]!==n})),g=u("concat"),v=function(n){if(!i(n))return!1;var e=n[h];return void 0!==e?!!e:a(n)};r({target:"Array",proto:!0,forced:!f||!g},{concat:function(n){var e,t,r,o,a,i=s(this),u=d(i,0),p=0;for(e=-1,r=arguments.length;e<r;e++)if(v(a=-1===e?i:arguments[e])){if(p+(o=l(a.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(t=0;t<o;t++,p++)t in a&&c(u,p,a[t])}else{if(p>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(u,p++,a)}return u.length=p,u}})},function(n,e,t){"use strict";t.d(e,"a",(function(){return o})),t.d(e,"c",(function(){return a})),t.d(e,"b",(function(){return i}));t(49);var r=t(29);function o(){var n=["#e15b64","#f47e60","#f8b26a","#abbd81","#849b87","#e15b64","#f47e60","#f8b26a","#f26d6d","#67cc86","#fb9b5f","#3498db"];return n[Math.floor(Math.random()*n.length)]}function a(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"tomorrow",e=["tomorrow","funky","okaidia","solarizedlight","default"],t="//prismjs.com/themes/prism".concat(e.indexOf(n)>-1?"-".concat(n):"",".css");Object(r.a)(t)}function i(n){var e=n.__proto__.push;n.__proto__.push=function(n){return e.call(this,n).catch((function(n){return n}))}}},function(n,e,t){var r=function(n){"use strict";var e=Object.prototype,t=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",a=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function s(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{s({},"")}catch(n){s=function(n,e,t){return n[e]=t}}function l(n,e,t,r){var o=e&&e.prototype instanceof u?e:u,a=Object.create(o.prototype),i=new j(r||[]);return a._invoke=function(n,e,t){var r="suspendedStart";return function(o,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw a;return T()}for(t.method=o,t.arg=a;;){var i=t.delegate;if(i){var s=x(i,t);if(s){if(s===d)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var l=c(n,e,t);if("normal"===l.type){if(r=t.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(r="completed",t.method="throw",t.arg=l.arg)}}}(n,t,i),a}function c(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=l;var d={};function u(){}function p(){}function m(){}var h={};h[o]=function(){return this};var f=Object.getPrototypeOf,g=f&&f(f(_([])));g&&g!==e&&t.call(g,o)&&(h=g);var v=m.prototype=u.prototype=Object.create(h);function b(n){["next","throw","return"].forEach((function(e){s(n,e,(function(n){return this._invoke(e,n)}))}))}function y(n,e){var r;this._invoke=function(o,a){function i(){return new e((function(r,i){!function r(o,a,i,s){var l=c(n[o],n,a);if("throw"!==l.type){var d=l.arg,u=d.value;return u&&"object"==typeof u&&t.call(u,"__await")?e.resolve(u.__await).then((function(n){r("next",n,i,s)}),(function(n){r("throw",n,i,s)})):e.resolve(u).then((function(n){d.value=n,i(d)}),(function(n){return r("throw",n,i,s)}))}s(l.arg)}(o,a,r,i)}))}return r=r?r.then(i,i):i()}}function x(n,e){var t=n.iterator[e.method];if(void 0===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=void 0,x(n,e),"throw"===e.method))return d;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return d}var r=c(t,n.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,d;var o=r.arg;return o?o.done?(e[n.resultName]=o.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,d):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}function w(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function k(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function j(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(w,this),this.reset(!0)}function _(n){if(n){var e=n[o];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,a=function e(){for(;++r<n.length;)if(t.call(n,r))return e.value=n[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return a.next=a}}return{next:T}}function T(){return{value:void 0,done:!0}}return p.prototype=v.constructor=m,m.constructor=p,p.displayName=s(m,i,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===p||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,m):(n.__proto__=m,s(n,i,"GeneratorFunction")),n.prototype=Object.create(v),n},n.awrap=function(n){return{__await:n}},b(y.prototype),y.prototype[a]=function(){return this},n.AsyncIterator=y,n.async=function(e,t,r,o,a){void 0===a&&(a=Promise);var i=new y(l(e,t,r,o),a);return n.isGeneratorFunction(t)?i:i.next().then((function(n){return n.done?n.value:i.next()}))},b(v),s(v,i,"Generator"),v[o]=function(){return this},v.toString=function(){return"[object Generator]"},n.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){for(;e.length;){var r=e.pop();if(r in n)return t.value=r,t.done=!1,t}return t.done=!0,t}},n.values=_,j.prototype={constructor:j,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function r(t,r){return i.type="throw",i.arg=n,e.next=t,r&&(e.method="next",e.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],i=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var s=t.call(a,"catchLoc"),l=t.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(n,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&t.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===n||"continue"===n)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=n,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(i)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),d},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),k(t),d}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var o=r.arg;k(t)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:_(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),d}},n}(n.exports);try{regeneratorRuntime=r}catch(n){Function("r","regeneratorRuntime = r")(r)}},function(n,e,t){var r=t(14).f,o=t(13),a=t(6)("toStringTag");n.exports=function(n,e,t){n&&!o(n=t?n:n.prototype,a)&&r(n,a,{configurable:!0,value:e})}},function(n,e,t){"use strict";var r=t(28),o=t(12),a=t(3),i=t(142),s=RegExp.prototype,l=s.toString,c=a((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),d="toString"!=l.name;(c||d)&&r(RegExp.prototype,"toString",(function(){var n=o(this),e=String(n.source),t=n.flags;return"/"+e+"/"+String(void 0===t&&n instanceof RegExp&&!("flags"in s)?i.call(n):t)}),{unsafe:!0})},function(n,e,t){var r=t(205),o=t(134);n.exports=Object.keys||function(n){return r(n,o)}},function(n,e,t){var r=t(6),o=t(54),a=t(14),i=r("unscopables"),s=Array.prototype;null==s[i]&&a.f(s,i,{configurable:!0,value:o(null)}),n.exports=function(n){s[i][n]=!0}},function(n,e,t){"use strict";var r=t(2),o=t(329).left,a=t(51),i=t(27),s=t(137),l=t(330),c=a("reduce"),d=i("reduce",{1:0});r({target:"Array",proto:!0,forced:!c||!d||!l&&s>79&&s<83},{reduce:function(n){return o(this,n,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";t(35);var r=t(28),o=t(3),a=t(6),i=t(96),s=t(25),l=a("species"),c=!o((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")})),d="$0"==="a".replace(/./,"$0"),u=a("replace"),p=!!/./[u]&&""===/./[u]("a","$0"),m=!o((function(){var n=/(?:)/,e=n.exec;n.exec=function(){return e.apply(this,arguments)};var t="ab".split(n);return 2!==t.length||"a"!==t[0]||"b"!==t[1]}));n.exports=function(n,e,t,u){var h=a(n),f=!o((function(){var e={};return e[h]=function(){return 7},7!=""[n](e)})),g=f&&!o((function(){var e=!1,t=/a/;return"split"===n&&((t={}).constructor={},t.constructor[l]=function(){return t},t.flags="",t[h]=/./[h]),t.exec=function(){return e=!0,null},t[h](""),!e}));if(!f||!g||"replace"===n&&(!c||!d||p)||"split"===n&&!m){var v=/./[h],b=t(h,""[n],(function(n,e,t,r,o){return e.exec===i?f&&!o?{done:!0,value:v.call(e,t,r)}:{done:!0,value:n.call(t,e,r)}:{done:!1}}),{REPLACE_KEEPS_$0:d,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:p}),y=b[0],x=b[1];r(String.prototype,n,y),r(RegExp.prototype,h,2==e?function(n,e){return x.call(n,this,e)}:function(n){return x.call(n,this)})}u&&s(RegExp.prototype[h],"sham",!0)}},function(n,e,t){var r=t(44),o=t(96);n.exports=function(n,e){var t=n.exec;if("function"==typeof t){var a=t.call(n,e);if("object"!=typeof a)throw TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==r(n))throw TypeError("RegExp#exec called on incompatible receiver");return o.call(n,e)}},function(n,e){var t={}.toString;n.exports=function(n){return t.call(n).slice(8,-1)}},function(n,e,t){var r=t(9),o=t(118),a=r["__core-js_shared__"]||o("__core-js_shared__",{});n.exports=a},function(n,e,t){var r=t(9),o=t(55);n.exports=function(n,e){try{o(r,n,e)}catch(t){r[n]=e}return e}},function(n,e,t){var r=t(9),o=t(42),a=r.document,i=o(a)&&o(a.createElement);n.exports=function(n){return i?a.createElement(n):{}}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e){n.exports={}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){var r=t(175),o=t(178),a=r("keys");n.exports=function(n){return a[n]||(a[n]=o(n))}},function(n,e,t){var r,o,a,i=t(297),s=t(9),l=t(42),c=t(55),d=t(32),u=t(117),p=t(123),m=t(121),h=s.WeakMap;if(i){var f=u.state||(u.state=new h),g=f.get,v=f.has,b=f.set;r=function(n,e){return e.facade=n,b.call(f,n,e),e},o=function(n){return g.call(f,n)||{}},a=function(n){return v.call(f,n)}}else{var y=p("state");m[y]=!0,r=function(n,e){return e.facade=n,c(n,y,e),e},o=function(n){return d(n,y)?n[y]:{}},a=function(n){return d(n,y)}}n.exports={set:r,get:o,has:a,enforce:function(n){return a(n)?o(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=o(e)).type!==n)throw TypeError("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var r=t(117),o=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(n){return o.call(n)}),n.exports=r.inspectSource},function(n,e,t){var r=t(41),o=t(186),a=t(120),i=t(91),s=t(177),l=t(32),c=t(176),d=Object.getOwnPropertyDescriptor;e.f=r?d:function(n,e){if(n=i(n),e=s(e,!0),c)try{return d(n,e)}catch(n){}if(l(n,e))return a(!o.f.call(n,e),n[e])}},function(n,e,t){var r=t(56).f,o=t(32),a=t(19)("toStringTag");n.exports=function(n,e,t){n&&!o(n=t?n:n.prototype,a)&&r(n,a,{configurable:!0,value:e})}},function(n,e,t){var r=t(57);n.exports=r("navigator","userAgent")||""},function(n,e,t){var r=t(116),o=t(9);n.exports="process"==r(o.process)},function(n,e,t){var r=t(7),o=t(25);n.exports=function(n,e){try{o(r,n,e)}catch(t){r[n]=e}return e}},function(n,e,t){var r=t(7),o=t(130),a=r["__core-js_shared__"]||o("__core-js_shared__",{});n.exports=a},function(n,e,t){var r=t(70),o=t(131);(n.exports=function(n,e){return o[n]||(o[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.8.2",mode:r?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(n,e,t){var r=t(24),o=t(20),a=t(161),i=function(n){return function(e,t,i){var s,l=r(e),c=o(l.length),d=a(i,c);if(n&&t!=t){for(;c>d;)if((s=l[d++])!=s)return!0}else for(;c>d;d++)if((n||d in l)&&l[d]===t)return n||d||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){var r=t(3),o=/#|\.prototype\./,a=function(n,e){var t=s[i(n)];return t==c||t!=l&&("function"==typeof e?r(e):!!e)},i=a.normalize=function(n){return String(n).replace(o,".").toLowerCase()},s=a.data={},l=a.NATIVE="N",c=a.POLYFILL="P";n.exports=a},function(n,e,t){var r=t(3);n.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},function(n,e,t){var r,o,a=t(7),i=t(207),s=a.process,l=s&&s.versions,c=l&&l.v8;c?o=(r=c.split("."))[0]+r[1]:i&&(!(r=i.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=i.match(/Chrome\/(\d+)/))&&(o=r[1]),n.exports=o&&+o},function(n,e,t){var r={};r[t(6)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){var r=t(13),o=t(21),a=t(94),i=t(210),s=a("IE_PROTO"),l=Object.prototype;n.exports=i?Object.getPrototypeOf:function(n){return n=o(n),r(n,s)?n[s]:"function"==typeof n.constructor&&n instanceof n.constructor?n.constructor.prototype:n instanceof Object?l:null}},function(n,e,t){var r=t(12),o=t(328);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(t,[]),e=t instanceof Array}catch(n){}return function(t,a){return r(t),o(a),e?n.call(t,a):t.__proto__=a,t}}():void 0)},function(n,e,t){var r=t(10),o=t(44),a=t(6)("match");n.exports=function(n){var e;return r(n)&&(void 0!==(e=n[a])?!!e:"RegExp"==o(n))}},function(n,e,t){"use strict";var r=t(12);n.exports=function(){var n=r(this),e="";return n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.dotAll&&(e+="s"),n.unicode&&(e+="u"),n.sticky&&(e+="y"),e}},function(n,e,t){"use strict";var r=t(167).charAt;n.exports=function(n,e,t){return e+(t?r(n,e).length:1)}},function(n,e,t){t(221)("iterator")},function(n,e,t){var r=t(342),o=t(61),a=Object.prototype,i=a.hasOwnProperty,s=a.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(n){return o(n)&&i.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var r=t(47)(t(33),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(362),o=t(369),a=t(371),i=t(372),s=t(373);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(34),o=t(152),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!o(n))||(i.test(n)||!a.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(80),o=t(61);n.exports=function(n){return"symbol"==typeof n||o(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";var r=Object.prototype.hasOwnProperty,o=Array.isArray,a=function(){for(var n=[],e=0;e<256;++e)n.push("%"+((e<16?"0":"")+e.toString(16)).toUpperCase());return n}(),i=function(n,e){for(var t=e&&e.plainObjects?Object.create(null):{},r=0;r<n.length;++r)void 0!==n[r]&&(t[r]=n[r]);return t};n.exports={arrayToObject:i,assign:function(n,e){return Object.keys(e).reduce((function(n,t){return n[t]=e[t],n}),n)},combine:function(n,e){return[].concat(n,e)},compact:function(n){for(var e=[{obj:{o:n},prop:"o"}],t=[],r=0;r<e.length;++r)for(var a=e[r],i=a.obj[a.prop],s=Object.keys(i),l=0;l<s.length;++l){var c=s[l],d=i[c];"object"==typeof d&&null!==d&&-1===t.indexOf(d)&&(e.push({obj:i,prop:c}),t.push(d))}return function(n){for(;n.length>1;){var e=n.pop(),t=e.obj[e.prop];if(o(t)){for(var r=[],a=0;a<t.length;++a)void 0!==t[a]&&r.push(t[a]);e.obj[e.prop]=r}}}(e),n},decode:function(n,e,t){var r=n.replace(/\+/g," ");if("iso-8859-1"===t)return r.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(r)}catch(n){return r}},encode:function(n,e,t){if(0===n.length)return n;var r=n;if("symbol"==typeof n?r=Symbol.prototype.toString.call(n):"string"!=typeof n&&(r=String(n)),"iso-8859-1"===t)return escape(r).replace(/%u[0-9a-f]{4}/gi,(function(n){return"%26%23"+parseInt(n.slice(2),16)+"%3B"}));for(var o="",i=0;i<r.length;++i){var s=r.charCodeAt(i);45===s||46===s||95===s||126===s||s>=48&&s<=57||s>=65&&s<=90||s>=97&&s<=122?o+=r.charAt(i):s<128?o+=a[s]:s<2048?o+=a[192|s>>6]+a[128|63&s]:s<55296||s>=57344?o+=a[224|s>>12]+a[128|s>>6&63]+a[128|63&s]:(i+=1,s=65536+((1023&s)<<10|1023&r.charCodeAt(i)),o+=a[240|s>>18]+a[128|s>>12&63]+a[128|s>>6&63]+a[128|63&s])}return o},isBuffer:function(n){return!(!n||"object"!=typeof n)&&!!(n.constructor&&n.constructor.isBuffer&&n.constructor.isBuffer(n))},isRegExp:function(n){return"[object RegExp]"===Object.prototype.toString.call(n)},maybeMap:function(n,e){if(o(n)){for(var t=[],r=0;r<n.length;r+=1)t.push(e(n[r]));return t}return e(n)},merge:function n(e,t,a){if(!t)return e;if("object"!=typeof t){if(o(e))e.push(t);else{if(!e||"object"!=typeof e)return[e,t];(a&&(a.plainObjects||a.allowPrototypes)||!r.call(Object.prototype,t))&&(e[t]=!0)}return e}if(!e||"object"!=typeof e)return[e].concat(t);var s=e;return o(e)&&!o(t)&&(s=i(e,a)),o(e)&&o(t)?(t.forEach((function(t,o){if(r.call(e,o)){var i=e[o];i&&"object"==typeof i&&t&&"object"==typeof t?e[o]=n(i,t,a):e.push(t)}else e[o]=t})),e):Object.keys(t).reduce((function(e,o){var i=t[o];return r.call(e,o)?e[o]=n(e[o],i,a):e[o]=i,e}),s)}}},function(n,e,t){var r=t(461);n.exports=function(n){return r(n,{weekStartsOn:1})}},function(n,e,t){"use strict";t.d(e,"a",(function(){return J})),t.d(e,"c",(function(){return rn})),t.d(e,"d",(function(){return G})),t.d(e,"e",(function(){return R}));var r=t(1);function o(n){return"function"==typeof n&&/native code/.test(n.toString())}var a="undefined"!=typeof Symbol&&o(Symbol)&&"undefined"!=typeof Reflect&&o(Reflect.ownKeys),i=function(n){return n},s={enumerable:!0,configurable:!0,get:i,set:i};function l(n,e,t){var r=t.get,o=t.set;s.get=r||i,s.set=o||i,Object.defineProperty(n,e,s)}function c(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}function d(n,e){return Object.hasOwnProperty.call(n,e)}function u(n){return Array.isArray(n)}function p(n){return"[object Object]"===function(n){return Object.prototype.toString.call(n)}(n)}function m(n){return"function"==typeof n}function h(n,e){r.default.util.warn(n,e)}var f=void 0;try{var g=t(1);g&&y(g)?f=g:g&&"default"in g&&y(g.default)&&(f=g.default)}catch(n){}var v=null,b=null;function y(n){return n&&"function"==typeof n&&"Vue"===n.name}function x(){return v}function w(n){b=n}function k(){return b?function n(e){if(_.has(e))return _.get(e);var t={proxy:e,update:e.$forceUpdate,uid:e._uid,emit:e.$emit.bind(e),parent:null,root:null};["data","props","attrs","refs","vnode","slots"].forEach((function(n){l(t,n,{get:function(){return e["$"+n]}})})),l(t,"isMounted",{get:function(){return e._isMounted}}),l(t,"isUnmounted",{get:function(){return e._isDestroyed}}),l(t,"isDeactivated",{get:function(){return e._inactive}}),l(t,"emitted",{get:function(){return e._events}}),_.set(e,t),e.$parent&&(t.parent=n(e.$parent));e.$root&&(t.root=n(e.$root));return t}(b):null}var j,_=new WeakMap;function T(n){var e=k();return null==e?void 0:e.proxy}function S(n,e){void 0===e&&(e={});var t=n.config.silent;n.config.silent=!0;var r=new n(e);return n.config.silent=t,r}function C(n,e){return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return n.$scopedSlots[e]?n.$scopedSlots[e].apply(n,t):h("slots."+e+'() got called outside of the "render()" scope',n)}}function z(n){var e="function"==typeof Symbol&&Symbol.iterator,t=e&&n[e],r=0;if(t)return t.call(n);if(n&&"number"==typeof n.length)return{next:function(){return n&&r>=n.length&&(n=void 0),{value:n&&n[r++],done:!n}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function $(n,e){var t="function"==typeof Symbol&&n[Symbol.iterator];if(!t)return n;var r,o,a=t.call(n),i=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(n){o={error:n}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i}function I(){for(var n=[],e=0;e<arguments.length;e++)n=n.concat($(arguments[e]));return n}function O(n){return a?Symbol.for(n):n}O("composition-api.preFlushQueue"),O("composition-api.postFlushQueue");var E="composition-api.refKey",A=new WeakMap,P=(new WeakMap,new WeakMap),N=function(n){l(this,"value",{get:n.get,set:n.set})};function M(n,e){var t=new N(n),r=Object.seal(t);return P.set(r,!0),r}function R(n){var e;if(L(n))return n;var t=W(((e={})[E]=n,e));return M({get:function(){return t[E]},set:function(n){return t[E]=n}})}function L(n){return n instanceof N}function D(n,e){var t=n[e];return L(t)?t:M({get:function(){return n[e]},set:function(t){return n[e]=t}})}function q(n){var e;return Boolean((null==n?void 0:n.__ob__)&&(null===(e=n.__ob__)||void 0===e?void 0:e.__raw__))}function F(n){var e;return Boolean((null==n?void 0:n.__ob__)&&!(null===(e=n.__ob__)||void 0===e?void 0:e.__raw__))}function U(n){if(!(!p(n)||q(n)||Array.isArray(n)||L(n)||(e=n,t=x(),t&&e instanceof t)||A.has(n))){var e,t;A.set(n,!0);for(var r=Object.keys(n),o=0;o<r.length;o++)B(n,r[o])}}function B(n,e,t){if("__ob__"!==e&&!q(n[e])){var r,o,a=Object.getOwnPropertyDescriptor(n,e);if(a){if(!1===a.configurable)return;r=a.get,o=a.set,r&&!o||2!==arguments.length||(t=n[e])}U(t),Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var o=r?r.call(n):t;return e!==E&&L(o)?o.value:o},set:function(a){if(!r||o){var i=r?r.call(n):t;e!==E&&L(i)&&!L(a)?i.value=a:o?o.call(n,a):t=a,U(a)}}})}}function H(n){var e,t=v||f;t.observable?e=t.observable(n):e=S(t,{data:{$$state:n}})._data.$$state;return d(e,"__ob__")||c(e,"__ob__",function(n){void 0===n&&(n={});return{value:n,dep:{notify:i,depend:i,addSub:i,removeSub:i}}}(e)),e}function V(){return H({}).__ob__}function W(n){if(!p(n)&&!u(n)||q(n)||!Object.isExtensible(n))return n;var e=H(n);return U(e),e}function X(n){return function(e){var t,r=T(((t=n)[0].toUpperCase(),t.slice(1)));r&&function(n,e,t,r){var o=e.$options,a=n.config.optionMergeStrategies[t];o[t]=a(o[t],function(n,e){return function(){for(var t,r=[],o=0;o<arguments.length;o++)r[o]=arguments[o];var a=null===(t=k())||void 0===t?void 0:t.proxy;w(n);try{return e.apply(void 0,I(r))}finally{w(a)}}}(e,r))}(x(),r,n,e)}}X("beforeMount");var G=X("mounted");X("beforeUpdate"),X("updated"),X("beforeDestroy"),X("destroyed"),X("errorCaptured"),X("activated"),X("deactivated"),X("serverPrefetch");function J(n){var e,t,r,o,a,s=null===(e=k())||void 0===e?void 0:e.proxy;if("function"==typeof n?t=n:(t=n.get,r=n.set),s&&!s.$isServer){var l,c=function(){if(!j){var n=S(x(),{computed:{value:function(){return 0}}}),e=n._computedWatchers.value.constructor,t=n._data.__ob__.dep.constructor;j={Watcher:e,Dep:t},n.$destroy()}return j}(),d=c.Watcher,u=c.Dep;a=function(){return l||(l=new d(s,t,i,{lazy:!0})),l.dirty&&l.evaluate(),u.target&&l.depend(),l.value},o=function(n){r&&r(n)}}else{var p=S(x(),{computed:{$$state:{get:t,set:r}}});s&&s.$on("hook:destroyed",(function(){return p.$destroy()})),a=function(){return p.$$state},o=function(n){p.$$state=n}}return M({get:a,set:o})}var Y={set:function(n,e,t){(n.__composition_api_state__=n.__composition_api_state__||{})[e]=t},get:function(n,e){return(n.__composition_api_state__||{})[e]}};function K(n){var e=Y.get(n,"rawBindings")||{};if(e&&Object.keys(e).length){for(var t=n.$refs,r=Y.get(n,"refs")||[],o=0;o<r.length;o++){var a=e[l=r[o]];!t[l]&&a&&L(a)&&(a.value=null)}var i=Object.keys(t),s=[];for(o=0;o<i.length;o++){var l;a=e[l=i[o]];t[l]&&a&&L(a)&&(a.value=t[l],s.push(l))}Y.set(n,"refs",s)}}function Q(n,e){var t=n.$options._parentVnode;if(t){for(var r=Y.get(n,"slots")||[],o=function(n,e){var t;if(n){if(n._normalized)return n._normalized;for(var r in t={},n)n[r]&&"$"!==r[0]&&(t[r]=!0)}else t={};for(var r in e)r in t||(t[r]=!0);return t}(t.data.scopedSlots,n.$slots),a=0;a<r.length;a++){o[s=r[a]]||delete e[s]}var i=Object.keys(o);for(a=0;a<i.length;a++){var s;e[s=i[a]]||(e[s]=C(n,s))}Y.set(n,"slots",i)}}function Z(n,e,t){var r=b;w(n);try{return e(n)}catch(n){if(!t)throw n;t(n)}finally{w(r)}}function nn(n){n.mixin({beforeCreate:function(){var n=this,e=n.$options,t=e.setup,r=e.render;r&&(e.render=function(){for(var e=this,t=[],o=0;o<arguments.length;o++)t[o]=arguments[o];return Z(n,(function(){return r.apply(e,t)}))});if(!t)return;if("function"!=typeof t)return void 0;var o=e.data;e.data=function(){return function(n,e){void 0===e&&(e={});var t,r=n.$options.setup,o=function(n){var e={slots:{}};["root","parent","refs","listeners","isServer","ssrContext"].forEach((function(t){var r="$"+t;l(e,t,{get:function(){return n[r]},set:function(){h("Cannot assign to '"+t+"' because it is a read-only property",n)}})})),["attrs"].forEach((function(t){var r="$"+t;l(e,t,{get:function(){var e,t,o=W({}),a=n[r],i=function(e){l(o,e,{get:function(){return n[r][e]}})};try{for(var s=z(Object.keys(a)),c=s.next();!c.done;c=s.next()){i(c.value)}}catch(n){e={error:n}}finally{try{c&&!c.done&&(t=s.return)&&t.call(s)}finally{if(e)throw e.error}}return o},set:function(){h("Cannot assign to '"+t+"' because it is a read-only property",n)}})})),["emit"].forEach((function(t){var r="$"+t;l(e,t,{get:function(){return function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var o=n[r];o.apply(n,e)}}})})),!1;return e}(n);if(c(e,"__ob__",V()),Q(n,o.slots),Z(n,(function(){t=r(e,o)})),!t)return;if(m(t)){var a=t;return void(n.$options.render=function(){return Q(n,o.slots),Z(n,(function(){return a()}))})}if(p(t)){F(t)&&(t=function(n){if(!p(n))return n;var e={};for(var t in n)e[t]=D(n,t);return e}(t)),Y.set(n,"rawBindings",t);var i=t;return void Object.keys(i).forEach((function(e){var t,r=i[e];L(r)||(F(r)?u(r)&&(r=R(r)):m(r)?r=r.bind(n):null===(t=r)||"object"!=typeof t?r=R(r):function n(e,t){void 0===t&&(t=new Map);if(t.has(e))return t.get(e);if(t.set(e,!1),Array.isArray(e)&&F(e))return t.set(e,!0),!0;if(!p(e)||q(e))return!1;return Object.keys(e).some((function(r){return n(e[r],t)}))}(r)&&function n(e){if(!p(e)||L(e)||F(e)||q(e))return;var t=x().util.defineReactive;Object.keys(e).forEach((function(r){var o=e[r];t(e,r,o),o&&n(o)}))}(r)),function(n,e,t){var r=n.$options.props;e in n||r&&d(r,e)||(L(t)?l(n,e,{get:function(){return t.value},set:function(n){t.value=n}}):n[e]=t)}(n,e,r)}))}0}(n,n.$props),"function"==typeof o?o.call(n,n):o||{}}},mounted:function(){K(this)},updated:function(){K(this)}})}function en(n){(function(n){return d(n,"__composition_api_installed__")})(n)||(n.config.optionMergeStrategies.setup=function(n,e){return function(t,r){return function n(e,t){if(!e)return t;if(!t)return e;for(var r,o,i,s=a?Reflect.ownKeys(e):Object.keys(e),l=0;l<s.length;l++)"__ob__"!==(r=s[l])&&(o=t[r],i=e[r],d(t,r)?o!==i&&p(o)&&!L(o)&&p(i)&&!L(i)&&n(i,o):t[r]=i);return t}("function"==typeof n?n(t,r)||{}:void 0,"function"==typeof e?e(t,r)||{}:void 0)}},function(n){v=n,Object.defineProperty(n,"__composition_api_installed__",{configurable:!0,writable:!0,value:!0})}(n),nn(n))}var tn={install:function(n){return en(n)}};function rn(n){return n}"undefined"!=typeof window&&window.Vue&&window.Vue.use(tn),e.b=tn},function(n,e,t){"use strict";var r=t(2),o=t(53).some,a=t(51),i=t(27),s=a("some"),l=i("some");r({target:"Array",proto:!0,forced:!s||!l},{some:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(10),o=t(71),a=t(6)("species");n.exports=function(n,e){var t;return o(n)&&("function"!=typeof(t=n.constructor)||t!==Array&&!o(t.prototype)?r(t)&&null===(t=t[a])&&(t=void 0):t=void 0),new(void 0===t?Array:t)(0===e?0:e)}},function(n,e,t){var r=t(22),o="["+t(160)+"]",a=RegExp("^"+o+o+"*"),i=RegExp(o+o+"*$"),s=function(n){return function(e){var t=String(r(e));return 1&n&&(t=t.replace(a,"")),2&n&&(t=t.replace(i,"")),t}};n.exports={start:s(1),end:s(2),trim:s(3)}},function(n,e){n.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(n,e,t){var r=t(65),o=Math.max,a=Math.min;n.exports=function(n,e){var t=r(n);return t<0?o(t+e,0):a(t,e)}},function(n,e,t){var r=t(59);n.exports=function(n,e,t){if(r(n),void 0===e)return n;switch(t){case 0:return function(){return n.call(e)};case 1:return function(t){return n.call(e,t)};case 2:return function(t,r){return n.call(e,t,r)};case 3:return function(t,r,o){return n.call(e,t,r,o)}}return function(){return n.apply(e,arguments)}}},function(n,e,t){"use strict";var r=t(2),o=t(89),a=t(24),i=t(51),s=[].join,l=o!=Object,c=i("join",",");r({target:"Array",proto:!0,forced:l||!c},{join:function(n){return s.call(a(this),void 0===n?",":n)}})},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,a=o&&!r.call({1:2},1);e.f=a?function(n){var e=o(this,n);return!!e&&e.enumerable}:r},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var r=t(138),o=t(44),a=t(6)("toStringTag"),i="Arguments"==o(function(){return arguments}());n.exports=r?o:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=Object(n),a))?t:i?o(e):"Object"==(r=o(e))&&"function"==typeof e.callee?"Arguments":r}},function(n,e,t){var r=t(65),o=t(22),a=function(n){return function(e,t){var a,i,s=String(o(e)),l=r(t),c=s.length;return l<0||l>=c?n?"":void 0:(a=s.charCodeAt(l))<55296||a>56319||l+1===c||(i=s.charCodeAt(l+1))<56320||i>57343?n?s.charAt(l):a:n?s.slice(l,l+2):i-56320+(a-55296<<10)+65536}};n.exports={codeAt:a(!1),charAt:a(!0)}},function(n,e,t){var r=t(8),o=t(14),a=t(12),i=t(111);n.exports=r?Object.defineProperties:function(n,e){a(n);for(var t,r=i(e),s=r.length,l=0;s>l;)o.f(n,t=r[l++],e[t]);return n}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,t){"use strict";var r=t(2),o=t(53).find,a=t(112),i=t(27),s=!0,l=i("find");"find"in[]&&Array(1).find((function(){s=!1})),r({target:"Array",proto:!0,forced:s||!l},{find:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}}),a("find")},function(n,e,t){"use strict";t.d(e,"a",(function(){return i}));t(265),t(215),t(264);function r(n){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}t(38),t(16),t(110);var o=t(97);function a(n,e){return!e||"object"!==Object(o.a)(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function i(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,o=r(n);if(e){var i=r(this).constructor;t=Reflect.construct(o,arguments,i)}else t=o.apply(this,arguments);return a(this,t)}}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(218),t(264);function r(n,e){return(r=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}function o(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&r(n,e)}},function(n,e,t){var r=t(30),o=t(116),a="".split;n.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(n){return"String"==o(n)?a.call(n,""):Object(n)}:Object},function(n,e){n.exports=function(n){if(null==n)throw TypeError("Can't call method on "+n);return n}},function(n,e,t){var r=t(72),o=t(117);(n.exports=function(n,e){return o[n]||(o[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.8.2",mode:r?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(n,e,t){var r=t(41),o=t(30),a=t(119);n.exports=!r&&!o((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(42);n.exports=function(n,e){if(!r(n))return n;var t,o;if(e&&"function"==typeof(t=n.toString)&&!r(o=t.call(n)))return o;if("function"==typeof(t=n.valueOf)&&!r(o=t.call(n)))return o;if(!e&&"function"==typeof(t=n.toString)&&!r(o=t.call(n)))return o;throw TypeError("Can't convert object to primitive value")}},function(n,e){var t=0,r=Math.random();n.exports=function(n){return"Symbol("+String(void 0===n?"":n)+")_"+(++t+r).toString(36)}},function(n,e,t){var r=t(30);n.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},function(n,e,t){var r,o=t(31),a=t(293),i=t(122),s=t(121),l=t(185),c=t(119),d=t(123),u=d("IE_PROTO"),p=function(){},m=function(n){return"<script>"+n+"<\/script>"},h=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(n){}var n,e;h=r?function(n){n.write(m("")),n.close();var e=n.parentWindow.Object;return n=null,e}(r):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(m("document.F=Object")),n.close(),n.F);for(var t=i.length;t--;)delete h.prototype[i[t]];return h()};s[u]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(p.prototype=o(n),t=new p,p.prototype=null,t[u]=n):t=h(),void 0===e?t:a(t,e)}},function(n,e,t){var r=t(182),o=t(122);n.exports=Object.keys||function(n){return r(n,o)}},function(n,e,t){var r=t(32),o=t(91),a=t(294).indexOf,i=t(121);n.exports=function(n,e){var t,s=o(n),l=0,c=[];for(t in s)!r(i,t)&&r(s,t)&&c.push(t);for(;e.length>l;)r(s,t=e[l++])&&(~a(c,t)||c.push(t));return c}},function(n,e,t){var r=t(184),o=Math.min;n.exports=function(n){return n>0?o(r(n),9007199254740991):0}},function(n,e){var t=Math.ceil,r=Math.floor;n.exports=function(n){return isNaN(n=+n)?0:(n>0?r:t)(n)}},function(n,e,t){var r=t(57);n.exports=r("document","documentElement")},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,a=o&&!r.call({1:2},1);e.f=a?function(n){var e=o(this,n);return!!e&&e.enumerable}:r},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var r=t(30),o=/#|\.prototype\./,a=function(n,e){var t=s[i(n)];return t==c||t!=l&&("function"==typeof e?r(e):!!e)},i=a.normalize=function(n){return String(n).replace(o,".").toLowerCase()},s=a.data={},l=a.NATIVE="N",c=a.POLYFILL="P";n.exports=a},function(n,e,t){"use strict";var r,o,a,i=t(190),s=t(55),l=t(32),c=t(19),d=t(72),u=c("iterator"),p=!1;[].keys&&("next"in(a=[].keys())?(o=i(i(a)))!==Object.prototype&&(r=o):p=!0),null==r&&(r={}),d||l(r,u)||s(r,u,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:p}},function(n,e,t){var r=t(32),o=t(191),a=t(123),i=t(303),s=a("IE_PROTO"),l=Object.prototype;n.exports=i?Object.getPrototypeOf:function(n){return n=o(n),r(n,s)?n[s]:"function"==typeof n.constructor&&n instanceof n.constructor?n.constructor.prototype:n instanceof Object?l:null}},function(n,e,t){var r=t(174);n.exports=function(n){return Object(r(n))}},function(n,e,t){var r=t(9);n.exports=r.Promise},function(n,e,t){var r=t(93);n.exports=function(n,e,t){if(r(n),void 0===e)return n;switch(t){case 0:return function(){return n.call(e)};case 1:return function(t){return n.call(e,t)};case 2:return function(t,r){return n.call(e,t,r)};case 3:return function(t,r,o){return n.call(e,t,r,o)}}return function(){return n.apply(e,arguments)}}},function(n,e,t){var r=t(31),o=t(93),a=t(19)("species");n.exports=function(n,e){var t,i=r(n).constructor;return void 0===i||null==(t=r(i)[a])?e:o(t)}},function(n,e,t){var r,o,a,i=t(9),s=t(30),l=t(193),c=t(185),d=t(119),u=t(196),p=t(129),m=i.location,h=i.setImmediate,f=i.clearImmediate,g=i.process,v=i.MessageChannel,b=i.Dispatch,y=0,x={},w=function(n){if(x.hasOwnProperty(n)){var e=x[n];delete x[n],e()}},k=function(n){return function(){w(n)}},j=function(n){w(n.data)},_=function(n){i.postMessage(n+"",m.protocol+"//"+m.host)};h&&f||(h=function(n){for(var e=[],t=1;arguments.length>t;)e.push(arguments[t++]);return x[++y]=function(){("function"==typeof n?n:Function(n)).apply(void 0,e)},r(y),y},f=function(n){delete x[n]},p?r=function(n){g.nextTick(k(n))}:b&&b.now?r=function(n){b.now(k(n))}:v&&!u?(a=(o=new v).port2,o.port1.onmessage=j,r=l(a.postMessage,a,1)):i.addEventListener&&"function"==typeof postMessage&&!i.importScripts&&m&&"file:"!==m.protocol&&!s(_)?(r=_,i.addEventListener("message",j,!1)):r="onreadystatechange"in d("script")?function(n){c.appendChild(d("script")).onreadystatechange=function(){c.removeChild(this),w(n)}}:function(n){setTimeout(k(n),0)}),n.exports={set:h,clear:f}},function(n,e,t){var r=t(128);n.exports=/(iphone|ipod|ipad).*applewebkit/i.test(r)},function(n,e,t){var r=t(31),o=t(42),a=t(198);n.exports=function(n,e){if(r(n),o(e)&&e.constructor===n)return e;var t=a.f(n);return(0,t.resolve)(e),t.promise}},function(n,e,t){"use strict";var r=t(93),o=function(n){var e,t;this.promise=new n((function(n,r){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=r})),this.resolve=r(e),this.reject=r(t)};n.exports.f=function(n){return new o(n)}},function(n,e,t){var r=t(8),o=t(3),a=t(200);n.exports=!r&&!o((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(7),o=t(10),a=r.document,i=o(a)&&o(a.createElement);n.exports=function(n){return i?a.createElement(n):{}}},function(n,e,t){var r=t(131),o=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(n){return o.call(n)}),n.exports=r.inspectSource},function(n,e,t){var r=t(13),o=t(203),a=t(43),i=t(14);n.exports=function(n,e){for(var t=o(e),s=i.f,l=a.f,c=0;c<t.length;c++){var d=t[c];r(n,d)||s(n,d,l(e,d))}}},function(n,e,t){var r=t(52),o=t(76),a=t(165),i=t(12);n.exports=r("Reflect","ownKeys")||function(n){var e=o.f(i(n)),t=a.f;return t?e.concat(t(n)):e}},function(n,e,t){var r=t(7);n.exports=r},function(n,e,t){var r=t(13),o=t(24),a=t(133).indexOf,i=t(75);n.exports=function(n,e){var t,s=o(n),l=0,c=[];for(t in s)!r(i,t)&&r(s,t)&&c.push(t);for(;e.length>l;)r(s,t=e[l++])&&(~a(c,t)||c.push(t));return c}},function(n,e,t){var r=t(136);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var r=t(52);n.exports=r("navigator","userAgent")||""},function(n,e,t){"use strict";var r=t(2),o=t(278),a=t(139),i=t(140),s=t(109),l=t(25),c=t(28),d=t(6),u=t(70),p=t(77),m=t(209),h=m.IteratorPrototype,f=m.BUGGY_SAFARI_ITERATORS,g=d("iterator"),v=function(){return this};n.exports=function(n,e,t,d,m,b,y){o(t,e,d);var x,w,k,j=function(n){if(n===m&&z)return z;if(!f&&n in S)return S[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},_=e+" Iterator",T=!1,S=n.prototype,C=S[g]||S["@@iterator"]||m&&S[m],z=!f&&C||j(m),$="Array"==e&&S.entries||C;if($&&(x=a($.call(new n)),h!==Object.prototype&&x.next&&(u||a(x)===h||(i?i(x,h):"function"!=typeof x[g]&&l(x,g,v)),s(x,_,!0,!0),u&&(p[_]=v))),"values"==m&&C&&"values"!==C.name&&(T=!0,z=function(){return C.call(this)}),u&&!y||S[g]===z||l(S,g,z),p[e]=z,m)if(w={values:j("values"),keys:b?z:j("keys"),entries:j("entries")},y)for(k in w)(f||T||!(k in S))&&c(S,k,w[k]);else r({target:e,proto:!0,forced:f||T},w);return w}},function(n,e,t){"use strict";var r,o,a,i=t(139),s=t(25),l=t(13),c=t(6),d=t(70),u=c("iterator"),p=!1;[].keys&&("next"in(a=[].keys())?(o=i(i(a)))!==Object.prototype&&(r=o):p=!0),null==r&&(r={}),d||l(r,u)||s(r,u,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:p}},function(n,e,t){var r=t(3);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(n,e,t){"use strict";var r=t(53).forEach,o=t(51),a=t(27),i=o("forEach"),s=a("forEach");n.exports=i&&s?[].forEach:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}},function(n,e,t){var r=t(3);n.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(n,e,t){var r=t(2),o=t(8),a=t(203),i=t(24),s=t(43),l=t(87);r({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(n){for(var e,t,r=i(n),o=s.f,c=a(r),d={},u=0;c.length>u;)void 0!==(t=o(r,e=c[u++]))&&l(d,e,t);return d}})},function(n,e,t){var r=t(2),o=t(3),a=t(21),i=t(139),s=t(210);r({target:"Object",stat:!0,forced:o((function(){i(1)})),sham:!s},{getPrototypeOf:function(n){return i(a(n))}})},function(n,e,t){var r=t(141);n.exports=function(n){if(r(n))throw TypeError("The method doesn't accept regular expressions");return n}},function(n,e,t){var r=t(6)("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[r]=!1,"/./"[n](e)}catch(n){}}return!1}},function(n,e,t){t(2)({target:"Object",stat:!0,sham:!t(8)},{create:t(54)})},function(n,e,t){"use strict";var r=t(3);function o(n,e){return RegExp(n,e)}e.UNSUPPORTED_Y=r((function(){var n=o("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),e.BROKEN_CARET=r((function(){var n=o("^r","gy");return n.lastIndex=2,null!=n.exec("str")}))},function(n,e,t){var r=t(6);e.f=r},function(n,e,t){var r=t(204),o=t(13),a=t(220),i=t(14).f;n.exports=function(n){var e=r.Symbol||(r.Symbol={});o(e,n)||i(e,n,{value:a.f(n)})}},function(n,e,t){var r=t(2),o=t(282);r({target:"Array",stat:!0,forced:!t(339)((function(n){Array.from(n)}))},{from:o})},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,o=n.length;++t<r;)n[o+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(99),o=t(353),a=t(354),i=t(355),s=t(356),l=t(357);function c(n){var e=this.__data__=new r(n);this.size=e.size}c.prototype.clear=o,c.prototype.delete=a,c.prototype.get=i,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(80),o=t(147);n.exports=function(n){if(!o(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(374),o=t(61);n.exports=function n(e,t,a,i,s){return e===t||(null==e||null==t||!o(e)&&!o(t)?e!=e&&t!=t:r(e,t,a,i,n,s))}},function(n,e,t){var r=t(231),o=t(377),a=t(232);n.exports=function(n,e,t,i,s,l){var c=1&t,d=n.length,u=e.length;if(d!=u&&!(c&&u>d))return!1;var p=l.get(n),m=l.get(e);if(p&&m)return p==e&&m==n;var h=-1,f=!0,g=2&t?new r:void 0;for(l.set(n,e),l.set(e,n);++h<d;){var v=n[h],b=e[h];if(i)var y=c?i(b,v,h,e,n,l):i(v,b,h,n,e,l);if(void 0!==y){if(y)continue;f=!1;break}if(g){if(!o(e,(function(n,e){if(!a(g,e)&&(v===n||s(v,n,t,i,l)))return g.push(e)}))){f=!1;break}}else if(v!==b&&!s(v,b,t,i,l)){f=!1;break}}return l.delete(n),l.delete(e),f}},function(n,e,t){var r=t(148),o=t(375),a=t(376);function i(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}i.prototype.add=i.prototype.push=o,i.prototype.has=a,n.exports=i},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(387),o=t(393),a=t(237);n.exports=function(n){return a(n)?r(n):o(n)}},function(n,e,t){(function(n){var r=t(33),o=t(389),a=e&&!e.nodeType&&e,i=a&&"object"==typeof n&&n&&!n.nodeType&&n,s=i&&i.exports===a?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||o;n.exports=l}).call(this,t(169)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(390),o=t(391),a=t(392),i=a&&a.isTypedArray,s=i?o(i):r;n.exports=s},function(n,e,t){var r=t(227),o=t(150);n.exports=function(n){return null!=n&&o(n.length)&&!r(n)}},function(n,e,t){var r=t(47)(t(33),"Set");n.exports=r},function(n,e,t){var r=t(147);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(242),o=t(103);n.exports=function(n,e){for(var t=0,a=(e=r(e,n)).length;null!=n&&t<a;)n=n[o(e[t++])];return t&&t==a?n:void 0}},function(n,e,t){var r=t(34),o=t(151),a=t(404),i=t(407);n.exports=function(n,e){return r(n)?n:o(n,e)?[n]:a(i(n))}},function(n,e,t){"use strict";var r=t(2),o=t(59),a=t(21),i=t(3),s=t(51),l=[],c=l.sort,d=i((function(){l.sort(void 0)})),u=i((function(){l.sort(null)})),p=s("sort");r({target:"Array",proto:!0,forced:d||!u||!p},{sort:function(n){return void 0===n?c.call(a(this)):c.call(a(this),o(n))}})},function(n,e,t){var r=t(10),o=t(140);n.exports=function(n,e,t){var a,i;return o&&"function"==typeof(a=e.constructor)&&a!==t&&r(i=a.prototype)&&i!==t.prototype&&o(n,i),n}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var r=String.prototype.replace,o=/%20/g,a=t(154),i={RFC1738:"RFC1738",RFC3986:"RFC3986"};n.exports=a.assign({default:i.RFC3986,formatters:{RFC1738:function(n){return r.call(n,o,"+")},RFC3986:function(n){return String(n)}}},i)},function(n,e){n.exports=function(n){return n instanceof Date}},function(n,e,t){var r=t(48),o=t(155);n.exports=function(n){var e=r(n),t=e.getFullYear(),a=new Date(0);a.setFullYear(t+1,0,4),a.setHours(0,0,0,0);var i=o(a),s=new Date(0);s.setFullYear(t,0,4),s.setHours(0,0,0,0);var l=o(s);return e.getTime()>=i.getTime()?t+1:e.getTime()>=l.getTime()?t:t-1}},function(n,e,t){"use strict";n.exports=function(n,e){return function(){for(var t=new Array(arguments.length),r=0;r<t.length;r++)t[r]=arguments[r];return n.apply(e,t)}}},function(n,e,t){"use strict";var r=t(17);function o(n){return encodeURIComponent(n).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}n.exports=function(n,e,t){if(!e)return n;var a;if(t)a=t(e);else if(r.isURLSearchParams(e))a=e.toString();else{var i=[];r.forEach(e,(function(n,e){null!=n&&(r.isArray(n)?e+="[]":n=[n],r.forEach(n,(function(n){r.isDate(n)?n=n.toISOString():r.isObject(n)&&(n=JSON.stringify(n)),i.push(o(e)+"="+o(n))})))})),a=i.join("&")}if(a){var s=n.indexOf("#");-1!==s&&(n=n.slice(0,s)),n+=(-1===n.indexOf("?")?"?":"&")+a}return n}},function(n,e,t){"use strict";n.exports=function(n){return!(!n||!n.__CANCEL__)}},function(n,e,t){"use strict";var r=t(17),o=t(473),a={"Content-Type":"application/x-www-form-urlencoded"};function i(n,e){!r.isUndefined(n)&&r.isUndefined(n["Content-Type"])&&(n["Content-Type"]=e)}var s,l={adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(s=t(256)),s),transformRequest:[function(n,e){return o(e,"Accept"),o(e,"Content-Type"),r.isFormData(n)||r.isArrayBuffer(n)||r.isBuffer(n)||r.isStream(n)||r.isFile(n)||r.isBlob(n)?n:r.isArrayBufferView(n)?n.buffer:r.isURLSearchParams(n)?(i(e,"application/x-www-form-urlencoded;charset=utf-8"),n.toString()):r.isObject(n)?(i(e,"application/json;charset=utf-8"),JSON.stringify(n)):n}],transformResponse:[function(n){if("string"==typeof n)try{n=JSON.parse(n)}catch(n){}return n}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(n){return n>=200&&n<300}};l.headers={common:{Accept:"application/json, text/plain, */*"}},r.forEach(["delete","get","head"],(function(n){l.headers[n]={}})),r.forEach(["post","put","patch"],(function(n){l.headers[n]=r.merge(a)})),n.exports=l},function(n,e,t){"use strict";var r=t(17),o=t(474),a=t(476),i=t(253),s=t(477),l=t(480),c=t(481),d=t(257);n.exports=function(n){return new Promise((function(e,t){var u=n.data,p=n.headers;r.isFormData(u)&&delete p["Content-Type"];var m=new XMLHttpRequest;if(n.auth){var h=n.auth.username||"",f=n.auth.password?unescape(encodeURIComponent(n.auth.password)):"";p.Authorization="Basic "+btoa(h+":"+f)}var g=s(n.baseURL,n.url);if(m.open(n.method.toUpperCase(),i(g,n.params,n.paramsSerializer),!0),m.timeout=n.timeout,m.onreadystatechange=function(){if(m&&4===m.readyState&&(0!==m.status||m.responseURL&&0===m.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in m?l(m.getAllResponseHeaders()):null,a={data:n.responseType&&"text"!==n.responseType?m.response:m.responseText,status:m.status,statusText:m.statusText,headers:r,config:n,request:m};o(e,t,a),m=null}},m.onabort=function(){m&&(t(d("Request aborted",n,"ECONNABORTED",m)),m=null)},m.onerror=function(){t(d("Network Error",n,null,m)),m=null},m.ontimeout=function(){var e="timeout of "+n.timeout+"ms exceeded";n.timeoutErrorMessage&&(e=n.timeoutErrorMessage),t(d(e,n,"ECONNABORTED",m)),m=null},r.isStandardBrowserEnv()){var v=(n.withCredentials||c(g))&&n.xsrfCookieName?a.read(n.xsrfCookieName):void 0;v&&(p[n.xsrfHeaderName]=v)}if("setRequestHeader"in m&&r.forEach(p,(function(n,e){void 0===u&&"content-type"===e.toLowerCase()?delete p[e]:m.setRequestHeader(e,n)})),r.isUndefined(n.withCredentials)||(m.withCredentials=!!n.withCredentials),n.responseType)try{m.responseType=n.responseType}catch(e){if("json"!==n.responseType)throw e}"function"==typeof n.onDownloadProgress&&m.addEventListener("progress",n.onDownloadProgress),"function"==typeof n.onUploadProgress&&m.upload&&m.upload.addEventListener("progress",n.onUploadProgress),n.cancelToken&&n.cancelToken.promise.then((function(n){m&&(m.abort(),t(n),m=null)})),u||(u=null),m.send(u)}))}},function(n,e,t){"use strict";var r=t(475);n.exports=function(n,e,t,o,a){var i=new Error(n);return r(i,e,t,o,a)}},function(n,e,t){"use strict";var r=t(17);n.exports=function(n,e){e=e||{};var t={},o=["url","method","data"],a=["headers","auth","proxy","params"],i=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],s=["validateStatus"];function l(n,e){return r.isPlainObject(n)&&r.isPlainObject(e)?r.merge(n,e):r.isPlainObject(e)?r.merge({},e):r.isArray(e)?e.slice():e}function c(o){r.isUndefined(e[o])?r.isUndefined(n[o])||(t[o]=l(void 0,n[o])):t[o]=l(n[o],e[o])}r.forEach(o,(function(n){r.isUndefined(e[n])||(t[n]=l(void 0,e[n]))})),r.forEach(a,c),r.forEach(i,(function(o){r.isUndefined(e[o])?r.isUndefined(n[o])||(t[o]=l(void 0,n[o])):t[o]=l(void 0,e[o])})),r.forEach(s,(function(r){r in e?t[r]=l(n[r],e[r]):r in n&&(t[r]=l(void 0,n[r]))}));var d=o.concat(a).concat(i).concat(s),u=Object.keys(n).concat(Object.keys(e)).filter((function(n){return-1===d.indexOf(n)}));return r.forEach(u,c),t}},function(n,e,t){"use strict";function r(n){this.message=n}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,n.exports=r},function(n,e,t){},function(n,e,t){n.exports=function(){"use strict";var n="millisecond",e="second",t="minute",r="hour",o="day",a="week",i="month",s="quarter",l="year",c="date",d=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,u=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,p={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},m=function(n,e,t){var r=String(n);return!r||r.length>=e?n:""+Array(e+1-r.length).join(t)+n},h={s:m,z:function(n){var e=-n.utcOffset(),t=Math.abs(e),r=Math.floor(t/60),o=t%60;return(e<=0?"+":"-")+m(r,2,"0")+":"+m(o,2,"0")},m:function n(e,t){if(e.date()<t.date())return-n(t,e);var r=12*(t.year()-e.year())+(t.month()-e.month()),o=e.clone().add(r,i),a=t-o<0,s=e.clone().add(r+(a?-1:1),i);return+(-(r+(t-o)/(a?o-s:s-o))||0)},a:function(n){return n<0?Math.ceil(n)||0:Math.floor(n)},p:function(d){return{M:i,y:l,w:a,d:o,D:c,h:r,m:t,s:e,ms:n,Q:s}[d]||String(d||"").toLowerCase().replace(/s$/,"")},u:function(n){return void 0===n}},f="en",g={};g[f]=p;var v=function(n){return n instanceof w},b=function(n,e,t){var r;if(!n)return f;if("string"==typeof n)g[n]&&(r=n),e&&(g[n]=e,r=n);else{var o=n.name;g[o]=n,r=o}return!t&&r&&(f=r),r||!t&&f},y=function(n,e){if(v(n))return n.clone();var t="object"==typeof e?e:{};return t.date=n,t.args=arguments,new w(t)},x=h;x.l=b,x.i=v,x.w=function(n,e){return y(n,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var w=function(){function p(n){this.$L=b(n.locale,null,!0),this.parse(n)}var m=p.prototype;return m.parse=function(n){this.$d=function(n){var e=n.date,t=n.utc;if(null===e)return new Date(NaN);if(x.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(d);if(r){var o=r[2]-1||0,a=(r[7]||"0").substring(0,3);return t?new Date(Date.UTC(r[1],o,r[3]||1,r[4]||0,r[5]||0,r[6]||0,a)):new Date(r[1],o,r[3]||1,r[4]||0,r[5]||0,r[6]||0,a)}}return new Date(e)}(n),this.$x=n.x||{},this.init()},m.init=function(){var n=this.$d;this.$y=n.getFullYear(),this.$M=n.getMonth(),this.$D=n.getDate(),this.$W=n.getDay(),this.$H=n.getHours(),this.$m=n.getMinutes(),this.$s=n.getSeconds(),this.$ms=n.getMilliseconds()},m.$utils=function(){return x},m.isValid=function(){return!("Invalid Date"===this.$d.toString())},m.isSame=function(n,e){var t=y(n);return this.startOf(e)<=t&&t<=this.endOf(e)},m.isAfter=function(n,e){return y(n)<this.startOf(e)},m.isBefore=function(n,e){return this.endOf(e)<y(n)},m.$g=function(n,e,t){return x.u(n)?this[e]:this.set(t,n)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(n,s){var d=this,u=!!x.u(s)||s,p=x.p(n),m=function(n,e){var t=x.w(d.$u?Date.UTC(d.$y,e,n):new Date(d.$y,e,n),d);return u?t:t.endOf(o)},h=function(n,e){return x.w(d.toDate()[n].apply(d.toDate("s"),(u?[0,0,0,0]:[23,59,59,999]).slice(e)),d)},f=this.$W,g=this.$M,v=this.$D,b="set"+(this.$u?"UTC":"");switch(p){case l:return u?m(1,0):m(31,11);case i:return u?m(1,g):m(0,g+1);case a:var y=this.$locale().weekStart||0,w=(f<y?f+7:f)-y;return m(u?v-w:v+(6-w),g);case o:case c:return h(b+"Hours",0);case r:return h(b+"Minutes",1);case t:return h(b+"Seconds",2);case e:return h(b+"Milliseconds",3);default:return this.clone()}},m.endOf=function(n){return this.startOf(n,!1)},m.$set=function(a,s){var d,u=x.p(a),p="set"+(this.$u?"UTC":""),m=(d={},d[o]=p+"Date",d[c]=p+"Date",d[i]=p+"Month",d[l]=p+"FullYear",d[r]=p+"Hours",d[t]=p+"Minutes",d[e]=p+"Seconds",d[n]=p+"Milliseconds",d)[u],h=u===o?this.$D+(s-this.$W):s;if(u===i||u===l){var f=this.clone().set(c,1);f.$d[m](h),f.init(),this.$d=f.set(c,Math.min(this.$D,f.daysInMonth())).$d}else m&&this.$d[m](h);return this.init(),this},m.set=function(n,e){return this.clone().$set(n,e)},m.get=function(n){return this[x.p(n)]()},m.add=function(n,s){var c,d=this;n=Number(n);var u=x.p(s),p=function(e){var t=y(d);return x.w(t.date(t.date()+Math.round(e*n)),d)};if(u===i)return this.set(i,this.$M+n);if(u===l)return this.set(l,this.$y+n);if(u===o)return p(1);if(u===a)return p(7);var m=(c={},c[t]=6e4,c[r]=36e5,c[e]=1e3,c)[u]||1,h=this.$d.getTime()+n*m;return x.w(h,this)},m.subtract=function(n,e){return this.add(-1*n,e)},m.format=function(n){var e=this;if(!this.isValid())return"Invalid Date";var t=n||"YYYY-MM-DDTHH:mm:ssZ",r=x.z(this),o=this.$locale(),a=this.$H,i=this.$m,s=this.$M,l=o.weekdays,c=o.months,d=function(n,r,o,a){return n&&(n[r]||n(e,t))||o[r].substr(0,a)},p=function(n){return x.s(a%12||12,n,"0")},m=o.meridiem||function(n,e,t){var r=n<12?"AM":"PM";return t?r.toLowerCase():r},h={YY:String(this.$y).slice(-2),YYYY:this.$y,M:s+1,MM:x.s(s+1,2,"0"),MMM:d(o.monthsShort,s,c,3),MMMM:d(c,s),D:this.$D,DD:x.s(this.$D,2,"0"),d:String(this.$W),dd:d(o.weekdaysMin,this.$W,l,2),ddd:d(o.weekdaysShort,this.$W,l,3),dddd:l[this.$W],H:String(a),HH:x.s(a,2,"0"),h:p(1),hh:p(2),a:m(a,i,!0),A:m(a,i,!1),m:String(i),mm:x.s(i,2,"0"),s:String(this.$s),ss:x.s(this.$s,2,"0"),SSS:x.s(this.$ms,3,"0"),Z:r};return t.replace(u,(function(n,e){return e||h[n]||r.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(n,c,d){var u,p=x.p(c),m=y(n),h=6e4*(m.utcOffset()-this.utcOffset()),f=this-m,g=x.m(this,m);return g=(u={},u[l]=g/12,u[i]=g,u[s]=g/3,u[a]=(f-h)/6048e5,u[o]=(f-h)/864e5,u[r]=f/36e5,u[t]=f/6e4,u[e]=f/1e3,u)[p]||f,d?g:x.a(g)},m.daysInMonth=function(){return this.endOf(i).$D},m.$locale=function(){return g[this.$L]},m.locale=function(n,e){if(!n)return this.$L;var t=this.clone(),r=b(n,e,!0);return r&&(t.$L=r),t},m.clone=function(){return x.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},p}(),k=w.prototype;return y.prototype=k,[["$ms",n],["$s",e],["$m",t],["$H",r],["$W",o],["$M",i],["$y",l],["$D",c]].forEach((function(n){k[n[1]]=function(e){return this.$g(e,n[0],n[1])}})),y.extend=function(n,e){return n.$i||(n(e,w,y),n.$i=!0),y},y.locale=b,y.isDayjs=v,y.unix=function(n){return y(1e3*n)},y.en=g[f],y.Ls=g,y.p={},y}()},function(n,e,t){},function(n,e,t){},function(n,e,t){t(2)({target:"Object",stat:!0},{setPrototypeOf:t(140)})},function(n,e,t){var r=t(2),o=t(52),a=t(59),i=t(12),s=t(10),l=t(54),c=t(288),d=t(3),u=o("Reflect","construct"),p=d((function(){function n(){}return!(u((function(){}),[],n)instanceof n)})),m=!d((function(){u((function(){}))})),h=p||m;r({target:"Reflect",stat:!0,forced:h,sham:h},{construct:function(n,e){a(n),i(e);var t=arguments.length<3?n:a(arguments[2]);if(m&&!p)return u(n,e,t);if(n==t){switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3])}var r=[null];return r.push.apply(r,e),new(c.apply(n,r))}var o=t.prototype,d=l(s(o)?o:Object.prototype),h=Function.apply.call(n,d,e);return s(h)?h:d}})},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(340),o=t(345),a=t(416),i=t(424),s=t(433),l=t(434),c=a((function(n){var e=l(n);return s(e)&&(e=void 0),i(r(n,1,s,!0),o(e,2))}));n.exports=c},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,a=/^0o[0-7]+$/i,i=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),d=Object.prototype.toString,u=Math.max,p=Math.min,m=function(){return c.Date.now()};function h(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function f(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==d.call(n)}(n))return NaN;if(h(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=h(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=o.test(n);return s||a.test(n)?i(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,o,a,i,s,l,c=0,d=!1,g=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=r,a=o;return r=o=void 0,c=e,i=n.apply(a,t)}function y(n){return c=n,s=setTimeout(w,e),d?b(n):i}function x(n){var t=n-l;return void 0===l||t>=e||t<0||g&&n-c>=a}function w(){var n=m();if(x(n))return k(n);s=setTimeout(w,function(n){var t=e-(n-l);return g?p(t,a-(n-c)):t}(n))}function k(n){return s=void 0,v&&r?b(n):(r=o=void 0,i)}function j(){var n=m(),t=x(n);if(r=arguments,o=this,l=n,t){if(void 0===s)return y(l);if(g)return s=setTimeout(w,e),b(l)}return void 0===s&&(s=setTimeout(w,e)),i}return e=f(e)||0,h(t)&&(d=!!t.leading,a=(g="maxWait"in t)?u(f(t.maxWait)||0,e):a,v="trailing"in t?!!t.trailing:v),j.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=o=s=void 0},j.flush=function(){return void 0===s?i:k(m())},j}},function(n,e,t){!function(){"use strict";n.exports={polyfill:function(){var n=window,e=document;if(!("scrollBehavior"in e.documentElement.style)||!0===n.__forceSmoothScrollPolyfill__){var t,r=n.HTMLElement||n.Element,o={scroll:n.scroll||n.scrollTo,scrollBy:n.scrollBy,elementScroll:r.prototype.scroll||s,scrollIntoView:r.prototype.scrollIntoView},a=n.performance&&n.performance.now?n.performance.now.bind(n.performance):Date.now,i=(t=n.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(t)?1:0);n.scroll=n.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?h.call(n,e.body,void 0!==arguments[0].left?~~arguments[0].left:n.scrollX||n.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:n.scrollY||n.pageYOffset):o.scroll.call(n,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:n.scrollX||n.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:n.scrollY||n.pageYOffset))},n.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?o.scrollBy.call(n,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):h.call(n,e.body,~~arguments[0].left+(n.scrollX||n.pageXOffset),~~arguments[0].top+(n.scrollY||n.pageYOffset)))},r.prototype.scroll=r.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var n=arguments[0].left,e=arguments[0].top;h.call(this,this,void 0===n?this.scrollLeft:~~n,void 0===e?this.scrollTop:~~e)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},r.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},r.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var t=p(this),r=t.getBoundingClientRect(),a=this.getBoundingClientRect();t!==e.body?(h.call(this,t,t.scrollLeft+a.left-r.left,t.scrollTop+a.top-r.top),"fixed"!==n.getComputedStyle(t).position&&n.scrollBy({left:r.left,top:r.top,behavior:"smooth"})):n.scrollBy({left:a.left,top:a.top,behavior:"smooth"})}else o.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(n,e){this.scrollLeft=n,this.scrollTop=e}function l(n){if(null===n||"object"!=typeof n||void 0===n.behavior||"auto"===n.behavior||"instant"===n.behavior)return!0;if("object"==typeof n&&"smooth"===n.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+n.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(n,e){return"Y"===e?n.clientHeight+i<n.scrollHeight:"X"===e?n.clientWidth+i<n.scrollWidth:void 0}function d(e,t){var r=n.getComputedStyle(e,null)["overflow"+t];return"auto"===r||"scroll"===r}function u(n){var e=c(n,"Y")&&d(n,"Y"),t=c(n,"X")&&d(n,"X");return e||t}function p(n){for(;n!==e.body&&!1===u(n);)n=n.parentNode||n.host;return n}function m(e){var t,r,o,i,s=(a()-e.startTime)/468;i=s=s>1?1:s,t=.5*(1-Math.cos(Math.PI*i)),r=e.startX+(e.x-e.startX)*t,o=e.startY+(e.y-e.startY)*t,e.method.call(e.scrollable,r,o),r===e.x&&o===e.y||n.requestAnimationFrame(m.bind(n,e))}function h(t,r,i){var l,c,d,u,p=a();t===e.body?(l=n,c=n.scrollX||n.pageXOffset,d=n.scrollY||n.pageYOffset,u=o.scroll):(l=t,c=t.scrollLeft,d=t.scrollTop,u=s),m({scrollable:l,method:u,startTime:p,startX:c,startY:d,x:r,y:i})}}}}()},function(n,e,t){var r=t(455),o=t(460),a=t(251),i=t(48),s=t(463),l=t(464);var c={M:function(n){return n.getMonth()+1},MM:function(n){return p(n.getMonth()+1,2)},Q:function(n){return Math.ceil((n.getMonth()+1)/3)},D:function(n){return n.getDate()},DD:function(n){return p(n.getDate(),2)},DDD:function(n){return r(n)},DDDD:function(n){return p(r(n),3)},d:function(n){return n.getDay()},E:function(n){return n.getDay()||7},W:function(n){return o(n)},WW:function(n){return p(o(n),2)},YY:function(n){return p(n.getFullYear(),4).substr(2)},YYYY:function(n){return p(n.getFullYear(),4)},GG:function(n){return String(a(n)).substr(2)},GGGG:function(n){return a(n)},H:function(n){return n.getHours()},HH:function(n){return p(n.getHours(),2)},h:function(n){var e=n.getHours();return 0===e?12:e>12?e%12:e},hh:function(n){return p(c.h(n),2)},m:function(n){return n.getMinutes()},mm:function(n){return p(n.getMinutes(),2)},s:function(n){return n.getSeconds()},ss:function(n){return p(n.getSeconds(),2)},S:function(n){return Math.floor(n.getMilliseconds()/100)},SS:function(n){return p(Math.floor(n.getMilliseconds()/10),2)},SSS:function(n){return p(n.getMilliseconds(),3)},Z:function(n){return u(n.getTimezoneOffset(),":")},ZZ:function(n){return u(n.getTimezoneOffset())},X:function(n){return Math.floor(n.getTime()/1e3)},x:function(n){return n.getTime()}};function d(n){return n.match(/\[[\s\S]/)?n.replace(/^\[|]$/g,""):n.replace(/\\/g,"")}function u(n,e){e=e||"";var t=n>0?"-":"+",r=Math.abs(n),o=r%60;return t+p(Math.floor(r/60),2)+e+p(o,2)}function p(n,e){for(var t=Math.abs(n).toString();t.length<e;)t="0"+t;return t}n.exports=function(n,e,t){var r=e?String(e):"YYYY-MM-DDTHH:mm:ss.SSSZ",o=(t||{}).locale,a=l.format.formatters,u=l.format.formattingTokensRegExp;o&&o.format&&o.format.formatters&&(a=o.format.formatters,o.format.formattingTokensRegExp&&(u=o.format.formattingTokensRegExp));var p=i(n);return s(p)?function(n,e,t){var r,o,a=n.match(t),i=a.length;for(r=0;r<i;r++)o=e[a[r]]||c[a[r]],a[r]=o||d(a[r]);return function(n){for(var e="",t=0;t<i;t++)a[t]instanceof Function?e+=a[t](n,c):e+=a[t];return e}}(r,a,u)(p):"Invalid Date"}},function(n,e,t){"use strict";function r(n){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}e.log=function(){var n;return"object"===("undefined"==typeof console?"undefined":r(console))&&console.log&&(n=console).log.apply(n,arguments)},e.formatArgs=function(e){if(e[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+e[0]+(this.useColors?"%c ":" ")+"+"+n.exports.humanize(this.diff),!this.useColors)return;var t="color: "+this.color;e.splice(1,0,t,"color: inherit");var r=0,o=0;e[0].replace(/%[a-zA-Z%]/g,(function(n){"%%"!==n&&(r++,"%c"===n&&(o=r))})),e.splice(o,0,t)},e.save=function(n){try{n?e.storage.setItem("debug",n):e.storage.removeItem("debug")}catch(n){}},e.load=function(){var n;try{n=e.storage.getItem("debug")}catch(n){}!n&&"undefined"!=typeof process&&"env"in process&&(n=process.env.DEBUG);return n},e.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},e.storage=function(){try{return localStorage}catch(n){}}(),e.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],n.exports=t(488)(e),n.exports.formatters.j=function(n){try{return JSON.stringify(n)}catch(n){return"[UnexpectedJSONParseError]: "+n.message}}},function(n,e,t){"use strict";var r=t(114),o=t(141),a=t(12),i=t(22),s=t(443),l=t(143),c=t(20),d=t(115),u=t(96),p=t(3),m=[].push,h=Math.min,f=!p((function(){return!RegExp(4294967295,"y")}));r("split",2,(function(n,e,t){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(n,t){var r=String(i(this)),a=void 0===t?4294967295:t>>>0;if(0===a)return[];if(void 0===n)return[r];if(!o(n))return e.call(r,n,a);for(var s,l,c,d=[],p=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(n.sticky?"y":""),h=0,f=new RegExp(n.source,p+"g");(s=u.call(f,r))&&!((l=f.lastIndex)>h&&(d.push(r.slice(h,s.index)),s.length>1&&s.index<r.length&&m.apply(d,s.slice(1)),c=s[0].length,h=l,d.length>=a));)f.lastIndex===s.index&&f.lastIndex++;return h===r.length?!c&&f.test("")||d.push(""):d.push(r.slice(h)),d.length>a?d.slice(0,a):d}:"0".split(void 0,0).length?function(n,t){return void 0===n&&0===t?[]:e.call(this,n,t)}:e,[function(e,t){var o=i(this),a=null==e?void 0:e[n];return void 0!==a?a.call(e,o,t):r.call(String(o),e,t)},function(n,o){var i=t(r,n,this,o,r!==e);if(i.done)return i.value;var u=a(n),p=String(this),m=s(u,RegExp),g=u.unicode,v=(u.ignoreCase?"i":"")+(u.multiline?"m":"")+(u.unicode?"u":"")+(f?"y":"g"),b=new m(f?u:"^(?:"+u.source+")",v),y=void 0===o?4294967295:o>>>0;if(0===y)return[];if(0===p.length)return null===d(b,p)?[p]:[];for(var x=0,w=0,k=[];w<p.length;){b.lastIndex=f?w:0;var j,_=d(b,f?p:p.slice(w));if(null===_||(j=h(c(b.lastIndex+(f?0:w)),p.length))===x)w=l(p,w,g);else{if(k.push(p.slice(x,w)),k.length===y)return k;for(var T=1;T<=_.length-1;T++)if(k.push(_[T]),k.length===y)return k;w=x=j}}return k.push(p.slice(x)),k}]}),!f)},function(n,e,t){var r=t(2),o=t(449);r({global:!0,forced:parseInt!=o},{parseInt:o})},function(n,e,t){var r=t(166),o=t(77),a=t(6)("iterator");n.exports=function(n){if(null!=n)return n[a]||n["@@iterator"]||o[r(n)]}},function(n,e,t){"use strict";var r=t(114),o=t(12),a=t(20),i=t(22),s=t(143),l=t(115);r("match",1,(function(n,e,t){return[function(e){var t=i(this),r=null==e?void 0:e[n];return void 0!==r?r.call(e,t):new RegExp(e)[n](String(t))},function(n){var r=t(e,n,this);if(r.done)return r.value;var i=o(n),c=String(this);if(!i.global)return l(i,c);var d=i.unicode;i.lastIndex=0;for(var u,p=[],m=0;null!==(u=l(i,c));){var h=String(u[0]);p[m]=h,""===h&&(i.lastIndex=s(c,a(i.lastIndex),d)),m++}return 0===m?null:p}]}))},function(n,e,t){var r=t(2),o=t(3),a=t(24),i=t(43).f,s=t(8),l=o((function(){i(1)}));r({target:"Object",stat:!0,forced:!s||l,sham:!s},{getOwnPropertyDescriptor:function(n,e){return i(a(n),e)}})},function(n,e,t){"use strict";var r=t(209).IteratorPrototype,o=t(54),a=t(69),i=t(109),s=t(77),l=function(){return this};n.exports=function(n,e,t){var c=e+" Iterator";return n.prototype=o(r,{next:a(1,t)}),i(n,c,!1,!0),s[c]=l,n}},function(n,e,t){"use strict";var r=t(24),o=t(112),a=t(77),i=t(68),s=t(208),l=i.set,c=i.getterFor("Array Iterator");n.exports=s(Array,"Array",(function(n,e){l(this,{type:"Array Iterator",target:r(n),index:0,kind:e})}),(function(){var n=c(this),e=n.target,t=n.kind,r=n.index++;return!e||r>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:r,done:!1}:"values"==t?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values"),a.Arguments=a.Array,o("keys"),o("values"),o("entries")},function(n,e,t){"use strict";var r=t(2),o=t(133).includes,a=t(112);r({target:"Array",proto:!0,forced:!t(27)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}}),a("includes")},function(n,e,t){"use strict";var r=t(2),o=t(216),a=t(22);r({target:"String",proto:!0,forced:!t(217)("includes")},{includes:function(n){return!!~String(a(this)).indexOf(o(n),arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(162),o=t(21),a=t(336),i=t(338),s=t(20),l=t(87),c=t(275);n.exports=function(n){var e,t,d,u,p,m,h=o(n),f="function"==typeof this?this:Array,g=arguments.length,v=g>1?arguments[1]:void 0,b=void 0!==v,y=c(h),x=0;if(b&&(v=r(v,g>2?arguments[2]:void 0,2)),null==y||f==Array&&i(y))for(t=new f(e=s(h.length));e>x;x++)m=b?v(h[x],x):h[x],l(t,x,m);else for(p=(u=y.call(h)).next,t=new f;!(d=p.call(u)).done;x++)m=b?a(u,v,[d.value,x],!0):d.value,l(t,x,m);return t.length=x,t}},function(n,e,t){var r=t(2),o=t(439);r({target:"Date",proto:!0,forced:Date.prototype.toISOString!==o},{toISOString:o})},function(n,e,t){"use strict";var r=t(2),o=t(3),a=t(21),i=t(58);r({target:"Date",proto:!0,forced:o((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})}))},{toJSON:function(n){var e=a(this),t=i(e);return"number"!=typeof t||isFinite(t)?e.toISOString():null}})},function(n,e,t){"use strict";t(2)({target:"URL",proto:!0,enumerable:!0},{toJSON:function(){return URL.prototype.toString.call(this)}})},function(n,e,t){var r=t(8),o=t(7),a=t(135),i=t(244),s=t(14).f,l=t(76).f,c=t(141),d=t(142),u=t(219),p=t(28),m=t(3),h=t(68).set,f=t(442),g=t(6)("match"),v=o.RegExp,b=v.prototype,y=/a/g,x=/a/g,w=new v(y)!==y,k=u.UNSUPPORTED_Y;if(r&&a("RegExp",!w||k||m((function(){return x[g]=!1,v(y)!=y||v(x)==x||"/a/i"!=v(y,"i")})))){for(var j=function(n,e){var t,r=this instanceof j,o=c(n),a=void 0===e;if(!r&&o&&n.constructor===j&&a)return n;w?o&&!a&&(n=n.source):n instanceof j&&(a&&(e=d.call(n)),n=n.source),k&&(t=!!e&&e.indexOf("y")>-1)&&(e=e.replace(/y/g,""));var s=i(w?new v(n,e):v(n,e),r?this:b,j);return k&&t&&h(s,{sticky:t}),s},_=function(n){n in j||s(j,n,{configurable:!0,get:function(){return v[n]},set:function(e){v[n]=e}})},T=l(v),S=0;T.length>S;)_(T[S++]);b.constructor=j,j.prototype=b,p(o,"RegExp",j)}f("RegExp")},function(n,e,t){t(2)({target:"Date",stat:!0},{now:function(){return(new Date).getTime()}})},function(n,e,t){"use strict";var r=t(59),o=t(10),a=[].slice,i={},s=function(n,e,t){if(!(e in i)){for(var r=[],o=0;o<e;o++)r[o]="a["+o+"]";i[e]=Function("C,a","return new C("+r.join(",")+")")}return i[e](n,t)};n.exports=Function.bind||function(n){var e=r(this),t=a.call(arguments,1),i=function(){var r=t.concat(a.call(arguments));return this instanceof i?s(e,r.length,r):e.apply(n,r)};return o(e.prototype)&&(i.prototype=e.prototype),i}},function(n,e,t){n.exports=t(495)},function(n,e,t){"use strict";var r=t(91),o=t(291),a=t(73),i=t(124),s=t(298),l=i.set,c=i.getterFor("Array Iterator");n.exports=s(Array,"Array",(function(n,e){l(this,{type:"Array Iterator",target:r(n),index:0,kind:e})}),(function(){var n=c(this),e=n.target,t=n.kind,r=n.index++;return!e||r>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:r,done:!1}:"values"==t?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values"),a.Arguments=a.Array,o("keys"),o("values"),o("entries")},function(n,e,t){var r=t(19),o=t(180),a=t(56),i=r("unscopables"),s=Array.prototype;null==s[i]&&a.f(s,i,{configurable:!0,value:o(null)}),n.exports=function(n){s[i][n]=!0}},function(n,e,t){var r=t(179);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var r=t(41),o=t(56),a=t(31),i=t(181);n.exports=r?Object.defineProperties:function(n,e){a(n);for(var t,r=i(e),s=r.length,l=0;s>l;)o.f(n,t=r[l++],e[t]);return n}},function(n,e,t){var r=t(91),o=t(183),a=t(295),i=function(n){return function(e,t,i){var s,l=r(e),c=o(l.length),d=a(i,c);if(n&&t!=t){for(;c>d;)if((s=l[d++])!=s)return!0}else for(;c>d;d++)if((n||d in l)&&l[d]===t)return n||d||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},function(n,e,t){var r=t(184),o=Math.max,a=Math.min;n.exports=function(n,e){var t=r(n);return t<0?o(t+e,0):a(t,e)}},function(n,e,t){var r=t(9);n.exports=r},function(n,e,t){var r=t(9),o=t(125),a=r.WeakMap;n.exports="function"==typeof a&&/native code/.test(o(a))},function(n,e,t){"use strict";var r=t(92),o=t(302),a=t(190),i=t(304),s=t(127),l=t(55),c=t(74),d=t(19),u=t(72),p=t(73),m=t(189),h=m.IteratorPrototype,f=m.BUGGY_SAFARI_ITERATORS,g=d("iterator"),v=function(){return this};n.exports=function(n,e,t,d,m,b,y){o(t,e,d);var x,w,k,j=function(n){if(n===m&&z)return z;if(!f&&n in S)return S[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},_=e+" Iterator",T=!1,S=n.prototype,C=S[g]||S["@@iterator"]||m&&S[m],z=!f&&C||j(m),$="Array"==e&&S.entries||C;if($&&(x=a($.call(new n)),h!==Object.prototype&&x.next&&(u||a(x)===h||(i?i(x,h):"function"!=typeof x[g]&&l(x,g,v)),s(x,_,!0,!0),u&&(p[_]=v))),"values"==m&&C&&"values"!==C.name&&(T=!0,z=function(){return C.call(this)}),u&&!y||S[g]===z||l(S,g,z),p[e]=z,m)if(w={values:j("values"),keys:b?z:j("keys"),entries:j("entries")},y)for(k in w)(f||T||!(k in S))&&c(S,k,w[k]);else r({target:e,proto:!0,forced:f||T},w);return w}},function(n,e,t){var r=t(32),o=t(300),a=t(126),i=t(56);n.exports=function(n,e){for(var t=o(e),s=i.f,l=a.f,c=0;c<t.length;c++){var d=t[c];r(n,d)||s(n,d,l(e,d))}}},function(n,e,t){var r=t(57),o=t(301),a=t(187),i=t(31);n.exports=r("Reflect","ownKeys")||function(n){var e=o.f(i(n)),t=a.f;return t?e.concat(t(n)):e}},function(n,e,t){var r=t(182),o=t(122).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,o)}},function(n,e,t){"use strict";var r=t(189).IteratorPrototype,o=t(180),a=t(120),i=t(127),s=t(73),l=function(){return this};n.exports=function(n,e,t){var c=e+" Iterator";return n.prototype=o(r,{next:a(1,t)}),i(n,c,!1,!0),s[c]=l,n}},function(n,e,t){var r=t(30);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){var r=t(31),o=t(305);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(t,[]),e=t instanceof Array}catch(n){}return function(t,a){return r(t),o(a),e?n.call(t,a):t.__proto__=a,t}}():void 0)},function(n,e,t){var r=t(42);n.exports=function(n){if(!r(n)&&null!==n)throw TypeError("Can't set "+String(n)+" as a prototype");return n}},function(n,e,t){"use strict";var r,o,a,i,s=t(92),l=t(72),c=t(9),d=t(57),u=t(192),p=t(74),m=t(307),h=t(127),f=t(308),g=t(42),v=t(93),b=t(309),y=t(125),x=t(310),w=t(316),k=t(194),j=t(195).set,_=t(317),T=t(197),S=t(319),C=t(198),z=t(320),$=t(124),I=t(188),O=t(19),E=t(129),A=t(321),P=O("species"),N="Promise",M=$.get,R=$.set,L=$.getterFor(N),D=u,q=c.TypeError,F=c.document,U=c.process,B=d("fetch"),H=C.f,V=H,W=!!(F&&F.createEvent&&c.dispatchEvent),X="function"==typeof PromiseRejectionEvent,G=I(N,(function(){if(!(y(D)!==String(D))){if(66===A)return!0;if(!E&&!X)return!0}if(l&&!D.prototype.finally)return!0;if(A>=51&&/native code/.test(D))return!1;var n=D.resolve(1),e=function(n){n((function(){}),(function(){}))};return(n.constructor={})[P]=e,!(n.then((function(){}))instanceof e)})),J=G||!w((function(n){D.all(n).catch((function(){}))})),Y=function(n){var e;return!(!g(n)||"function"!=typeof(e=n.then))&&e},K=function(n,e){if(!n.notified){n.notified=!0;var t=n.reactions;_((function(){for(var r=n.value,o=1==n.state,a=0;t.length>a;){var i,s,l,c=t[a++],d=o?c.ok:c.fail,u=c.resolve,p=c.reject,m=c.domain;try{d?(o||(2===n.rejection&&en(n),n.rejection=1),!0===d?i=r:(m&&m.enter(),i=d(r),m&&(m.exit(),l=!0)),i===c.promise?p(q("Promise-chain cycle")):(s=Y(i))?s.call(i,u,p):u(i)):p(r)}catch(n){m&&!l&&m.exit(),p(n)}}n.reactions=[],n.notified=!1,e&&!n.rejection&&Z(n)}))}},Q=function(n,e,t){var r,o;W?((r=F.createEvent("Event")).promise=e,r.reason=t,r.initEvent(n,!1,!0),c.dispatchEvent(r)):r={promise:e,reason:t},!X&&(o=c["on"+n])?o(r):"unhandledrejection"===n&&S("Unhandled promise rejection",t)},Z=function(n){j.call(c,(function(){var e,t=n.facade,r=n.value;if(nn(n)&&(e=z((function(){E?U.emit("unhandledRejection",r,t):Q("unhandledrejection",t,r)})),n.rejection=E||nn(n)?2:1,e.error))throw e.value}))},nn=function(n){return 1!==n.rejection&&!n.parent},en=function(n){j.call(c,(function(){var e=n.facade;E?U.emit("rejectionHandled",e):Q("rejectionhandled",e,n.value)}))},tn=function(n,e,t){return function(r){n(e,r,t)}},rn=function(n,e,t){n.done||(n.done=!0,t&&(n=t),n.value=e,n.state=2,K(n,!0))},on=function(n,e,t){if(!n.done){n.done=!0,t&&(n=t);try{if(n.facade===e)throw q("Promise can't be resolved itself");var r=Y(e);r?_((function(){var t={done:!1};try{r.call(e,tn(on,t,n),tn(rn,t,n))}catch(e){rn(t,e,n)}})):(n.value=e,n.state=1,K(n,!1))}catch(e){rn({done:!1},e,n)}}};G&&(D=function(n){b(this,D,N),v(n),r.call(this);var e=M(this);try{n(tn(on,e),tn(rn,e))}catch(n){rn(e,n)}},(r=function(n){R(this,{type:N,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=m(D.prototype,{then:function(n,e){var t=L(this),r=H(k(this,D));return r.ok="function"!=typeof n||n,r.fail="function"==typeof e&&e,r.domain=E?U.domain:void 0,t.parent=!0,t.reactions.push(r),0!=t.state&&K(t,!1),r.promise},catch:function(n){return this.then(void 0,n)}}),o=function(){var n=new r,e=M(n);this.promise=n,this.resolve=tn(on,e),this.reject=tn(rn,e)},C.f=H=function(n){return n===D||n===a?new o(n):V(n)},l||"function"!=typeof u||(i=u.prototype.then,p(u.prototype,"then",(function(n,e){var t=this;return new D((function(n,e){i.call(t,n,e)})).then(n,e)}),{unsafe:!0}),"function"==typeof B&&s({global:!0,enumerable:!0,forced:!0},{fetch:function(n){return T(D,B.apply(c,arguments))}}))),s({global:!0,wrap:!0,forced:G},{Promise:D}),h(D,N,!1,!0),f(N),a=d(N),s({target:N,stat:!0,forced:G},{reject:function(n){var e=H(this);return e.reject.call(void 0,n),e.promise}}),s({target:N,stat:!0,forced:l||G},{resolve:function(n){return T(l&&this===a?D:this,n)}}),s({target:N,stat:!0,forced:J},{all:function(n){var e=this,t=H(e),r=t.resolve,o=t.reject,a=z((function(){var t=v(e.resolve),a=[],i=0,s=1;x(n,(function(n){var l=i++,c=!1;a.push(void 0),s++,t.call(e,n).then((function(n){c||(c=!0,a[l]=n,--s||r(a))}),o)})),--s||r(a)}));return a.error&&o(a.value),t.promise},race:function(n){var e=this,t=H(e),r=t.reject,o=z((function(){var o=v(e.resolve);x(n,(function(n){o.call(e,n).then(t.resolve,r)}))}));return o.error&&r(o.value),t.promise}})},function(n,e,t){var r=t(74);n.exports=function(n,e,t){for(var o in e)r(n,o,e[o],t);return n}},function(n,e,t){"use strict";var r=t(57),o=t(56),a=t(19),i=t(41),s=a("species");n.exports=function(n){var e=r(n),t=o.f;i&&e&&!e[s]&&t(e,s,{configurable:!0,get:function(){return this}})}},function(n,e){n.exports=function(n,e,t){if(!(n instanceof e))throw TypeError("Incorrect "+(t?t+" ":"")+"invocation");return n}},function(n,e,t){var r=t(31),o=t(311),a=t(183),i=t(193),s=t(312),l=t(315),c=function(n,e){this.stopped=n,this.result=e};n.exports=function(n,e,t){var d,u,p,m,h,f,g,v=t&&t.that,b=!(!t||!t.AS_ENTRIES),y=!(!t||!t.IS_ITERATOR),x=!(!t||!t.INTERRUPTED),w=i(e,v,1+b+x),k=function(n){return d&&l(d),new c(!0,n)},j=function(n){return b?(r(n),x?w(n[0],n[1],k):w(n[0],n[1])):x?w(n,k):w(n)};if(y)d=n;else{if("function"!=typeof(u=s(n)))throw TypeError("Target is not iterable");if(o(u)){for(p=0,m=a(n.length);m>p;p++)if((h=j(n[p]))&&h instanceof c)return h;return new c(!1)}d=u.call(n)}for(f=d.next;!(g=f.call(d)).done;){try{h=j(g.value)}catch(n){throw l(d),n}if("object"==typeof h&&h&&h instanceof c)return h}return new c(!1)}},function(n,e,t){var r=t(19),o=t(73),a=r("iterator"),i=Array.prototype;n.exports=function(n){return void 0!==n&&(o.Array===n||i[a]===n)}},function(n,e,t){var r=t(313),o=t(73),a=t(19)("iterator");n.exports=function(n){if(null!=n)return n[a]||n["@@iterator"]||o[r(n)]}},function(n,e,t){var r=t(314),o=t(116),a=t(19)("toStringTag"),i="Arguments"==o(function(){return arguments}());n.exports=r?o:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=Object(n),a))?t:i?o(e):"Object"==(r=o(e))&&"function"==typeof e.callee?"Arguments":r}},function(n,e,t){var r={};r[t(19)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){var r=t(31);n.exports=function(n){var e=n.return;if(void 0!==e)return r(e.call(n)).value}},function(n,e,t){var r=t(19)("iterator"),o=!1;try{var a=0,i={next:function(){return{done:!!a++}},return:function(){o=!0}};i[r]=function(){return this},Array.from(i,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!o)return!1;var t=!1;try{var a={};a[r]=function(){return{next:function(){return{done:t=!0}}}},n(a)}catch(n){}return t}},function(n,e,t){var r,o,a,i,s,l,c,d,u=t(9),p=t(126).f,m=t(195).set,h=t(196),f=t(318),g=t(129),v=u.MutationObserver||u.WebKitMutationObserver,b=u.document,y=u.process,x=u.Promise,w=p(u,"queueMicrotask"),k=w&&w.value;k||(r=function(){var n,e;for(g&&(n=y.domain)&&n.exit();o;){e=o.fn,o=o.next;try{e()}catch(n){throw o?i():a=void 0,n}}a=void 0,n&&n.enter()},h||g||f||!v||!b?x&&x.resolve?(c=x.resolve(void 0),d=c.then,i=function(){d.call(c,r)}):i=g?function(){y.nextTick(r)}:function(){m.call(u,r)}:(s=!0,l=b.createTextNode(""),new v(r).observe(l,{characterData:!0}),i=function(){l.data=s=!s})),n.exports=k||function(n){var e={fn:n,next:void 0};a&&(a.next=e),o||(o=e,i()),a=e}},function(n,e,t){var r=t(128);n.exports=/web0s(?!.*chrome)/i.test(r)},function(n,e,t){var r=t(9);n.exports=function(n,e){var t=r.console;t&&t.error&&(1===arguments.length?t.error(n):t.error(n,e))}},function(n,e){n.exports=function(n){try{return{error:!1,value:n()}}catch(n){return{error:!0,value:n}}}},function(n,e,t){var r,o,a=t(9),i=t(128),s=a.process,l=s&&s.versions,c=l&&l.v8;c?o=(r=c.split("."))[0]+r[1]:i&&(!(r=i.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=i.match(/Chrome\/(\d+)/))&&(o=r[1]),n.exports=o&&+o},function(n,e,t){var r=t(92),o=t(323);r({target:"Object",stat:!0,forced:Object.assign!==o},{assign:o})},function(n,e,t){"use strict";var r=t(41),o=t(30),a=t(181),i=t(187),s=t(186),l=t(191),c=t(173),d=Object.assign,u=Object.defineProperty;n.exports=!d||o((function(){if(r&&1!==d({b:1},d(u({},"a",{enumerable:!0,get:function(){u(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},e={},t=Symbol();return n[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(n){e[n]=n})),7!=d({},n)[t]||"abcdefghijklmnopqrst"!=a(d({},e)).join("")}))?function(n,e){for(var t=l(n),o=arguments.length,d=1,u=i.f,p=s.f;o>d;)for(var m,h=c(arguments[d++]),f=u?a(h).concat(u(h)):a(h),g=f.length,v=0;g>v;)m=f[v++],r&&!p.call(h,m)||(t[m]=h[m]);return t}:d},function(n,e,t){"use strict";var r=t(92),o=t(72),a=t(192),i=t(30),s=t(57),l=t(194),c=t(197),d=t(74);r({target:"Promise",proto:!0,real:!0,forced:!!a&&i((function(){a.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(n){var e=l(this,s("Promise")),t="function"==typeof n;return this.then(t?function(t){return c(e,n()).then((function(){return t}))}:n,t?function(t){return c(e,n()).then((function(){throw t}))}:n)}}),o||"function"!=typeof a||a.prototype.finally||d(a.prototype,"finally",s("Promise").prototype.finally)},function(n,e,t){var r=t(7),o=t(201),a=r.WeakMap;n.exports="function"==typeof a&&/native code/.test(o(a))},function(n,e,t){"use strict";var r=t(138),o=t(166);n.exports=r?{}.toString:function(){return"[object "+o(this)+"]"}},function(n,e,t){var r=t(52);n.exports=r("document","documentElement")},function(n,e,t){var r=t(10);n.exports=function(n){if(!r(n)&&null!==n)throw TypeError("Can't set "+String(n)+" as a prototype");return n}},function(n,e,t){var r=t(59),o=t(21),a=t(89),i=t(20),s=function(n){return function(e,t,s,l){r(t);var c=o(e),d=a(c),u=i(c.length),p=n?u-1:0,m=n?-1:1;if(s<2)for(;;){if(p in d){l=d[p],p+=m;break}if(p+=m,n?p<0:u<=p)throw TypeError("Reduce of empty array with no initial value")}for(;n?p>=0:u>p;p+=m)p in d&&(l=t(l,d[p],p,c));return l}};n.exports={left:s(!1),right:s(!0)}},function(n,e,t){var r=t(44),o=t(7);n.exports="process"==r(o.process)},function(n,e,t){var r=t(2),o=t(213),a=t(3),i=t(10),s=t(332).onFreeze,l=Object.freeze;r({target:"Object",stat:!0,forced:a((function(){l(1)})),sham:!o},{freeze:function(n){return l&&i(n)?l(s(n)):n}})},function(n,e,t){var r=t(75),o=t(10),a=t(13),i=t(14).f,s=t(95),l=t(213),c=s("meta"),d=0,u=Object.isExtensible||function(){return!0},p=function(n){i(n,c,{value:{objectID:"O"+ ++d,weakData:{}}})},m=n.exports={REQUIRED:!1,fastKey:function(n,e){if(!o(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!a(n,c)){if(!u(n))return"F";if(!e)return"E";p(n)}return n[c].objectID},getWeakData:function(n,e){if(!a(n,c)){if(!u(n))return!0;if(!e)return!1;p(n)}return n[c].weakData},onFreeze:function(n){return l&&m.REQUIRED&&u(n)&&!a(n,c)&&p(n),n}};r[c]=!0},function(n,e,t){"use strict";var r,o=t(2),a=t(43).f,i=t(20),s=t(216),l=t(22),c=t(217),d=t(70),u="".startsWith,p=Math.min,m=c("startsWith");o({target:"String",proto:!0,forced:!!(d||m||(r=a(String.prototype,"startsWith"),!r||r.writable))&&!m},{startsWith:function(n){var e=String(l(this));s(n);var t=i(p(arguments.length>1?arguments[1]:void 0,e.length)),r=String(n);return u?u.call(e,r,t):e.slice(t,t+r.length)===r}})},function(n,e,t){var r=t(21),o=Math.floor,a="".replace,i=/\$([$&'`]|\d\d?|<[^>]*>)/g,s=/\$([$&'`]|\d\d?)/g;n.exports=function(n,e,t,l,c,d){var u=t+n.length,p=l.length,m=s;return void 0!==c&&(c=r(c),m=i),a.call(d,m,(function(r,a){var i;switch(a.charAt(0)){case"$":return"$";case"&":return n;case"`":return e.slice(0,t);case"'":return e.slice(u);case"<":i=c[a.slice(1,-1)];break;default:var s=+a;if(0===s)return r;if(s>p){var d=o(s/10);return 0===d?r:d<=p?void 0===l[d-1]?a.charAt(1):l[d-1]+a.charAt(1):r}i=l[s-1]}return void 0===i?"":i}))}},function(n,e,t){var r=t(24),o=t(76).f,a={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return i&&"[object Window]"==a.call(n)?function(n){try{return o(n)}catch(n){return i.slice()}}(n):o(r(n))}},function(n,e,t){var r=t(12),o=t(337);n.exports=function(n,e,t,a){try{return a?e(r(t)[0],t[1]):e(t)}catch(e){throw o(n),e}}},function(n,e,t){var r=t(12);n.exports=function(n){var e=n.return;if(void 0!==e)return r(e.call(n)).value}},function(n,e,t){var r=t(6),o=t(77),a=r("iterator"),i=Array.prototype;n.exports=function(n){return void 0!==n&&(o.Array===n||i[a]===n)}},function(n,e,t){var r=t(6)("iterator"),o=!1;try{var a=0,i={next:function(){return{done:!!a++}},return:function(){o=!0}};i[r]=function(){return this},Array.from(i,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!o)return!1;var t=!1;try{var a={};a[r]=function(){return{next:function(){return{done:t=!0}}}},n(a)}catch(n){}return t}},function(n,e,t){var r=t(223),o=t(341);n.exports=function n(e,t,a,i,s){var l=-1,c=e.length;for(a||(a=o),s||(s=[]);++l<c;){var d=e[l];t>0&&a(d)?t>1?n(d,t-1,a,i,s):r(s,d):i||(s[s.length]=d)}return s}},function(n,e,t){var r=t(79),o=t(145),a=t(34),i=r?r.isConcatSpreadable:void 0;n.exports=function(n){return a(n)||o(n)||!!(i&&n&&n[i])}},function(n,e,t){var r=t(80),o=t(61);n.exports=function(n){return o(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(79),o=Object.prototype,a=o.hasOwnProperty,i=o.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var e=a.call(n,s),t=n[s];try{n[s]=void 0;var r=!0}catch(n){}var o=i.call(n);return r&&(e?n[s]=t:delete n[s]),o}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(346),o=t(402),a=t(153),i=t(34),s=t(413);n.exports=function(n){return"function"==typeof n?n:null==n?a:"object"==typeof n?i(n)?o(n[0],n[1]):r(n):s(n)}},function(n,e,t){var r=t(347),o=t(401),a=t(240);n.exports=function(n){var e=o(n);return 1==e.length&&e[0][2]?a(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(225),o=t(229);n.exports=function(n,e,t,a){var i=t.length,s=i,l=!a;if(null==n)return!s;for(n=Object(n);i--;){var c=t[i];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++i<s;){var d=(c=t[i])[0],u=n[d],p=c[1];if(l&&c[2]){if(void 0===u&&!(d in n))return!1}else{var m=new r;if(a)var h=a(u,p,d,n,e,m);if(!(void 0===h?o(p,u,3,a,m):h))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(100),o=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():o.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(100);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(100);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(100);n.exports=function(n,e){var t=this.__data__,o=r(t,n);return o<0?(++this.size,t.push([n,e])):t[o][1]=e,this}},function(n,e,t){var r=t(99);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(99),o=t(146),a=t(148);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var i=t.__data__;if(!o||i.length<199)return i.push([n,e]),this.size=++t.size,this;t=this.__data__=new a(i)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(227),o=t(359),a=t(147),i=t(228),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,d=l.toString,u=c.hasOwnProperty,p=RegExp("^"+d.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!a(n)||o(n))&&(r(n)?p:s).test(i(n))}},function(n,e,t){var r,o=t(360),a=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!a&&a in n}},function(n,e,t){var r=t(33)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(363),o=t(99),a=t(146);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(a||o),string:new r}}},function(n,e,t){var r=t(364),o=t(365),a=t(366),i=t(367),s=t(368);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(101);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(101),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return o.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(101),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:o.call(e,n)}},function(n,e,t){var r=t(101);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(102);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(102);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(102);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(102);n.exports=function(n,e){var t=r(this,n),o=t.size;return t.set(n,e),this.size+=t.size==o?0:1,this}},function(n,e,t){var r=t(225),o=t(230),a=t(378),i=t(381),s=t(397),l=t(34),c=t(234),d=t(236),u="[object Object]",p=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,m,h,f){var g=l(n),v=l(e),b=g?"[object Array]":s(n),y=v?"[object Array]":s(e),x=(b="[object Arguments]"==b?u:b)==u,w=(y="[object Arguments]"==y?u:y)==u,k=b==y;if(k&&c(n)){if(!c(e))return!1;g=!0,x=!1}if(k&&!x)return f||(f=new r),g||d(n)?o(n,e,t,m,h,f):a(n,e,b,t,m,h,f);if(!(1&t)){var j=x&&p.call(n,"__wrapped__"),_=w&&p.call(e,"__wrapped__");if(j||_){var T=j?n.value():n,S=_?e.value():e;return f||(f=new r),h(T,S,t,m,f)}}return!!k&&(f||(f=new r),i(n,e,t,m,h,f))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(79),o=t(379),a=t(226),i=t(230),s=t(380),l=t(149),c=r?r.prototype:void 0,d=c?c.valueOf:void 0;n.exports=function(n,e,t,r,c,u,p){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!u(new o(n),new o(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var m=s;case"[object Set]":var h=1&r;if(m||(m=l),n.size!=e.size&&!h)return!1;var f=p.get(n);if(f)return f==e;r|=2,p.set(n,e);var g=i(m(n),m(e),r,c,u,p);return p.delete(n),g;case"[object Symbol]":if(d)return d.call(n)==d.call(e)}return!1}},function(n,e,t){var r=t(33).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(382),o=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,a,i,s){var l=1&t,c=r(n),d=c.length;if(d!=r(e).length&&!l)return!1;for(var u=d;u--;){var p=c[u];if(!(l?p in e:o.call(e,p)))return!1}var m=s.get(n),h=s.get(e);if(m&&h)return m==e&&h==n;var f=!0;s.set(n,e),s.set(e,n);for(var g=l;++u<d;){var v=n[p=c[u]],b=e[p];if(a)var y=l?a(b,v,p,e,n,s):a(v,b,p,n,e,s);if(!(void 0===y?v===b||i(v,b,t,a,s):y)){f=!1;break}g||(g="constructor"==p)}if(f&&!g){var x=n.constructor,w=e.constructor;x==w||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof w&&w instanceof w||(f=!1)}return s.delete(n),s.delete(e),f}},function(n,e,t){var r=t(383),o=t(384),a=t(233);n.exports=function(n){return r(n,a,o)}},function(n,e,t){var r=t(223),o=t(34);n.exports=function(n,e,t){var a=e(n);return o(n)?a:r(a,t(n))}},function(n,e,t){var r=t(385),o=t(386),a=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,s=i?function(n){return null==n?[]:(n=Object(n),r(i(n),(function(e){return a.call(n,e)})))}:o;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=0,a=[];++t<r;){var i=n[t];e(i,t,n)&&(a[o++]=i)}return a}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(388),o=t(145),a=t(34),i=t(234),s=t(235),l=t(236),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=a(n),d=!t&&o(n),u=!t&&!d&&i(n),p=!t&&!d&&!u&&l(n),m=t||d||u||p,h=m?r(n.length,String):[],f=h.length;for(var g in n)!e&&!c.call(n,g)||m&&("length"==g||u&&("offset"==g||"parent"==g)||p&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,f))||h.push(g);return h}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(80),o=t(150),a=t(61),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,n.exports=function(n){return a(n)&&o(n.length)&&!!i[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(224),o=e&&!e.nodeType&&e,a=o&&"object"==typeof n&&n&&!n.nodeType&&n,i=a&&a.exports===o&&r.process,s=function(){try{var n=a&&a.require&&a.require("util").types;return n||i&&i.binding&&i.binding("util")}catch(n){}}();n.exports=s}).call(this,t(169)(n))},function(n,e,t){var r=t(394),o=t(395),a=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return o(n);var e=[];for(var t in Object(n))a.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(396)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(398),o=t(146),a=t(399),i=t(238),s=t(400),l=t(80),c=t(228),d=c(r),u=c(o),p=c(a),m=c(i),h=c(s),f=l;(r&&"[object DataView]"!=f(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=f(new o)||a&&"[object Promise]"!=f(a.resolve())||i&&"[object Set]"!=f(new i)||s&&"[object WeakMap]"!=f(new s))&&(f=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,r=t?c(t):"";if(r)switch(r){case d:return"[object DataView]";case u:return"[object Map]";case p:return"[object Promise]";case m:return"[object Set]";case h:return"[object WeakMap]"}return e}),n.exports=f},function(n,e,t){var r=t(47)(t(33),"DataView");n.exports=r},function(n,e,t){var r=t(47)(t(33),"Promise");n.exports=r},function(n,e,t){var r=t(47)(t(33),"WeakMap");n.exports=r},function(n,e,t){var r=t(239),o=t(233);n.exports=function(n){for(var e=o(n),t=e.length;t--;){var a=e[t],i=n[a];e[t]=[a,i,r(i)]}return e}},function(n,e,t){var r=t(229),o=t(403),a=t(410),i=t(151),s=t(239),l=t(240),c=t(103);n.exports=function(n,e){return i(n)&&s(e)?l(c(n),e):function(t){var i=o(t,n);return void 0===i&&i===e?a(t,n):r(e,i,3)}}},function(n,e,t){var r=t(241);n.exports=function(n,e,t){var o=null==n?void 0:r(n,e);return void 0===o?t:o}},function(n,e,t){var r=t(405),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,i=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(o,(function(n,t,r,o){e.push(r?o.replace(a,"$1"):t||n)})),e}));n.exports=i},function(n,e,t){var r=t(406);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(148);function o(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,o=e?e.apply(this,r):r[0],a=t.cache;if(a.has(o))return a.get(o);var i=n.apply(this,r);return t.cache=a.set(o,i)||a,i};return t.cache=new(o.Cache||r),t}o.Cache=r,n.exports=o},function(n,e,t){var r=t(408);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(79),o=t(409),a=t(34),i=t(152),s=r?r.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(a(e))return o(e,n)+"";if(i(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=Array(r);++t<r;)o[t]=e(n[t],t,n);return o}},function(n,e,t){var r=t(411),o=t(412);n.exports=function(n,e){return null!=n&&o(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(242),o=t(145),a=t(34),i=t(235),s=t(150),l=t(103);n.exports=function(n,e,t){for(var c=-1,d=(e=r(e,n)).length,u=!1;++c<d;){var p=l(e[c]);if(!(u=null!=n&&t(n,p)))break;n=n[p]}return u||++c!=d?u:!!(d=null==n?0:n.length)&&s(d)&&i(p,d)&&(a(n)||o(n))}},function(n,e,t){var r=t(414),o=t(415),a=t(151),i=t(103);n.exports=function(n){return a(n)?r(i(n)):o(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(241);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(153),o=t(417),a=t(419);n.exports=function(n,e){return a(o(n,e,r),n+"")}},function(n,e,t){var r=t(418),o=Math.max;n.exports=function(n,e,t){return e=o(void 0===e?n.length-1:e,0),function(){for(var a=arguments,i=-1,s=o(a.length-e,0),l=Array(s);++i<s;)l[i]=a[e+i];i=-1;for(var c=Array(e+1);++i<e;)c[i]=a[i];return c[e]=t(l),r(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(420),o=t(423)(r);n.exports=o},function(n,e,t){var r=t(421),o=t(422),a=t(153),i=o?function(n,e){return o(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:a;n.exports=i},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(47),o=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=o},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var o=t(),a=16-(o-r);if(r=o,a>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(231),o=t(425),a=t(430),i=t(232),s=t(431),l=t(149);n.exports=function(n,e,t){var c=-1,d=o,u=n.length,p=!0,m=[],h=m;if(t)p=!1,d=a;else if(u>=200){var f=e?null:s(n);if(f)return l(f);p=!1,d=i,h=new r}else h=e?[]:m;n:for(;++c<u;){var g=n[c],v=e?e(g):g;if(g=t||0!==g?g:0,p&&v==v){for(var b=h.length;b--;)if(h[b]===v)continue n;e&&h.push(v),m.push(g)}else d(h,v,t)||(h!==m&&h.push(v),m.push(g))}return m}},function(n,e,t){var r=t(426);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(427),o=t(428),a=t(429);n.exports=function(n,e,t){return e==e?a(n,e,t):r(n,o,t)}},function(n,e){n.exports=function(n,e,t,r){for(var o=n.length,a=t+(r?1:-1);r?a--:++a<o;)if(e(n[a],a,n))return a;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,o=n.length;++r<o;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,o=null==n?0:n.length;++r<o;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(238),o=t(432),a=t(149),i=r&&1/a(new r([,-0]))[1]==1/0?function(n){return new r(n)}:o;n.exports=i},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(237),o=t(61);n.exports=function(n){return o(n)&&r(n)}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var r=t(3),o=t(440).start,a=Math.abs,i=Date.prototype,s=i.getTime,l=i.toISOString;n.exports=r((function(){return"0385-07-25T07:06:39.999Z"!=l.call(new Date(-50000000000001))}))||!r((function(){l.call(new Date(NaN))}))?function(){if(!isFinite(s.call(this)))throw RangeError("Invalid time value");var n=this.getUTCFullYear(),e=this.getUTCMilliseconds(),t=n<0?"-":n>9999?"+":"";return t+o(a(n),t?6:4,0)+"-"+o(this.getUTCMonth()+1,2,0)+"-"+o(this.getUTCDate(),2,0)+"T"+o(this.getUTCHours(),2,0)+":"+o(this.getUTCMinutes(),2,0)+":"+o(this.getUTCSeconds(),2,0)+"."+o(e,3,0)+"Z"}:l},function(n,e,t){var r=t(20),o=t(441),a=t(22),i=Math.ceil,s=function(n){return function(e,t,s){var l,c,d=String(a(e)),u=d.length,p=void 0===s?" ":String(s),m=r(t);return m<=u||""==p?d:(l=m-u,(c=o.call(p,i(l/p.length))).length>l&&(c=c.slice(0,l)),n?d+c:c+d)}};n.exports={start:s(!1),end:s(!0)}},function(n,e,t){"use strict";var r=t(65),o=t(22);n.exports="".repeat||function(n){var e=String(o(this)),t="",a=r(n);if(a<0||a==1/0)throw RangeError("Wrong number of repetitions");for(;a>0;(a>>>=1)&&(e+=e))1&a&&(t+=e);return t}},function(n,e,t){"use strict";var r=t(52),o=t(14),a=t(6),i=t(8),s=a("species");n.exports=function(n){var e=r(n),t=o.f;i&&e&&!e[s]&&t(e,s,{configurable:!0,get:function(){return this}})}},function(n,e,t){var r=t(12),o=t(59),a=t(6)("species");n.exports=function(n,e){var t,i=r(n).constructor;return void 0===i||null==(t=r(i)[a])?e:o(t)}},function(n,e,t){var r=t(2),o=t(8);r({target:"Object",stat:!0,forced:!o,sham:!o},{defineProperties:t(168)})},function(n,e,t){},function(n,e,t){"use strict";t(245)},function(n,e,t){"use strict";t(246)},function(n,e,t){"use strict";var r=t(8),o=t(7),a=t(135),i=t(28),s=t(13),l=t(44),c=t(244),d=t(58),u=t(3),p=t(54),m=t(76).f,h=t(43).f,f=t(14).f,g=t(159).trim,v=o.Number,b=v.prototype,y="Number"==l(p(b)),x=function(n){var e,t,r,o,a,i,s,l,c=d(n,!1);if("string"==typeof c&&c.length>2)if(43===(e=(c=g(c)).charCodeAt(0))||45===e){if(88===(t=c.charCodeAt(2))||120===t)return NaN}else if(48===e){switch(c.charCodeAt(1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+c}for(i=(a=c.slice(2)).length,s=0;s<i;s++)if((l=a.charCodeAt(s))<48||l>o)return NaN;return parseInt(a,r)}return+c};if(a("Number",!v(" 0o1")||!v("0b1")||v("+0x1"))){for(var w,k=function(n){var e=arguments.length<1?0:n,t=this;return t instanceof k&&(y?u((function(){b.valueOf.call(t)})):"Number"!=l(t))?c(new v(x(e)),t,k):x(e)},j=r?m(v):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","),_=0;j.length>_;_++)s(v,w=j[_])&&!s(k,w)&&f(k,w,h(v,w));k.prototype=b,b.constructor=k,i(o,"Number",k)}},function(n,e,t){var r=t(7),o=t(159).trim,a=t(160),i=r.parseInt,s=/^[+-]?0[Xx]/,l=8!==i(a+"08")||22!==i(a+"0x16");n.exports=l?function(n,e){var t=o(String(n));return i(t,e>>>0||(s.test(t)?16:10))}:i},function(n,e,t){"use strict";t(247)},function(n,e,t){
/*!
 * Valine v1.4.14
 * (c) 2017-2020 xCss
 * Released under the GPL-2.0 License.
 * Last Update: 2020/4/26 下午8:39:08
 */
n.exports=function(n){function e(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return n[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var t={};return e.m=n,e.c=t,e.i=function(n){return n},e.d=function(n,t,r){e.o(n,t)||Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:r})},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},e.p="",e(e.s=63)}([function(n,e,t){"use strict";function r(n){return n&&n.__esModule?n:{default:n}}e.__esModule=!0;var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},a=r(t(38)),i=r(t(28)),s=r(t(27)),l=r(t(42)),c=document,d=navigator,u=/[&<>"'`\\]/g,p=RegExp(u.source),m=/&(?:amp|lt|gt|quot|#39|#x60|#x5c);/g,h=RegExp(m.source),f={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#x60;","\\":"&#x5c;"},g={};for(var v in f)g[f[v]]=v;var b=null;Array.prototype.forEach||(Array.prototype.forEach=function(n,e){var t,r;if(null==this)throw new TypeError(" this is null or not defined");var o=Object(this),a=o.length>>>0;if("function"!=typeof n)throw new TypeError(n+" is not a function");for(arguments.length>1&&(t=e),r=0;r<a;){var i;r in o&&(i=o[r],n.call(t,i,r,o)),r++}}),window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=Array.prototype.forEach),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}),(0,a.default)(i.default.fn,{prepend:function(n){return n instanceof HTMLElement||(n=n[0]),this.forEach((function(e){e.insertAdjacentElement("afterBegin",n)})),this},append:function(n){return n instanceof HTMLElement||(n=n[0]),this.forEach((function(e){e.insertAdjacentElement("beforeEnd",n)})),this},remove:function(){return this.forEach((function(n){try{n.parentNode.removeChild(n)}catch(n){}})),this},find:function(n){return(0,i.default)(n,this)},show:function(){return this.forEach((function(n){n.style.display="block"})),this},hide:function(){return this.forEach((function(n){n.style.display="none"})),this},on:function(n,e,t){return i.default.fn.off(n,e,t),this.forEach((function(r){n.split(" ").forEach((function(n){r.addEventListener?r.addEventListener(n,e,t||!1):r.attachEvent?r.attachEvent("on"+n,e):r["on"+n]=e}))})),this},off:function(n,e,t){return this.forEach((function(r){n.split(" ").forEach((function(n){r.removeEventListener?r.removeEventListener(n,e,t||!1):r.detachEvent?r.detachEvent("on"+n,e):r["on"+n]=null}))})),this},html:function(n){return void 0!==n?(this.forEach((function(e){e.innerHTML=n})),this):this[0].innerHTML},text:function(n){return void 0!==n?(this.forEach((function(e){e.innerText=n})),this):this[0].innerText},empty:function(n){return n=n||0,this.forEach((function(e){setTimeout((function(n){e.innerText=""}),n)})),this},val:function(n){return void 0!==n?(this.forEach((function(e){e.value=n})),this):this[0].value||""},attr:function(){var n=arguments;if("object"==o(arguments[0])){var e=arguments[0],t=this;return Object.keys(e).forEach((function(n){t.forEach((function(t){t.setAttribute(n,e[n])}))})),this}return"string"==typeof arguments[0]&&arguments.length<2?this[0].getAttribute(arguments[0])||"":(this.forEach((function(e){e.setAttribute(n[0],n[1])})),this)},removeAttr:function(n){return this.forEach((function(e){var t,r=0,o=n&&n.match(/[^\x20\t\r\n\f\*\/\\]+/g);if(o&&1===e.nodeType)for(;t=o[r++];)e.removeAttribute(t)})),this},hasClass:function(n){return!!this[0]&&new RegExp("(\\s|^)"+n+"(\\s|$)").test(this[0].getAttribute("class"))},addClass:function(n){return this.forEach((function(e){var t=(0,i.default)(e),r=t.attr("class");t.hasClass(n)||t.attr("class",r+=" "+n)})),this},removeClass:function(n){return this.forEach((function(e){var t=(0,i.default)(e),r=t.attr("class");if(t.hasClass(n)){var o=new RegExp("(\\s|^)"+n+"(\\s|$)");t.attr("class",r.replace(o,""))}})),this}}),(0,a.default)(i.default,{extend:a.default,noop:function(){},navi:d,ua:d.userAgent,lang:d.language||d.languages[0],detect:s.default,store:l.default,escape:function(n){return n&&p.test(n)?n.replace(u,(function(n){return f[n]})):n},unescape:function(n){return n&&h.test(n)?n.replace(m,(function(n){return g[n]})):n},dynamicLoadSource:function(n,e){if((0,i.default)('script[src="'+n+'"]').length)e&&e();else{var t=c.createElement("script");t.onload=t.onreadystatechange=function(){this.onload=this.onreadystatechange=null,e&&e(),(0,i.default)(t).remove()},t.async=!0,t.setAttribute("referrerPolicy","no-referrer"),(0,i.default)("head")[0].appendChild(t),t.src=n}},sdkLoader:function(n,e,t){e in window&&window[e]?(b&&clearTimeout(b),t&&t()):i.default.dynamicLoadSource(n,(function(){b=setTimeout(i.default.sdkLoader(n,e,t),100)}))},deleteInWin:function(n,e){var t=function(e){if(n in window)try{delete window[n]}catch(e){window[n]=null}};0===e?t():setTimeout(t,e||500)},ajax:function(n){(n=n||{}).type=(n.type||"GET").toUpperCase(),n.dataType=n.dataType||"json",n.async=n.async||!0,n.timeout=n.timeout||8e3;var e="[object FormData]"=={}.toString.call(n.data)?n.data:function(n){var e=[];for(var t in n)e.push(encodeURIComponent(t)+"="+encodeURIComponent(n[t]));return e.push("t="+Date.now()),e.join("&")}(n.data),t=null,r="XMLHttpRequest"in window?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");r.onreadystatechange=function(e){if(4==r.readyState){clearTimeout(t);var o=r.status;o>=200&&o<300?n.success&&n.success(JSON.parse(r.responseText)):n.fail&&n.fail(o)}},"GET"==n.type?(r.open("GET",n.url+"?"+e,n.async),r.send(null)):"POST"==n.type&&(r.open("POST",n.url,n.async),null==n.contentType||null==n.contentType?r.send(e):(r.setRequestHeader("Content-Type",n.contentType),r.send(JSON.stringify(n.data)))),t=setTimeout((function(n){clearTimeout(t),r.abort()}),n.timeout)}}),e.default=i.default},function(n,e,t){"use strict";var r=TypeError,o=Object.getOwnPropertyDescriptor;if(o)try{o({},"")}catch(n){o=null}var a=function(){throw new r},i=o?function(){try{return a}catch(n){try{return o(arguments,"callee").get}catch(n){return a}}}():a,s=t(47)(),l=Object.getPrototypeOf||function(n){return n.__proto__},c=void 0,d=void 0,u=void 0,p="undefined"==typeof Uint8Array?void 0:l(Uint8Array),m={"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayBufferPrototype%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer.prototype,"%ArrayIteratorPrototype%":s?l([][Symbol.iterator]()):void 0,"%ArrayPrototype%":Array.prototype,"%ArrayProto_entries%":Array.prototype.entries,"%ArrayProto_forEach%":Array.prototype.forEach,"%ArrayProto_keys%":Array.prototype.keys,"%ArrayProto_values%":Array.prototype.values,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":void 0,"%AsyncFunctionPrototype%":void 0,"%AsyncGenerator%":void 0,"%AsyncGeneratorFunction%":d,"%AsyncGeneratorPrototype%":void 0,"%AsyncIteratorPrototype%":u&&s&&Symbol.asyncIterator?u[Symbol.asyncIterator]():void 0,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%Boolean%":Boolean,"%BooleanPrototype%":Boolean.prototype,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%DataViewPrototype%":"undefined"==typeof DataView?void 0:DataView.prototype,"%Date%":Date,"%DatePrototype%":Date.prototype,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%ErrorPrototype%":Error.prototype,"%eval%":eval,"%EvalError%":EvalError,"%EvalErrorPrototype%":EvalError.prototype,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float32ArrayPrototype%":"undefined"==typeof Float32Array?void 0:Float32Array.prototype,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%Float64ArrayPrototype%":"undefined"==typeof Float64Array?void 0:Float64Array.prototype,"%Function%":Function,"%FunctionPrototype%":Function.prototype,"%Generator%":void 0,"%GeneratorFunction%":c,"%GeneratorPrototype%":void 0,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int8ArrayPrototype%":"undefined"==typeof Int8Array?void 0:Int8Array.prototype,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int16ArrayPrototype%":"undefined"==typeof Int16Array?void 0:Int8Array.prototype,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%Int32ArrayPrototype%":"undefined"==typeof Int32Array?void 0:Int32Array.prototype,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":s?l(l([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%JSONParse%":"object"==typeof JSON?JSON.parse:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&s?l((new Map)[Symbol.iterator]()):void 0,"%MapPrototype%":"undefined"==typeof Map?void 0:Map.prototype,"%Math%":Math,"%Number%":Number,"%NumberPrototype%":Number.prototype,"%Object%":Object,"%ObjectPrototype%":Object.prototype,"%ObjProto_toString%":Object.prototype.toString,"%ObjProto_valueOf%":Object.prototype.valueOf,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%PromisePrototype%":"undefined"==typeof Promise?void 0:Promise.prototype,"%PromiseProto_then%":"undefined"==typeof Promise?void 0:Promise.prototype.then,"%Promise_all%":"undefined"==typeof Promise?void 0:Promise.all,"%Promise_reject%":"undefined"==typeof Promise?void 0:Promise.reject,"%Promise_resolve%":"undefined"==typeof Promise?void 0:Promise.resolve,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%RangeErrorPrototype%":RangeError.prototype,"%ReferenceError%":ReferenceError,"%ReferenceErrorPrototype%":ReferenceError.prototype,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%RegExpPrototype%":RegExp.prototype,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&s?l((new Set)[Symbol.iterator]()):void 0,"%SetPrototype%":"undefined"==typeof Set?void 0:Set.prototype,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%SharedArrayBufferPrototype%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer.prototype,"%String%":String,"%StringIteratorPrototype%":s?l(""[Symbol.iterator]()):void 0,"%StringPrototype%":String.prototype,"%Symbol%":s?Symbol:void 0,"%SymbolPrototype%":s?Symbol.prototype:void 0,"%SyntaxError%":SyntaxError,"%SyntaxErrorPrototype%":SyntaxError.prototype,"%ThrowTypeError%":i,"%TypedArray%":p,"%TypedArrayPrototype%":p?p.prototype:void 0,"%TypeError%":r,"%TypeErrorPrototype%":r.prototype,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ArrayPrototype%":"undefined"==typeof Uint8Array?void 0:Uint8Array.prototype,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint8ClampedArrayPrototype%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray.prototype,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint16ArrayPrototype%":"undefined"==typeof Uint16Array?void 0:Uint16Array.prototype,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%Uint32ArrayPrototype%":"undefined"==typeof Uint32Array?void 0:Uint32Array.prototype,"%URIError%":URIError,"%URIErrorPrototype%":URIError.prototype,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakMapPrototype%":"undefined"==typeof WeakMap?void 0:WeakMap.prototype,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet,"%WeakSetPrototype%":"undefined"==typeof WeakSet?void 0:WeakSet.prototype},h=t(4).call(Function.call,String.prototype.replace),f=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,g=/\\(\\)?/g,v=function(n){var e=[];return h(n,f,(function(n,t,r,o){e[e.length]=r?h(o,g,"$1"):t||n})),e},b=function(n,e){if(!(n in m))throw new SyntaxError("intrinsic "+n+" does not exist!");if(void 0===m[n]&&!e)throw new r("intrinsic "+n+" exists, but is not available. Please file an issue!");return m[n]};n.exports=function(n,e){if("string"!=typeof n||0===n.length)throw new TypeError("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new TypeError('"allowMissing" argument must be a boolean');for(var t=v(n),a=b("%"+(t.length>0?t[0]:"")+"%",e),i=1;i<t.length;i+=1)if(null!=a)if(o&&i+1>=t.length){var s=o(a,t[i]);if(!e&&!(t[i]in a))throw new r("base intrinsic for "+n+" exists, but the property is not available.");a=s?s.get||s.value:a[t[i]]}else a=a[t[i]];return a}},function(n,e,t){"use strict";e.__esModule=!0,e.DEFAULT_EMOJI_CDN="//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/",e.DB_NAME="Comment",e.defaultConfig={lang:"zh-CN",langMode:null,appId:"",appKey:"",clazzName:"Comment",meta:["nick","mail","link"],path:location.pathname,placeholder:"Just Go Go",pageSize:10,recordIP:!0,serverURLs:"",visitor:!1,emojiCDN:"",emojiMaps:void 0,enableQQ:!1,requiredFields:[]},e.defaultMeta=["nick","mail","link"],e.QQCacheKey="_v_Cache_Q",e.MetaCacheKey="_v_Cache_Meta",e.RandomStr=(Date.now()+Math.round(1e3*Math.random())).toString(32),e.VERSION="1.4.14"},function(n,e,t){var r=t(7),o=t(29);for(var a in(e=n.exports=function(n,e){return new o(e).process(n)}).FilterCSS=o,r)e[a]=r[a];"undefined"!=typeof window&&(window.filterCSS=n.exports)},function(n,e,t){"use strict";var r=t(32);n.exports=Function.prototype.bind||r},function(n,e){n.exports={indexOf:function(n,e){var t,r;if(Array.prototype.indexOf)return n.indexOf(e);for(t=0,r=n.length;t<r;t++)if(n[t]===e)return t;return-1},forEach:function(n,e,t){var r,o;if(Array.prototype.forEach)return n.forEach(e,t);for(r=0,o=n.length;r<o;r++)e.call(t,n[r],r,n)},trim:function(n){return String.prototype.trim?n.trim():n.replace(/(^\s*)|(\s*$)/g,"")},spaceIndex:function(n){var e=/\s|\n|\t/.exec(n);return e?e.index:-1}}},function(n,e,t){"use strict";e.__esModule=!0;var r={cdn:t(2).DEFAULT_EMOJI_CDN,maps:t(53),parse:function(n){return String(n).replace(new RegExp(":("+Object.keys(r.maps).join("|")+"):","ig"),(function(n,e){return r.maps[e]?r.build(e):n}))},build:function(n){var e=/^(https?:)?\/\//i,t=r.maps[n],o=e.test(t)?t:r.cdn+t;return e.test(o)?'<img alt="'+n+'" referrerPolicy="no-referrer" class="vemoji" src="'+o+'" />':""}};e.default=r},function(n,e){function t(){var n={"align-content":!1,"align-items":!1,"align-self":!1,"alignment-adjust":!1,"alignment-baseline":!1,all:!1,"anchor-point":!1,animation:!1,"animation-delay":!1,"animation-direction":!1,"animation-duration":!1,"animation-fill-mode":!1,"animation-iteration-count":!1,"animation-name":!1,"animation-play-state":!1,"animation-timing-function":!1,azimuth:!1,"backface-visibility":!1,background:!0,"background-attachment":!0,"background-clip":!0,"background-color":!0,"background-image":!0,"background-origin":!0,"background-position":!0,"background-repeat":!0,"background-size":!0,"baseline-shift":!1,binding:!1,bleed:!1,"bookmark-label":!1,"bookmark-level":!1,"bookmark-state":!1,border:!0,"border-bottom":!0,"border-bottom-color":!0,"border-bottom-left-radius":!0,"border-bottom-right-radius":!0,"border-bottom-style":!0,"border-bottom-width":!0,"border-collapse":!0,"border-color":!0,"border-image":!0,"border-image-outset":!0,"border-image-repeat":!0,"border-image-slice":!0,"border-image-source":!0,"border-image-width":!0,"border-left":!0,"border-left-color":!0,"border-left-style":!0,"border-left-width":!0,"border-radius":!0,"border-right":!0,"border-right-color":!0,"border-right-style":!0,"border-right-width":!0,"border-spacing":!0,"border-style":!0,"border-top":!0,"border-top-color":!0,"border-top-left-radius":!0,"border-top-right-radius":!0,"border-top-style":!0,"border-top-width":!0,"border-width":!0,bottom:!1,"box-decoration-break":!0,"box-shadow":!0,"box-sizing":!0,"box-snap":!0,"box-suppress":!0,"break-after":!0,"break-before":!0,"break-inside":!0,"caption-side":!1,chains:!1,clear:!0,clip:!1,"clip-path":!1,"clip-rule":!1,color:!0,"color-interpolation-filters":!0,"column-count":!1,"column-fill":!1,"column-gap":!1,"column-rule":!1,"column-rule-color":!1,"column-rule-style":!1,"column-rule-width":!1,"column-span":!1,"column-width":!1,columns:!1,contain:!1,content:!1,"counter-increment":!1,"counter-reset":!1,"counter-set":!1,crop:!1,cue:!1,"cue-after":!1,"cue-before":!1,cursor:!1,direction:!1,display:!0,"display-inside":!0,"display-list":!0,"display-outside":!0,"dominant-baseline":!1,elevation:!1,"empty-cells":!1,filter:!1,flex:!1,"flex-basis":!1,"flex-direction":!1,"flex-flow":!1,"flex-grow":!1,"flex-shrink":!1,"flex-wrap":!1,float:!1,"float-offset":!1,"flood-color":!1,"flood-opacity":!1,"flow-from":!1,"flow-into":!1,font:!0,"font-family":!0,"font-feature-settings":!0,"font-kerning":!0,"font-language-override":!0,"font-size":!0,"font-size-adjust":!0,"font-stretch":!0,"font-style":!0,"font-synthesis":!0,"font-variant":!0,"font-variant-alternates":!0,"font-variant-caps":!0,"font-variant-east-asian":!0,"font-variant-ligatures":!0,"font-variant-numeric":!0,"font-variant-position":!0,"font-weight":!0,grid:!1,"grid-area":!1,"grid-auto-columns":!1,"grid-auto-flow":!1,"grid-auto-rows":!1,"grid-column":!1,"grid-column-end":!1,"grid-column-start":!1,"grid-row":!1,"grid-row-end":!1,"grid-row-start":!1,"grid-template":!1,"grid-template-areas":!1,"grid-template-columns":!1,"grid-template-rows":!1,"hanging-punctuation":!1,height:!0,hyphens:!1,icon:!1,"image-orientation":!1,"image-resolution":!1,"ime-mode":!1,"initial-letters":!1,"inline-box-align":!1,"justify-content":!1,"justify-items":!1,"justify-self":!1,left:!1,"letter-spacing":!0,"lighting-color":!0,"line-box-contain":!1,"line-break":!1,"line-grid":!1,"line-height":!1,"line-snap":!1,"line-stacking":!1,"line-stacking-ruby":!1,"line-stacking-shift":!1,"line-stacking-strategy":!1,"list-style":!0,"list-style-image":!0,"list-style-position":!0,"list-style-type":!0,margin:!0,"margin-bottom":!0,"margin-left":!0,"margin-right":!0,"margin-top":!0,"marker-offset":!1,"marker-side":!1,marks:!1,mask:!1,"mask-box":!1,"mask-box-outset":!1,"mask-box-repeat":!1,"mask-box-slice":!1,"mask-box-source":!1,"mask-box-width":!1,"mask-clip":!1,"mask-image":!1,"mask-origin":!1,"mask-position":!1,"mask-repeat":!1,"mask-size":!1,"mask-source-type":!1,"mask-type":!1,"max-height":!0,"max-lines":!1,"max-width":!0,"min-height":!0,"min-width":!0,"move-to":!1,"nav-down":!1,"nav-index":!1,"nav-left":!1,"nav-right":!1,"nav-up":!1,"object-fit":!1,"object-position":!1,opacity:!1,order:!1,orphans:!1,outline:!1,"outline-color":!1,"outline-offset":!1,"outline-style":!1,"outline-width":!1,overflow:!1,"overflow-wrap":!1,"overflow-x":!1,"overflow-y":!1,padding:!0,"padding-bottom":!0,"padding-left":!0,"padding-right":!0,"padding-top":!0,page:!1,"page-break-after":!1,"page-break-before":!1,"page-break-inside":!1,"page-policy":!1,pause:!1,"pause-after":!1,"pause-before":!1,perspective:!1,"perspective-origin":!1,pitch:!1,"pitch-range":!1,"play-during":!1,position:!1,"presentation-level":!1,quotes:!1,"region-fragment":!1,resize:!1,rest:!1,"rest-after":!1,"rest-before":!1,richness:!1,right:!1,rotation:!1,"rotation-point":!1,"ruby-align":!1,"ruby-merge":!1,"ruby-position":!1,"shape-image-threshold":!1,"shape-outside":!1,"shape-margin":!1,size:!1,speak:!1,"speak-as":!1,"speak-header":!1,"speak-numeral":!1,"speak-punctuation":!1,"speech-rate":!1,stress:!1,"string-set":!1,"tab-size":!1,"table-layout":!1,"text-align":!0,"text-align-last":!0,"text-combine-upright":!0,"text-decoration":!0,"text-decoration-color":!0,"text-decoration-line":!0,"text-decoration-skip":!0,"text-decoration-style":!0,"text-emphasis":!0,"text-emphasis-color":!0,"text-emphasis-position":!0,"text-emphasis-style":!0,"text-height":!0,"text-indent":!0,"text-justify":!0,"text-orientation":!0,"text-overflow":!0,"text-shadow":!0,"text-space-collapse":!0,"text-transform":!0,"text-underline-position":!0,"text-wrap":!0,top:!1,transform:!1,"transform-origin":!1,"transform-style":!1,transition:!1,"transition-delay":!1,"transition-duration":!1,"transition-property":!1,"transition-timing-function":!1,"unicode-bidi":!1,"vertical-align":!1,visibility:!1,"voice-balance":!1,"voice-duration":!1,"voice-family":!1,"voice-pitch":!1,"voice-range":!1,"voice-rate":!1,"voice-stress":!1,"voice-volume":!1,volume:!1,"white-space":!1,widows:!1,width:!0,"will-change":!1,"word-break":!0,"word-spacing":!0,"word-wrap":!0,"wrap-flow":!1,"wrap-through":!1,"writing-mode":!1,"z-index":!1};return n}var r=/javascript\s*\:/gim;e.whiteList=t(),e.getDefaultWhiteList=t,e.onAttr=function(n,e,t){},e.onIgnoreAttr=function(n,e,t){},e.safeAttrValue=function(n,e){return r.test(e)?"":e}},function(n,e){n.exports={indexOf:function(n,e){var t,r;if(Array.prototype.indexOf)return n.indexOf(e);for(t=0,r=n.length;t<r;t++)if(n[t]===e)return t;return-1},forEach:function(n,e,t){var r,o;if(Array.prototype.forEach)return n.forEach(e,t);for(r=0,o=n.length;r<o;r++)e.call(t,n[r],r,n)},trim:function(n){return String.prototype.trim?n.trim():n.replace(/(^\s*)|(\s*$)/g,"")},trimRight:function(n){return String.prototype.trimRight?n.trimRight():n.replace(/(\s*$)/g,"")}}},function(n,e,t){"use strict";var r=t(40),o="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),a=Object.prototype.toString,i=Array.prototype.concat,s=Object.defineProperty,l=s&&function(){var n={};try{for(var e in s(n,"x",{enumerable:!1,value:n}),n)return!1;return n.x===n}catch(n){return!1}}(),c=function(n,e,t,r){(!(e in n)||function(n){return"function"==typeof n&&"[object Function]"===a.call(n)}(r)&&r())&&(l?s(n,e,{configurable:!0,enumerable:!1,value:t,writable:!0}):n[e]=t)},d=function(n,e){var t=arguments.length>2?arguments[2]:{},a=r(e);o&&(a=i.call(a,Object.getOwnPropertySymbols(e)));for(var s=0;s<a.length;s+=1)c(n,a[s],e[a[s]],t[a[s]])};d.supportsDescriptors=!!l,n.exports=d},function(n,e,t){"use strict";var r=Object.prototype.toString;n.exports=function(n){var e=r.call(n),t="[object Arguments]"===e;return t||(t="[object Array]"!==e&&null!==n&&"object"==typeof n&&"number"==typeof n.length&&n.length>=0&&"[object Function]"===r.call(n.callee)),t}},function(n,e,t){"use strict";var r=t(45),o=t(44),a=t(46)("String.prototype.replace"),i=/^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/,s=/[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;n.exports=function(){var n=o(r(this));return a(a(n,i,""),s,"")}},function(n,e,t){"use strict";var r=t(4),o=t(1)("%Function%"),a=o.apply,i=o.call;n.exports=function(){return r.apply(i,arguments)},n.exports.apply=function(){return r.apply(a,arguments)}},function(n,e,t){"use strict";var r=t(11);n.exports=function(){return String.prototype.trim&&"​"==="​".trim()?String.prototype.trim:r}},function(n,e){var t;t=function(){return this}();try{t=t||Function("return this")()||(0,eval)("this")}catch(n){"object"==typeof window&&(t=window)}n.exports=t},function(n,e,t){function r(){return{a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","loop","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],sup:[],strong:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","loop","preload","src","height","width"]}}function o(n){return n.replace(g,"&lt;").replace(v,"&gt;")}function a(n){return n.replace(b,"&quot;")}function i(n){return n.replace(y,'"')}function s(n){return n.replace(x,(function(n,e){return"x"===e[0]||"X"===e[0]?String.fromCharCode(parseInt(e.substr(1),16)):String.fromCharCode(parseInt(e,10))}))}function l(n){return n.replace(w,":").replace(k," ")}function c(n){for(var e="",t=0,r=n.length;t<r;t++)e+=n.charCodeAt(t)<32?" ":n.charAt(t);return h.trim(e)}function d(n){return c(n=l(n=s(n=i(n))))}function u(n){return o(n=a(n))}var p=t(3).FilterCSS,m=t(3).getDefaultWhiteList,h=t(5),f=new p,g=/</g,v=/>/g,b=/"/g,y=/&quot;/g,x=/&#([a-zA-Z0-9]*);?/gim,w=/&colon;?/gim,k=/&newline;?/gim,j=/((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a)\:/gi,_=/e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi,T=/u\s*r\s*l\s*\(.*/gi,S=/<!--[\s\S]*?-->/g;e.whiteList={a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","loop","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],sup:[],strong:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","loop","preload","src","height","width"]},e.getDefaultWhiteList=r,e.onTag=function(n,e,t){},e.onIgnoreTag=function(n,e,t){},e.onTagAttr=function(n,e,t){},e.onIgnoreTagAttr=function(n,e,t){},e.safeAttrValue=function(n,e,t,r){if(t=d(t),"href"===e||"src"===e){if("#"===(t=h.trim(t)))return"#";if("http://"!==t.substr(0,7)&&"https://"!==t.substr(0,8)&&"mailto:"!==t.substr(0,7)&&"tel:"!==t.substr(0,4)&&"#"!==t[0]&&"/"!==t[0])return""}else if("background"===e){if(j.lastIndex=0,j.test(t))return""}else if("style"===e){if(_.lastIndex=0,_.test(t))return"";if(T.lastIndex=0,T.test(t)&&(j.lastIndex=0,j.test(t)))return"";!1!==r&&(t=(r=r||f).process(t))}return u(t)},e.escapeHtml=o,e.escapeQuote=a,e.unescapeQuote=i,e.escapeHtmlEntities=s,e.escapeDangerHtml5Entities=l,e.clearNonPrintableCharacter=c,e.friendlyAttrValue=d,e.escapeAttrValue=u,e.onIgnoreTagStripAll=function(){return""},e.StripTagBody=function(n,e){function t(e){return!!r||-1!==h.indexOf(n,e)}"function"!=typeof e&&(e=function(){});var r=!Array.isArray(n),o=[],a=!1;return{onIgnoreTag:function(n,r,i){if(t(n)){if(i.isClosing){var s="[/removed]",l=i.position+s.length;return o.push([!1!==a?a:i.position,l]),a=!1,s}return a||(a=i.position),"[removed]"}return e(n,r,i)},remove:function(n){var e="",t=0;return h.forEach(o,(function(r){e+=n.slice(t,r[0]),t=r[1]})),e+=n.slice(t)}}},e.stripCommentTag=function(n){return n.replace(S,"")},e.stripBlankChar=function(n){var e=n.split("");return(e=e.filter((function(n){var e=n.charCodeAt(0);return!(127===e||e<=31&&10!==e&&13!==e)}))).join("")},e.cssFilter=f,e.getDefaultCSSWhiteList=m},function(n,e,t){function r(n){var e=l.spaceIndex(n);if(-1===e)var t=n.slice(1,-1);else t=n.slice(1,e+1);return"/"===(t=l.trim(t).toLowerCase()).slice(0,1)&&(t=t.slice(1)),"/"===t.slice(-1)&&(t=t.slice(0,-1)),t}function o(n){return"</"===n.slice(0,2)}function a(n,e){for(;e<n.length;e++){var t=n[e];if(" "!==t)return"="===t?e:-1}}function i(n,e){for(;e>0;e--){var t=n[e];if(" "!==t)return"="===t?e:-1}}function s(n){return function(n){return'"'===n[0]&&'"'===n[n.length-1]||"'"===n[0]&&"'"===n[n.length-1]}(n)?n.substr(1,n.length-2):n}var l=t(5),c=/[^a-zA-Z0-9_:\.\-]/gim;e.parseTag=function(n,e,t){var a="",i=0,s=!1,l=!1,c=0,d=n.length,u="",p="";for(c=0;c<d;c++){var m=n.charAt(c);if(!1===s){if("<"===m){s=c;continue}}else if(!1===l){if("<"===m){a+=t(n.slice(i,c)),s=c,i=c;continue}if(">"===m){a+=t(n.slice(i,s)),u=r(p=n.slice(s,c+1)),a+=e(s,a.length,u,p,o(p)),i=c+1,s=!1;continue}if(('"'===m||"'"===m)&&"="===n.charAt(c-1)){l=m;continue}}else if(m===l){l=!1;continue}}return i<n.length&&(a+=t(n.substr(i))),a},e.parseAttr=function(n,e){function t(n,t){if(!((n=(n=l.trim(n)).replace(c,"").toLowerCase()).length<1)){var r=e(n,t||"");r&&o.push(r)}}for(var r=0,o=[],d=!1,u=n.length,p=0;p<u;p++){var m,h=n.charAt(p);if(!1!==d||"="!==h)if(!1===d||p!==r||'"'!==h&&"'"!==h||"="!==n.charAt(p-1)){if(/\s|\n|\t/.test(h)){if(n=n.replace(/\s|\n|\t/g," "),!1===d){if(-1===(m=a(n,p))){t(l.trim(n.slice(r,p))),d=!1,r=p+1;continue}p=m-1;continue}if(-1===(m=i(n,p-1))){t(d,s(l.trim(n.slice(r,p)))),d=!1,r=p+1;continue}}}else{if(-1===(m=n.indexOf(h,p+1)))break;t(d,l.trim(n.slice(r+1,m))),d=!1,r=(p=m)+1}else d=n.slice(r,p),r=p+1}return r<n.length&&(!1===d?t(n.slice(r)):t(d,s(l.trim(n.slice(r))))),l.trim(o.join(" "))}},function(n,e,t){var r,o,a;
/*!
	autosize 4.0.2
	license: MIT
	http://www.jacklmoore.com/autosize
*/o=[n,e],r=function(n,e){"use strict";function t(n){function e(e){var t=n.style.width;n.style.width="0px",n.offsetWidth,n.style.width=t,n.style.overflowY=e}function t(){if(0!==n.scrollHeight){var e=function(n){for(var e=[];n&&n.parentNode&&n.parentNode instanceof Element;)n.parentNode.scrollTop&&e.push({node:n.parentNode,scrollTop:n.parentNode.scrollTop}),n=n.parentNode;return e}(n),t=document.documentElement&&document.documentElement.scrollTop;n.style.height="",n.style.height=n.scrollHeight+o+"px",s=n.clientWidth,e.forEach((function(n){n.node.scrollTop=n.scrollTop})),t&&(document.documentElement.scrollTop=t)}}function r(){t();var r=Math.round(parseFloat(n.style.height)),o=window.getComputedStyle(n,null),a="content-box"===o.boxSizing?Math.round(parseFloat(o.height)):n.offsetHeight;if(a<r?"hidden"===o.overflowY&&(e("scroll"),t(),a="content-box"===o.boxSizing?Math.round(parseFloat(window.getComputedStyle(n,null).height)):n.offsetHeight):"hidden"!==o.overflowY&&(e("hidden"),t(),a="content-box"===o.boxSizing?Math.round(parseFloat(window.getComputedStyle(n,null).height)):n.offsetHeight),l!==a){l=a;var s=i("autosize:resized");try{n.dispatchEvent(s)}catch(n){}}}if(n&&n.nodeName&&"TEXTAREA"===n.nodeName&&!a.has(n)){var o=null,s=null,l=null,c=function(){n.clientWidth!==s&&r()},d=function(e){window.removeEventListener("resize",c,!1),n.removeEventListener("input",r,!1),n.removeEventListener("keyup",r,!1),n.removeEventListener("autosize:destroy",d,!1),n.removeEventListener("autosize:update",r,!1),Object.keys(e).forEach((function(t){n.style[t]=e[t]})),a.delete(n)}.bind(n,{height:n.style.height,resize:n.style.resize,overflowY:n.style.overflowY,overflowX:n.style.overflowX,wordWrap:n.style.wordWrap});n.addEventListener("autosize:destroy",d,!1),"onpropertychange"in n&&"oninput"in n&&n.addEventListener("keyup",r,!1),window.addEventListener("resize",c,!1),n.addEventListener("input",r,!1),n.addEventListener("autosize:update",r,!1),n.style.overflowX="hidden",n.style.wordWrap="break-word",a.set(n,{destroy:d,update:r}),function(){var e=window.getComputedStyle(n,null);"vertical"===e.resize?n.style.resize="none":"both"===e.resize&&(n.style.resize="horizontal"),o="content-box"===e.boxSizing?-(parseFloat(e.paddingTop)+parseFloat(e.paddingBottom)):parseFloat(e.borderTopWidth)+parseFloat(e.borderBottomWidth),isNaN(o)&&(o=0),r()}()}}function r(n){var e=a.get(n);e&&e.destroy()}function o(n){var e=a.get(n);e&&e.update()}var a="function"==typeof Map?new Map:function(){var n=[],e=[];return{has:function(e){return n.indexOf(e)>-1},get:function(t){return e[n.indexOf(t)]},set:function(t,r){-1===n.indexOf(t)&&(n.push(t),e.push(r))},delete:function(t){var r=n.indexOf(t);r>-1&&(n.splice(r,1),e.splice(r,1))}}}(),i=function(n){return new Event(n,{bubbles:!0})};try{new Event("test")}catch(n){i=function(n){var e=document.createEvent("Event");return e.initEvent(n,!0,!1),e}}var s=null;"undefined"==typeof window||"function"!=typeof window.getComputedStyle?((s=function(n){return n}).destroy=function(n){return n},s.update=function(n){return n}):((s=function(n,e){return n&&Array.prototype.forEach.call(n.length?n:[n],(function(n){return t(n)})),n}).destroy=function(n){return n&&Array.prototype.forEach.call(n.length?n:[n],r),n},s.update=function(n){return n&&Array.prototype.forEach.call(n.length?n:[n],o),n}),e.default=s,n.exports=e.default},void 0!==(a="function"==typeof r?r.apply(e,o):r)&&(n.exports=a)},function(n,e,t){"use strict";function r(n){return n&&n.__esModule?n:{default:n}}function o(n){return!!n&&this.init(n),this}function a(n){return new o(n)}var i=r(t(26)),s=r(t(17)),l=r(t(20)),c=r(t(6)),d=t(2),u=r(t(24)),p=r(t(0)),m=r(t(22)),h=r(t(19)),f=t(23),g=r(t(25)),v=r(t(21)),b={comment:"",nick:"",mail:"",link:"",ua:p.default.ua,url:"",QQAvatar:""},y="",x={cdn:"https://gravatar.loli.net/avatar/",ds:["mp","identicon","monsterid","wavatar","robohash","retro",""],params:"",hide:!1};o.prototype.init=function(n){if("undefined"==typeof document)throw new Error("Sorry, Valine does not support Server-side rendering.");var e=this;return n&&(n=p.default.extend(d.defaultConfig,n),e.i18n=(0,l.default)(n.lang||p.default.lang,n.langMode),e.config=n,c.default.maps=!!n.emojiMaps&&n.emojiMaps||c.default.maps,c.default.cdn=!!n.emojiCDN&&n.emojiCDN||c.default.cdn,e._init()),e},o.prototype._init=function(){var n=this;try{var e=n.config,t=e.avatar,r=e.avatarForce,o=e.avatar_cdn,a=e.visitor,i=e.path,s=void 0===i?location.pathname:i,l=e.pageSize,c=e.recordIP;n.config.path=s.replace(/index\.html?$/,"");var u=x.ds,m=r?"&q="+d.RandomStr:"";x.params="?d="+(u.indexOf(t)>-1?t:"mp")+"&v="+d.VERSION+m,x.hide="hide"===t,x.cdn=/^https?\:\/\//.test(o)?o:x.cdn,n.config.pageSize=isNaN(l)||l<1?10:l,c&&(0,f.recordIPFn)((function(n){return b.ip=n}));var g=n.config.el||null,y=(0,p.default)(g);if(g=g instanceof HTMLElement?g:y[y.length-1]||null){n.$el=(0,p.default)(g),n.$el.addClass("v").attr("data-class","v"),x.hide&&n.$el.addClass("hide-avatar"),n.config.meta=(n.config.guest_info||n.config.meta||d.defaultMeta).filter((function(n){return d.defaultMeta.indexOf(n)>-1})),n.config.requiredFields=n.config.requiredFields.filter((function(n){return d.defaultMeta.indexOf(n)>-1}));var w=(0==n.config.meta.length?d.defaultMeta:n.config.meta).map((function(e){var t="mail"==e?"email":"text";return d.defaultMeta.indexOf(e)>-1?'<input name="'+e+'" placeholder="'+n.i18n.t(e)+'" class="v'+e+' vinput" type="'+t+'">':""})),j='<div class="vpanel"><div class="vwrap"><p class="cancel-reply text-right" style="display:none;" title="'+n.i18n.t("cancelReply")+'"><svg class="vicon cancel-reply-btn" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4220" width="22" height="22"><path d="M796.454 985H227.545c-50.183 0-97.481-19.662-133.183-55.363-35.7-35.701-55.362-83-55.362-133.183V227.545c0-50.183 19.662-97.481 55.363-133.183 35.701-35.7 83-55.362 133.182-55.362h568.909c50.183 0 97.481 19.662 133.183 55.363 35.701 35.702 55.363 83 55.363 133.183v568.909c0 50.183-19.662 97.481-55.363 133.183S846.637 985 796.454 985zM227.545 91C152.254 91 91 152.254 91 227.545v568.909C91 871.746 152.254 933 227.545 933h568.909C871.746 933 933 871.746 933 796.454V227.545C933 152.254 871.746 91 796.454 91H227.545z" p-id="4221"></path><path d="M568.569 512l170.267-170.267c15.556-15.556 15.556-41.012 0-56.569s-41.012-15.556-56.569 0L512 455.431 341.733 285.165c-15.556-15.556-41.012-15.556-56.569 0s-15.556 41.012 0 56.569L455.431 512 285.165 682.267c-15.556 15.556-15.556 41.012 0 56.569 15.556 15.556 41.012 15.556 56.569 0L512 568.569l170.267 170.267c15.556 15.556 41.012 15.556 56.569 0 15.556-15.556 15.556-41.012 0-56.569L568.569 512z" p-id="4222" ></path></svg></p><div class="vheader item'+w.length+'">'+w.join("")+'</div><div class="vedit"><textarea id="veditor" class="veditor vinput" placeholder="'+n.config.placeholder+'"></textarea><div class="vrow"><div class="vcol vcol-60 status-bar"></div><div class="vcol vcol-40 vctrl text-right"><span title="'+n.i18n.t("emoji")+'"  class="vicon vemoji-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="16172" width="22" height="22" ><path d="M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zM512 56.888889a455.111111 455.111111 0 1 0 455.111111 455.111111 455.111111 455.111111 0 0 0-455.111111-455.111111zM312.888889 512A85.333333 85.333333 0 1 1 398.222222 426.666667 85.333333 85.333333 0 0 1 312.888889 512z" p-id="16173"></path><path d="M512 768A142.222222 142.222222 0 0 1 369.777778 625.777778a28.444444 28.444444 0 0 1 56.888889 0 85.333333 85.333333 0 0 0 170.666666 0 28.444444 28.444444 0 0 1 56.888889 0A142.222222 142.222222 0 0 1 512 768z" p-id="16174"></path><path d="M782.222222 391.964444l-113.777778 59.733334a29.013333 29.013333 0 0 1-38.684444-10.808889 28.444444 28.444444 0 0 1 10.24-38.684445l113.777778-56.888888a28.444444 28.444444 0 0 1 38.684444 10.24 28.444444 28.444444 0 0 1-10.24 36.408888z" p-id="16175"></path><path d="M640.568889 451.697778l113.777778 56.888889a27.875556 27.875556 0 0 0 38.684444-10.24 27.875556 27.875556 0 0 0-10.24-38.684445l-113.777778-56.888889a28.444444 28.444444 0 0 0-38.684444 10.808889 28.444444 28.444444 0 0 0 10.24 38.115556z" p-id="16176"></path></svg></span><span title="'+n.i18n.t("preview")+'" class="vicon vpreview-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="17688" width="22" height="22"><path d="M502.390154 935.384615a29.538462 29.538462 0 1 1 0 59.076923H141.430154C79.911385 994.461538 29.538462 946.254769 29.538462 886.153846V137.846154C29.538462 77.745231 79.950769 29.538462 141.390769 29.538462h741.218462c61.44 0 111.852308 48.206769 111.852307 108.307692v300.268308a29.538462 29.538462 0 1 1-59.076923 0V137.846154c0-26.899692-23.355077-49.230769-52.775384-49.230769H141.390769c-29.420308 0-52.775385 22.331077-52.775384 49.230769v748.307692c0 26.899692 23.355077 49.230769 52.775384 49.230769h360.999385z" p-id="17689"></path><path d="M196.923077 216.615385m29.538461 0l374.153847 0q29.538462 0 29.538461 29.538461l0 0q0 29.538462-29.538461 29.538462l-374.153847 0q-29.538462 0-29.538461-29.538462l0 0q0-29.538462 29.538461-29.538461Z" p-id="17690"></path><path d="M649.846154 846.769231a216.615385 216.615385 0 1 0 0-433.230769 216.615385 216.615385 0 0 0 0 433.230769z m0 59.076923a275.692308 275.692308 0 1 1 0-551.384616 275.692308 275.692308 0 0 1 0 551.384616z" p-id="17691"></path><path d="M807.398383 829.479768m20.886847-20.886846l0 0q20.886846-20.886846 41.773692 0l125.321079 125.321079q20.886846 20.886846 0 41.773693l0 0q-20.886846 20.886846-41.773693 0l-125.321078-125.321079q-20.886846-20.886846 0-41.773693Z" p-id="17692"></path></svg></span></div></div></div><div class="vrow"><div class="vcol vcol-30" ><a alt="Markdown is supported" href="https://guides.github.com/features/mastering-markdown/" class="vicon" target="_blank"><svg class="markdown" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"></path></svg></a></div><div class="vcol vcol-70 text-right"><button type="button"  title="Cmd|Ctrl+Enter" class="vsubmit vbtn">'+n.i18n.t("submit")+'</button></div></div><div class="vemojis" style="display:none;"></div><div class="vinput vpreview" style="display:none;"></div><div style="display:none;" class="vmark"></div></div></div><div class="vcount" style="display:none;"><span class="vnum">0</span> '+n.i18n.t("comments")+'</div><div class="vload-top text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vcards"></div><div class="vload-bottom text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vempty" style="display:none;"></div><div class="vpage txt-center" style="display:none"><button type="button" class="vmore vbtn">'+n.i18n.t("more")+'</button></div><div class="vpower txt-right">Powered By <a href="https://valine.js.org" target="_blank">Valine</a><br>v'+d.VERSION+"</div>";n.$el.html(j),n.$el.find(".cancel-reply").on("click",(function(e){n.reset()}));var _=n.$el.find(".vempty");n.$nodata={show:function(e){return _.html(e||n.i18n.t("sofa")).show(),n},hide:function(){return _.hide(),n}};var T=n.$el.find(".vload-bottom"),S=n.$el.find(".vload-top");n.$loading={show:function(e){return e&&S.show()||T.show(),n.$nodata.hide(),n},hide:function(){return S.hide(),T.hide(),0===n.$el.find(".vcard").length&&n.$nodata.show(),n}}}(0,h.default)(n.config,(function(e){var t=(0,p.default)(".valine-comment-count"),r=0;!function e(t){var o=t[r++];if(o){var a=(0,p.default)(o).attr("data-xid");a&&n.Q(a).count().then((function(n){o.innerText=n,e(t)})).catch((function(n){o.innerText=0}))}}(t),a&&k.add(AV.Object.extend("Counter"),n.config.path),n.$el&&n.bind()}))}catch(e){(0,v.default)(n,e,"init")}};var w=function(n,e){var t=new n,r=new AV.ACL;r.setPublicReadAccess(!0),r.setPublicWriteAccess(!0),t.setACL(r),t.set("url",e.url),t.set("xid",e.xid),t.set("title",e.title),t.set("time",1),t.save().then((function(n){(0,p.default)(e.el).find(".leancloud-visitors-count").text(1)})).catch((function(n){}))},k={add:function(n,e){var t=this,r=(0,p.default)(".leancloud_visitors,.leancloud-visitors");if(1===r.length){var o=r[0],a=decodeURI((0,p.default)(o).attr("id")),i=(0,p.default)(o).attr("data-flag-title"),s=encodeURI(a),l={el:o,url:a,xid:s,title:i};if(decodeURI(a)===decodeURI(e)){var c=new AV.Query(n);c.equalTo("url",a),c.find().then((function(e){if(e.length>0){var t=e[0];t.increment("time"),t.save().then((function(n){(0,p.default)(o).find(".leancloud-visitors-count").text(n.get("time"))})).catch((function(n){}))}else w(n,l)})).catch((function(e){101==e.code?w(n,l):(0,v.default)(t,e)}))}else k.show(n,r)}else k.show(n,r)},show:function(n,e){var t=[];if(e.forEach((function(n){var e=(0,p.default)(n).find(".leancloud-visitors-count");e&&e.text("0"),t.push(/\%/.test((0,p.default)(n).attr("id"))?decodeURI((0,p.default)(n).attr("id")):(0,p.default)(n).attr("id"))})),t.length){var r=new AV.Query(n);r.containedIn("url",t),r.find().then((function(n){n.length>0&&e.forEach((function(e){n.forEach((function(n){var t=n.get("xid")||encodeURI(n.get("url")),r=n.get("time"),o=(0,p.default)(e),a=o.attr("id");if((/\%/.test(a)?a:encodeURI(a))==t){var i=o.find(".leancloud-visitors-count");i&&i.text(r)}}))}))})).catch((function(n){}))}}};o.prototype.Q=function(n){var e=this,t=arguments.length,r=e.config.clazzName;if(1==t){var o=new AV.Query(r);o.doesNotExist("rid");var a=new AV.Query(r);a.equalTo("rid","");var i=AV.Query.or(o,a);return"*"===n?i.exists("url"):i.equalTo("url",decodeURI(n)),i.addDescending("createdAt"),i.addDescending("insertedAt"),i}var s=JSON.stringify(arguments[1]).replace(/(\[|\])/g,""),l="select * from "+r+" where rid in ("+s+") order by -createdAt,-createdAt";return AV.Query.doCloudQuery(l)},o.prototype.installLocale=function(n,e){return this.i18n(n,e),this},o.prototype.setPath=function(n){return this.config.path=n,this},o.prototype.bind=function(){var n=this,e=n.$el.find(".vemojis"),t=n.$el.find(".vpreview"),r=n.$el.find(".vemoji-btn"),o=n.$el.find(".vpreview-btn"),a=n.$el.find(".veditor"),l=c.default.maps,h=!1;n.$emoji={show:function(){return!h&&function(n){var t=[];for(var r in l)l.hasOwnProperty(r)&&c.default.build(r)&&t.push('<i title="'+r+'" >'+c.default.build(r)+"</i>");e.html(t.join("")),h=!0,e.find("i").on("click",(function(n){n.preventDefault(),S(a[0]," :"+(0,p.default)(this).attr("title")+":")}))}(),n.$preview.hide(),e.show(),r.addClass("actived"),n.$emoji},hide:function(){return r.removeClass("actived"),e.hide(),n.$emoji}},n.$preview={show:function(){return y?(n.$emoji.hide(),o.addClass("actived"),t.html(y).show(),A()):n.$preview.hide(),n.$preview},hide:function(){return o.removeClass("actived"),t.hide().html(""),n.$preview}};var w=function(e){var r=(0,m.default)(e.val()||"");r||n.$preview.hide(),y!=r&&(y=r,o.hasClass("actived")>-1&&y!=t.html()&&t.html(y),(0,s.default)(e[0]),A())};r.on("click",(function(e){r.hasClass("actived")?n.$emoji.hide():n.$emoji.show()})),o.on("click",(function(e){o.hasClass("actived")?n.$preview.hide():n.$preview.show()}));var k=n.config.meta,j={},_={veditor:"comment"};for(var T in k.forEach((function(n){_["v"+n]=n})),_)_.hasOwnProperty(T)&&function(){var e=_[T],t=n.$el.find("."+T);j[e]=t,t.on("input change blur propertychange",(function(r){n.config.enableQQ&&"blur"===r.type&&"nick"===e&&(isNaN(t.val())?p.default.store.get(d.QQCacheKey)&&p.default.store.get(d.QQCacheKey).nick!=t.val()&&(p.default.store.remove(d.QQCacheKey),b.nick=t.val(),b.mail="",b.QQAvatar=""):(0,f.fetchQQFn)(t.val(),(function(n){var e=n.nick||t.val(),r=n.qq+"@qq.com";(0,p.default)(".vnick").val(e),(0,p.default)(".vmail").val(r),b.nick=e,b.mail=r,b.QQAvatar=n.pic}))),"comment"===e?w(t):b[e]=p.default.escape(t.val().replace(/(^\s*)|(\s*$)/g,"")).substring(0,40)}))}();var S=function(n,e){if(document.selection)n.focus(),document.selection.createRange().text=e,n.focus();else if(n.selectionStart||"0"==n.selectionStart){var t=n.selectionStart,r=n.selectionEnd,o=n.scrollTop;n.value=n.value.substring(0,t)+e+n.value.substring(r,n.value.length),n.focus(),n.selectionStart=t+e.length,n.selectionEnd=t+e.length,n.scrollTop=o}else n.focus(),n.value+=e;setTimeout((function(e){w((0,p.default)(n))}),100)},C={no:1,size:n.config.pageSize,skip:n.config.pageSize},z=n.$el.find(".vpage");z.on("click",(function(n){z.hide(),C.no++,$()}));var $=function(){var e=C.size,t=C.no,r=Number(n.$el.find(".vnum").text());n.$loading.show();var o=n.Q(n.config.path);o.limit(e),o.skip((t-1)*e),o.find().then((function(o){if(C.skip=C.size,o&&o.length){var a=[];o.forEach((function(e){a.push(e.id),I(e,n.$el.find(".vcards"),!0)})),n.Q(n.config.path,a).then((function(n){(n&&n.results||[]).forEach((function(n){I(n,(0,p.default)('.vquote[data-self-id="'+n.get("rid")+'"]'))})).catch((function(n){}))})),e*t<r?z.show():z.hide()}else n.$nodata.show();n.$loading.hide()})).catch((function(e){n.$loading.hide(),(0,v.default)(n,e,"query")}))};n.Q(n.config.path).count().then((function(e){e>0?(n.$el.find(".vcount").show().find(".vnum").text(e),$()):n.$loading.hide()})).catch((function(e){(0,v.default)(n,e,"count")}));var I=function(e,t,r){var o=(0,p.default)('<div class="vcard" id="'+e.id+'"></div>'),a=e.get("ua"),s="";a&&!/ja/.test(n.config.lang)&&(s='<span class="vsys">'+(a=p.default.detect(a)).browser+" "+a.version+'</span> <span class="vsys">'+a.os+" "+a.osVersion+"</span>"),"*"===n.config.path&&(s='<a href="'+e.get("url")+'" class="vsys">'+e.get("url")+"</a>");var l=e.get("link")?/^https?\:\/\//.test(e.get("link"))?e.get("link"):"http://"+e.get("link"):"",c=l?'<a class="vnick" rel="nofollow" href="'+l+'" target="_blank" >'+e.get("nick")+"</a>":'<span class="vnick">'+e.get("nick")+"</span>",d=(x.hide?"":n.config.enableQQ&&e.get("QQAvatar")?'<img class="vimg" src="'+e.get("QQAvatar")+'" referrerPolicy="no-referrer"/>':'<img class="vimg" src="'+(x.cdn+(0,i.default)(e.get("mail"))+x.params)+'">')+'<div class="vh"><div class="vhead">'+c+" "+s+'</div><div class="vmeta"><span class="vtime" >'+(0,u.default)(e.get("insertedAt"),n.i18n)+'</span><span class="vat" data-vm-id="'+(e.get("rid")||e.id)+'" data-self-id="'+e.id+'">'+n.i18n.t("reply")+'</span></div><div class="vcontent" data-expand="'+n.i18n.t("expand")+'">'+(0,g.default)(e.get("comment"))+'</div><div class="vreply-wrapper" data-self-id="'+e.id+'"></div><div class="vquote" data-self-id="'+e.id+'"></div></div>';o.html(d);var m=o.find(".vat");o.find("a").forEach((function(n){n&&!(0,p.default)(n).hasClass("at")&&(0,p.default)(n).attr({target:"_blank",rel:"nofollow"})})),r?t.append(o):t.prepend(o);var h=o.find(".vcontent");h&&P(h),m&&E(m,e),A()},O={},E=function(e,t){e.on("click",(function(r){var o=e.attr("data-vm-id"),a=e.attr("data-self-id"),i=n.$el.find(".vwrap"),s="@"+p.default.escape(t.get("nick"));(0,p.default)('.vreply-wrapper[data-self-id="'+a+'"]').append(i).find(".cancel-reply").show(),O={at:p.default.escape(s)+" ",rid:o,pid:a,rmail:t.get("mail")},j.comment.attr({placeholder:s})[0].focus()}))},A=function(){setTimeout((function(){try{"MathJax"in window&&"version"in window.MathJax&&(/^3.*/.test(window.MathJax.version)&&MathJax.typeset()||MathJax.Hub.Queue(["Typeset",MathJax.Hub,document.querySelector(".v")])),"renderMathInElement"in window&&renderMathInElement((0,p.default)(".v")[0],{delimiters:[{left:"$$",right:"$$",display:!0},{left:"$",right:"$",display:!1}]})}catch(n){}}),100)},P=function(n){setTimeout((function(){n[0].offsetHeight>200&&(n.addClass("expand"),n.on("click",(function(e){n.removeClass("expand")})))}))};!function(e){if(e=p.default.store.get(d.MetaCacheKey)||e)for(var t in k){var r=k[t];n.$el.find(".v"+r).val(p.default.unescape(e[r])),b[r]=e[r]}var o=p.default.store.get(d.QQCacheKey);b.QQAvatar=n.config.enableQQ&&!!o&&o.pic||""}(),n.reset=function(){b.comment="",j.comment.val(""),w(j.comment),j.comment.attr("placeholder",n.config.placeholder),O={},n.$preview.hide(),n.$el.find(".vpanel").append(n.$el.find(".vwrap")),n.$el.find(".cancel-reply").hide(),y=""};var N=n.$el.find(".vsubmit"),M=function(e){if(n.config.requiredFields.indexOf("nick")>-1&&b.nick.length<3)return j.nick[0].focus(),void n.$el.find(".status-bar").text(""+n.i18n.t("nickFail")).empty(3e3);if(n.config.requiredFields.indexOf("mail")>-1&&!/[\w-\.]+@([\w-]+\.)+[a-z]{2,3}/.test(b.mail))return j.mail[0].focus(),void n.$el.find(".status-bar").text(""+n.i18n.t("mailFail")).empty(3e3);if(""!=y){b.comment=y,b.nick=b.nick||"Anonymous";var t=p.default.store.get("vlx");t&&Date.now()/1e3-t/1e3<20?n.$el.find(".status-bar").text(n.i18n.t("busy")).empty(3e3):R()}else j.comment[0].focus()},R=function(){p.default.store.set("vlx",Date.now()),N.attr({disabled:!0}),n.$loading.show(!0);var e=new(AV.Object.extend(n.config.clazzName||"Comment"));if(b.url=decodeURI(n.config.path),b.insertedAt=new Date,O.rid){var t=O.pid||O.rid;e.set("rid",O.rid),e.set("pid",t),b.comment=y.replace("<p>",'<p><a class="at" href="#'+t+'">'+O.at+"</a> , ")}for(var r in b)if(b.hasOwnProperty(r)){var o=b[r];e.set(r,o)}e.setACL(function(){var n=new AV.ACL;return n.setPublicReadAccess(!0),n.setPublicWriteAccess(!1),n}()),e.save().then((function(e){"Anonymous"!=b.nick&&p.default.store.set(d.MetaCacheKey,{nick:b.nick,link:b.link,mail:b.mail});var t=n.$el.find(".vnum");try{O.rid?I(e,(0,p.default)('.vquote[data-self-id="'+O.rid+'"]'),!0):(Number(t.text())?t.text(Number(t.text())+1):n.$el.find(".vcount").show().find(".vnum").text(Number(t.text())+1),I(e,n.$el.find(".vcards")),C.skip++),N.removeAttr("disabled"),n.$loading.hide(),n.reset()}catch(e){(0,v.default)(n,e,"save")}})).catch((function(e){(0,v.default)(n,e,"commitEvt")}))};N.on("click",M),(0,p.default)(document).on("keydown",(function(n){var e=(n=event||n).keyCode||n.which||n.charCode;(n.ctrlKey||n.metaKey)&&13===e&&M(),9===e&&"veditor"==(document.activeElement.id||"")&&(n.preventDefault(),S(a[0],"    "))})).on("paste",(function(n){var e="clipboardData"in n?n.clipboardData:n.originalEvent&&n.originalEvent.clipboardData||window.clipboardData;e&&L(e.items,!0)})),a.on("dragenter dragleave dragover drop",(function(n){n.stopPropagation(),n.preventDefault(),"drop"===n.type&&L(n.dataTransfer.items)}));var L=function(n,e){for(var t=[],r=0,o=n.length;r<o;r++){var i=n[r];if("string"===i.kind&&i.type.match("^text/html"))!e&&i.getAsString((function(n){n&&S(a[0],n.replace(/<[^>]+>/g,""))}));else if(-1!==i.type.indexOf("image")){t.push(i.getAsFile());continue}}D(t)},D=function e(t,r){r=r||0;var o=t.length;if(o>0){var i=t[r];N.attr({disabled:!0});var l="![Uploading "+i.name+"...]()";S(a[0],l),q(i,(function(c){500!=c.code?(a.val(a.val().replace(l,"!["+i.name+"]("+c.data.url+")\r\n")),(0,s.default)(a[0]),++r<o?e(t,r):N.removeAttr("disabled")):(a.val(a.val().replace(l,"")),(0,s.default)(a[0]),n.$el.find(".status-bar").text(c.msg).empty(3e3),N.removeAttr("disabled"))}))}},q=function(n,e){var t=new FormData;t.append("image",n),p.default.ajax({type:"post",url:"https://pic.alexhchu.com/api/upload",data:t,success:function(n){e&&e(n)}})}},n.exports=a,n.exports.default=a},function(n,e,t){"use strict";e.__esModule=!0;var r=function(n){return n&&n.__esModule?n:{default:n}}(t(0)),o=!1;e.default=function(n,e){if("AV"in window){var t=window.AV.version||window.AV.VERSION;parseInt(t.split(".")[0])>2?o=!!AV.applicationId&&!!AV.applicationKey:r.default.deleteInWin("AV",0)}o?e&&e():r.default.sdkLoader("//cdn.jsdelivr.net/npm/leancloud-storage@3/dist/av-min.js","AV",(function(t){var r,a="https://",i=n.app_id||n.appId,s=n.app_key||n.appKey;if(!n.serverURLs)switch(i.slice(-9)){case"-9Nh9j0Va":a+="tab.";break;case"-MdYXbMMI":a+="us."}r=n.serverURLs||a+"avoscloud.com",AV.init({appId:i,appKey:s,serverURLs:r}),o=!0,e&&e()}))}},function(n,e,t){"use strict";function r(n){return n&&n.__esModule?n:{default:n}}e.__esModule=!0;var o=r(t(37)),a=r(t(56)),i=r(t(57)),s=r(t(54)),l=r(t(55)),c={zh:a.default,"zh-cn":a.default,"zh-CN":a.default,"zh-TW":i.default,en:s.default,"en-US":s.default,ja:l.default,"ja-JP":l.default};e.default=function(n,e){return!c[n]&&n&&e&&(c[n]=e),new o.default({phrases:c[n||"zh"],locale:n})}},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n,e){if(n.$el&&n.$loading.hide().$nodata.hide(),"[object Error]"==={}.toString.call(e)){var t=e.code||e.message||e.error||"";if(isNaN(t))n.$el&&n.$nodata.show('<pre style="text-align:left;"> '+JSON.stringify(e)+"</pre>");else{var r=n.i18n.t("code-"+t),o=(r=="code-"+t?void 0:r)||e.message||e.error||"";101==t||-1==t?n.$nodata.show():n.$el&&n.$nodata.show('<pre style="text-align:left;">Code '+t+": "+o+"</pre>")}}else n.$el&&n.$nodata.show('<pre style="text-align:left;">'+JSON.stringify(e)+"</pre>")}},function(n,e,t){"use strict";function r(n){return n&&n.__esModule?n:{default:n}}e.__esModule=!0;var o=t(36),a=r(o),i=r(t(0)),s=r(t(6)),l=t(33),c=new o.Renderer;c.code=function(n,e){return'<pre><code class="hljs language-'+e+'">'+(e&&hljs.getLanguage(e)?hljs.highlight(e,n).value:i.default.escape(n))+"</code></pre>"},a.default.setOptions({renderer:"hljs"in window?c:new o.Renderer,highlight:function(n,e){return"hljs"in window?e&&hljs.getLanguage(e)&&hljs.highlight(e,n,!0).value||hljs.highlightAuto(n).value:l(n)},gfm:!0,tables:!0,breaks:!0,pedantic:!1,sanitize:!0,smartLists:!0,smartypants:!0,headerPrefi:"v-"}),e.default=function(n){return s.default.parse((0,a.default)(n))}},function(n,e,t){"use strict";e.__esModule=!0,e.recordIPFn=e.fetchQQFn=void 0;var r=function(n){return n&&n.__esModule?n:{default:n}}(t(0)),o=t(2);e.fetchQQFn=function(n,e){var t=r.default.store.get(o.QQCacheKey);t&&t.qq==n?e&&e(t):r.default.ajax({type:"POST",url:"//valine.api.ioliu.cn/getqqinfo",data:{qq:n},success:function(n){n.errmsg||(r.default.store.set(o.QQCacheKey,n),e&&e(n))}})},e.recordIPFn=function(n){r.default.sdkLoader("//api.ip.sb/jsonip?callback=getIP","getIP"),window.getIP=function(e){n&&n(e.ip),r.default.deleteInWin("getIP")}}},function(n,e,t){"use strict";var r=function(n){var e=a(n.getDate(),2),t=a(n.getMonth()+1,2);return a(n.getFullYear(),2)+"-"+t+"-"+e},o=function n(e){return e instanceof Date?e:!isNaN(e)||/^\d+$/.test(e)?new Date(parseInt(e)):/GMT/.test(e||"")?n(new Date(e).getTime()):(e=(e||"").replace(/(^\s*)|(\s*$)/g,"").replace(/\.\d+/,"").replace(/-/,"/").replace(/-/,"/").replace(/(\d)T(\d)/,"$1 $2").replace(/Z/," UTC").replace(/([+-]\d\d):?(\d\d)/," $1$2"),new Date(e))},a=function(n,e){for(var t=n.toString();t.length<e;)t="0"+t;return t};n.exports=function(n,e){if(!n)return"";try{var t=o(n).getTime(),a=(new Date).getTime()-t,i=Math.floor(a/864e5);if(0===i){var s=a%864e5,l=Math.floor(s/36e5);if(0===l){var c=s%36e5,d=Math.floor(c/6e4);if(0===d){var u=c%6e4;return Math.round(u/1e3)+" "+e.t("seconds")}return d+" "+e.t("minutes")}return l+" "+e.t("hours")}return i<0?e.t("now"):i<8?i+" "+e.t("days"):r(n)}catch(n){}}},function(n,e,t){"use strict";e.__esModule=!0;var r=function(n){return n&&n.__esModule?n:{default:n}}(t(51));e.default=function(n){return(0,r.default)(n,{onTagAttr:function(n,e,t,r){return o(n,e,t,r)},onIgnoreTagAttr:function(n,e,t,r){return o(n,e,t,r)}}).replace(/\<\/?div\>/gi,"")};var o=function(n,e,t,o){if(/code|pre|span/gi.test(n)){if("style"==e)return e+'="'+(/^color/gi.test(t)?t:"").replace(/(color:[#0-9a-fA-F]{1,6};?).+/gi,"$1")+'"';if("class"==e)return e+"='"+r.default.escapeAttrValue(t)+"'"}if("img"===n&&["src","class"].indexOf(e)>-1)return e+'="'+r.default.escapeAttrValue(t)+'" referrerPolicy="no-referrer" '}},function(n,e,t){var r;!function(o){"use strict";function a(n,e){var t=(65535&n)+(65535&e);return(n>>16)+(e>>16)+(t>>16)<<16|65535&t}function i(n,e,t,r,o,i){return a(function(n,e){return n<<e|n>>>32-e}(a(a(e,n),a(r,i)),o),t)}function s(n,e,t,r,o,a,s){return i(e&t|~e&r,n,e,o,a,s)}function l(n,e,t,r,o,a,s){return i(e&r|t&~r,n,e,o,a,s)}function c(n,e,t,r,o,a,s){return i(e^t^r,n,e,o,a,s)}function d(n,e,t,r,o,a,s){return i(t^(e|~r),n,e,o,a,s)}function u(n,e){n[e>>5]|=128<<e%32,n[14+(e+64>>>9<<4)]=e;var t,r,o,i,u,p=1732584193,m=-271733879,h=-1732584194,f=271733878;for(t=0;t<n.length;t+=16)r=p,o=m,i=h,u=f,p=s(p,m,h,f,n[t],7,-680876936),f=s(f,p,m,h,n[t+1],12,-389564586),h=s(h,f,p,m,n[t+2],17,606105819),m=s(m,h,f,p,n[t+3],22,-1044525330),p=s(p,m,h,f,n[t+4],7,-176418897),f=s(f,p,m,h,n[t+5],12,1200080426),h=s(h,f,p,m,n[t+6],17,-1473231341),m=s(m,h,f,p,n[t+7],22,-45705983),p=s(p,m,h,f,n[t+8],7,1770035416),f=s(f,p,m,h,n[t+9],12,-1958414417),h=s(h,f,p,m,n[t+10],17,-42063),m=s(m,h,f,p,n[t+11],22,-1990404162),p=s(p,m,h,f,n[t+12],7,1804603682),f=s(f,p,m,h,n[t+13],12,-40341101),h=s(h,f,p,m,n[t+14],17,-1502002290),p=l(p,m=s(m,h,f,p,n[t+15],22,1236535329),h,f,n[t+1],5,-165796510),f=l(f,p,m,h,n[t+6],9,-1069501632),h=l(h,f,p,m,n[t+11],14,643717713),m=l(m,h,f,p,n[t],20,-373897302),p=l(p,m,h,f,n[t+5],5,-701558691),f=l(f,p,m,h,n[t+10],9,38016083),h=l(h,f,p,m,n[t+15],14,-660478335),m=l(m,h,f,p,n[t+4],20,-405537848),p=l(p,m,h,f,n[t+9],5,568446438),f=l(f,p,m,h,n[t+14],9,-1019803690),h=l(h,f,p,m,n[t+3],14,-187363961),m=l(m,h,f,p,n[t+8],20,1163531501),p=l(p,m,h,f,n[t+13],5,-1444681467),f=l(f,p,m,h,n[t+2],9,-51403784),h=l(h,f,p,m,n[t+7],14,1735328473),p=c(p,m=l(m,h,f,p,n[t+12],20,-1926607734),h,f,n[t+5],4,-378558),f=c(f,p,m,h,n[t+8],11,-2022574463),h=c(h,f,p,m,n[t+11],16,1839030562),m=c(m,h,f,p,n[t+14],23,-35309556),p=c(p,m,h,f,n[t+1],4,-1530992060),f=c(f,p,m,h,n[t+4],11,1272893353),h=c(h,f,p,m,n[t+7],16,-155497632),m=c(m,h,f,p,n[t+10],23,-1094730640),p=c(p,m,h,f,n[t+13],4,681279174),f=c(f,p,m,h,n[t],11,-358537222),h=c(h,f,p,m,n[t+3],16,-722521979),m=c(m,h,f,p,n[t+6],23,76029189),p=c(p,m,h,f,n[t+9],4,-640364487),f=c(f,p,m,h,n[t+12],11,-421815835),h=c(h,f,p,m,n[t+15],16,530742520),p=d(p,m=c(m,h,f,p,n[t+2],23,-995338651),h,f,n[t],6,-198630844),f=d(f,p,m,h,n[t+7],10,1126891415),h=d(h,f,p,m,n[t+14],15,-1416354905),m=d(m,h,f,p,n[t+5],21,-57434055),p=d(p,m,h,f,n[t+12],6,1700485571),f=d(f,p,m,h,n[t+3],10,-1894986606),h=d(h,f,p,m,n[t+10],15,-1051523),m=d(m,h,f,p,n[t+1],21,-2054922799),p=d(p,m,h,f,n[t+8],6,1873313359),f=d(f,p,m,h,n[t+15],10,-30611744),h=d(h,f,p,m,n[t+6],15,-1560198380),m=d(m,h,f,p,n[t+13],21,1309151649),p=d(p,m,h,f,n[t+4],6,-145523070),f=d(f,p,m,h,n[t+11],10,-1120210379),h=d(h,f,p,m,n[t+2],15,718787259),m=d(m,h,f,p,n[t+9],21,-343485551),p=a(p,r),m=a(m,o),h=a(h,i),f=a(f,u);return[p,m,h,f]}function p(n){var e,t="",r=32*n.length;for(e=0;e<r;e+=8)t+=String.fromCharCode(n[e>>5]>>>e%32&255);return t}function m(n){var e,t=[];for(t[(n.length>>2)-1]=void 0,e=0;e<t.length;e+=1)t[e]=0;var r=8*n.length;for(e=0;e<r;e+=8)t[e>>5]|=(255&n.charCodeAt(e/8))<<e%32;return t}function h(n){var e,t,r="0123456789abcdef",o="";for(t=0;t<n.length;t+=1)e=n.charCodeAt(t),o+=r.charAt(e>>>4&15)+r.charAt(15&e);return o}function f(n){return unescape(encodeURIComponent(n))}function g(n){return function(n){return p(u(m(n),8*n.length))}(f(n))}function v(n,e){return function(n,e){var t,r,o=m(n),a=[],i=[];for(a[15]=i[15]=void 0,o.length>16&&(o=u(o,8*n.length)),t=0;t<16;t+=1)a[t]=909522486^o[t],i[t]=1549556828^o[t];return r=u(a.concat(m(e)),512+8*e.length),p(u(i.concat(r),640))}(f(n),f(e))}function b(n,e,t){return e?t?v(e,n):function(n,e){return h(v(n,e))}(e,n):t?g(n):function(n){return h(g(n))}(n)}void 0!==(r=function(){return b}.call(e,t,e,n))&&(n.exports=r)}()},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n){var e={},t={Trident:(n=n||navigator.userAgent).indexOf("Trident")>-1||n.indexOf("NET CLR")>-1,Presto:n.indexOf("Presto")>-1,WebKit:n.indexOf("AppleWebKit")>-1,Gecko:n.indexOf("Gecko/")>-1,Safari:n.indexOf("Safari")>-1,Edge:n.indexOf("Edge")>-1||n.indexOf("Edg")>-1,Chrome:n.indexOf("Chrome")>-1||n.indexOf("CriOS")>-1,IE:n.indexOf("MSIE")>-1||n.indexOf("Trident")>-1,Firefox:n.indexOf("Firefox")>-1||n.indexOf("FxiOS")>-1,"Firefox Focus":n.indexOf("Focus")>-1,Chromium:n.indexOf("Chromium")>-1,Opera:n.indexOf("Opera")>-1||n.indexOf("OPR")>-1,Vivaldi:n.indexOf("Vivaldi")>-1,Yandex:n.indexOf("YaBrowser")>-1,Kindle:n.indexOf("Kindle")>-1||n.indexOf("Silk/")>-1,360:n.indexOf("360EE")>-1||n.indexOf("360SE")>-1,UC:n.indexOf("UC")>-1||n.indexOf(" UBrowser")>-1,QQBrowser:n.indexOf("QQBrowser")>-1,QQ:n.indexOf("QQ/")>-1,Baidu:n.indexOf("Baidu")>-1||n.indexOf("BIDUBrowser")>-1,Maxthon:n.indexOf("Maxthon")>-1,Sogou:n.indexOf("MetaSr")>-1||n.indexOf("Sogou")>-1,LBBROWSER:n.indexOf("LBBROWSER")>-1,"2345Explorer":n.indexOf("2345Explorer")>-1,TheWorld:n.indexOf("TheWorld")>-1,XiaoMi:n.indexOf("MiuiBrowser")>-1,Quark:n.indexOf("Quark")>-1,Qiyu:n.indexOf("Qiyu")>-1,Wechat:n.indexOf("MicroMessenger")>-1,Taobao:n.indexOf("AliApp(TB")>-1,Alipay:n.indexOf("AliApp(AP")>-1,Weibo:n.indexOf("Weibo")>-1,Douban:n.indexOf("com.douban.frodo")>-1,Suning:n.indexOf("SNEBUY-APP")>-1,iQiYi:n.indexOf("IqiyiApp")>-1,Windows:n.indexOf("Windows")>-1,Linux:n.indexOf("Linux")>-1||n.indexOf("X11")>-1,macOS:n.indexOf("Macintosh")>-1,Android:n.indexOf("Android")>-1||n.indexOf("Adr")>-1,Ubuntu:n.indexOf("Ubuntu")>-1,FreeBSD:n.indexOf("FreeBSD")>-1,Debian:n.indexOf("Debian")>-1,"Windows Phone":n.indexOf("IEMobile")>-1||n.indexOf("Windows Phone")>-1,BlackBerry:n.indexOf("BlackBerry")>-1||n.indexOf("RIM")>-1||n.indexOf("BB10")>-1,MeeGo:n.indexOf("MeeGo")>-1,Symbian:n.indexOf("Symbian")>-1,iOS:n.indexOf("like Mac OS X")>-1,"Chrome OS":n.indexOf("CrOS")>-1,WebOS:n.indexOf("hpwOS")>-1,Mobile:n.indexOf("Mobi")>-1||n.indexOf("iPh")>-1||n.indexOf("480")>-1,Tablet:n.indexOf("Tablet")>-1||n.indexOf("Pad")>-1||n.indexOf("Nexus 7")>-1};t.Mobile&&(t.Mobile=!(n.indexOf("iPad")>-1));var r={browser:["Safari","Chrome","Edge","IE","Firefox","Firefox Focus","Chromium","Opera","Vivaldi","Yandex","Kindle","360","UC","QQBrowser","QQ","Baidu","Maxthon","Sogou","LBBROWSER","2345Explorer","TheWorld","XiaoMi","Quark","Qiyu","Wechat","Taobao","Alipay","Weibo","Douban","Suning","iQiYi"],os:["Windows","Linux","Mac OS","macOS","Android","Ubuntu","FreeBSD","Debian","iOS","Windows Phone","BlackBerry","MeeGo","Symbian","Chrome OS","WebOS"]};for(var o in r)if(r.hasOwnProperty(o))for(var a=0,i=r[o].length;a<i;a++){var s=r[o][a];t[s]&&(e[o]=s)}var l={Windows:function(){var e=n.replace(/^.*Windows NT ([\d.]+).*$/,"$1");return{6.4:"10",6.3:"8.1",6.2:"8",6.1:"7","6.0":"Vista",5.2:"XP",5.1:"XP","5.0":"2000"}[e]||e},Android:n.replace(/^.*Android ([\d.]+);.*$/,"$1"),iOS:n.replace(/^.*OS ([\d_]+) like.*$/,"$1").replace(/_/g,"."),Debian:n.replace(/^.*Debian\/([\d.]+).*$/,"$1"),"Windows Phone":n.replace(/^.*Windows Phone( OS)? ([\d.]+);.*$/,"$2"),macOS:n.replace(/^.*Mac OS X ([\d_]+).*$/,"$1").replace(/_/g,"."),WebOS:n.replace(/^.*hpwOS\/([\d.]+);.*$/,"$1"),BlackBerry:n.replace(/^.*BB([\d.]+);*$/,"$1")};e.osVersion="";var c=l[e.os];c&&(e.osVersion="function"==typeof c?c():c==n?"":c);var d={Safari:n.replace(/^.*Version\/([\d.]+).*$/,"$1"),Chrome:n.replace(/^.*Chrome\/([\d.]+).*$/,"$1").replace(/^.*CriOS\/([\d.]+).*$/,"$1"),IE:n.replace(/^.*MSIE ([\d.]+).*$/,"$1").replace(/^.*rv:([\d.]+).*$/,"$1"),Edge:n.replace(/^.*Edge?\/([\d.]+).*$/,"$1"),Firefox:n.replace(/^.*Firefox\/([\d.]+).*$/,"$1").replace(/^.*FxiOS\/([\d.]+).*$/,"$1"),"Firefox Focus":n.replace(/^.*Focus\/([\d.]+).*$/,"$1"),Chromium:n.replace(/^.*Chromium\/([\d.]+).*$/,"$1"),Opera:n.replace(/^.*Opera\/([\d.]+).*$/,"$1").replace(/^.*OPR\/([\d.]+).*$/,"$1"),Vivaldi:n.replace(/^.*Vivaldi\/([\d.]+).*$/,"$1"),Yandex:n.replace(/^.*YaBrowser\/([\d.]+).*$/,"$1"),Kindle:n.replace(/^.*Version\/([\d.]+).*$/,"$1"),Maxthon:n.replace(/^.*Maxthon\/([\d.]+).*$/,"$1"),QQBrowser:n.replace(/^.*QQBrowser\/([\d.]+).*$/,"$1"),QQ:n.replace(/^.*QQ\/([\d.]+).*$/,"$1"),Baidu:n.replace(/^.*BIDUBrowser[\s\/]([\d.]+).*$/,"$1"),UC:n.replace(/^.*UC?Browser\/([\d.]+).*$/,"$1"),Sogou:n.replace(/^.*SE ([\d.X]+).*$/,"$1").replace(/^.*SogouMobileBrowser\/([\d.]+).*$/,"$1"),"2345Explorer":n.replace(/^.*2345Explorer\/([\d.]+).*$/,"$1"),TheWorld:n.replace(/^.*TheWorld ([\d.]+).*$/,"$1"),XiaoMi:n.replace(/^.*MiuiBrowser\/([\d.]+).*$/,"$1"),Quark:n.replace(/^.*Quark\/([\d.]+).*$/,"$1"),Qiyu:n.replace(/^.*Qiyu\/([\d.]+).*$/,"$1"),Wechat:n.replace(/^.*MicroMessenger\/([\d.]+).*$/,"$1"),Taobao:n.replace(/^.*AliApp\(TB\/([\d.]+).*$/,"$1"),Alipay:n.replace(/^.*AliApp\(AP\/([\d.]+).*$/,"$1"),Weibo:n.replace(/^.*weibo__([\d.]+).*$/,"$1"),Douban:n.replace(/^.*com.douban.frodo\/([\d.]+).*$/,"$1"),Suning:n.replace(/^.*SNEBUY-APP([\d.]+).*$/,"$1"),iQiYi:n.replace(/^.*IqiyiVersion\/([\d.]+).*$/,"$1")};e.version="";var u=d[e.browser];return u&&(e.version="function"==typeof u?u():u==n?"":u),null==e.browser&&(e.browser="Unknow App"),e}},function(n,e,t){var r,o;o=function(n,e,t){function r(e,o,a){return a=Object.create(r.fn),e&&a.push.apply(a,e.addEventListener?[e]:""+e===e?/</.test(e)?((o=n.createElement(o)).innerHTML=e,o.children):o?(o=r(o)[0])?o[t](e):a:n[t](e):e),a}return r.fn=[],r.one=function(n,e){return r(n,e)[0]||null},r}(document,0,"querySelectorAll"),void 0!==(r=function(){return o}.apply(e,[]))&&(n.exports=r)},function(n,e,t){function r(n){return null==n}function o(n){(n=function(n){var e={};for(var t in n)e[t]=n[t];return e}(n||{})).whiteList=n.whiteList||a.whiteList,n.onAttr=n.onAttr||a.onAttr,n.onIgnoreAttr=n.onIgnoreAttr||a.onIgnoreAttr,n.safeAttrValue=n.safeAttrValue||a.safeAttrValue,this.options=n}var a=t(7),i=t(30);t(8),o.prototype.process=function(n){if(!(n=(n=n||"").toString()))return"";var e=this.options,t=e.whiteList,o=e.onAttr,a=e.onIgnoreAttr,s=e.safeAttrValue;return i(n,(function(n,e,i,l,c){var d=t[i],u=!1;if(!0===d?u=d:"function"==typeof d?u=d(l):d instanceof RegExp&&(u=d.test(l)),!0!==u&&(u=!1),l=s(i,l)){var p,m={position:e,sourcePosition:n,source:c,isWhite:u};return u?r(p=o(i,l,m))?i+":"+l:p:r(p=a(i,l,m))?void 0:p}}))},n.exports=o},function(n,e,t){var r=t(8);n.exports=function(n,e){function t(){if(!a){var t=r.trim(n.slice(i,s)),o=t.indexOf(":");if(-1!==o){var c=r.trim(t.slice(0,o)),d=r.trim(t.slice(o+1));if(c){var u=e(i,l.length,c,d,t);u&&(l+=u+"; ")}}}i=s+1}";"!==(n=r.trimRight(n))[n.length-1]&&(n+=";");for(var o=n.length,a=!1,i=0,s=0,l="";s<o;s++){var c=n[s];if("/"===c&&"*"===n[s+1]){var d=n.indexOf("*/",s+2);if(-1===d)break;i=(s=d+1)+1,a=!1}else"("===c?a=!0:")"===c?a=!1:";"===c?a||t():"\n"===c&&t()}return r.trim(l)}},function(n,e,t){"use strict";var r=t(35),o=Object.prototype.toString,a=Object.prototype.hasOwnProperty,i=function(n,e,t){for(var r=0,o=n.length;r<o;r++)a.call(n,r)&&(null==t?e(n[r],r,n):e.call(t,n[r],r,n))},s=function(n,e,t){for(var r=0,o=n.length;r<o;r++)null==t?e(n.charAt(r),r,n):e.call(t,n.charAt(r),r,n)},l=function(n,e,t){for(var r in n)a.call(n,r)&&(null==t?e(n[r],r,n):e.call(t,n[r],r,n))};n.exports=function(n,e,t){if(!r(e))throw new TypeError("iterator must be a function");var a;arguments.length>=3&&(a=t),"[object Array]"===o.call(n)?i(n,e,a):"string"==typeof n?s(n,e,a):l(n,e,a)}},function(n,e,t){"use strict";var r=Array.prototype.slice,o=Object.prototype.toString;n.exports=function(n){var e=this;if("function"!=typeof e||"[object Function]"!==o.call(e))throw new TypeError("Function.prototype.bind called on incompatible "+e);for(var t,a=r.call(arguments,1),i=function(){if(this instanceof t){var o=e.apply(this,a.concat(r.call(arguments)));return Object(o)===o?o:this}return e.apply(n,a.concat(r.call(arguments)))},s=Math.max(0,e.length-a.length),l=[],c=0;c<s;c++)l.push("$"+c);if(t=Function("binder","return function ("+l.join(",")+"){ return binder.apply(this,arguments); }")(i),e.prototype){var d=function(){};d.prototype=e.prototype,t.prototype=new d,d.prototype=null}return t}},function(n,e,t){n.exports=function(){"use strict";var n=function(n,e){return function(n){var e=n.exports=function(){return new RegExp("(?:"+e.line().source+")|(?:"+e.block().source+")","gm")};e.line=function(){return/(?:^|\s)\/\/(.+?)$/gm},e.block=function(){return/\/\*([\S\s]*?)\*\//gm}}(e={exports:{}}),e.exports}(),e=["23AC69","91C132","F19726","E8552D","1AAB8E","E1147F","2980C1","1BA1E6","9FA0A0","F19726","E30B20","E30B20","A3338B"];return function(t,r){void 0===r&&(r={});var o=r.colors;void 0===o&&(o=e);var a=0,i={},s=new RegExp("("+/[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u3040-\u309f\uac00-\ud7af\u0400-\u04FF]+|\w+/.source+"|"+/</.source+")|("+n().source+")","gmi");return t.replace(s,(function(n,e,t){if(t)return function(n){return'<span style="color: slategray">'+n+"</span>"}(t);if("<"===e)return"&lt;";var r;i[e]?r=i[e]:(r=o[a],i[e]=r);var s='<span style="color: #'+r+'">'+e+"</span>";return a=++a%o.length,s}))}}()},function(n,e,t){"use strict";var r=t(4);n.exports=r.call(Function.call,Object.prototype.hasOwnProperty)},function(n,e,t){"use strict";var r=Function.prototype.toString,o=/^\s*class\b/,a=function(n){try{var e=r.call(n);return o.test(e)}catch(n){return!1}},i=Object.prototype.toString,s="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;n.exports=function(n){if(!n)return!1;if("function"!=typeof n&&"object"!=typeof n)return!1;if("function"==typeof n&&!n.prototype)return!0;if(s)return function(n){try{return!a(n)&&(r.call(n),!0)}catch(n){return!1}}(n);if(a(n))return!1;var e=i.call(n);return"[object Function]"===e||"[object GeneratorFunction]"===e}},function(n,e,t){(function(e){!function(e){"use strict";function t(n){this.tokens=[],this.tokens.links={},this.options=n||h.defaults,this.rules=f.normal,this.options.pedantic?this.rules=f.pedantic:this.options.gfm&&(this.options.tables?this.rules=f.tables:this.rules=f.gfm)}function r(n,e){if(this.options=e||h.defaults,this.links=n,this.rules=g.normal,this.renderer=this.options.renderer||new o,this.renderer.options=this.options,!this.links)throw new Error("Tokens array requires a `links` property.");this.options.pedantic?this.rules=g.pedantic:this.options.gfm&&(this.options.breaks?this.rules=g.breaks:this.rules=g.gfm)}function o(n){this.options=n||h.defaults}function a(){}function i(n){this.tokens=[],this.token=null,this.options=n||h.defaults,this.options.renderer=this.options.renderer||new o,this.renderer=this.options.renderer,this.renderer.options=this.options}function s(n,e){return n.replace(e?/&/g:/&(?!#?\w+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function l(n){return n.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,(function(n,e){return"colon"===(e=e.toLowerCase())?":":"#"===e.charAt(0)?"x"===e.charAt(1)?String.fromCharCode(parseInt(e.substring(2),16)):String.fromCharCode(+e.substring(1)):""}))}function c(n,e){return n=n.source||n,e=e||"",{replace:function(e,t){return t=(t=t.source||t).replace(/(^|[^\[])\^/g,"$1"),n=n.replace(e,t),this},getRegex:function(){return new RegExp(n,e)}}}function d(n,e){return v[" "+n]||(/^[^:]+:\/*[^/]*$/.test(n)?v[" "+n]=n+"/":v[" "+n]=n.replace(/[^/]*$/,"")),n=v[" "+n],"//"===e.slice(0,2)?n.replace(/:[\s\S]*/,":")+e:"/"===e.charAt(0)?n.replace(/(:\/*[^/]*)[\s\S]*/,"$1")+e:n+e}function u(){}function p(n){for(var e,t,r=1;r<arguments.length;r++)for(t in e=arguments[r])Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n}function m(n,e){var t=n.replace(/([^\\])\|/g,"$1 |").split(/ +\| */),r=0;if(t.length>e)t.splice(e);else for(;t.length<e;)t.push("");for(;r<t.length;r++)t[r]=t[r].replace(/\\\|/g,"|");return t}function h(n,e,r){if(null==n)throw new Error("marked(): input parameter is undefined or null");if("string"!=typeof n)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(n)+", string expected");if(r||"function"==typeof e){r||(r=e,e=null);var o,a,l=(e=p({},h.defaults,e||{})).highlight,c=0;try{o=t.lex(n,e)}catch(n){return r(n)}a=o.length;var d=function(n){if(n)return e.highlight=l,r(n);var t;try{t=i.parse(o,e)}catch(e){n=e}return e.highlight=l,n?r(n):r(null,t)};if(!l||l.length<3)return d();if(delete e.highlight,!a)return d();for(;c<o.length;c++)!function(n){"code"!==n.type?--a||d():l(n.text,n.lang,(function(e,t){return e?d(e):null==t||t===n.text?--a||d():(n.text=t,n.escaped=!0,void(--a||d()))}))}(o[c])}else try{return e&&(e=p({},h.defaults,e)),i.parse(t.lex(n,e),e)}catch(n){if(n.message+="\nPlease report this to https://github.com/markedjs/marked.",(e||h.defaults).silent)return"<p>An error occurred:</p><pre>"+s(n.message+"",!0)+"</pre>";throw n}}var f={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:u,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,nptable:u,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:"^ {0,3}(?:<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?\\?>\\n*|<![A-Z][\\s\\S]*?>\\n*|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\n*|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$)|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$))",def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,table:u,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading| {0,3}>|<\/?(?:tag)(?: +|\n|\/?>)|<(?:script|pre|style|!--))[^\n]+)*)/,text:/^[^\n]+/,_label:/(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,_title:/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/};f.def=c(f.def).replace("label",f._label).replace("title",f._title).getRegex(),f.bullet=/(?:[*+-]|\d+\.)/,f.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/,f.item=c(f.item,"gm").replace(/bull/g,f.bullet).getRegex(),f.list=c(f.list).replace(/bull/g,f.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+f.def.source+")").getRegex(),f._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",f._comment=/<!--(?!-?>)[\s\S]*?-->/,f.html=c(f.html,"i").replace("comment",f._comment).replace("tag",f._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),f.paragraph=c(f.paragraph).replace("hr",f.hr).replace("heading",f.heading).replace("lheading",f.lheading).replace("tag",f._tag).getRegex(),f.blockquote=c(f.blockquote).replace("paragraph",f.paragraph).getRegex(),f.normal=p({},f),f.gfm=p({},f.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\n? *\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/}),f.gfm.paragraph=c(f.paragraph).replace("(?!","(?!"+f.gfm.fences.source.replace("\\1","\\2")+"|"+f.list.source.replace("\\1","\\3")+"|").getRegex(),f.tables=p({},f.gfm,{nptable:/^ *([^|\n ].*\|.*)\n *([-:]+ *\|[-| :]*)(?:\n((?:.*[^>\n ].*(?:\n|$))*)\n*|$)/,table:/^ *\|(.+)\n *\|?( *[-:]+[-| :]*)(?:\n((?: *[^>\n ].*(?:\n|$))*)\n*|$)/}),f.pedantic=p({},f.normal,{html:c("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",f._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/}),t.rules=f,t.lex=function(n,e){return new t(e).lex(n)},t.prototype.lex=function(n){return n=n.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n"),this.token(n,!0)},t.prototype.token=function(n,e){n=n.replace(/^ +$/gm,"");for(var t,r,o,a,i,s,l,c,d,u,p,h,g;n;)if((o=this.rules.newline.exec(n))&&(n=n.substring(o[0].length),o[0].length>1&&this.tokens.push({type:"space"})),o=this.rules.code.exec(n))n=n.substring(o[0].length),o=o[0].replace(/^ {4}/gm,""),this.tokens.push({type:"code",text:this.options.pedantic?o:o.replace(/\n+$/,"")});else if(o=this.rules.fences.exec(n))n=n.substring(o[0].length),this.tokens.push({type:"code",lang:o[2],text:o[3]||""});else if(o=this.rules.heading.exec(n))n=n.substring(o[0].length),this.tokens.push({type:"heading",depth:o[1].length,text:o[2]});else if(e&&(o=this.rules.nptable.exec(n))&&(s={type:"table",header:m(o[1].replace(/^ *| *\| *$/g,"")),align:o[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:o[3]?o[3].replace(/\n$/,"").split("\n"):[]}).header.length===s.align.length){for(n=n.substring(o[0].length),c=0;c<s.align.length;c++)/^ *-+: *$/.test(s.align[c])?s.align[c]="right":/^ *:-+: *$/.test(s.align[c])?s.align[c]="center":/^ *:-+ *$/.test(s.align[c])?s.align[c]="left":s.align[c]=null;for(c=0;c<s.cells.length;c++)s.cells[c]=m(s.cells[c],s.header.length);this.tokens.push(s)}else if(o=this.rules.hr.exec(n))n=n.substring(o[0].length),this.tokens.push({type:"hr"});else if(o=this.rules.blockquote.exec(n))n=n.substring(o[0].length),this.tokens.push({type:"blockquote_start"}),o=o[0].replace(/^ *> ?/gm,""),this.token(o,e),this.tokens.push({type:"blockquote_end"});else if(o=this.rules.list.exec(n)){for(n=n.substring(o[0].length),p=(a=o[2]).length>1,this.tokens.push({type:"list_start",ordered:p,start:p?+a:""}),t=!1,u=(o=o[0].match(this.rules.item)).length,c=0;c<u;c++)l=(s=o[c]).length,~(s=s.replace(/^ *([*+-]|\d+\.) +/,"")).indexOf("\n ")&&(l-=s.length,s=this.options.pedantic?s.replace(/^ {1,4}/gm,""):s.replace(new RegExp("^ {1,"+l+"}","gm"),"")),this.options.smartLists&&c!==u-1&&(a===(i=f.bullet.exec(o[c+1])[0])||a.length>1&&i.length>1||(n=o.slice(c+1).join("\n")+n,c=u-1)),r=t||/\n\n(?!\s*$)/.test(s),c!==u-1&&(t="\n"===s.charAt(s.length-1),r||(r=t)),g=void 0,(h=/^\[[ xX]\] /.test(s))&&(g=" "!==s[1],s=s.replace(/^\[[ xX]\] +/,"")),this.tokens.push({type:r?"loose_item_start":"list_item_start",task:h,checked:g}),this.token(s,!1),this.tokens.push({type:"list_item_end"});this.tokens.push({type:"list_end"})}else if(o=this.rules.html.exec(n))n=n.substring(o[0].length),this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&("pre"===o[1]||"script"===o[1]||"style"===o[1]),text:o[0]});else if(e&&(o=this.rules.def.exec(n)))n=n.substring(o[0].length),o[3]&&(o[3]=o[3].substring(1,o[3].length-1)),d=o[1].toLowerCase().replace(/\s+/g," "),this.tokens.links[d]||(this.tokens.links[d]={href:o[2],title:o[3]});else if(e&&(o=this.rules.table.exec(n))&&(s={type:"table",header:m(o[1].replace(/^ *| *\| *$/g,"")),align:o[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:o[3]?o[3].replace(/(?: *\| *)?\n$/,"").split("\n"):[]}).header.length===s.align.length){for(n=n.substring(o[0].length),c=0;c<s.align.length;c++)/^ *-+: *$/.test(s.align[c])?s.align[c]="right":/^ *:-+: *$/.test(s.align[c])?s.align[c]="center":/^ *:-+ *$/.test(s.align[c])?s.align[c]="left":s.align[c]=null;for(c=0;c<s.cells.length;c++)s.cells[c]=m(s.cells[c].replace(/^ *\| *| *\| *$/g,""),s.header.length);this.tokens.push(s)}else if(o=this.rules.lheading.exec(n))n=n.substring(o[0].length),this.tokens.push({type:"heading",depth:"="===o[2]?1:2,text:o[1]});else if(e&&(o=this.rules.paragraph.exec(n)))n=n.substring(o[0].length),this.tokens.push({type:"paragraph",text:"\n"===o[1].charAt(o[1].length-1)?o[1].slice(0,-1):o[1]});else if(o=this.rules.text.exec(n))n=n.substring(o[0].length),this.tokens.push({type:"text",text:o[0]});else if(n)throw new Error("Infinite loop on byte: "+n.charCodeAt(0));return this.tokens};var g={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:u,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(href(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,nolink:/^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,strong:/^__([^\s][\s\S]*?[^\s])__(?!_)|^\*\*([^\s][\s\S]*?[^\s])\*\*(?!\*)|^__([^\s])__(?!_)|^\*\*([^\s])\*\*(?!\*)/,em:/^_([^\s][\s\S]*?[^\s_])_(?!_)|^_([^\s_][\s\S]*?[^\s])_(?!_)|^\*([^\s][\s\S]*?[^\s*])\*(?!\*)|^\*([^\s*][\s\S]*?[^\s])\*(?!\*)|^_([^\s_])_(?!_)|^\*([^\s*])\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`]?)\s*\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:u,text:/^[\s\S]+?(?=[\\<!\[`*]|\b_| {2,}\n|$)/,_escapes:/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,_scheme:/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,_email:/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/};g.autolink=c(g.autolink).replace("scheme",g._scheme).replace("email",g._email).getRegex(),g._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,g.tag=c(g.tag).replace("comment",f._comment).replace("attribute",g._attribute).getRegex(),g._label=/(?:\[[^\[\]]*\]|\\[\[\]]?|`[^`]*`|[^\[\]\\])*?/,g._href=/\s*(<(?:\\[<>]?|[^\s<>\\])*>|(?:\\[()]?|\([^\s\x00-\x1f()\\]*\)|[^\s\x00-\x1f()\\])*?)/,g._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,g.link=c(g.link).replace("label",g._label).replace("href",g._href).replace("title",g._title).getRegex(),g.reflink=c(g.reflink).replace("label",g._label).getRegex(),g.normal=p({},g),g.pedantic=p({},g.normal,{strong:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/,link:c(/^!?\[(label)\]\((.*?)\)/).replace("label",g._label).getRegex(),reflink:c(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",g._label).getRegex()}),g.gfm=p({},g.normal,{escape:c(g.escape).replace("])","~|])").getRegex(),url:c(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/).replace("email",g._email).getRegex(),_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:c(g.text).replace("]|","~]|").replace("|","|https?://|ftp://|www\\.|[a-zA-Z0-9.!#$%&'*+/=?^_`{\\|}~-]+@|").getRegex()}),g.breaks=p({},g.gfm,{br:c(g.br).replace("{2,}","*").getRegex(),text:c(g.gfm.text).replace("{2,}","*").getRegex()}),r.rules=g,r.output=function(n,e,t){return new r(e,t).output(n)},r.prototype.output=function(n){for(var e,t,o,a,i,l="";n;)if(i=this.rules.escape.exec(n))n=n.substring(i[0].length),l+=i[1];else if(i=this.rules.autolink.exec(n))n=n.substring(i[0].length),o="@"===i[2]?"mailto:"+(t=s(this.mangle(i[1]))):t=s(i[1]),l+=this.renderer.link(o,null,t);else if(this.inLink||!(i=this.rules.url.exec(n))){if(i=this.rules.tag.exec(n))!this.inLink&&/^<a /i.test(i[0])?this.inLink=!0:this.inLink&&/^<\/a>/i.test(i[0])&&(this.inLink=!1),n=n.substring(i[0].length),l+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(i[0]):s(i[0]):i[0];else if(i=this.rules.link.exec(n))n=n.substring(i[0].length),this.inLink=!0,o=i[2],this.options.pedantic?(e=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(o))?(o=e[1],a=e[3]):a="":a=i[3]?i[3].slice(1,-1):"",o=o.trim().replace(/^<([\s\S]*)>$/,"$1"),l+=this.outputLink(i,{href:r.escapes(o),title:r.escapes(a)}),this.inLink=!1;else if((i=this.rules.reflink.exec(n))||(i=this.rules.nolink.exec(n))){if(n=n.substring(i[0].length),e=(i[2]||i[1]).replace(/\s+/g," "),!(e=this.links[e.toLowerCase()])||!e.href){l+=i[0].charAt(0),n=i[0].substring(1)+n;continue}this.inLink=!0,l+=this.outputLink(i,e),this.inLink=!1}else if(i=this.rules.strong.exec(n))n=n.substring(i[0].length),l+=this.renderer.strong(this.output(i[4]||i[3]||i[2]||i[1]));else if(i=this.rules.em.exec(n))n=n.substring(i[0].length),l+=this.renderer.em(this.output(i[6]||i[5]||i[4]||i[3]||i[2]||i[1]));else if(i=this.rules.code.exec(n))n=n.substring(i[0].length),l+=this.renderer.codespan(s(i[2].trim(),!0));else if(i=this.rules.br.exec(n))n=n.substring(i[0].length),l+=this.renderer.br();else if(i=this.rules.del.exec(n))n=n.substring(i[0].length),l+=this.renderer.del(this.output(i[1]));else if(i=this.rules.text.exec(n))n=n.substring(i[0].length),l+=this.renderer.text(s(this.smartypants(i[0])));else if(n)throw new Error("Infinite loop on byte: "+n.charCodeAt(0))}else i[0]=this.rules._backpedal.exec(i[0])[0],n=n.substring(i[0].length),"@"===i[2]?o="mailto:"+(t=s(i[0])):(t=s(i[0]),o="www."===i[1]?"http://"+t:t),l+=this.renderer.link(o,null,t);return l},r.escapes=function(n){return n?n.replace(r.rules._escapes,"$1"):n},r.prototype.outputLink=function(n,e){var t=e.href,r=e.title?s(e.title):null;return"!"!==n[0].charAt(0)?this.renderer.link(t,r,this.output(n[1])):this.renderer.image(t,r,s(n[1]))},r.prototype.smartypants=function(n){return this.options.smartypants?n.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…"):n},r.prototype.mangle=function(n){if(!this.options.mangle)return n;for(var e,t="",r=n.length,o=0;o<r;o++)e=n.charCodeAt(o),Math.random()>.5&&(e="x"+e.toString(16)),t+="&#"+e+";";return t},o.prototype.code=function(n,e,t){if(this.options.highlight){var r=this.options.highlight(n,e);null!=r&&r!==n&&(t=!0,n=r)}return e?'<pre><code class="'+this.options.langPrefix+s(e,!0)+'">'+(t?n:s(n,!0))+"</code></pre>\n":"<pre><code>"+(t?n:s(n,!0))+"</code></pre>"},o.prototype.blockquote=function(n){return"<blockquote>\n"+n+"</blockquote>\n"},o.prototype.html=function(n){return n},o.prototype.heading=function(n,e,t){return this.options.headerIds?"<h"+e+' id="'+this.options.headerPrefix+t.toLowerCase().replace(/[^\w]+/g,"-")+'">'+n+"</h"+e+">\n":"<h"+e+">"+n+"</h"+e+">\n"},o.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},o.prototype.list=function(n,e,t){var r=e?"ol":"ul";return"<"+r+(e&&1!==t?' start="'+t+'"':"")+">\n"+n+"</"+r+">\n"},o.prototype.listitem=function(n){return"<li>"+n+"</li>\n"},o.prototype.checkbox=function(n){return"<input "+(n?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},o.prototype.paragraph=function(n){return"<p>"+n+"</p>\n"},o.prototype.table=function(n,e){return e&&(e="<tbody>"+e+"</tbody>"),"<table>\n<thead>\n"+n+"</thead>\n"+e+"</table>\n"},o.prototype.tablerow=function(n){return"<tr>\n"+n+"</tr>\n"},o.prototype.tablecell=function(n,e){var t=e.header?"th":"td";return(e.align?"<"+t+' align="'+e.align+'">':"<"+t+">")+n+"</"+t+">\n"},o.prototype.strong=function(n){return"<strong>"+n+"</strong>"},o.prototype.em=function(n){return"<em>"+n+"</em>"},o.prototype.codespan=function(n){return"<code>"+n+"</code>"},o.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"},o.prototype.del=function(n){return"<del>"+n+"</del>"},o.prototype.link=function(n,e,t){if(this.options.sanitize){try{var r=decodeURIComponent(l(n)).replace(/[^\w:]/g,"").toLowerCase()}catch(n){return t}if(0===r.indexOf("javascript:")||0===r.indexOf("vbscript:")||0===r.indexOf("data:"))return t}this.options.baseUrl&&!b.test(n)&&(n=d(this.options.baseUrl,n));try{n=encodeURI(n).replace(/%25/g,"%")}catch(n){return t}var o='<a href="'+s(n)+'"';return e&&(o+=' title="'+e+'"'),o+">"+t+"</a>"},o.prototype.image=function(n,e,t){this.options.baseUrl&&!b.test(n)&&(n=d(this.options.baseUrl,n));var r='<img src="'+n+'" alt="'+t+'"';return e&&(r+=' title="'+e+'"'),r+(this.options.xhtml?"/>":">")},o.prototype.text=function(n){return n},a.prototype.strong=a.prototype.em=a.prototype.codespan=a.prototype.del=a.prototype.text=function(n){return n},a.prototype.link=a.prototype.image=function(n,e,t){return""+t},a.prototype.br=function(){return""},i.parse=function(n,e){return new i(e).parse(n)},i.prototype.parse=function(n){this.inline=new r(n.links,this.options),this.inlineText=new r(n.links,p({},this.options,{renderer:new a})),this.tokens=n.reverse();for(var e="";this.next();)e+=this.tok();return e},i.prototype.next=function(){return this.token=this.tokens.pop()},i.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0},i.prototype.parseText=function(){for(var n=this.token.text;"text"===this.peek().type;)n+="\n"+this.next().text;return this.inline.output(n)},i.prototype.tok=function(){switch(this.token.type){case"space":return"";case"hr":return this.renderer.hr();case"heading":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,l(this.inlineText.output(this.token.text)));case"code":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case"table":var n,e,t,r,o="",a="";for(t="",n=0;n<this.token.header.length;n++)t+=this.renderer.tablecell(this.inline.output(this.token.header[n]),{header:!0,align:this.token.align[n]});for(o+=this.renderer.tablerow(t),n=0;n<this.token.cells.length;n++){for(e=this.token.cells[n],t="",r=0;r<e.length;r++)t+=this.renderer.tablecell(this.inline.output(e[r]),{header:!1,align:this.token.align[r]});a+=this.renderer.tablerow(t)}return this.renderer.table(o,a);case"blockquote_start":for(a="";"blockquote_end"!==this.next().type;)a+=this.tok();return this.renderer.blockquote(a);case"list_start":a="";for(var i=this.token.ordered,s=this.token.start;"list_end"!==this.next().type;)a+=this.tok();return this.renderer.list(a,i,s);case"list_item_start":for(a="",this.token.task&&(a+=this.renderer.checkbox(this.token.checked));"list_item_end"!==this.next().type;)a+="text"===this.token.type?this.parseText():this.tok();return this.renderer.listitem(a);case"loose_item_start":for(a="";"list_item_end"!==this.next().type;)a+=this.tok();return this.renderer.listitem(a);case"html":return this.renderer.html(this.token.text);case"paragraph":return this.renderer.paragraph(this.inline.output(this.token.text));case"text":return this.renderer.paragraph(this.parseText())}};var v={},b=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;u.exec=u,h.options=h.setOptions=function(n){return p(h.defaults,n),h},h.getDefaults=function(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:new o,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tables:!0,xhtml:!1}},h.defaults=h.getDefaults(),h.Parser=i,h.parser=i.parse,h.Renderer=o,h.TextRenderer=a,h.Lexer=t,h.lexer=t.lex,h.InlineLexer=r,h.inlineLexer=r.output,h.parse=h,n.exports=h}(this||"undefined"!=typeof window&&window)}).call(e,t(14))},function(n,e,t){"use strict";function r(n,e){var t=function(n){var e={};return l(n,(function(n,t){l(n,(function(n){e[n]=t}))})),e}(n.pluralTypeToLanguages);return t[e]||t[h.call(e,/-/,1)[0]]||t.en}function o(n,e,t){return n.pluralTypes[r(n,e)](t)}function a(n){return n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function i(n,e,t,r,a){if("string"!=typeof n)throw new TypeError("Polyglot.transformPhrase expects argument #1 to be string");if(null==e)return n;var i=n,s=r||b,l=a||v,c="number"==typeof e?{smart_count:e}:e;if(null!=c.smart_count&&i){var p=h.call(i,f);i=u(p[o(l,t||"en",c.smart_count)]||p[0])}return m.call(i,s,(function(n,e){return d(c,e)&&null!=c[e]?c[e]:n}))}function s(n){var e=n||{};this.phrases={},this.extend(e.phrases||{}),this.currentLocale=e.locale||"en";var t=e.allowMissing?i:null;this.onMissingKey="function"==typeof e.onMissingKey?e.onMissingKey:t,this.warn=e.warn||p,this.tokenRegex=function(n){var e=n&&n.prefix||"%{",t=n&&n.suffix||"}";if(e===f||t===f)throw new RangeError('"'+f+'" token is reserved for pluralization');return new RegExp(a(e)+"(.*?)"+a(t),"g")}(e.interpolation),this.pluralRules=e.pluralRules||v}var l=t(31),c=t(50),d=t(34),u=t(43),p=function(n){c(!1,n)},m=String.prototype.replace,h=String.prototype.split,f="||||",g=function(n){var e=n%100,t=e%10;return 11!==e&&1===t?0:2<=t&&t<=4&&!(e>=12&&e<=14)?1:2},v={pluralTypes:{arabic:function(n){if(n<3)return n;var e=n%100;return e>=3&&e<=10?3:e>=11?4:5},bosnian_serbian:g,chinese:function(){return 0},croatian:g,french:function(n){return n>1?1:0},german:function(n){return 1!==n?1:0},russian:g,lithuanian:function(n){return n%10==1&&n%100!=11?0:n%10>=2&&n%10<=9&&(n%100<11||n%100>19)?1:2},czech:function(n){return 1===n?0:n>=2&&n<=4?1:2},polish:function(n){if(1===n)return 0;var e=n%10;return 2<=e&&e<=4&&(n%100<10||n%100>=20)?1:2},icelandic:function(n){return n%10!=1||n%100==11?1:0},slovenian:function(n){var e=n%100;return 1===e?0:2===e?1:3===e||4===e?2:3}},pluralTypeToLanguages:{arabic:["ar"],bosnian_serbian:["bs-Latn-BA","bs-Cyrl-BA","srl-RS","sr-RS"],chinese:["id","id-ID","ja","ko","ko-KR","lo","ms","th","th-TH","zh"],croatian:["hr","hr-HR"],german:["fa","da","de","en","es","fi","el","he","hi-IN","hu","hu-HU","it","nl","no","pt","sv","tr"],french:["fr","tl","pt-br"],russian:["ru","ru-RU"],lithuanian:["lt"],czech:["cs","cs-CZ","sk"],polish:["pl"],icelandic:["is"],slovenian:["sl-SL"]}},b=/%\{(.*?)\}/g;s.prototype.locale=function(n){return n&&(this.currentLocale=n),this.currentLocale},s.prototype.extend=function(n,e){l(n,(function(n,t){var r=e?e+"."+t:t;"object"==typeof n?this.extend(n,r):this.phrases[r]=n}),this)},s.prototype.unset=function(n,e){"string"==typeof n?delete this.phrases[n]:l(n,(function(n,t){var r=e?e+"."+t:t;"object"==typeof n?this.unset(n,r):delete this.phrases[r]}),this)},s.prototype.clear=function(){this.phrases={}},s.prototype.replace=function(n){this.clear(),this.extend(n)},s.prototype.t=function(n,e){var t,r,o=null==e?{}:e;return"string"==typeof this.phrases[n]?t=this.phrases[n]:"string"==typeof o._?t=o._:this.onMissingKey?r=(0,this.onMissingKey)(n,o,this.currentLocale,this.tokenRegex,this.pluralRules):(this.warn('Missing translation for key: "'+n+'"'),r=n),"string"==typeof t&&(r=i(t,o,this.currentLocale,this.tokenRegex,this.pluralRules)),r},s.prototype.has=function(n){return d(this.phrases,n)},s.transformPhrase=function(n,e,t){return i(n,e,t)},n.exports=s},function(n,e,t){"use strict";function r(n){if(null==n)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(n)}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var o=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;n.exports=function(){try{if(!Object.assign)return!1;var n=new String("abc");if(n[5]="de","5"===Object.getOwnPropertyNames(n)[0])return!1;for(var e={},t=0;t<10;t++)e["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(n){return e[n]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(n){r[n]=n})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(n){return!1}}()?Object.assign:function(n,e){for(var t,s,l=r(n),c=1;c<arguments.length;c++){for(var d in t=Object(arguments[c]))a.call(t,d)&&(l[d]=t[d]);if(o){s=o(t);for(var u=0;u<s.length;u++)i.call(t,s[u])&&(l[s[u]]=t[s[u]])}}return l}},function(n,e,t){"use strict";var r;if(!Object.keys){var o=Object.prototype.hasOwnProperty,a=Object.prototype.toString,i=t(10),s=Object.prototype.propertyIsEnumerable,l=!s.call({toString:null},"toString"),c=s.call((function(){}),"prototype"),d=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],u=function(n){var e=n.constructor;return e&&e.prototype===n},p={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},m=function(){if("undefined"==typeof window)return!1;for(var n in window)try{if(!p["$"+n]&&o.call(window,n)&&null!==window[n]&&"object"==typeof window[n])try{u(window[n])}catch(n){return!0}}catch(n){return!0}return!1}(),h=function(n){if("undefined"==typeof window||!m)return u(n);try{return u(n)}catch(n){return!1}};r=function(n){var e=null!==n&&"object"==typeof n,t="[object Function]"===a.call(n),r=i(n),s=e&&"[object String]"===a.call(n),u=[];if(!e&&!t&&!r)throw new TypeError("Object.keys called on a non-object");var p=c&&t;if(s&&n.length>0&&!o.call(n,0))for(var m=0;m<n.length;++m)u.push(String(m));if(r&&n.length>0)for(var f=0;f<n.length;++f)u.push(String(f));else for(var g in n)p&&"prototype"===g||!o.call(n,g)||u.push(String(g));if(l)for(var v=h(n),b=0;b<d.length;++b)v&&"constructor"===d[b]||!o.call(n,d[b])||u.push(d[b]);return u}}n.exports=r},function(n,e,t){"use strict";var r=Array.prototype.slice,o=t(10),a=Object.keys,i=a?function(n){return a(n)}:t(39),s=Object.keys;i.shim=function(){return Object.keys?function(){var n=Object.keys(arguments);return n&&n.length===arguments.length}(1,2)||(Object.keys=function(n){return s(o(n)?r.call(n):n)}):Object.keys=i,Object.keys||i},n.exports=i},function(n,e){function t(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function o(n){if(c===setTimeout)return setTimeout(n,0);if((c===t||!c)&&setTimeout)return c=setTimeout,setTimeout(n,0);try{return c(n,0)}catch(e){try{return c.call(null,n,0)}catch(e){return c.call(this,n,0)}}}function a(){h&&p&&(h=!1,p.length?m=p.concat(m):f=-1,m.length&&i())}function i(){if(!h){var n=o(a);h=!0;for(var e=m.length;e;){for(p=m,m=[];++f<e;)p&&p[f].run();f=-1,e=m.length}p=null,h=!1,function(n){if(d===clearTimeout)return clearTimeout(n);if((d===r||!d)&&clearTimeout)return d=clearTimeout,clearTimeout(n);try{d(n)}catch(e){try{return d.call(null,n)}catch(e){return d.call(this,n)}}}(n)}}function s(n,e){this.fun=n,this.array=e}function l(){}var c,d,u=n.exports={};!function(){try{c="function"==typeof setTimeout?setTimeout:t}catch(n){c=t}try{d="function"==typeof clearTimeout?clearTimeout:r}catch(n){d=r}}();var p,m=[],h=!1,f=-1;u.nextTick=function(n){var e=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)e[t-1]=arguments[t];m.push(new s(n,e)),1!==m.length||h||o(i)},s.prototype.run=function(){this.fun.apply(null,this.array)},u.title="browser",u.browser=!0,u.env={},u.argv=[],u.version="",u.versions={},u.on=l,u.addListener=l,u.once=l,u.off=l,u.removeListener=l,u.removeAllListeners=l,u.emit=l,u.prependListener=l,u.prependOnceListener=l,u.listeners=function(n){return[]},u.binding=function(n){throw new Error("process.binding is not supported")},u.cwd=function(){return"/"},u.chdir=function(n){throw new Error("process.chdir is not supported")},u.umask=function(){return 0}},function(n,e,t){"use strict";function r(n){return n=JSON.stringify(n),!!/^\{[\s\S]*\}$/.test(n)}function o(n){if("string"==typeof n)try{return JSON.parse(n)}catch(e){return n}}function a(n){return"[object Function]"==={}.toString.call(n)}function i(n){return"[object Array]"===Object.prototype.toString.call(n)}function s(){if(!(this instanceof s))return new s}function l(n,e){var t=arguments,o=null;if(d||(d=s()),0===t.length)return d.get();if(1===t.length){if("string"==typeof n)return d.get(n);if(r(n))return d.set(n)}if(2===t.length&&"string"==typeof n){if(!e)return d.remove(n);if(e&&"string"==typeof e)return d.set(n,e);e&&a(e)&&(o=null,o=e(n,d.get(n)),l.set(n,o))}if(2===t.length&&i(n)&&a(e))for(var c=0,u=n.length;c<u;c++)o=e(n[c],d.get(n[c])),l.set(n[c],o);return l}Object.defineProperty(e,"__esModule",{value:!0});
/*!
 * storejs v1.0.24
 * Local storage localstorage package provides a simple API
 * 
 * Copyright (c) 2018 kenny wang <wowohoo@qq.com>
 * https://github.com/jaywcjlove/store.js
 * 
 * Licensed under the MIT license.
 */
var c=window.localStorage;c=function(n){var e="_Is_Incognit";try{n.setItem(e,"yes")}catch(e){if("QuotaExceededError"===e.name){var t=function(){};n.__proto__={setItem:t,getItem:t,removeItem:t,clear:t}}}finally{"yes"===n.getItem(e)&&n.removeItem(e)}return n}(c),s.prototype={set:function(n,e){if(n&&!r(n))c.setItem(n,function(n){return void 0===n||"function"==typeof n?n+"":JSON.stringify(n)}(e));else if(r(n))for(var t in n)this.set(t,n[t]);return this},get:function(n){if(!n){var e={};return this.forEach((function(n,t){return e[n]=t})),e}if("?"===n.charAt(0))return this.has(n.substr(1));var t=arguments;if(t.length>1){for(var r={},a=0,i=t.length;a<i;a++){var s=o(c.getItem(t[a]));s&&(r[t[a]]=s)}return r}return o(c.getItem(n))},clear:function(){return c.clear(),this},remove:function(n){var e=this.get(n);return c.removeItem(n),e},has:function(n){return{}.hasOwnProperty.call(this.get(),n)},keys:function(){var n=[];return this.forEach((function(e){n.push(e)})),n},forEach:function(n){for(var e=0,t=c.length;e<t;e++){var r=c.key(e);n(r,this.get(r))}return this},search:function(n){for(var e=this.keys(),t={},r=0,o=e.length;r<o;r++)e[r].indexOf(n)>-1&&(t[e[r]]=this.get(e[r]));return t}};var d=null;for(var u in s.prototype)l[u]=s.prototype[u];e.default=l},function(n,e,t){"use strict";var r=t(12),o=t(9),a=t(11),i=t(13),s=t(49),l=r(i());o(l,{getPolyfill:i,implementation:a,shim:s}),n.exports=l},function(n,e,t){"use strict";var r=t(1),o=r("%String%"),a=r("%TypeError%");n.exports=function(n){if("symbol"==typeof n)throw new a("Cannot convert a Symbol value to a string");return o(n)}},function(n,e,t){"use strict";var r=t(1)("%TypeError%");n.exports=function(n,e){if(null==n)throw new r(e||"Cannot call method on "+n);return n}},function(n,e,t){"use strict";var r=t(1),o=t(12),a=o(r("String.prototype.indexOf"));n.exports=function(n,e){var t=r(n,!!e);return"function"==typeof t&&a(n,".prototype.")?o(t):t}},function(n,e,t){"use strict";(function(e){var r=e.Symbol,o=t(48);n.exports=function(){return"function"==typeof r&&"function"==typeof Symbol&&"symbol"==typeof r("foo")&&"symbol"==typeof Symbol("bar")&&o()}}).call(e,t(14))},function(n,e,t){"use strict";n.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var n={},e=Symbol("test"),t=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;for(e in n[e]=42,n)return!1;if("function"==typeof Object.keys&&0!==Object.keys(n).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(n).length)return!1;var r=Object.getOwnPropertySymbols(n);if(1!==r.length||r[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(n,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(n,e);if(42!==o.value||!0!==o.enumerable)return!1}return!0}},function(n,e,t){"use strict";var r=t(9),o=t(13);n.exports=function(){var n=o();return r(String.prototype,{trim:n},{trim:function(){return String.prototype.trim!==n}}),n}},function(n,e,t){"use strict";(function(e){var t=function(){};if("production"!==e.env.NODE_ENV){var r=function(n,e){var t=arguments.length;e=new Array(t>1?t-1:0);for(var r=1;r<t;r++)e[r-1]=arguments[r];var o=0,a="Warning: "+n.replace(/%s/g,(function(){return e[o++]}));try{throw new Error(a)}catch(n){}};t=function(n,e,t){var o=arguments.length;t=new Array(o>2?o-2:0);for(var a=2;a<o;a++)t[a-2]=arguments[a];if(void 0===e)throw new Error("`warning(condition, format, ...args)` requires a warning message argument");n||r.apply(null,[e].concat(t))}}n.exports=t}).call(e,t(41))},function(n,e,t){function r(n,e){return new i(e).process(n)}var o=t(15),a=t(16),i=t(52);for(var s in(e=n.exports=r).filterXSS=r,e.FilterXSS=i,o)e[s]=o[s];for(var s in a)e[s]=a[s];"undefined"!=typeof window&&(window.filterXSS=n.exports),"undefined"!=typeof self&&"undefined"!=typeof DedicatedWorkerGlobalScope&&self instanceof DedicatedWorkerGlobalScope&&(self.filterXSS=n.exports)},function(n,e,t){function r(n){return null==n}function o(n){(n=function(n){var e={};for(var t in n)e[t]=n[t];return e}(n||{})).stripIgnoreTag&&(n.onIgnoreTag,n.onIgnoreTag=i.onIgnoreTagStripAll),n.whiteList=n.whiteList||i.whiteList,n.onTag=n.onTag||i.onTag,n.onTagAttr=n.onTagAttr||i.onTagAttr,n.onIgnoreTag=n.onIgnoreTag||i.onIgnoreTag,n.onIgnoreTagAttr=n.onIgnoreTagAttr||i.onIgnoreTagAttr,n.safeAttrValue=n.safeAttrValue||i.safeAttrValue,n.escapeHtml=n.escapeHtml||i.escapeHtml,this.options=n,!1===n.css?this.cssFilter=!1:(n.css=n.css||{},this.cssFilter=new a(n.css))}var a=t(3).FilterCSS,i=t(15),s=t(16),l=s.parseTag,c=s.parseAttr,d=t(5);o.prototype.process=function(n){if(!(n=(n=n||"").toString()))return"";var e=this.options,t=e.whiteList,o=e.onTag,a=e.onIgnoreTag,s=e.onTagAttr,u=e.onIgnoreTagAttr,p=e.safeAttrValue,m=e.escapeHtml,h=this.cssFilter;e.stripBlankChar&&(n=i.stripBlankChar(n)),e.allowCommentTag||(n=i.stripCommentTag(n));var f=!1;e.stripIgnoreTagBody&&(f=i.StripTagBody(e.stripIgnoreTagBody,a),a=f.onIgnoreTag);var g=l(n,(function(n,e,i,l,f){var g,v={sourcePosition:n,position:e,isClosing:f,isWhite:t.hasOwnProperty(i)};if(!r(g=o(i,l,v)))return g;if(v.isWhite){if(v.isClosing)return"</"+i+">";var b=function(n){var e=d.spaceIndex(n);if(-1===e)return{html:"",closing:"/"===n[n.length-2]};var t="/"===(n=d.trim(n.slice(e+1,-1)))[n.length-1];return t&&(n=d.trim(n.slice(0,-1))),{html:n,closing:t}}(l),y=t[i],x=c(b.html,(function(n,e){var t,o=-1!==d.indexOf(y,n);return r(t=s(i,n,e,o))?o?(e=p(i,n,e,h))?n+'="'+e+'"':n:r(t=u(i,n,e,o))?void 0:t:t}));return l="<"+i,x&&(l+=" "+x),b.closing&&(l+=" /"),l+">"}return r(g=a(i,l,v))?m(l):g}),m);return f&&(g=f.remove(g)),g},n.exports=o},function(n,e){n.exports={smile:"e3/2018new_weixioa02_org.png",lovely:"09/2018new_keai_org.png",happy:"1e/2018new_taikaixin_org.png",clap:"6e/2018new_guzhang_thumb.png",whee:"33/2018new_xixi_thumb.png",haha:"8f/2018new_haha_thumb.png","laugh and cry":"4a/2018new_xiaoku_thumb.png",wink:"43/2018new_jiyan_org.png",greddy:"fa/2018new_chanzui_org.png",awkward:"a3/2018new_heixian_thumb.png",sweat:"28/2018new_han_org.png","pick nose":"9a/2018new_wabi_thumb.png",hum:"7c/2018new_heng_thumb.png",angry:"f6/2018new_nu_thumb.png",grievance:"a5/2018new_weiqu_thumb.png",poor:"96/2018new_kelian_org.png",disappoint:"aa/2018new_shiwang_thumb.png",sad:"ee/2018new_beishang_org.png",tear:"6e/2018new_leimu_org.png","no way":"83/2018new_kuxiao_org.png",shy:"c1/2018new_haixiu_org.png",dirt:"10/2018new_wu_thumb.png","love you":"f6/2018new_aini_org.png",kiss:"2c/2018new_qinqin_thumb.png",amorousness:"9d/2018new_huaxin_org.png",longing:"c9/2018new_chongjing_org.png",desire:"3e/2018new_tianping_thumb.png","bad laugh":"4d/2018new_huaixiao_org.png",blackness:"9e/2018new_yinxian_org.png","laugh without word":"2d/2018new_xiaoerbuyu_org.png",titter:"71/2018new_touxiao_org.png",cool:"c4/2018new_ku_org.png","not easy":"aa/2018new_bingbujiandan_thumb.png",think:"30/2018new_sikao_org.png",question:"b8/2018new_ningwen_org.png","no idea":"2a/2018new_wenhao_thumb.png",dizzy:"07/2018new_yun_thumb.png",bomb:"a2/2018new_shuai_thumb.png",bone:"a1/2018new_kulou_thumb.png","be quiet":"b0/2018new_xu_org.png","shut up":"62/2018new_bizui_org.png",stupid:"dd/2018new_shayan_org.png","surprise ":"49/2018new_chijing_org.png",vomit:"08/2018new_tu_org.png",cold:"40/2018new_kouzhao_thumb.png",sick:"3b/2018new_shengbing_thumb.png",bye:"fd/2018new_baibai_thumb.png","look down on":"da/2018new_bishi_org.png","white eye":"ef/2018new_landelini_org.png","left hum":"43/2018new_zuohengheng_thumb.png","right hum":"c1/2018new_youhengheng_thumb.png",crazy:"17/2018new_zhuakuang_org.png","scold ":"87/2018new_zhouma_thumb.png","hit on face":"cb/2018new_dalian_org.png",wow:"ae/2018new_ding_org.png",fan:"86/2018new_hufen02_org.png",money:"a2/2018new_qian_thumb.png",yawn:"55/2018new_dahaqian_org.png",sleepy:"3c/2018new_kun_thumb.png",sleep:"e2/2018new_shuijiao_thumb.png","watermelon ":"01/2018new_chigua_thumb.png",doge:"a1/2018new_doge02_org.png",dog:"22/2018new_erha_org.png",cat:"7b/2018new_miaomiao_thumb.png",thumb:"e6/2018new_zan_org.png",good:"8a/2018new_good_org.png",ok:"45/2018new_ok_org.png",yeah:"29/2018new_ye_thumb.png","shack hand":"e9/2018new_woshou_thumb.png",bow:"e7/2018new_zuoyi_org.png",come:"42/2018new_guolai_thumb.png",punch:"86/2018new_quantou_thumb.png"}},function(n,e){n.exports={nick:"NickName",mail:"E-Mail",link:"Website(http://)",nickFail:"NickName cannot be less than 3 bytes.",mailFail:"Please confirm your email address.",sofa:"No comment yet.",submit:"Submit",reply:"Reply",cancelReply:"Cancel reply",comments:"Comments",cancel:"Cancel",confirm:"Confirm",continue:"Continue",more:"Load More...",preview:"Preview",emoji:"Emoji",expand:"See more....",seconds:"seconds ago",minutes:"minutes ago",hours:"hours ago",days:"days ago",now:"just now",uploading:"Uploading ...",uploadDone:"Upload completed!",busy:"Submit is busy, please wait...","code-98":"Valine initialization failed, please check your version of av-min.js.","code-99":"Valine initialization failed, Please check the `el` element in the init method.","code-100":"Valine initialization failed, Please check your appId and appKey.","code-140":"The total number of API calls today has exceeded the development version limit.","code-401":"Unauthorized operation, Please check your appId and appKey.","code-403":"Access denied by API domain white list, Please check your security domain."}},function(n,e){n.exports={nick:"ニックネーム",mail:"メールアドレス",link:"サイト(http://)",nickFail:"3バイト以上のニックネームをご入力ください.",mailFail:"メールアドレスをご確認ください.",sofa:"コメントしましょう~",submit:"提出する",reply:"返信する",cancelReply:"キャンセル",comments:"コメント",cancel:"キャンセル",confirm:"確認する",continue:"继续",more:"さらに読み込む...",preview:"プレビュー",emoji:"絵文字",expand:"もっと見る",seconds:"秒前",minutes:"分前",hours:"時間前",days:"日前",now:"たっだ今",uploading:"アップロード中...",uploadDone:"アップロードが完了しました!",busy:"20 秒間隔で提出してください    ...","code-98":"ロードエラーです。av-min.js のバージョンを確認してください.","code-99":"ロードエラーです。initにある`el`エレメントを確認ください.","code-100":"ロードエラーです。AppIdとAppKeyを確認ください.","code-140":"今日のAPIコールの総数が開発バージョンの上限を超えた.","code-401":"権限が制限されています。AppIdとAppKeyを確認ください.","code-403":"アクセスがAPIなどに制限されました、ドメイン名のセキュリティ設定を確認ください"}},function(n,e){n.exports={nick:"昵称",mail:"邮箱",link:"网址(http://)",nickFail:"昵称不能少于3个字符",mailFail:"请填写正确的邮件地址",sofa:"来发评论吧~",submit:"提交",reply:"回复",cancelReply:"取消回复",comments:"评论",cancel:"取消",confirm:"确认",continue:"继续",more:"加载更多...",preview:"预览",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分钟前",hours:"小时前",days:"天前",now:"刚刚",uploading:"正在传输...",uploadDone:"传输完成!",busy:"操作频繁，请稍候再试...","code-98":"Valine 初始化失败，请检查 av-min.js 版本","code-99":"Valine 初始化失败，请检查init中的`el`元素.","code-100":"Valine 初始化失败，请检查你的AppId和AppKey.","code-140":"今日 API 调用总次数已超过开发版限制.","code-401":"未经授权的操作，请检查你的AppId和AppKey.","code-403":"访问被API域名白名单拒绝，请检查你的安全域名设置."}},function(n,e){n.exports={nick:"暱稱",mail:"郵箱",link:"網址(http://)",nickFail:"昵稱不能少於3個字符",mailFail:"請填寫正確的郵件地址",sofa:"來發評論吧~",submit:"提交",reply:"回覆",cancelReply:"取消回覆",comments:"評論",cancel:"取消",confirm:"確認",continue:"繼續",more:"加載更多...",preview:"預覽",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分鐘前",hours:"小時前",days:"天前",now:"剛剛",uploading:"正在上傳...",uploadDone:"上傳完成!",busy:"操作頻繁，請稍候再試...","code-98":"Valine 初始化失敗，請檢查 av-min.js 版本","code-99":"Valine 初始化失敗，請檢查init中的`el`元素.","code-100":"Valine 初始化失敗，請檢查你的AppId和AppKey.","code-140":"今日 API 調用總次數已超過開發版限制.","code-401":"未經授權的操作，請檢查你的AppId和AppKey.","code-403":"訪問被API域名白名單拒絕，請檢查你的安全域名設置."}},function(n,e,t){var r=t(59);"string"==typeof r&&(r=[[n.i,r,""]]);var o={transform:void 0};t(61)(r,o),r.locals&&(n.exports=r.locals)},function(n,e,t){(n.exports=t(60)(!1)).push([n.i,'.v[data-class=v]{font-size:16px;text-align:left}.v[data-class=v] *{-webkit-box-sizing:border-box;box-sizing:border-box;line-height:1.75}.v[data-class=v] .status-bar,.v[data-class=v] .veditor,.v[data-class=v] .vinput,.v[data-class=v] p,.v[data-class=v] pre code{color:#555}.v[data-class=v] .vsys,.v[data-class=v] .vtime{color:#b3b3b3}.v[data-class=v] .text-right{text-align:right}.v[data-class=v] .text-center{text-align:center}.v[data-class=v] img{max-width:100%;border:none}.v[data-class=v] hr{margin:.825em 0;border-color:#f6f6f6;border-style:dashed}.v[data-class=v].hide-avatar .vimg{display:none}.v[data-class=v] a{position:relative;cursor:pointer;color:#1abc9c;text-decoration:none;display:inline-block}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] code,.v[data-class=v] pre{background-color:#f8f8f8;padding:.2em .4em;border-radius:3px;font-size:85%;margin:0}.v[data-class=v] pre{padding:10px;overflow:auto;line-height:1.45}.v[data-class=v] pre code{padding:0;background:transparent;white-space:pre-wrap;word-break:keep-all}.v[data-class=v] blockquote{color:#666;margin:.5em 0;padding:0 0 0 1em;border-left:8px solid hsla(0,0%,93%,.5)}.v[data-class=v] .vinput{border:none;resize:none;outline:none;padding:10px 5px;max-width:100%;font-size:.775em}.v[data-class=v] input[type=checkbox],.v[data-class=v] input[type=radio]{display:inline-block;vertical-align:middle;margin-top:-2px}.v[data-class=v] .vicon{cursor:pointer;display:inline-block;overflow:hidden;fill:#555;vertical-align:middle}.v[data-class=v] .vicon+.vicon{margin-left:10px}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vrow{font-size:0;padding:10px 0}.v[data-class=v] .vrow .vcol{display:inline-block;vertical-align:middle;font-size:14px}.v[data-class=v] .vrow .vcol.vcol-20{width:20%}.v[data-class=v] .vrow .vcol.vcol-30{width:30%}.v[data-class=v] .vrow .vcol.vcol-40{width:40%}.v[data-class=v] .vrow .vcol.vcol-50{width:50%}.v[data-class=v] .vrow .vcol.vcol-60{width:60%}.v[data-class=v] .vrow .vcol.vcol-70{width:70%}.v[data-class=v] .vrow .vcol.vcol-80{width:80%}.v[data-class=v] .vrow .vcol.vctrl{font-size:12px}.v[data-class=v] .emoji,.v[data-class=v] .vemoji{max-width:25px;vertical-align:middle;margin:0 1px;display:inline-block}.v[data-class=v] .vwrap{border:1px solid #f0f0f0;border-radius:4px;margin-bottom:10px;overflow:hidden;position:relative;padding:10px}.v[data-class=v] .vwrap input{background:transparent}.v[data-class=v] .vwrap .vedit{position:relative;padding-top:10px}.v[data-class=v] .vwrap .cancel-reply-btn{position:absolute;right:5px;top:5px;cursor:pointer}.v[data-class=v] .vwrap .vemojis{display:none;font-size:18px;max-height:145px;overflow:auto;padding-bottom:10px;-webkit-box-shadow:0 0 1px #f0f0f0;box-shadow:0 0 1px #f0f0f0}.v[data-class=v] .vwrap .vemojis i{font-style:normal;padding-top:7px;width:36px;cursor:pointer;text-align:center;display:inline-block;vertical-align:middle}.v[data-class=v] .vwrap .vpreview{padding:7px;-webkit-box-shadow:0 0 1px #f0f0f0;box-shadow:0 0 1px #f0f0f0}.v[data-class=v] .vwrap .vheader .vinput{width:33.33%;border-bottom:1px dashed #dedede}.v[data-class=v] .vwrap .vheader.item2 .vinput{width:50%}.v[data-class=v] .vwrap .vheader.item1 .vinput{width:100%}.v[data-class=v] .vwrap .vheader .vinput:focus{border-bottom-color:#eb5055}@media screen and (max-width:520px){.v[data-class=v] .vwrap .vheader.item2 .vinput,.v[data-class=v] .vwrap .vheader .vinput{width:100%}}.v[data-class=v] .vpower{color:#999;font-size:.75em;padding:.5em 0}.v[data-class=v] .vpower a{font-size:.75em}.v[data-class=v] .vcount{padding:5px;font-weight:600;font-size:1.25em}.v[data-class=v] ol,.v[data-class=v] ul{padding:0;margin-left:1.25em}.v[data-class=v] .txt-center{text-align:center}.v[data-class=v] .txt-right{text-align:right}.v[data-class=v] .pd5{padding:5px}.v[data-class=v] .pd10{padding:10px}.v[data-class=v] .veditor{width:100%;min-height:8.75em;font-size:.875em;background:transparent;resize:vertical;-webkit-transition:all .25s ease;transition:all .25s ease}.v[data-class=v] .vbtn{-webkit-transition-duration:.4s;transition-duration:.4s;text-align:center;color:#555;border:1px solid #ededed;border-radius:.3em;display:inline-block;background:transparent;margin-bottom:0;font-weight:400;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;white-space:nowrap;padding:.5em 1.25em;font-size:.875em;line-height:1.42857143;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:none}.v[data-class=v] .vbtn+.vbtn{margin-left:1.25em}.v[data-class=v] .vbtn:active,.v[data-class=v] .vbtn:hover{color:#3090e4;border-color:#3090e4}.v[data-class=v] .vbtn:disabled{border-color:#e1e1e1;color:#e1e1e1;background-color:#fdfafa;cursor:not-allowed}.v[data-class=v] .vempty{padding:1.25em;text-align:center;color:#555;overflow:auto}.v[data-class=v] .vsys{display:inline-block;padding:.2em .5em;font-size:.75em;border-radius:.2em;margin-right:.3em}@media screen and (max-width:520px){.v[data-class=v] .vsys{display:none}}.v[data-class=v] .vcards{width:100%}.v[data-class=v] .vcards .vcard{padding-top:1.25em;position:relative;display:block}.v[data-class=v] .vcards .vcard:after{content:"";clear:both;display:block}.v[data-class=v] .vcards .vcard .vimg{width:3.125em;height:3.125em;float:left;border-radius:50%;margin-right:.7525em;border:1px solid #f5f5f5;padding:.125em}@media screen and (max-width:720px){.v[data-class=v] .vcards .vcard .vimg{width:2.5em;height:2.5em}}.v[data-class=v] .vcards .vcard .vhead{line-height:1.5;margin-top:0}.v[data-class=v] .vcards .vcard .vhead .vnick{position:relative;font-size:.875em;font-weight:500;margin-right:.875em;cursor:pointer;text-decoration:none;display:inline-block}.v[data-class=v] .vcards .vcard .vhead .vnick:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vh{overflow:hidden;padding-bottom:.5em;border-bottom:1px dashed #f5f5f5}.v[data-class=v] .vcards .vcard .vh .vtime{font-size:.75em;margin-right:.875em}.v[data-class=v] .vcards .vcard .vh .vmeta{line-height:1;position:relative}.v[data-class=v] .vcards .vcard .vh .vmeta .vat{font-size:.8125em;color:#ef2f11;cursor:pointer;float:right}.v[data-class=v] .vcards .vcard:last-child .vh{border-bottom:none}.v[data-class=v] .vcards .vcard .vcontent{word-wrap:break-word;word-break:break-all;font-size:.875em;line-height:2;position:relative;margin-bottom:.75em;padding-top:.625em}.v[data-class=v] .vcards .vcard .vcontent.expand{cursor:pointer;max-height:8em;overflow:hidden}.v[data-class=v] .vcards .vcard .vcontent.expand:before{display:block;content:"";position:absolute;width:100%;left:0;top:0;bottom:3.15em;background:-webkit-gradient(linear,left top,left bottom,from(hsla(0,0%,100%,0)),to(hsla(0,0%,100%,.9)));background:linear-gradient(180deg,hsla(0,0%,100%,0),hsla(0,0%,100%,.9));z-index:999}.v[data-class=v] .vcards .vcard .vcontent.expand:after{display:block;content:attr(data-expand);text-align:center;color:#828586;position:absolute;width:100%;height:3.15em;line-height:3.15em;left:0;bottom:0;z-index:999;background:hsla(0,0%,100%,.9)}.v[data-class=v] .vcards .vcard .vquote{padding-left:1em;border-left:1px dashed hsla(0,0%,93%,.5)}.v[data-class=v] .vcards .vcard .vquote .vimg{width:2.225em;height:2.225em}.v[data-class=v] .vpage .vmore{margin:1em 0}.v[data-class=v] .clear{content:"";display:block;clear:both}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes pulse{50%{background:#dcdcdc}}@keyframes pulse{50%{background:#dcdcdc}}.v[data-class=v] .vspinner{width:22px;height:22px;display:inline-block;border:6px double #a0a0a0;border-top-color:transparent;border-bottom-color:transparent;border-radius:50%;-webkit-animation:spin 1s infinite linear;animation:spin 1s infinite linear;position:relative;vertical-align:middle;margin:0 5px}.dark .v[data-class=v] .status-bar,.dark .v[data-class=v] .veditor,.dark .v[data-class=v] .vinput,.dark .v[data-class=v] p,.dark .v[data-class=v] pre code,.night .v[data-class=v] .status-bar,.night .v[data-class=v] .veditor,.night .v[data-class=v] .vinput,.night .v[data-class=v] p,.night .v[data-class=v] pre code,.theme__dark .v[data-class=v] .status-bar,.theme__dark .v[data-class=v] .veditor,.theme__dark .v[data-class=v] .vinput,.theme__dark .v[data-class=v] p,.theme__dark .v[data-class=v] pre code,[data-theme=dark] .v[data-class=v] .status-bar,[data-theme=dark] .v[data-class=v] .veditor,[data-theme=dark] .v[data-class=v] .vinput,[data-theme=dark] .v[data-class=v] p,[data-theme=dark] .v[data-class=v] pre code{color:#b2b2b5}.dark .v[data-class=v] .vsys,.dark .v[data-class=v] .vtime,.night .v[data-class=v] .vsys,.night .v[data-class=v] .vtime,.theme__dark .v[data-class=v] .vsys,.theme__dark .v[data-class=v] .vtime,[data-theme=dark] .v[data-class=v] .vsys,[data-theme=dark] .v[data-class=v] .vtime{color:#929298}.dark .v[data-class=v] code,.dark .v[data-class=v] pre,.dark .v[data-class=v] pre code,.night .v[data-class=v] code,.night .v[data-class=v] pre,.night .v[data-class=v] pre code,.theme__dark .v[data-class=v] code,.theme__dark .v[data-class=v] pre,.theme__dark .v[data-class=v] pre code,[data-theme=dark] .v[data-class=v] code,[data-theme=dark] .v[data-class=v] pre,[data-theme=dark] .v[data-class=v] pre code{color:#929298;background-color:#151414}.dark .v[data-class=v] .vwrap,.night .v[data-class=v] .vwrap,.theme__dark .v[data-class=v] .vwrap,[data-theme=dark] .v[data-class=v] .vwrap{border-color:#b2b2b5}.dark .v[data-class=v] .vicon,.night .v[data-class=v] .vicon,.theme__dark .v[data-class=v] .vicon,[data-theme=dark] .v[data-class=v] .vicon{fill:#b2b2b5}.dark .v[data-class=v] .vicon.actived,.night .v[data-class=v] .vicon.actived,.theme__dark .v[data-class=v] .vicon.actived,[data-theme=dark] .v[data-class=v] .vicon.actived{fill:#66b1ff}.dark .v[data-class=v] .vbtn,.night .v[data-class=v] .vbtn,.theme__dark .v[data-class=v] .vbtn,[data-theme=dark] .v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}.dark .v[data-class=v] .vbtn:hover,.night .v[data-class=v] .vbtn:hover,.theme__dark .v[data-class=v] .vbtn:hover,[data-theme=dark] .v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}.dark .v[data-class=v] a:hover,.night .v[data-class=v] a:hover,.theme__dark .v[data-class=v] a:hover,[data-theme=dark] .v[data-class=v] a:hover{color:#d7191a}.dark .v[data-class=v] .vcards .vcard .vcontent.expand:before,.night .v[data-class=v] .vcards .vcard .vcontent.expand:before,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand:before,[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand:before{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.3)),to(rgba(0,0,0,.7)));background:linear-gradient(180deg,rgba(0,0,0,.3),rgba(0,0,0,.7))}.dark .v[data-class=v] .vcards .vcard .vcontent.expand:after,.night .v[data-class=v] .vcards .vcard .vcontent.expand:after,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand:after,[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand:after{background:rgba(0,0,0,.7)}@media (prefers-color-scheme:dark){.v[data-class=v] .status-bar,.v[data-class=v] .veditor,.v[data-class=v] .vinput,.v[data-class=v] p,.v[data-class=v] pre code{color:#b2b2b5}.v[data-class=v] .vsys,.v[data-class=v] .vtime{color:#929298}.v[data-class=v] code,.v[data-class=v] pre,.v[data-class=v] pre code{color:#929298;background-color:#151414}.v[data-class=v] .vwrap{border-color:#b2b2b5}.v[data-class=v] .vicon{fill:#b2b2b5}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}.v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vcontent.expand:before{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.3)),to(rgba(0,0,0,.7)));background:linear-gradient(180deg,rgba(0,0,0,.3),rgba(0,0,0,.7))}.v[data-class=v] .vcards .vcard .vcontent.expand:after{background:rgba(0,0,0,.7)}}',""])},function(n,e){function t(n,e){var t=n[1]||"",r=n[3];if(!r)return t;if(e&&"function"==typeof btoa){var o=function(n){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"}(r);return[t].concat(r.sources.map((function(n){return"/*# sourceURL="+r.sourceRoot+n+" */"}))).concat([o]).join("\n")}return[t].join("\n")}n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r=t(e,n);return e[2]?"@media "+e[2]+"{"+r+"}":r})).join("")},e.i=function(n,t){"string"==typeof n&&(n=[[null,n,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];"number"==typeof a&&(r[a]=!0)}for(o=0;o<n.length;o++){var i=n[o];"number"==typeof i[0]&&r[i[0]]||(t&&!i[2]?i[2]=t:t&&(i[2]="("+i[2]+") and ("+t+")"),e.push(i))}},e}},function(n,e,t){function r(n,e){for(var t=0;t<n.length;t++){var r=n[t],o=h[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(d(r.parts[a],e))}else{var i=[];for(a=0;a<r.parts.length;a++)i.push(d(r.parts[a],e));h[r.id]={id:r.id,refs:1,parts:i}}}}function o(n,e){for(var t=[],r={},o=0;o<n.length;o++){var a=n[o],i=e.base?a[0]+e.base:a[0],s={css:a[1],media:a[2],sourceMap:a[3]};r[i]?r[i].parts.push(s):t.push(r[i]={id:i,parts:[s]})}return t}function a(n,e){var t=g(n.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=y[y.length-1];if("top"===n.insertAt)r?r.nextSibling?t.insertBefore(e,r.nextSibling):t.appendChild(e):t.insertBefore(e,t.firstChild),y.push(e);else{if("bottom"!==n.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");t.appendChild(e)}}function i(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var e=y.indexOf(n);e>=0&&y.splice(e,1)}function s(n){var e=document.createElement("style");return n.attrs.type="text/css",c(e,n.attrs),a(n,e),e}function l(n){var e=document.createElement("link");return n.attrs.type="text/css",n.attrs.rel="stylesheet",c(e,n.attrs),a(n,e),e}function c(n,e){Object.keys(e).forEach((function(t){n.setAttribute(t,e[t])}))}function d(n,e){var t,r,o,a;if(e.transform&&n.css){if(!(a=e.transform(n.css)))return function(){};n.css=a}if(e.singleton){var c=b++;t=v||(v=s(e)),r=u.bind(null,t,c,!1),o=u.bind(null,t,c,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=l(e),r=m.bind(null,t,e),o=function(){i(t),t.href&&URL.revokeObjectURL(t.href)}):(t=s(e),r=p.bind(null,t),o=function(){i(t)});return r(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r(n=e)}else o()}}function u(n,e,t,r){var o=t?"":r.css;if(n.styleSheet)n.styleSheet.cssText=w(e,o);else{var a=document.createTextNode(o),i=n.childNodes;i[e]&&n.removeChild(i[e]),i.length?n.insertBefore(a,i[e]):n.appendChild(a)}}function p(n,e){var t=e.css,r=e.media;if(r&&n.setAttribute("media",r),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}function m(n,e,t){var r=t.css,o=t.sourceMap,a=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||a)&&(r=x(r)),o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),s=n.href;n.href=URL.createObjectURL(i),s&&URL.revokeObjectURL(s)}var h={},f=function(n){var e;return function(){return void 0===e&&(e=n.apply(this,arguments)),e}}((function(){return window&&document&&document.all&&!window.atob})),g=function(n){var e={};return function(t){return void 0===e[t]&&(e[t]=n.call(this,t)),e[t]}}((function(n){return document.querySelector(n)})),v=null,b=0,y=[],x=t(62);n.exports=function(n,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||(e.singleton=f()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var t=o(n,e);return r(t,e),function(n){for(var a=[],i=0;i<t.length;i++){var s=t[i];(l=h[s.id]).refs--,a.push(l)}for(n&&r(o(n,e),e),i=0;i<a.length;i++){var l;if(0===(l=a[i]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete h[l.id]}}}};var w=function(){var n=[];return function(e,t){return n[e]=t,n.filter(Boolean).join("\n")}}()},function(n,e){n.exports=function(n){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var t=e.protocol+"//"+e.host,r=t+e.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(n,e){var o,a=e.trim().replace(/^"(.*)"$/,(function(n,e){return e})).replace(/^'(.*)'$/,(function(n,e){return e}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(a)?n:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?t+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")}))}},function(n,e,t){t(58),n.exports=t(18)}])},function(n,e,t){"use strict";t(248)},function(n,e,t){"use strict";var r=t(154),o=t(249),a=Object.prototype.hasOwnProperty,i={brackets:function(n){return n+"[]"},comma:"comma",indices:function(n,e){return n+"["+e+"]"},repeat:function(n){return n}},s=Array.isArray,l=Array.prototype.push,c=function(n,e){l.apply(n,s(e)?e:[e])},d=Date.prototype.toISOString,u=o.default,p={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:r.encode,encodeValuesOnly:!1,format:u,formatter:o.formatters[u],indices:!1,serializeDate:function(n){return d.call(n)},skipNulls:!1,strictNullHandling:!1},m=function n(e,t,o,a,i,l,d,u,m,h,f,g,v){var b,y=e;if("function"==typeof d?y=d(t,y):y instanceof Date?y=h(y):"comma"===o&&s(y)&&(y=r.maybeMap(y,(function(n){return n instanceof Date?h(n):n})).join(",")),null===y){if(a)return l&&!g?l(t,p.encoder,v,"key"):t;y=""}if("string"==typeof(b=y)||"number"==typeof b||"boolean"==typeof b||"symbol"==typeof b||"bigint"==typeof b||r.isBuffer(y))return l?[f(g?t:l(t,p.encoder,v,"key"))+"="+f(l(y,p.encoder,v,"value"))]:[f(t)+"="+f(String(y))];var x,w=[];if(void 0===y)return w;if(s(d))x=d;else{var k=Object.keys(y);x=u?k.sort(u):k}for(var j=0;j<x.length;++j){var _=x[j],T=y[_];if(!i||null!==T){var S=s(y)?"function"==typeof o?o(t,_):t:t+(m?"."+_:"["+_+"]");c(w,n(T,S,o,a,i,l,d,u,m,h,f,g,v))}}return w};n.exports=function(n,e){var t,r=n,l=function(n){if(!n)return p;if(null!==n.encoder&&void 0!==n.encoder&&"function"!=typeof n.encoder)throw new TypeError("Encoder has to be a function.");var e=n.charset||p.charset;if(void 0!==n.charset&&"utf-8"!==n.charset&&"iso-8859-1"!==n.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=o.default;if(void 0!==n.format){if(!a.call(o.formatters,n.format))throw new TypeError("Unknown format option provided.");t=n.format}var r=o.formatters[t],i=p.filter;return("function"==typeof n.filter||s(n.filter))&&(i=n.filter),{addQueryPrefix:"boolean"==typeof n.addQueryPrefix?n.addQueryPrefix:p.addQueryPrefix,allowDots:void 0===n.allowDots?p.allowDots:!!n.allowDots,charset:e,charsetSentinel:"boolean"==typeof n.charsetSentinel?n.charsetSentinel:p.charsetSentinel,delimiter:void 0===n.delimiter?p.delimiter:n.delimiter,encode:"boolean"==typeof n.encode?n.encode:p.encode,encoder:"function"==typeof n.encoder?n.encoder:p.encoder,encodeValuesOnly:"boolean"==typeof n.encodeValuesOnly?n.encodeValuesOnly:p.encodeValuesOnly,filter:i,formatter:r,serializeDate:"function"==typeof n.serializeDate?n.serializeDate:p.serializeDate,skipNulls:"boolean"==typeof n.skipNulls?n.skipNulls:p.skipNulls,sort:"function"==typeof n.sort?n.sort:null,strictNullHandling:"boolean"==typeof n.strictNullHandling?n.strictNullHandling:p.strictNullHandling}}(e);"function"==typeof l.filter?r=(0,l.filter)("",r):s(l.filter)&&(t=l.filter);var d,u=[];if("object"!=typeof r||null===r)return"";d=e&&e.arrayFormat in i?e.arrayFormat:e&&"indices"in e?e.indices?"indices":"repeat":"indices";var h=i[d];t||(t=Object.keys(r)),l.sort&&t.sort(l.sort);for(var f=0;f<t.length;++f){var g=t[f];l.skipNulls&&null===r[g]||c(u,m(r[g],g,h,l.strictNullHandling,l.skipNulls,l.encode?l.encoder:null,l.filter,l.sort,l.allowDots,l.serializeDate,l.formatter,l.encodeValuesOnly,l.charset))}var v=u.join(l.delimiter),b=!0===l.addQueryPrefix?"?":"";return l.charsetSentinel&&("iso-8859-1"===l.charset?b+="utf8=%26%2310003%3B&":b+="utf8=%E2%9C%93&"),v.length>0?b+v:""}},function(n,e,t){"use strict";var r=t(154),o=Object.prototype.hasOwnProperty,a=Array.isArray,i={allowDots:!1,allowPrototypes:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:r.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},s=function(n){return n.replace(/&#(\d+);/g,(function(n,e){return String.fromCharCode(parseInt(e,10))}))},l=function(n,e){return n&&"string"==typeof n&&e.comma&&n.indexOf(",")>-1?n.split(","):n},c=function(n,e,t,r){if(n){var a=t.allowDots?n.replace(/\.([^.[]+)/g,"[$1]"):n,i=/(\[[^[\]]*])/g,s=t.depth>0&&/(\[[^[\]]*])/.exec(a),c=s?a.slice(0,s.index):a,d=[];if(c){if(!t.plainObjects&&o.call(Object.prototype,c)&&!t.allowPrototypes)return;d.push(c)}for(var u=0;t.depth>0&&null!==(s=i.exec(a))&&u<t.depth;){if(u+=1,!t.plainObjects&&o.call(Object.prototype,s[1].slice(1,-1))&&!t.allowPrototypes)return;d.push(s[1])}return s&&d.push("["+a.slice(s.index)+"]"),function(n,e,t,r){for(var o=r?e:l(e,t),a=n.length-1;a>=0;--a){var i,s=n[a];if("[]"===s&&t.parseArrays)i=[].concat(o);else{i=t.plainObjects?Object.create(null):{};var c="["===s.charAt(0)&&"]"===s.charAt(s.length-1)?s.slice(1,-1):s,d=parseInt(c,10);t.parseArrays||""!==c?!isNaN(d)&&s!==c&&String(d)===c&&d>=0&&t.parseArrays&&d<=t.arrayLimit?(i=[])[d]=o:i[c]=o:i={0:o}}o=i}return o}(d,e,t,r)}};n.exports=function(n,e){var t=function(n){if(!n)return i;if(null!==n.decoder&&void 0!==n.decoder&&"function"!=typeof n.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==n.charset&&"utf-8"!==n.charset&&"iso-8859-1"!==n.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var e=void 0===n.charset?i.charset:n.charset;return{allowDots:void 0===n.allowDots?i.allowDots:!!n.allowDots,allowPrototypes:"boolean"==typeof n.allowPrototypes?n.allowPrototypes:i.allowPrototypes,arrayLimit:"number"==typeof n.arrayLimit?n.arrayLimit:i.arrayLimit,charset:e,charsetSentinel:"boolean"==typeof n.charsetSentinel?n.charsetSentinel:i.charsetSentinel,comma:"boolean"==typeof n.comma?n.comma:i.comma,decoder:"function"==typeof n.decoder?n.decoder:i.decoder,delimiter:"string"==typeof n.delimiter||r.isRegExp(n.delimiter)?n.delimiter:i.delimiter,depth:"number"==typeof n.depth||!1===n.depth?+n.depth:i.depth,ignoreQueryPrefix:!0===n.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof n.interpretNumericEntities?n.interpretNumericEntities:i.interpretNumericEntities,parameterLimit:"number"==typeof n.parameterLimit?n.parameterLimit:i.parameterLimit,parseArrays:!1!==n.parseArrays,plainObjects:"boolean"==typeof n.plainObjects?n.plainObjects:i.plainObjects,strictNullHandling:"boolean"==typeof n.strictNullHandling?n.strictNullHandling:i.strictNullHandling}}(e);if(""===n||null==n)return t.plainObjects?Object.create(null):{};for(var d="string"==typeof n?function(n,e){var t,c={},d=e.ignoreQueryPrefix?n.replace(/^\?/,""):n,u=e.parameterLimit===1/0?void 0:e.parameterLimit,p=d.split(e.delimiter,u),m=-1,h=e.charset;if(e.charsetSentinel)for(t=0;t<p.length;++t)0===p[t].indexOf("utf8=")&&("utf8=%E2%9C%93"===p[t]?h="utf-8":"utf8=%26%2310003%3B"===p[t]&&(h="iso-8859-1"),m=t,t=p.length);for(t=0;t<p.length;++t)if(t!==m){var f,g,v=p[t],b=v.indexOf("]="),y=-1===b?v.indexOf("="):b+1;-1===y?(f=e.decoder(v,i.decoder,h,"key"),g=e.strictNullHandling?null:""):(f=e.decoder(v.slice(0,y),i.decoder,h,"key"),g=r.maybeMap(l(v.slice(y+1),e),(function(n){return e.decoder(n,i.decoder,h,"value")}))),g&&e.interpretNumericEntities&&"iso-8859-1"===h&&(g=s(g)),v.indexOf("[]=")>-1&&(g=a(g)?[g]:g),o.call(c,f)?c[f]=r.combine(c[f],g):c[f]=g}return c}(n,t):n,u=t.plainObjects?Object.create(null):{},p=Object.keys(d),m=0;m<p.length;++m){var h=p[m],f=c(h,d[h],t,"string"==typeof n);u=r.merge(u,f,t)}return r.compact(u)}},function(n,e,t){var r=t(48),o=t(457),a=t(458);n.exports=function(n){var e=r(n);return a(e,o(e))+1}},function(n,e){n.exports=function(n){var e=new Date(n.getTime()),t=e.getTimezoneOffset();return e.setSeconds(0,0),6e4*t+e.getTime()%6e4}},function(n,e,t){var r=t(48);n.exports=function(n){var e=r(n),t=new Date(0);return t.setFullYear(e.getFullYear(),0,1),t.setHours(0,0,0,0),t}},function(n,e,t){var r=t(459);n.exports=function(n,e){var t=r(n),o=r(e),a=t.getTime()-6e4*t.getTimezoneOffset(),i=o.getTime()-6e4*o.getTimezoneOffset();return Math.round((a-i)/864e5)}},function(n,e,t){var r=t(48);n.exports=function(n){var e=r(n);return e.setHours(0,0,0,0),e}},function(n,e,t){var r=t(48),o=t(155),a=t(462);n.exports=function(n){var e=r(n),t=o(e).getTime()-a(e).getTime();return Math.round(t/6048e5)+1}},function(n,e,t){var r=t(48);n.exports=function(n,e){var t=e&&Number(e.weekStartsOn)||0,o=r(n),a=o.getDay(),i=(a<t?7:0)+a-t;return o.setDate(o.getDate()-i),o.setHours(0,0,0,0),o}},function(n,e,t){var r=t(251),o=t(155);n.exports=function(n){var e=r(n),t=new Date(0);return t.setFullYear(e,0,4),t.setHours(0,0,0,0),o(t)}},function(n,e,t){var r=t(250);n.exports=function(n){if(r(n))return!isNaN(n);throw new TypeError(toString.call(n)+" is not an instance of Date")}},function(n,e,t){var r=t(465),o=t(466);n.exports={distanceInWords:r(),format:o()}},function(n,e){n.exports=function(){var n={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};return{localize:function(e,t,r){var o;return r=r||{},o="string"==typeof n[e]?n[e]:1===t?n[e].one:n[e].other.replace("{{count}}",t),r.addSuffix?r.comparison>0?"in "+o:o+" ago":o}}}},function(n,e,t){var r=t(467);n.exports=function(){var n=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],e=["January","February","March","April","May","June","July","August","September","October","November","December"],t=["Su","Mo","Tu","We","Th","Fr","Sa"],o=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],a=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],i=["AM","PM"],s=["am","pm"],l=["a.m.","p.m."],c={MMM:function(e){return n[e.getMonth()]},MMMM:function(n){return e[n.getMonth()]},dd:function(n){return t[n.getDay()]},ddd:function(n){return o[n.getDay()]},dddd:function(n){return a[n.getDay()]},A:function(n){return n.getHours()/12>=1?i[1]:i[0]},a:function(n){return n.getHours()/12>=1?s[1]:s[0]},aa:function(n){return n.getHours()/12>=1?l[1]:l[0]}};return["M","D","DDD","d","Q","W"].forEach((function(n){c[n+"o"]=function(e,t){return function(n){var e=n%100;if(e>20||e<10)switch(e%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"}(t[n](e))}})),{formatters:c,formattingTokensRegExp:r(c)}}},function(n,e){var t=["M","MM","Q","D","DD","DDD","DDDD","d","E","W","WW","YY","YYYY","GG","GGGG","H","HH","h","hh","m","mm","s","ss","S","SS","SSS","Z","ZZ","X","x"];n.exports=function(n){var e=[];for(var r in n)n.hasOwnProperty(r)&&e.push(r);var o=t.concat(e).sort().reverse();return new RegExp("(\\[[^\\[]*\\])|(\\\\)?("+o.join("|")+"|.)","g")}},function(n,e,t){"use strict";var r=t(17),o=t(252),a=t(469),i=t(258);function s(n){var e=new a(n),t=o(a.prototype.request,e);return r.extend(t,a.prototype,e),r.extend(t,e),t}var l=s(t(255));l.Axios=a,l.create=function(n){return s(i(l.defaults,n))},l.Cancel=t(259),l.CancelToken=t(482),l.isCancel=t(254),l.all=function(n){return Promise.all(n)},l.spread=t(483),l.isAxiosError=t(484),n.exports=l,n.exports.default=l},function(n,e,t){"use strict";var r=t(17),o=t(253),a=t(470),i=t(471),s=t(258);function l(n){this.defaults=n,this.interceptors={request:new a,response:new a}}l.prototype.request=function(n){"string"==typeof n?(n=arguments[1]||{}).url=arguments[0]:n=n||{},(n=s(this.defaults,n)).method?n.method=n.method.toLowerCase():this.defaults.method?n.method=this.defaults.method.toLowerCase():n.method="get";var e=[i,void 0],t=Promise.resolve(n);for(this.interceptors.request.forEach((function(n){e.unshift(n.fulfilled,n.rejected)})),this.interceptors.response.forEach((function(n){e.push(n.fulfilled,n.rejected)}));e.length;)t=t.then(e.shift(),e.shift());return t},l.prototype.getUri=function(n){return n=s(this.defaults,n),o(n.url,n.params,n.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(n){l.prototype[n]=function(e,t){return this.request(s(t||{},{method:n,url:e,data:(t||{}).data}))}})),r.forEach(["post","put","patch"],(function(n){l.prototype[n]=function(e,t,r){return this.request(s(r||{},{method:n,url:e,data:t}))}})),n.exports=l},function(n,e,t){"use strict";var r=t(17);function o(){this.handlers=[]}o.prototype.use=function(n,e){return this.handlers.push({fulfilled:n,rejected:e}),this.handlers.length-1},o.prototype.eject=function(n){this.handlers[n]&&(this.handlers[n]=null)},o.prototype.forEach=function(n){r.forEach(this.handlers,(function(e){null!==e&&n(e)}))},n.exports=o},function(n,e,t){"use strict";var r=t(17),o=t(472),a=t(254),i=t(255);function s(n){n.cancelToken&&n.cancelToken.throwIfRequested()}n.exports=function(n){return s(n),n.headers=n.headers||{},n.data=o(n.data,n.headers,n.transformRequest),n.headers=r.merge(n.headers.common||{},n.headers[n.method]||{},n.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(e){delete n.headers[e]})),(n.adapter||i.adapter)(n).then((function(e){return s(n),e.data=o(e.data,e.headers,n.transformResponse),e}),(function(e){return a(e)||(s(n),e&&e.response&&(e.response.data=o(e.response.data,e.response.headers,n.transformResponse))),Promise.reject(e)}))}},function(n,e,t){"use strict";var r=t(17);n.exports=function(n,e,t){return r.forEach(t,(function(t){n=t(n,e)})),n}},function(n,e,t){"use strict";var r=t(17);n.exports=function(n,e){r.forEach(n,(function(t,r){r!==e&&r.toUpperCase()===e.toUpperCase()&&(n[e]=t,delete n[r])}))}},function(n,e,t){"use strict";var r=t(257);n.exports=function(n,e,t){var o=t.config.validateStatus;t.status&&o&&!o(t.status)?e(r("Request failed with status code "+t.status,t.config,null,t.request,t)):n(t)}},function(n,e,t){"use strict";n.exports=function(n,e,t,r,o){return n.config=e,t&&(n.code=t),n.request=r,n.response=o,n.isAxiosError=!0,n.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},n}},function(n,e,t){"use strict";var r=t(17);n.exports=r.isStandardBrowserEnv()?{write:function(n,e,t,o,a,i){var s=[];s.push(n+"="+encodeURIComponent(e)),r.isNumber(t)&&s.push("expires="+new Date(t).toGMTString()),r.isString(o)&&s.push("path="+o),r.isString(a)&&s.push("domain="+a),!0===i&&s.push("secure"),document.cookie=s.join("; ")},read:function(n){var e=document.cookie.match(new RegExp("(^|;\\s*)("+n+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove:function(n){this.write(n,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(n,e,t){"use strict";var r=t(478),o=t(479);n.exports=function(n,e){return n&&!r(e)?o(n,e):e}},function(n,e,t){"use strict";n.exports=function(n){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(n)}},function(n,e,t){"use strict";n.exports=function(n,e){return e?n.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):n}},function(n,e,t){"use strict";var r=t(17),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];n.exports=function(n){var e,t,a,i={};return n?(r.forEach(n.split("\n"),(function(n){if(a=n.indexOf(":"),e=r.trim(n.substr(0,a)).toLowerCase(),t=r.trim(n.substr(a+1)),e){if(i[e]&&o.indexOf(e)>=0)return;i[e]="set-cookie"===e?(i[e]?i[e]:[]).concat([t]):i[e]?i[e]+", "+t:t}})),i):i}},function(n,e,t){"use strict";var r=t(17);n.exports=r.isStandardBrowserEnv()?function(){var n,e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function o(n){var r=n;return e&&(t.setAttribute("href",r),r=t.href),t.setAttribute("href",r),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return n=o(window.location.href),function(e){var t=r.isString(e)?o(e):e;return t.protocol===n.protocol&&t.host===n.host}}():function(){return!0}},function(n,e,t){"use strict";var r=t(259);function o(n){if("function"!=typeof n)throw new TypeError("executor must be a function.");var e;this.promise=new Promise((function(n){e=n}));var t=this;n((function(n){t.reason||(t.reason=new r(n),e(t.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var n;return{token:new o((function(e){n=e})),cancel:n}},n.exports=o},function(n,e,t){"use strict";n.exports=function(n){return function(e){return n.apply(null,e)}}},function(n,e,t){"use strict";n.exports=function(n){return"object"==typeof n&&!0===n.isAxiosError}},function(n,e,t){},function(n,e,t){"use strict";t(260)},function(n,e,t){},function(n,e,t){"use strict";n.exports=function(n){function e(n){for(var e=0,t=0;t<n.length;t++)e=(e<<5)-e+n.charCodeAt(t),e|=0;return r.colors[Math.abs(e)%r.colors.length]}function r(n){var t;function i(){if(i.enabled){for(var n=arguments.length,e=new Array(n),o=0;o<n;o++)e[o]=arguments[o];var a=i,s=Number(new Date),l=s-(t||s);a.diff=l,a.prev=t,a.curr=s,t=s,e[0]=r.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");var c=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(function(n,t){if("%%"===n)return n;c++;var o=r.formatters[t];if("function"==typeof o){var i=e[c];n=o.call(a,i),e.splice(c,1),c--}return n})),r.formatArgs.call(a,e);var d=a.log||r.log;d.apply(a,e)}}return i.namespace=n,i.enabled=r.enabled(n),i.useColors=r.useColors(),i.color=e(n),i.destroy=o,i.extend=a,"function"==typeof r.init&&r.init(i),r.instances.push(i),i}function o(){var n=r.instances.indexOf(this);return-1!==n&&(r.instances.splice(n,1),!0)}function a(n,e){return r(this.namespace+(void 0===e?":":e)+n)}return r.debug=r,r.default=r,r.coerce=function(n){if(n instanceof Error)return n.stack||n.message;return n},r.disable=function(){r.enable("")},r.enable=function(n){var e;r.save(n),r.names=[],r.skips=[];var t=("string"==typeof n?n:"").split(/[\s,]+/),o=t.length;for(e=0;e<o;e++)t[e]&&("-"===(n=t[e].replace(/\*/g,".*?"))[0]?r.skips.push(new RegExp("^"+n.substr(1)+"$")):r.names.push(new RegExp("^"+n+"$")));for(e=0;e<r.instances.length;e++){var a=r.instances[e];a.enabled=r.enabled(a.namespace)}},r.enabled=function(n){if("*"===n[n.length-1])return!0;var e,t;for(e=0,t=r.skips.length;e<t;e++)if(r.skips[e].test(n))return!1;for(e=0,t=r.names.length;e<t;e++)if(r.names[e].test(n))return!0;return!1},r.humanize=t(489),Object.keys(n).forEach((function(e){r[e]=n[e]})),r.instances=[],r.names=[],r.skips=[],r.formatters={},r.selectColor=e,r.enable(r.load()),r}},function(n,e){var t=1e3,r=6e4,o=60*r,a=24*o;function i(n,e,t,r){var o=e>=1.5*t;return Math.round(n/t)+" "+r+(o?"s":"")}n.exports=function(n,e){e=e||{};var s=typeof n;if("string"===s&&n.length>0)return function(n){if((n=String(n)).length>100)return;var e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(n);if(!e)return;var i=parseFloat(e[1]);switch((e[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*i;case"weeks":case"week":case"w":return 6048e5*i;case"days":case"day":case"d":return i*a;case"hours":case"hour":case"hrs":case"hr":case"h":return i*o;case"minutes":case"minute":case"mins":case"min":case"m":return i*r;case"seconds":case"second":case"secs":case"sec":case"s":return i*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return i;default:return}}(n);if("number"===s&&isFinite(n))return e.long?function(n){var e=Math.abs(n);if(e>=a)return i(n,e,a,"day");if(e>=o)return i(n,e,o,"hour");if(e>=r)return i(n,e,r,"minute");if(e>=t)return i(n,e,t,"second");return n+" ms"}(n):function(n){var e=Math.abs(n);if(e>=a)return Math.round(n/a)+"d";if(e>=o)return Math.round(n/o)+"h";if(e>=r)return Math.round(n/r)+"m";if(e>=t)return Math.round(n/t)+"s";return n+"ms"}(n);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(n))}},function(n,e,t){"use strict";t(262)},function(n,e,t){"use strict";t(263)},function(n,e,t){},function(n,e,t){"use strict";t(266)},function(n,e,t){"use strict";t(267)},function(n,e,t){"use strict";t.r(e);t(290),t(306),t(322),t(324),t(23),t(64),t(36),t(16),t(50),t(66),t(108);var r=t(60),o=t(1);function a(n,e){for(var t in e)n[t]=e[t];return n}var i=/[!'()*]/g,s=function(n){return"%"+n.charCodeAt(0).toString(16)},l=/%2C/g,c=function(n){return encodeURIComponent(n).replace(i,s).replace(l,",")};function d(n){try{return decodeURIComponent(n)}catch(n){0}return n}var u=function(n){return null==n||"object"==typeof n?n:String(n)};function p(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=d(t.shift()),o=t.length>0?d(t.join("=")):null;void 0===e[r]?e[r]=o:Array.isArray(e[r])?e[r].push(o):e[r]=[e[r],o]})),e):e}function m(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return c(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(c(e)):r.push(c(e)+"="+c(n)))})),r.join("&")}return c(e)+"="+c(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var h=/\/?$/;function f(n,e,t,r){var o=r&&r.options.stringifyQuery,a=e.query||{};try{a=g(a)}catch(n){}var i={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:a,params:e.params||{},fullPath:y(e,o),matched:n?b(n):[]};return t&&(i.redirectedFrom=y(t,o)),Object.freeze(i)}function g(n){if(Array.isArray(n))return n.map(g);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=g(n[t]);return e}return n}var v=f(null,{path:"/"});function b(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function y(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var o=n.hash;return void 0===o&&(o=""),(t||"/")+(e||m)(r)+o}function x(n,e){return e===v?n===e:!!e&&(n.path&&e.path?n.path.replace(h,"")===e.path.replace(h,"")&&n.hash===e.hash&&w(n.query,e.query):!(!n.name||!e.name)&&(n.name===e.name&&n.hash===e.hash&&w(n.query,e.query)&&w(n.params,e.params)))}function w(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,o){var a=n[t];if(r[o]!==t)return!1;var i=e[t];return null==a||null==i?a===i:"object"==typeof a&&"object"==typeof i?w(a,i):String(a)===String(i)}))}function k(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var o=t.instances[r],a=t.enteredCbs[r];if(o&&a){delete t.enteredCbs[r];for(var i=0;i<a.length;i++)o._isBeingDestroyed||a[i](o)}}}}var j={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,o=e.parent,i=e.data;i.routerView=!0;for(var s=o.$createElement,l=t.name,c=o.$route,d=o._routerViewCache||(o._routerViewCache={}),u=0,p=!1;o&&o._routerRoot!==o;){var m=o.$vnode?o.$vnode.data:{};m.routerView&&u++,m.keepAlive&&o._directInactive&&o._inactive&&(p=!0),o=o.$parent}if(i.routerViewDepth=u,p){var h=d[l],f=h&&h.component;return f?(h.configProps&&_(f,i,h.route,h.configProps),s(f,i,r)):s()}var g=c.matched[u],v=g&&g.components[l];if(!g||!v)return d[l]=null,s();d[l]={component:v},i.registerRouteInstance=function(n,e){var t=g.instances[l];(e&&t!==n||!e&&t===n)&&(g.instances[l]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){g.instances[l]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==g.instances[l]&&(g.instances[l]=n.componentInstance),k(c)};var b=g.props&&g.props[l];return b&&(a(d[l],{route:c,configProps:b}),_(v,i,c,b)),s(v,i,r)}};function _(n,e,t,r){var o=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(o){o=e.props=a({},o);var i=e.attrs=e.attrs||{};for(var s in o)n.props&&s in n.props||(i[s]=o[s],delete o[s])}}function T(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var o=e.split("/");t&&o[o.length-1]||o.pop();for(var a=n.replace(/^\//,"").split("/"),i=0;i<a.length;i++){var s=a[i];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function S(n){return n.replace(/\/\//g,"/")}var C=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},z=U,$=P,I=function(n,e){return M(P(n,e),e)},O=M,E=F,A=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function P(n,e){for(var t,r=[],o=0,a=0,i="",s=e&&e.delimiter||"/";null!=(t=A.exec(n));){var l=t[0],c=t[1],d=t.index;if(i+=n.slice(a,d),a=d+l.length,c)i+=c[1];else{var u=n[a],p=t[2],m=t[3],h=t[4],f=t[5],g=t[6],v=t[7];i&&(r.push(i),i="");var b=null!=p&&null!=u&&u!==p,y="+"===g||"*"===g,x="?"===g||"*"===g,w=t[2]||s,k=h||f;r.push({name:m||o++,prefix:p||"",delimiter:w,optional:x,repeat:y,partial:b,asterisk:!!v,pattern:k?L(k):v?".*":"[^"+R(w)+"]+?"})}}return a<n.length&&(i+=n.substr(a)),i&&r.push(i),r}function N(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function M(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",q(e)));return function(e,r){for(var o="",a=e||{},i=(r||{}).pretty?N:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,d=a[l.name];if(null==d){if(l.optional){l.partial&&(o+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(C(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var u=0;u<d.length;u++){if(c=i(d[u]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");o+=(0===u?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):i(d),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');o+=l.prefix+c}}else o+=l}return o}}function R(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function L(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function D(n,e){return n.keys=e,n}function q(n){return n&&n.sensitive?"":"i"}function F(n,e,t){C(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,o=!1!==t.end,a="",i=0;i<n.length;i++){var s=n[i];if("string"==typeof s)a+=R(s);else{var l=R(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),a+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=R(t.delimiter||"/"),u=a.slice(-d.length)===d;return r||(a=(u?a.slice(0,-d.length):a)+"(?:"+d+"(?=$))?"),a+=o?"$":r&&u?"":"(?="+d+"|$)",D(new RegExp("^"+a,q(t)),e)}function U(n,e,t){return C(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return D(n,e)}(n,e):C(n)?function(n,e,t){for(var r=[],o=0;o<n.length;o++)r.push(U(n[o],e,t).source);return D(new RegExp("(?:"+r.join("|")+")",q(t)),e)}(n,e,t):function(n,e,t){return F(P(n,t),e,t)}(n,e,t)}z.parse=$,z.compile=I,z.tokensToFunction=O,z.tokensToRegExp=E;var B=Object.create(null);function H(n,e,t){e=e||{};try{var r=B[n]||(B[n]=z.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function V(n,e,t,r){var o="string"==typeof n?{path:n}:n;if(o._normalized)return o;if(o.name){var i=(o=a({},n)).params;return i&&"object"==typeof i&&(o.params=a({},i)),o}if(!o.path&&o.params&&e){(o=a({},o))._normalized=!0;var s=a(a({},e.params),o.params);if(e.name)o.name=e.name,o.params=s;else if(e.matched.length){var l=e.matched[e.matched.length-1].path;o.path=H(l,s,e.path)}else 0;return o}var c=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var o=n.indexOf("?");return o>=0&&(t=n.slice(o+1),n=n.slice(0,o)),{path:n,query:t,hash:e}}(o.path||""),d=e&&e.path||"/",m=c.path?T(c.path,d,t||o.append):d,h=function(n,e,t){void 0===e&&(e={});var r,o=t||p;try{r=o(n||"")}catch(n){r={}}for(var a in e){var i=e[a];r[a]=Array.isArray(i)?i.map(u):u(i)}return r}(c.query,o.query,r&&r.options.parseQuery),f=o.hash||c.hash;return f&&"#"!==f.charAt(0)&&(f="#"+f),{_normalized:!0,path:m,query:h,hash:f}}var W,X=function(){},G={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},exact:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,o=t.resolve(this.to,r,this.append),i=o.location,s=o.route,l=o.href,c={},d=t.options.linkActiveClass,u=t.options.linkExactActiveClass,p=null==d?"router-link-active":d,m=null==u?"router-link-exact-active":u,g=null==this.activeClass?p:this.activeClass,v=null==this.exactActiveClass?m:this.exactActiveClass,b=s.redirectedFrom?f(null,V(s.redirectedFrom),null,t):s;c[v]=x(r,b),c[g]=this.exact?c[v]:function(n,e){return 0===n.path.replace(h,"/").indexOf(e.path.replace(h,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,b);var y=c[v]?this.ariaCurrentValue:null,w=function(n){J(n)&&(e.replace?t.replace(i,X):t.push(i,X))},k={click:J};Array.isArray(this.event)?this.event.forEach((function(n){k[n]=w})):k[this.event]=w;var j={class:c},_=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:w,isActive:c[g],isExactActive:c[v]});if(_){if(1===_.length)return _[0];if(_.length>1||!_.length)return 0===_.length?n():n("span",{},_)}if("a"===this.tag)j.on=k,j.attrs={href:l,"aria-current":y};else{var T=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(T){T.isStatic=!1;var S=T.data=a({},T.data);for(var C in S.on=S.on||{},S.on){var z=S.on[C];C in k&&(S.on[C]=Array.isArray(z)?z:[z])}for(var $ in k)$ in S.on?S.on[$].push(k[$]):S.on[$]=w;var I=T.data.attrs=a({},T.data.attrs);I.href=l,I["aria-current"]=y}else j.on=k}return n(this.tag,j,this.$slots.default)}};function J(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Y="undefined"!=typeof window;function K(n,e,t,r){var o=e||[],a=t||Object.create(null),i=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,o,a,i){var s=o.path,l=o.name;0;var c=o.pathToRegexpOptions||{},d=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return S(e.path+"/"+n)}(s,a,c.strict);"boolean"==typeof o.caseSensitive&&(c.sensitive=o.caseSensitive);var u={path:d,regex:Q(d,c),components:o.components||{default:o.component},instances:{},enteredCbs:{},name:l,parent:a,matchAs:i,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var a=i?S(i+"/"+o.path):void 0;n(e,t,r,o,u,a)}));t[u.path]||(e.push(u.path),t[u.path]=u);if(void 0!==o.alias)for(var p=Array.isArray(o.alias)?o.alias:[o.alias],m=0;m<p.length;++m){0;var h={path:p[m],children:o.children};n(e,t,r,h,a,u.path||"/")}l&&(r[l]||(r[l]=u))}(o,a,i,n)}));for(var s=0,l=o.length;s<l;s++)"*"===o[s]&&(o.push(o.splice(s,1)[0]),l--,s--);return{pathList:o,pathMap:a,nameMap:i}}function Q(n,e){return z(n,[],e)}function Z(n,e){var t=K(n),r=t.pathList,o=t.pathMap,a=t.nameMap;function i(n,t,i){var s=V(n,t,!1,e),c=s.name;if(c){var d=a[c];if(!d)return l(null,s);var u=d.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in s.params)&&u.indexOf(p)>-1&&(s.params[p]=t.params[p]);return s.path=H(d.path,s.params),l(d,s,i)}if(s.path){s.params={};for(var m=0;m<r.length;m++){var h=r[m],f=o[h];if(nn(f.regex,s.path,s.params))return l(f,s,i)}}return l(null,s)}function s(n,t){var r=n.redirect,o="function"==typeof r?r(f(n,t,null,e)):r;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return l(null,t);var s=o,c=s.name,d=s.path,u=t.query,p=t.hash,m=t.params;if(u=s.hasOwnProperty("query")?s.query:u,p=s.hasOwnProperty("hash")?s.hash:p,m=s.hasOwnProperty("params")?s.params:m,c){a[c];return i({_normalized:!0,name:c,query:u,hash:p,params:m},void 0,t)}if(d){var h=function(n,e){return T(n,e.parent?e.parent.path:"/",!0)}(d,n);return i({_normalized:!0,path:H(h,m),query:u,hash:p},void 0,t)}return l(null,t)}function l(n,t,r){return n&&n.redirect?s(n,r||t):n&&n.matchAs?function(n,e,t){var r=i({_normalized:!0,path:H(t,e.params)});if(r){var o=r.matched,a=o[o.length-1];return e.params=r.params,l(a,e)}return l(null,e)}(0,t,n.matchAs):f(n,t,r,e)}return{match:i,addRoutes:function(n){K(n,r,o,a)}}}function nn(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var o=1,a=r.length;o<a;++o){var i=n.keys[o-1];i&&(t[i.name||"pathMatch"]="string"==typeof r[o]?d(r[o]):r[o])}return!0}var en=Y&&window.performance&&window.performance.now?window.performance:Date;function tn(){return en.now().toFixed(3)}var rn=tn();function on(){return rn}function an(n){return rn=n}var sn=Object.create(null);function ln(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=a({},window.history.state);return t.key=on(),window.history.replaceState(t,"",e),window.addEventListener("popstate",un),function(){window.removeEventListener("popstate",un)}}function cn(n,e,t,r){if(n.app){var o=n.options.scrollBehavior;o&&n.app.$nextTick((function(){var a=function(){var n=on();if(n)return sn[n]}(),i=o.call(n,e,t,r?a:null);i&&("function"==typeof i.then?i.then((function(n){gn(n,a)})).catch((function(n){0})):gn(i,a))}))}}function dn(){var n=on();n&&(sn[n]={x:window.pageXOffset,y:window.pageYOffset})}function un(n){dn(),n.state&&n.state.key&&an(n.state.key)}function pn(n){return hn(n.x)||hn(n.y)}function mn(n){return{x:hn(n.x)?n.x:window.pageXOffset,y:hn(n.y)?n.y:window.pageYOffset}}function hn(n){return"number"==typeof n}var fn=/^#\d/;function gn(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var o=fn.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(o){var a=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(o,a={x:hn((t=a).x)?t.x:0,y:hn(t.y)?t.y:0})}else pn(n)&&(e=mn(n))}else r&&pn(n)&&(e=mn(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var vn,bn=Y&&((-1===(vn=window.navigator.userAgent).indexOf("Android 2.")&&-1===vn.indexOf("Android 4.0")||-1===vn.indexOf("Mobile Safari")||-1!==vn.indexOf("Chrome")||-1!==vn.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function yn(n,e){dn();var t=window.history;try{if(e){var r=a({},t.state);r.key=on(),t.replaceState(r,"",n)}else t.pushState({key:an(tn())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function xn(n){yn(n,!0)}function wn(n,e,t){var r=function(o){o>=n.length?t():n[o]?e(n[o],(function(){r(o+1)})):r(o+1)};r(0)}var kn={redirected:2,aborted:4,cancelled:8,duplicated:16};function jn(n,e){return Tn(n,e,kn.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return Sn.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function _n(n,e){return Tn(n,e,kn.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function Tn(n,e,t,r){var o=new Error(r);return o._isRouter=!0,o.from=n,o.to=e,o.type=t,o}var Sn=["params","query","hash"];function Cn(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function zn(n,e){return Cn(n)&&n._isRouter&&(null==e||n.type===e)}function $n(n){return function(e,t,r){var o=!1,a=0,i=null;In(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){o=!0,a++;var l,c=An((function(e){var o;((o=e).__esModule||En&&"Module"===o[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:W.extend(e),t.components[s]=e,--a<=0&&r()})),d=An((function(n){var e="Failed to resolve async component "+s+": "+n;i||(i=Cn(n)?n:new Error(e),r(i))}));try{l=n(c,d)}catch(n){d(n)}if(l)if("function"==typeof l.then)l.then(c,d);else{var u=l.component;u&&"function"==typeof u.then&&u.then(c,d)}}})),o||r()}}function In(n,e){return On(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function On(n){return Array.prototype.concat.apply([],n)}var En="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function An(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var Pn=function(n,e){this.router=n,this.base=function(n){if(!n)if(Y){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=v,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Nn(n,e,t,r){var o=In(n,(function(n,r,o,a){var i=function(n,e){"function"!=typeof n&&(n=W.extend(n));return n.options[e]}(n,e);if(i)return Array.isArray(i)?i.map((function(n){return t(n,r,o,a)})):t(i,r,o,a)}));return On(r?o.reverse():o)}function Mn(n,e){if(e)return function(){return n.apply(e,arguments)}}Pn.prototype.listen=function(n){this.cb=n},Pn.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Pn.prototype.onError=function(n){this.errorCbs.push(n)},Pn.prototype.transitionTo=function(n,e,t){var r,o=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var a=this.current;this.confirmTransition(r,(function(){o.updateRoute(r),e&&e(r),o.ensureURL(),o.router.afterHooks.forEach((function(n){n&&n(r,a)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!o.ready&&(zn(n,kn.redirected)&&a===v||(o.ready=!0,o.readyErrorCbs.forEach((function(e){e(n)}))))}))},Pn.prototype.confirmTransition=function(n,e,t){var r=this,o=this.current;this.pending=n;var a,i,s=function(n){!zn(n)&&Cn(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=o.matched.length-1;if(x(n,o)&&l===c&&n.matched[l]===o.matched[c])return this.ensureURL(),s(((i=Tn(a=o,n,kn.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",i));var d=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),u=d.updated,p=d.deactivated,m=d.activated,h=[].concat(function(n){return Nn(n,"beforeRouteLeave",Mn,!0)}(p),this.router.beforeHooks,function(n){return Nn(n,"beforeRouteUpdate",Mn)}(u),m.map((function(n){return n.beforeEnter})),$n(m)),f=function(e,t){if(r.pending!==n)return s(_n(o,n));try{e(n,o,(function(e){!1===e?(r.ensureURL(!0),s(function(n,e){return Tn(n,e,kn.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(o,n))):Cn(e)?(r.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(jn(o,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){s(n)}};wn(h,f,(function(){wn(function(n){return Nn(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,o,a){return n(r,o,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),a(n)}))}}(n,t,r)}))}(m).concat(r.router.resolveHooks),f,(function(){if(r.pending!==n)return s(_n(o,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){k(n)}))}))}))},Pn.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Pn.prototype.setupListeners=function(){},Pn.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=v,this.pending=null};var Rn=function(n){function e(e,t){n.call(this,e,t),this._startLocation=Ln(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=bn&&t;r&&this.listeners.push(ln());var o=function(){var t=n.current,o=Ln(n.base);n.current===v&&o===n._startLocation||n.transitionTo(o,(function(n){r&&cn(e,n,t,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){yn(S(r.base+n.fullPath)),cn(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){xn(S(r.base+n.fullPath)),cn(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(Ln(this.base)!==this.current.fullPath){var e=S(this.base+this.current.fullPath);n?yn(e):xn(e)}},e.prototype.getCurrentLocation=function(){return Ln(this.base)},e}(Pn);function Ln(n){var e=window.location.pathname;return n&&0===e.toLowerCase().indexOf(n.toLowerCase())&&(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Dn=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=Ln(n);if(!/^\/#/.test(e))return window.location.replace(S(n+"/#"+e)),!0}(this.base)||qn()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=bn&&e;t&&this.listeners.push(ln());var r=function(){var e=n.current;qn()&&n.transitionTo(Fn(),(function(r){t&&cn(n.router,r,e,!0),bn||Hn(r.fullPath)}))},o=bn?"popstate":"hashchange";window.addEventListener(o,r),this.listeners.push((function(){window.removeEventListener(o,r)}))}},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Bn(n.fullPath),cn(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Hn(n.fullPath),cn(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Fn()!==e&&(n?Bn(e):Hn(e))},e.prototype.getCurrentLocation=function(){return Fn()},e}(Pn);function qn(){var n=Fn();return"/"===n.charAt(0)||(Hn("/"+n),!1)}function Fn(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Un(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Bn(n){bn?yn(Un(n)):window.location.hash=n}function Hn(n){bn?xn(Un(n)):window.location.replace(Un(n))}var Vn=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){zn(n,kn.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Pn),Wn=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Z(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!bn&&!1!==n.fallback,this.fallback&&(e="hash"),Y||(e="abstract"),this.mode=e,e){case"history":this.history=new Rn(this,n.base);break;case"hash":this.history=new Dn(this,n.base,this.fallback);break;case"abstract":this.history=new Vn(this,n.base);break;default:0}},Xn={currentRoute:{configurable:!0}};function Gn(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Wn.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Xn.currentRoute.get=function(){return this.history&&this.history.current},Wn.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Rn||t instanceof Dn){var r=function(n){t.setupListeners(),function(n){var r=t.current,o=e.options.scrollBehavior;bn&&o&&"fullPath"in n&&cn(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Wn.prototype.beforeEach=function(n){return Gn(this.beforeHooks,n)},Wn.prototype.beforeResolve=function(n){return Gn(this.resolveHooks,n)},Wn.prototype.afterEach=function(n){return Gn(this.afterHooks,n)},Wn.prototype.onReady=function(n,e){this.history.onReady(n,e)},Wn.prototype.onError=function(n){this.history.onError(n)},Wn.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},Wn.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},Wn.prototype.go=function(n){this.history.go(n)},Wn.prototype.back=function(){this.go(-1)},Wn.prototype.forward=function(){this.go(1)},Wn.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Wn.prototype.resolve=function(n,e,t){var r=V(n,e=e||this.history.current,t,this),o=this.match(r,e),a=o.redirectedFrom||o.fullPath;return{location:r,route:o,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?S(n+"/"+r):r}(this.history.base,a,this.mode),normalizedTo:r,resolved:o}},Wn.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==v&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Wn.prototype,Xn),Wn.install=function n(e){if(!n.installed||W!==e){n.installed=!0,W=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",j),e.component("RouterLink",G);var o=e.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},Wn.version="3.4.9",Wn.isNavigationFailure=zn,Wn.NavigationFailureType=kn,Y&&window.Vue&&window.Vue.use(Wn);var Jn=Wn;t(45),t(113),t(331),t(214),t(215),t(85),t(333),t(46);function Yn(n){n.locales&&Object.keys(n.locales).forEach((function(e){n.locales[e].path=e})),Object.freeze(n)}var Kn=t(0),Qn=(t(106),t(163),t(37)),Zn=t(83),ne=t(268),ee=t.n(ne),te={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(n){return"meta"===Object(Zn.a)(n,1)[0]})).map((function(n){var e=Object(Zn.a)(n,2);e[0];return e[1]})),this.$ssrContext){var n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map((function(n){var e="<meta";return Object.keys(n).forEach((function(t){e+=" ".concat(t,'="').concat(n[t],'"')})),e+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=oe(this.$canonicalUrl)}var e},mounted:function(){this.currentMetaTags=Object(Qn.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var n=this.getMergedMetaTags();this.currentMetaTags=ae(n,this.currentMetaTags)},getMergedMetaTags:function(){var n=this.$page.frontmatter.meta||[];return ee()([{name:"description",content:this.$description}],n,this.siteMeta,ie)},updateCanonicalLink:function(){re(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",oe(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){ae(null,this.currentMetaTags),re()}};function re(){var n=document.querySelector("link[rel='canonical']");n&&n.remove()}function oe(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return n?'<link href="'.concat(n,'" rel="canonical" />'):""}function ae(n,e){if(e&&Object(Qn.a)(e).filter((function(n){return n.parentNode===document.head})).forEach((function(n){return document.head.removeChild(n)})),n)return n.map((function(n){var e=document.createElement("meta");return Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),document.head.appendChild(e),e}))}function ie(n){for(var e=0,t=["name","property","itemprop"];e<t.length;e++){var r=t[e];if(n.hasOwnProperty(r))return n[r]+r}return JSON.stringify(n)}t(157),t(35),t(40);var se=t(269),le={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(se)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var n=this,e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(n){return e.some((function(e){return e.hash===n.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+r,i=0;i<t.length;i++){var s=t[i],l=t[i+1],c=0===i&&0===r||r>=s.parentElement.offsetTop+10&&(!l||r<l.parentElement.offsetTop-10),d=decodeURIComponent(this.$route.hash);if(c&&d!==decodeURIComponent(s.hash)){var u=s;if(a===o)for(var p=i+1;p<t.length;p++)if(d===decodeURIComponent(t[p].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(u.hash),(function(){n.$nextTick((function(){n.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},ce=(t(90),t(105)),de=t.n(ce),ue={mounted:function(){var n=this;de.a.configure({showSpinner:!1}),this.$router.beforeEach((function(n,e,t){n.path===e.path||o.default.component(n.name)||de.a.start(),t()})),this.$router.afterEach((function(){de.a.done(),n.isSidebarOpen=!1}))}},pe=t(270),me=t.n(pe),he=(t(435),{mounted:function(){me.a.polyfill()}}),fe=(t(39),t(436),Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}),ge=function(n){return"IMG"===n.tagName},ve=function(n){return n&&1===n.nodeType},be=function(n){return".svg"===(n.currentSrc||n.src).substr(-4).toLowerCase()},ye=function(n){try{return Array.isArray(n)?n.filter(ge):function(n){return NodeList.prototype.isPrototypeOf(n)}(n)?[].slice.call(n).filter(ge):ve(n)?[n].filter(ge):"string"==typeof n?[].slice.call(document.querySelectorAll(n)).filter(ge):[]}catch(n){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},xe=function(n){var e=document.createElement("div");return e.classList.add("medium-zoom-overlay"),e.style.background=n,e},we=function(n){var e=n.getBoundingClientRect(),t=e.top,r=e.left,o=e.width,a=e.height,i=n.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return i.removeAttribute("id"),i.style.position="absolute",i.style.top=t+s+"px",i.style.left=r+l+"px",i.style.width=o+"px",i.style.height=a+"px",i.style.transform="",i},ke=function(n,e){var t=fe({bubbles:!1,cancelable:!1,detail:void 0},e);if("function"==typeof window.CustomEvent)return new CustomEvent(n,t);var r=document.createEvent("CustomEvent");return r.initCustomEvent(n,t.bubbles,t.cancelable,t.detail),r};!function(n,e){void 0===e&&(e={});var t=e.insertAt;if(n&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===t&&r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o),o.styleSheet?o.styleSheet.cssText=n:o.appendChild(document.createTextNode(n))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var je=function n(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=window.Promise||function(n){function e(){}n(e,e)},o=function(n){var e=n.target;e!==T?-1!==y.indexOf(e)&&f({target:e}):h()},a=function(){if(!w&&_.original){var n=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(k-n)>j.scrollOffset&&setTimeout(h,150)}},i=function(n){var e=n.key||n.keyCode;"Escape"!==e&&"Esc"!==e&&27!==e||h()},s=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n;if(n.background&&(T.style.background=n.background),n.container&&n.container instanceof Object&&(e.container=fe({},j.container,n.container)),n.template){var t=ve(n.template)?n.template:document.querySelector(n.template);e.template=t}return j=fe({},j,e),y.forEach((function(n){n.dispatchEvent(ke("medium-zoom:update",{detail:{zoom:S}}))})),S},l=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return n(fe({},j,e))},c=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];var r=e.reduce((function(n,e){return[].concat(n,ye(e))}),[]);return r.filter((function(n){return-1===y.indexOf(n)})).forEach((function(n){y.push(n),n.classList.add("medium-zoom-image")})),x.forEach((function(n){var e=n.type,t=n.listener,o=n.options;r.forEach((function(n){n.addEventListener(e,t,o)}))})),S},d=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];_.zoomed&&h();var r=e.length>0?e.reduce((function(n,e){return[].concat(n,ye(e))}),[]):y;return r.forEach((function(n){n.classList.remove("medium-zoom-image"),n.dispatchEvent(ke("medium-zoom:detach",{detail:{zoom:S}}))})),y=y.filter((function(n){return-1===r.indexOf(n)})),S},u=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(r){r.addEventListener("medium-zoom:"+n,e,t)})),x.push({type:"medium-zoom:"+n,listener:e,options:t}),S},p=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(r){r.removeEventListener("medium-zoom:"+n,e,t)})),x=x.filter((function(t){return!(t.type==="medium-zoom:"+n&&t.listener.toString()===e.toString())})),S},m=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.target,t=function(){var n={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},e=void 0,t=void 0;if(j.container)if(j.container instanceof Object)e=(n=fe({},n,j.container)).width-n.left-n.right-2*j.margin,t=n.height-n.top-n.bottom-2*j.margin;else{var r=(ve(j.container)?j.container:document.querySelector(j.container)).getBoundingClientRect(),o=r.width,a=r.height,i=r.left,s=r.top;n=fe({},n,{width:o,height:a,left:i,top:s})}e=e||n.width-2*j.margin,t=t||n.height-2*j.margin;var l=_.zoomedHd||_.original,c=be(l)?e:l.naturalWidth||e,d=be(l)?t:l.naturalHeight||t,u=l.getBoundingClientRect(),p=u.top,m=u.left,h=u.width,f=u.height,g=Math.min(c,e)/h,v=Math.min(d,t)/f,b=Math.min(g,v),y="scale("+b+") translate3d("+((e-h)/2-m+j.margin+n.left)/b+"px, "+((t-f)/2-p+j.margin+n.top)/b+"px, 0)";_.zoomed.style.transform=y,_.zoomedHd&&(_.zoomedHd.style.transform=y)};return new r((function(n){if(e&&-1===y.indexOf(e))n(S);else{if(_.zoomed)n(S);else{if(e)_.original=e;else{if(!(y.length>0))return void n(S);var r=y;_.original=r[0]}if(_.original.dispatchEvent(ke("medium-zoom:open",{detail:{zoom:S}})),k=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,w=!0,_.zoomed=we(_.original),document.body.appendChild(T),j.template){var o=ve(j.template)?j.template:document.querySelector(j.template);_.template=document.createElement("div"),_.template.appendChild(o.content.cloneNode(!0)),document.body.appendChild(_.template)}if(document.body.appendChild(_.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),_.original.classList.add("medium-zoom-image--hidden"),_.zoomed.classList.add("medium-zoom-image--opened"),_.zoomed.addEventListener("click",h),_.zoomed.addEventListener("transitionend",(function e(){w=!1,_.zoomed.removeEventListener("transitionend",e),_.original.dispatchEvent(ke("medium-zoom:opened",{detail:{zoom:S}})),n(S)})),_.original.getAttribute("data-zoom-src")){_.zoomedHd=_.zoomed.cloneNode(),_.zoomedHd.removeAttribute("srcset"),_.zoomedHd.removeAttribute("sizes"),_.zoomedHd.src=_.zoomed.getAttribute("data-zoom-src"),_.zoomedHd.onerror=function(){clearInterval(a),console.warn("Unable to reach the zoom image target "+_.zoomedHd.src),_.zoomedHd=null,t()};var a=setInterval((function(){_.zoomedHd.complete&&(clearInterval(a),_.zoomedHd.classList.add("medium-zoom-image--opened"),_.zoomedHd.addEventListener("click",h),document.body.appendChild(_.zoomedHd),t())}),10)}else if(_.original.hasAttribute("srcset")){_.zoomedHd=_.zoomed.cloneNode(),_.zoomedHd.removeAttribute("sizes"),_.zoomedHd.removeAttribute("loading");var i=_.zoomedHd.addEventListener("load",(function(){_.zoomedHd.removeEventListener("load",i),_.zoomedHd.classList.add("medium-zoom-image--opened"),_.zoomedHd.addEventListener("click",h),document.body.appendChild(_.zoomedHd),t()}))}else t()}}}))},h=function(){return new r((function(n){if(!w&&_.original){w=!0,document.body.classList.remove("medium-zoom--opened"),_.zoomed.style.transform="",_.zoomedHd&&(_.zoomedHd.style.transform=""),_.template&&(_.template.style.transition="opacity 150ms",_.template.style.opacity=0),_.original.dispatchEvent(ke("medium-zoom:close",{detail:{zoom:S}})),_.zoomed.addEventListener("transitionend",(function e(){_.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(_.zoomed),_.zoomedHd&&document.body.removeChild(_.zoomedHd),document.body.removeChild(T),_.zoomed.classList.remove("medium-zoom-image--opened"),_.template&&document.body.removeChild(_.template),w=!1,_.zoomed.removeEventListener("transitionend",e),_.original.dispatchEvent(ke("medium-zoom:closed",{detail:{zoom:S}})),_.original=null,_.zoomed=null,_.zoomedHd=null,_.template=null,n(S)}))}else n(S)}))},f=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.target;return _.original?h():m({target:e})},g=function(){return j},v=function(){return y},b=function(){return _.original},y=[],x=[],w=!1,k=0,j=t,_={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(e)?j=e:(e||"string"==typeof e)&&c(e),j=fe({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},j);var T=xe(j.background);document.addEventListener("click",o),document.addEventListener("keyup",i),document.addEventListener("scroll",a),window.addEventListener("resize",h);var S={open:m,close:h,toggle:f,update:s,clone:l,attach:c,detach:d,on:u,off:p,getOptions:g,getImages:v,getZoomedImage:b};return S},_e={data:function(){return{zoom:null}},mounted:function(){this.updateZoom()},updated:function(){this.updateZoom()},methods:{updateZoom:function(){var n=this;setTimeout((function(){n.zoom&&n.zoom.detach(),n.zoom=je(".theme-default-content :not(a) > img",void 0)}),1e3)}}},Te=(t(67),t(437),t(15)),Se=t(18),Ce=(t(438),function(){function n(){Object(Te.a)(this,n);this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}return Object(Se.a)(n,[{key:"show",value:function(n){var e=this,t=n.text,r=void 0===t?"":t,o=n.duration,a=void 0===o?3e3:o,i=document.createElement("div");i.className="message move-in",i.innerHTML='\n      <i style="fill: #06a35a;font-size: 14px;coolr: #06a35a">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">'.concat(r,"</div>\n    "),this.containerEl.appendChild(i),a>0&&setTimeout((function(){e.close(i)}),a)}},{key:"close",value:function(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",(function(){n.remove()}))}}]),n}()),ze=[te,le,ue,he,_e,{mounted:function(){this.updateCopy()},watch:{$route:{handler:function(){this.updateCopy()}}},updated:function(){this.updateCopy()},methods:{updateCopy:function(){var n=this;!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||setTimeout((function(){(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach((function(e){document.querySelectorAll(e).forEach(n.generateCopyButton)}))}),1e3)},generateCopyButton:function(n){var e=this;if(!n.classList.contains("codecopy-enabled")){var t=document.createElement("i");t.className="code-copy",t.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',t.title="Click to Copy to Clipboard",t.addEventListener("click",(function(){e.copyToClipboard(n.innerText)})),n.appendChild(t),n.classList.add("codecopy-enabled")}},copyToClipboard:function(n){var e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);var t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy"),(new Ce).show({text:"复制成功 ^~^ !",duration:3e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}}],$e={name:"GlobalLayout",computed:{layout:function(){var n=this.getLayout();return Object(Kn.i)("layout",n),o.default.component(n)}},methods:{getLayout:function(){if(this.$page.path){var n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},Ie=t(5),Oe=Object(Ie.a)($e,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;Object(Kn.g)(Oe,"mixins",ze);var Ee=[{name:"v-39e916f0",path:"/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-39e916f0").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-12b6f6ca",path:"/database/mongoDB.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-12b6f6ca").then(t)}},{name:"v-2393b2ea",path:"/database/mongoose.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-2393b2ea").then(t)}},{name:"v-f6b60f8a",path:"/database/mysql.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-f6b60f8a").then(t)}},{name:"v-73d8ef87",path:"/feat/lib.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-73d8ef87").then(t)}},{name:"v-0fab4a4b",path:"/feat/todo.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-0fab4a4b").then(t)}},{name:"v-73897db4",path:"/frame/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-73897db4").then(t)}},{path:"/frame/index.html",redirect:"/frame/"},{name:"v-0f06b62b",path:"/frame/angular.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-0f06b62b").then(t)}},{name:"v-1100e1ea",path:"/frame/wxminiapp.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-1100e1ea").then(t)}},{name:"v-26fec7c0",path:"/issues/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-26fec7c0").then(t)}},{path:"/issues/index.html",redirect:"/issues/"},{name:"v-898c4eaa",path:"/issues/graphql-github.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-898c4eaa").then(t)}},{name:"v-c4dcad62",path:"/issues/issue.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-c4dcad62").then(t)}},{name:"v-416fae73",path:"/issues/jwt.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-416fae73").then(t)}},{name:"v-07a67efd",path:"/issues/render-html.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-07a67efd").then(t)}},{name:"v-2d684fe3",path:"/issues/request.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-2d684fe3").then(t)}},{name:"v-17d3d140",path:"/js/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-17d3d140").then(t)}},{path:"/js/index.html",redirect:"/js/"},{name:"v-759141f1",path:"/js/array.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-759141f1").then(t)}},{name:"v-c8bebff2",path:"/js/basic.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-c8bebff2").then(t)}},{name:"v-237eb20e",path:"/js/client-offset.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-237eb20e").then(t)}},{name:"v-10abb235",path:"/js/console.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-10abb235").then(t)}},{name:"v-73b9822b",path:"/js/date.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-73b9822b").then(t)}},{name:"v-3dfb9b42",path:"/js/dom.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-3dfb9b42").then(t)}},{name:"v-1c92ac2f",path:"/js/event.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-1c92ac2f").then(t)}},{name:"v-1cdf13eb",path:"/js/func.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-1cdf13eb").then(t)}},{name:"v-44ff270b",path:"/js/object.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-44ff270b").then(t)}},{name:"v-73c7fac3",path:"/js/oop.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-73c7fac3").then(t)}},{name:"v-67b761d5",path:"/js/operation.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-67b761d5").then(t)}},{name:"v-25a66a6a",path:"/js/regExp.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-25a66a6a").then(t)}},{name:"v-477b89cb",path:"/js/string.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-477b89cb").then(t)}},{name:"v-71f3782b",path:"/js/this.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-71f3782b").then(t)}},{name:"v-4e03900b",path:"/libs/20200730.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-4e03900b").then(t)}},{name:"v-221adb60",path:"/libs/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-221adb60").then(t)}},{path:"/libs/index.html",redirect:"/libs/"},{name:"v-909fc8aa",path:"/libs/binaryTree.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-909fc8aa").then(t)}},{name:"v-0eb1eaaa",path:"/libs/currying.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-0eb1eaaa").then(t)}},{name:"v-01608806",path:"/libs/debounce-throttle.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-01608806").then(t)}},{name:"v-d40032aa",path:"/libs/document.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-d40032aa").then(t)}},{name:"v-26ab0fa5",path:"/libs/event.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-26ab0fa5").then(t)}},{name:"v-2f8561ea",path:"/libs/mobile.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-2f8561ea").then(t)}},{name:"v-d6a7842a",path:"/libs/regexp.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-d6a7842a").then(t)}},{name:"v-1e971e6a",path:"/libs/sort.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-1e971e6a").then(t)}},{name:"v-43e29632",path:"/libs/types.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-43e29632").then(t)}},{name:"v-5f067c2b",path:"/linux/centos7.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-5f067c2b").then(t)}},{name:"v-4392c46a",path:"/linux/linux.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-4392c46a").then(t)}},{name:"v-54bc546a",path:"/linux/manjaro.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-54bc546a").then(t)}},{name:"v-696b2493",path:"/linux/ubuntu.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-696b2493").then(t)}},{name:"v-51221e6a",path:"/linux/vim.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-51221e6a").then(t)}},{name:"v-663c3184",path:"/reactJs/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-663c3184").then(t)}},{path:"/reactJs/index.html",redirect:"/reactJs/"},{name:"v-39a24c06",path:"/reactJs/rc-canvas-poster.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-39a24c06").then(t)}},{name:"v-69dc8923",path:"/reactJs/rc-hooks-reducer.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-69dc8923").then(t)}},{name:"v-40d1a56d",path:"/reactJs/rc-lifecycle.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-40d1a56d").then(t)}},{name:"v-d4461d4e",path:"/reactJs/rc-redux.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-d4461d4e").then(t)}},{name:"v-56cbd6f0",path:"/serve/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-56cbd6f0").then(t)}},{path:"/serve/index.html",redirect:"/serve/"},{name:"v-68f2ea4d",path:"/serve/docker-compose.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-68f2ea4d").then(t)}},{name:"v-13384609",path:"/serve/docker-stu.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-13384609").then(t)}},{name:"v-20211497",path:"/serve/docker.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-20211497").then(t)}},{name:"v-498c77a1",path:"/serve/gitlab.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-498c77a1").then(t)}},{name:"v-57d0c947",path:"/serve/http.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-57d0c947").then(t)}},{name:"v-cd67ccaa",path:"/serve/nginx-centos7.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-cd67ccaa").then(t)}},{name:"v-fd43afaa",path:"/serve/nginx-use.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-fd43afaa").then(t)}},{name:"v-bf44082a",path:"/serve/nginx.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-bf44082a").then(t)}},{name:"v-19de71fe",path:"/serve/nodejs.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-19de71fe").then(t)}},{name:"v-f757d046",path:"/serve/travis.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-f757d046").then(t)}},{name:"v-800333ea",path:"/serve/vagrant.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-800333ea").then(t)}},{name:"v-5df87458",path:"/tools/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-5df87458").then(t)}},{path:"/tools/index.html",redirect:"/tools/"},{name:"v-5290c2e6",path:"/tools/commitizen.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-5290c2e6").then(t)}},{name:"v-45d5daeb",path:"/tools/dev-proxy.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-45d5daeb").then(t)}},{name:"v-74169cd1",path:"/tools/editorConfig.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-74169cd1").then(t)}},{name:"v-7b6d1e4d",path:"/tools/eslint.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-7b6d1e4d").then(t)}},{name:"v-36067c56",path:"/tools/git-bare.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-36067c56").then(t)}},{name:"v-331a0a4b",path:"/tools/git-example.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-331a0a4b").then(t)}},{name:"v-66e4e26b",path:"/tools/git.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-66e4e26b").then(t)}},{name:"v-f1c651ee",path:"/tools/github-actions.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-f1c651ee").then(t)}},{name:"v-1a60816e",path:"/tools/prettier.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-1a60816e").then(t)}},{name:"v-6da2cf71",path:"/tools/sentry.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-6da2cf71").then(t)}},{name:"v-47686c8e",path:"/tools/vscode/plugins.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-47686c8e").then(t)}},{name:"v-75920260",path:"/tools/vscode/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-75920260").then(t)}},{path:"/tools/vscode/index.html",redirect:"/tools/vscode/"},{name:"v-63739c6b",path:"/tools/vscode/user.other.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-63739c6b").then(t)}},{name:"v-cb23c32a",path:"/tools/vscode/user.setting.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-cb23c32a").then(t)}},{name:"v-f03e012a",path:"/tools/vscode/user.setting.vue.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-f03e012a").then(t)}},{name:"v-73fc990b",path:"/tools/webpack.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-73fc990b").then(t)}},{name:"v-5d5f8230",path:"/vueJs/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-5d5f8230").then(t)}},{path:"/vueJs/index.html",redirect:"/vueJs/"},{name:"v-0bc04495",path:"/vueJs/vue-issues.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-0bc04495").then(t)}},{name:"v-568b66a6",path:"/vueJs/vue-libs.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-568b66a6").then(t)}},{name:"v-6158e156",path:"/vueJs/vue-pagination.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-6158e156").then(t)}},{name:"v-01f8c78b",path:"/vueJs/vue-plugins.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-01f8c78b").then(t)}},{name:"v-e3a2eb6a",path:"/vueJs/vue-props.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-e3a2eb6a").then(t)}},{name:"v-4f096bb7",path:"/vueJs/vue-router.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-4f096bb7").then(t)}},{name:"v-14db9dcd",path:"/vueJs/vue-slot.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-14db9dcd").then(t)}},{name:"v-21d64666",path:"/web/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-21d64666").then(t)}},{path:"/web/index.html",redirect:"/web/"},{name:"v-0cc8204b",path:"/web/browser.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-0cc8204b").then(t)}},{name:"v-d4a672aa",path:"/web/css.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-d4a672aa").then(t)}},{name:"v-0e770a8b",path:"/web/emmet.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-0e770a8b").then(t)}},{name:"v-252b916a",path:"/web/html.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-252b916a").then(t)}},{name:"v-373cc9a0",path:"/web/less/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-373cc9a0").then(t)}},{path:"/web/less/index.html",redirect:"/web/less/"},{name:"v-26103f0b",path:"/web/rem.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-26103f0b").then(t)}},{name:"v-6b871485",path:"/web/sass.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-6b871485").then(t)}},{name:"v-3ac5b8eb",path:"/web/use-css.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-3ac5b8eb").then(t)}},{name:"v-374104bf",path:"/web/use-html.html",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-374104bf").then(t)}},{name:"v-b1564aac",path:"/tag/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tags","v-b1564aac").then(t)},meta:{pid:"tags",id:"tags"}},{path:"/tag/index.html",redirect:"/tag/"},{name:"v-ef9325c4",path:"/categories/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("FrontmatterKey","v-ef9325c4").then(t)},meta:{pid:"categories",id:"categories"}},{path:"/categories/index.html",redirect:"/categories/"},{name:"v-6319eb4e",path:"/timeline/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("TimeLines","v-6319eb4e").then(t)},meta:{pid:"timeline",id:"timeline"}},{path:"/timeline/index.html",redirect:"/timeline/"},{name:"v-88d642b2",path:"/tag/mongodb/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-88d642b2").then(t)},meta:{pid:"tags",id:"mongodb"}},{path:"/tag/mongodb/index.html",redirect:"/tag/mongodb/"},{name:"v-6ee7f212",path:"/tag/mysql/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-6ee7f212").then(t)},meta:{pid:"tags",id:"mysql"}},{path:"/tag/mysql/index.html",redirect:"/tag/mysql/"},{name:"v-21fd6d65",path:"/tag/CSR & SSR/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-21fd6d65").then(t)},meta:{pid:"tags",id:"CSR & SSR"}},{path:"/tag/CSR & SSR/index.html",redirect:"/tag/CSR & SSR/"},{name:"v-1fa34910",path:"/tag/angular.js/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-1fa34910").then(t)},meta:{pid:"tags",id:"angular.js"}},{path:"/tag/angular.js/index.html",redirect:"/tag/angular.js/"},{name:"v-81b55818",path:"/tag/微信小程序/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-81b55818").then(t)},meta:{pid:"tags",id:"微信小程序"}},{path:"/tag/微信小程序/index.html",redirect:"/tag/微信小程序/"},{name:"v-1559f73a",path:"/tag/blog/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-1559f73a").then(t)},meta:{pid:"tags",id:"blog"}},{path:"/tag/blog/index.html",redirect:"/tag/blog/"},{name:"v-55654be0",path:"/tag/graphql/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-55654be0").then(t)},meta:{pid:"tags",id:"graphql"}},{path:"/tag/graphql/index.html",redirect:"/tag/graphql/"},{name:"v-1f67da7c",path:"/tag/github/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-1f67da7c").then(t)},meta:{pid:"tags",id:"github"}},{path:"/tag/github/index.html",redirect:"/tag/github/"},{name:"v-5a6429c5",path:"/tag/性能优化/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-5a6429c5").then(t)},meta:{pid:"tags",id:"性能优化"}},{path:"/tag/性能优化/index.html",redirect:"/tag/性能优化/"},{name:"v-0c89fc2c",path:"/tag/get/post/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-0c89fc2c").then(t)},meta:{pid:"tags",id:"get/post"}},{path:"/tag/get/post/index.html",redirect:"/tag/get/post/"},{name:"v-20a1875e",path:"/tag/async&defer/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-20a1875e").then(t)},meta:{pid:"tags",id:"async&defer"}},{path:"/tag/async&defer/index.html",redirect:"/tag/async&defer/"},{name:"v-ec38e77e",path:"/tag/Cookie/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-ec38e77e").then(t)},meta:{pid:"tags",id:"Cookie"}},{path:"/tag/Cookie/index.html",redirect:"/tag/Cookie/"},{name:"v-32351c1c",path:"/tag/jwt/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-32351c1c").then(t)},meta:{pid:"tags",id:"jwt"}},{path:"/tag/jwt/index.html",redirect:"/tag/jwt/"},{name:"v-58258f00",path:"/tag/token/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-58258f00").then(t)},meta:{pid:"tags",id:"token"}},{path:"/tag/token/index.html",redirect:"/tag/token/"},{name:"v-8976f2c2",path:"/tag/html/render/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-8976f2c2").then(t)},meta:{pid:"tags",id:"html/render"}},{path:"/tag/html/render/index.html",redirect:"/tag/html/render/"},{name:"v-153af490",path:"/tag/cors/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-153af490").then(t)},meta:{pid:"tags",id:"cors"}},{path:"/tag/cors/index.html",redirect:"/tag/cors/"},{name:"v-073a6dd5",path:"/tag/XMLHttpRequest/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-073a6dd5").then(t)},meta:{pid:"tags",id:"XMLHttpRequest"}},{path:"/tag/XMLHttpRequest/index.html",redirect:"/tag/XMLHttpRequest/"},{name:"v-98a2e7c0",path:"/tag/array/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-98a2e7c0").then(t)},meta:{pid:"tags",id:"array"}},{path:"/tag/array/index.html",redirect:"/tag/array/"},{name:"v-213537da",path:"/tag/client/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-213537da").then(t)},meta:{pid:"tags",id:"client"}},{path:"/tag/client/index.html",redirect:"/tag/client/"},{name:"v-dcc23fdc",path:"/tag/offset/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-dcc23fdc").then(t)},meta:{pid:"tags",id:"offset"}},{path:"/tag/offset/index.html",redirect:"/tag/offset/"},{name:"v-60c0a518",path:"/tag/scroll/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-60c0a518").then(t)},meta:{pid:"tags",id:"scroll"}},{path:"/tag/scroll/index.html",redirect:"/tag/scroll/"},{name:"v-a51b533c",path:"/tag/console/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-a51b533c").then(t)},meta:{pid:"tags",id:"console"}},{path:"/tag/console/index.html",redirect:"/tag/console/"},{name:"v-18b15492",path:"/tag/Date/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-18b15492").then(t)},meta:{pid:"tags",id:"Date"}},{path:"/tag/Date/index.html",redirect:"/tag/Date/"},{name:"v-62655d46",path:"/tag/element/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-62655d46").then(t)},meta:{pid:"tags",id:"element"}},{path:"/tag/element/index.html",redirect:"/tag/element/"},{name:"v-8a96d802",path:"/tag/event/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-8a96d802").then(t)},meta:{pid:"tags",id:"event"}},{path:"/tag/event/index.html",redirect:"/tag/event/"},{name:"v-11e48bed",path:"/tag/function/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-11e48bed").then(t)},meta:{pid:"tags",id:"function"}},{path:"/tag/function/index.html",redirect:"/tag/function/"},{name:"v-ea051234",path:"/tag/object/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-ea051234").then(t)},meta:{pid:"tags",id:"object"}},{path:"/tag/object/index.html",redirect:"/tag/object/"},{name:"v-2ea4ba5c",path:"/tag/regexp/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-2ea4ba5c").then(t)},meta:{pid:"tags",id:"regexp"}},{path:"/tag/regexp/index.html",redirect:"/tag/regexp/"},{name:"v-7dc05454",path:"/tag/string/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-7dc05454").then(t)},meta:{pid:"tags",id:"string"}},{path:"/tag/string/index.html",redirect:"/tag/string/"},{name:"v-13627632",path:"/tag/this/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-13627632").then(t)},meta:{pid:"tags",id:"this"}},{path:"/tag/this/index.html",redirect:"/tag/this/"},{name:"v-1e773d48",path:"/tag/工具函数/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-1e773d48").then(t)},meta:{pid:"tags",id:"工具函数"}},{path:"/tag/工具函数/index.html",redirect:"/tag/工具函数/"},{name:"v-89abd2d6",path:"/tag/算法/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-89abd2d6").then(t)},meta:{pid:"tags",id:"算法"}},{path:"/tag/算法/index.html",redirect:"/tag/算法/"},{name:"v-428f4e2a",path:"/tag/currying/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-428f4e2a").then(t)},meta:{pid:"tags",id:"currying"}},{path:"/tag/currying/index.html",redirect:"/tag/currying/"},{name:"v-05086f9c",path:"/tag/debounce/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-05086f9c").then(t)},meta:{pid:"tags",id:"debounce"}},{path:"/tag/debounce/index.html",redirect:"/tag/debounce/"},{name:"v-6169424a",path:"/tag/throttle/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-6169424a").then(t)},meta:{pid:"tags",id:"throttle"}},{path:"/tag/throttle/index.html",redirect:"/tag/throttle/"},{name:"v-36f135e3",path:"/tag/mobile/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-36f135e3").then(t)},meta:{pid:"tags",id:"mobile"}},{path:"/tag/mobile/index.html",redirect:"/tag/mobile/"},{name:"v-89df5498",path:"/tag/typeOf/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-89df5498").then(t)},meta:{pid:"tags",id:"typeOf"}},{path:"/tag/typeOf/index.html",redirect:"/tag/typeOf/"},{name:"v-21ad0b99",path:"/tag/instanceof/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-21ad0b99").then(t)},meta:{pid:"tags",id:"instanceof"}},{path:"/tag/instanceof/index.html",redirect:"/tag/instanceof/"},{name:"v-fd305f8e",path:"/tag/_hasOwnProperty/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-fd305f8e").then(t)},meta:{pid:"tags",id:"_hasOwnProperty"}},{path:"/tag/_hasOwnProperty/index.html",redirect:"/tag/_hasOwnProperty/"},{name:"v-c6fb9be4",path:"/tag/centos7/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-c6fb9be4").then(t)},meta:{pid:"tags",id:"centos7"}},{path:"/tag/centos7/index.html",redirect:"/tag/centos7/"},{name:"v-7418fe36",path:"/tag/linux/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-7418fe36").then(t)},meta:{pid:"tags",id:"linux"}},{path:"/tag/linux/index.html",redirect:"/tag/linux/"},{name:"v-51bc7eea",path:"/tag/manjaro/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-51bc7eea").then(t)},meta:{pid:"tags",id:"manjaro"}},{path:"/tag/manjaro/index.html",redirect:"/tag/manjaro/"},{name:"v-6dfb9784",path:"/tag/ubuntu/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-6dfb9784").then(t)},meta:{pid:"tags",id:"ubuntu"}},{path:"/tag/ubuntu/index.html",redirect:"/tag/ubuntu/"},{name:"v-322a9e02",path:"/tag/vim/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-322a9e02").then(t)},meta:{pid:"tags",id:"vim"}},{path:"/tag/vim/index.html",redirect:"/tag/vim/"},{name:"v-601bec8c",path:"/tag/react/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-601bec8c").then(t)},meta:{pid:"tags",id:"react"}},{path:"/tag/react/index.html",redirect:"/tag/react/"},{name:"v-5ae80825",path:"/tag/docker/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-5ae80825").then(t)},meta:{pid:"tags",id:"docker"}},{path:"/tag/docker/index.html",redirect:"/tag/docker/"},{name:"v-1f64cdac",path:"/tag/gitlab/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-1f64cdac").then(t)},meta:{pid:"tags",id:"gitlab"}},{path:"/tag/gitlab/index.html",redirect:"/tag/gitlab/"},{name:"v-3c2760d0",path:"/tag/网络协议/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-3c2760d0").then(t)},meta:{pid:"tags",id:"网络协议"}},{path:"/tag/网络协议/index.html",redirect:"/tag/网络协议/"},{name:"v-6d82ba02",path:"/tag/nginx/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-6d82ba02").then(t)},meta:{pid:"tags",id:"nginx"}},{path:"/tag/nginx/index.html",redirect:"/tag/nginx/"},{name:"v-122bf2c4",path:"/tag/node.js/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-122bf2c4").then(t)},meta:{pid:"tags",id:"node.js"}},{path:"/tag/node.js/index.html",redirect:"/tag/node.js/"},{name:"v-5e346c83",path:"/tag/travis-ci/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-5e346c83").then(t)},meta:{pid:"tags",id:"travis-ci"}},{path:"/tag/travis-ci/index.html",redirect:"/tag/travis-ci/"},{name:"v-728b15a8",path:"/tag/vagrant/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-728b15a8").then(t)},meta:{pid:"tags",id:"vagrant"}},{path:"/tag/vagrant/index.html",redirect:"/tag/vagrant/"},{name:"v-989423b0",path:"/tag/ascii/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-989423b0").then(t)},meta:{pid:"tags",id:"ascii"}},{path:"/tag/ascii/index.html",redirect:"/tag/ascii/"},{name:"v-0cb74bd8",path:"/tag/commitizen/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-0cb74bd8").then(t)},meta:{pid:"tags",id:"commitizen"}},{path:"/tag/commitizen/index.html",redirect:"/tag/commitizen/"},{name:"v-657392aa",path:"/tag/proxy/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-657392aa").then(t)},meta:{pid:"tags",id:"proxy"}},{path:"/tag/proxy/index.html",redirect:"/tag/proxy/"},{name:"v-7ba8bed4",path:"/tag/editorConfig/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-7ba8bed4").then(t)},meta:{pid:"tags",id:"editorConfig"}},{path:"/tag/editorConfig/index.html",redirect:"/tag/editorConfig/"},{name:"v-d1c09a98",path:"/tag/eslint/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-d1c09a98").then(t)},meta:{pid:"tags",id:"eslint"}},{path:"/tag/eslint/index.html",redirect:"/tag/eslint/"},{name:"v-e55ae0c0",path:"/tag/vue-cli/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-e55ae0c0").then(t)},meta:{pid:"tags",id:"vue-cli"}},{path:"/tag/vue-cli/index.html",redirect:"/tag/vue-cli/"},{name:"v-32383f72",path:"/tag/git/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-32383f72").then(t)},meta:{pid:"tags",id:"git"}},{path:"/tag/git/index.html",redirect:"/tag/git/"},{name:"v-3450f8dc",path:"/tag/prettier/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-3450f8dc").then(t)},meta:{pid:"tags",id:"prettier"}},{path:"/tag/prettier/index.html",redirect:"/tag/prettier/"},{name:"v-63f45646",path:"/tag/sentry/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-63f45646").then(t)},meta:{pid:"tags",id:"sentry"}},{path:"/tag/sentry/index.html",redirect:"/tag/sentry/"},{name:"v-7d61be78",path:"/tag/editor/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-7d61be78").then(t)},meta:{pid:"tags",id:"editor"}},{path:"/tag/editor/index.html",redirect:"/tag/editor/"},{name:"v-b53ec9e8",path:"/tag/webpack/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-b53ec9e8").then(t)},meta:{pid:"tags",id:"webpack"}},{path:"/tag/webpack/index.html",redirect:"/tag/webpack/"},{name:"v-14c4f1da",path:"/tag/gulp/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-14c4f1da").then(t)},meta:{pid:"tags",id:"gulp"}},{path:"/tag/gulp/index.html",redirect:"/tag/gulp/"},{name:"v-4c00a6fc",path:"/tag/pxtorem/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-4c00a6fc").then(t)},meta:{pid:"tags",id:"pxtorem"}},{path:"/tag/pxtorem/index.html",redirect:"/tag/pxtorem/"},{name:"v-322a45da",path:"/tag/vue/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-322a45da").then(t)},meta:{pid:"tags",id:"vue"}},{path:"/tag/vue/index.html",redirect:"/tag/vue/"},{name:"v-0c5c4c5e",path:"/tag/浏览器/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-0c5c4c5e").then(t)},meta:{pid:"tags",id:"浏览器"}},{path:"/tag/浏览器/index.html",redirect:"/tag/浏览器/"},{name:"v-e8d878ae",path:"/tag/ie/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-e8d878ae").then(t)},meta:{pid:"tags",id:"ie"}},{path:"/tag/ie/index.html",redirect:"/tag/ie/"},{name:"v-323b9794",path:"/tag/css/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-323b9794").then(t)},meta:{pid:"tags",id:"css"}},{path:"/tag/css/index.html",redirect:"/tag/css/"},{name:"v-8b8d7cb6",path:"/tag/emmet/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-8b8d7cb6").then(t)},meta:{pid:"tags",id:"emmet"}},{path:"/tag/emmet/index.html",redirect:"/tag/emmet/"},{name:"v-14a9a50c",path:"/tag/html/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-14a9a50c").then(t)},meta:{pid:"tags",id:"html"}},{path:"/tag/html/index.html",redirect:"/tag/html/"},{name:"v-14465d68",path:"/tag/less/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-14465d68").then(t)},meta:{pid:"tags",id:"less"}},{path:"/tag/less/index.html",redirect:"/tag/less/"},{name:"v-c9be2158",path:"/tag/1像素问题/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-c9be2158").then(t)},meta:{pid:"tags",id:"1像素问题"}},{path:"/tag/1像素问题/index.html",redirect:"/tag/1像素问题/"},{name:"v-851ebe42",path:"/tag/viewport/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-851ebe42").then(t)},meta:{pid:"tags",id:"viewport"}},{path:"/tag/viewport/index.html",redirect:"/tag/viewport/"},{name:"v-322e5f02",path:"/tag/rem/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-322e5f02").then(t)},meta:{pid:"tags",id:"rem"}},{path:"/tag/rem/index.html",redirect:"/tag/rem/"},{name:"v-1384b752",path:"/tag/sass/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-1384b752").then(t)},meta:{pid:"tags",id:"sass"}},{path:"/tag/sass/index.html",redirect:"/tag/sass/"},{name:"v-7630b09a",path:"/tag/清除浮动/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-7630b09a").then(t)},meta:{pid:"tags",id:"清除浮动"}},{path:"/tag/清除浮动/index.html",redirect:"/tag/清除浮动/"},{name:"v-0c6f8b40",path:"/tag/css三角形/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-0c6f8b40").then(t)},meta:{pid:"tags",id:"css三角形"}},{path:"/tag/css三角形/index.html",redirect:"/tag/css三角形/"},{name:"v-0c3f0c0d",path:"/tag/百分比单位/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-0c3f0c0d").then(t)},meta:{pid:"tags",id:"百分比单位"}},{path:"/tag/百分比单位/index.html",redirect:"/tag/百分比单位/"},{name:"v-1dbca4e8",path:"/tag/字体超出省略/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-1dbca4e8").then(t)},meta:{pid:"tags",id:"字体超出省略"}},{path:"/tag/字体超出省略/index.html",redirect:"/tag/字体超出省略/"},{name:"v-2923c74a",path:"/tag/layout/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Tag","v-2923c74a").then(t)},meta:{pid:"tags",id:"layout"}},{path:"/tag/layout/index.html",redirect:"/tag/layout/"},{name:"v-7f0e85f7",path:"/categories/faq/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Category","v-7f0e85f7").then(t)},meta:{pid:"categories",id:"faq"}},{path:"/categories/faq/index.html",redirect:"/categories/faq/"},{name:"v-631a3903",path:"/categories/libs/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Category","v-631a3903").then(t)},meta:{pid:"categories",id:"libs"}},{path:"/categories/libs/index.html",redirect:"/categories/libs/"},{name:"v-71cbee6e",path:"/categories/server/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Category","v-71cbee6e").then(t)},meta:{pid:"categories",id:"server"}},{path:"/categories/server/index.html",redirect:"/categories/server/"},{name:"v-0e2e1052",path:"/categories/tools/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Category","v-0e2e1052").then(t)},meta:{pid:"categories",id:"tools"}},{path:"/categories/tools/index.html",redirect:"/categories/tools/"},{name:"v-7f164d79",path:"/categories/web/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Category","v-7f164d79").then(t)},meta:{pid:"categories",id:"web"}},{path:"/categories/web/index.html",redirect:"/categories/web/"},{name:"v-133d794c",path:"/categories/libs/page/2/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-133d794c").then(t)},meta:{pid:"categories",id:"libs"}},{path:"/categories/libs/page/2/index.html",redirect:"/categories/libs/page/2/"},{name:"v-6330a0e2",path:"/categories/server/page/2/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-6330a0e2").then(t)},meta:{pid:"categories",id:"server"}},{path:"/categories/server/page/2/index.html",redirect:"/categories/server/page/2/"},{name:"v-6b1a652b",path:"/categories/tools/page/2/",component:Oe,beforeEnter:function(n,e,t){Object(Kn.a)("Layout","v-6b1a652b").then(t)},meta:{pid:"categories",id:"tools"}},{path:"/categories/tools/page/2/index.html",redirect:"/categories/tools/page/2/"},{path:"*",component:Oe}],Ae={title:"FE Note",description:"about front-end docs notes website",base:"/",headTags:[["link",{rel:"icon",href:"/logo.png"}],["link",{rel:"manifest",href:"/manifest.json"}],["link",{rel:"stylesheet",href:"/css/prism-okaidia.css"}],["meta",{name:"theme-color",content:"#3eaf7c"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"viewport",content:"width=device-width,initial-scale=1,user-scalable=no"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"black"}],["meta",{name:"msapplication-TileColor",content:"#000000"}]],pages:[{title:"Home",frontmatter:{home:!0,heroText:"@chengzao",tagline:"A Contented mind is a perpetual feast.",bgImageStyle:{height:"450px"},isShowTitleInHome:!1,pageClass:"custom-reco-pages",readingShow:"top"},regularPath:"/",relativePath:"README.md",key:"v-39e916f0",path:"/",lastUpdated:"2020/7/22 上午4:40:52",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"mongodb的安装使用",frontmatter:{title:"mongodb的安装使用",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["mongodb"],readingShow:"top"},regularPath:"/database/mongoDB.html",relativePath:"database/mongoDB.md",key:"v-12b6f6ca",path:"/database/mongoDB.html",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:59},{level:2,title:"基础命令",slug:"基础命令",normalizedTitle:"基础命令",charIndex:1061},{level:2,title:"创建数据库",slug:"创建数据库",normalizedTitle:"创建数据库",charIndex:1768},{level:2,title:"删除数据库",slug:"删除数据库",normalizedTitle:"删除数据库",charIndex:2019},{level:2,title:"创建集合",slug:"创建集合",normalizedTitle:"创建集合",charIndex:2163},{level:2,title:"插入文档",slug:"插入文档",normalizedTitle:"插入文档",charIndex:2806},{level:2,title:"查询文档",slug:"查询文档",normalizedTitle:"查询文档",charIndex:3550},{level:2,title:"更新文档",slug:"更新文档",normalizedTitle:"更新文档",charIndex:6199},{level:2,title:"删除文档",slug:"删除文档",normalizedTitle:"删除文档",charIndex:8879},{level:2,title:"授权登录",slug:"授权登录",normalizedTitle:"授权登录",charIndex:9950}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"安装 基础命令 创建数据库 删除数据库 创建集合 插入文档 查询文档 更新文档 删除文档 授权登录",content:' * docs.mongodb\n * mongodb download\n * mongodb document\n\n# 安装\n * service mongod start|stop|restart\n   \n   \n * mongo 默认端口: ip:27017\n   \n   \n * tgz 安装\n   \n   \n\n$ wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel70-3.4.7.tgz\n$ tar zxvf mongodb-linux-x86_64-rhel70-3.4.7.tgz\n$ mv mongodb-linux-x86_64-rhel70-3.4.7 mongodb\n$ cd mongodb\n$ mkdir conf logs db\n$ sudo mv mongodb /usr/local/\n$ vim /usr/local/mongodb/conf/mongodb.conf\n\n  dbpath=/usr/local/mongodb/db\n  logpath=/usr/local/mongodb/logs/mongodb.log\n  bind_ip=0.0.0.0\n  port=27018\n  fork=true\n  nohttpinterface=true\n\n$ cp /usr/local/mongodb/bin/mongo /bin/\n$ /usr/local/mongodb/bin/mongo -f /usr/local/mongodb/conf/mongodb.conf\n$ /bin/mongo 127.0.0.1:27018 -u -p\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * docker\n\ndocker pull mongo\n# 创建数据卷\ndocker volume create my-mongo-db\ndocker volume create my-mongo-configdb\n# 运行容器\ndocker run -d -p 27017:27017 --name mymongo -v my-mongo-db:/data/db  -v my-mongo-configdb:/data/configdb mongo\n# 进入容器\ndocker exec -it mymongo mongo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 基础命令\n * show dbs / show databases # 显示当前的所有的数据库\n   \n   \n * db # 查看当前所处的数据库\n   \n   \n * show collections / show tables # 显示当前的所有的集合\n   \n   \n * use todos # 进入指定的数据库中, 可以不存在 数据库和集合， mongodb 会在写入 docs 中自动创建\n   \n   \n * CRUD # 增删改查 insert / find / update / delete\n   \n   \n * <collection> 内为具体的集合名称，例： db.user.insert({"name":"zhangsan"})\n   \n   \n * db.<collection>.drop() # 删除相应的集合\n   \n   # 创建使用\n   use del_database\n   \n   # 在当前数据库中的item集合中写入数据\n   db.items.insertOne({"aaa":"bbb"})\n   \n   # 查看集合\n   show collections\n   \n   # 删除\n   db.items.drop()\n   \n   # 查看是否删除成功\n   show collections\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n * db.dropDatabase() # 删除相应的数据库\n   \n   \n\n# 创建数据库\n * use todos\n\n# 查看所有数据库\nshow dbs\n# 进入指定的数据库中, 可以不存在 数据库和集合， mongodb会在写入docs中自动创建\nuse todos\n\n# 用show dbs 查看是否创建成功\n# 由于todos中没有任何数据，显示不存在\n\n# 在todos中的items中插入数据\ndb.items.insert({"name":"xiao ming"})\n# 用show dbs 查看是否创建成功\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 删除数据库\n * db.dropDatabase()\n\n# 创建使用\nuse del_database\n\n# 查看当前正在使用的数据库\ndb\n\n# 删除\ndb.dropDatabase()\n\n# 查看是否删除成功\nshow dbs\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 创建集合\n * db.createCollection(name, options)\n   \n    * name: 要创建的集合名称\n    * options: 可选参数, 指定有关内存大小及索引的选项\n   \n   \n\n# optins:\n#   capped:（可选）如果为 true，则创建固定集合。固定集合是指有着固定大小的集合，\n#           当达到最大值时，它会自动覆盖最早的文档\n#           当该值为 true 时，必须指定 size 参数\n\n#   autoIndexId: (可选）如为 true，自动在 _id 字段创建索引。默认为 false\n\n#   size:  (可选）为固定集合指定一个最大值（以字节计）\n#          如果 capped 为 true，也需要指定该字段\n\n#   max:  (可选）指定固定集合中包含文档的最大数量\n\n# 方式一\ndb.createCollection("item1")\n\n# 方式二\ndb.createCollection("item2", { capped : true, autoIndexId : true, size :\n   6142800, max : 10000 } )\n\n# 方式三\ndb.item3.insert({"name":"hello"})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# 插入文档\n * 插入文档： 一个写入对象： db.<collection>.insert({})\n\n# 写入数据\ndb.items.insert({"name":"xiao ming"})\n\n# 使用以下命令查看是否成功插入数据\ndb.items.find({})\n\n\n1\n2\n3\n4\n5\n * 插入文档： 多个写入包含多个对象的数组： db.<collection>.insert([{},{}])\n\n# 写入数据\ndb.items.insert([{"name":"abc"},{"name":"efg"}])\n\n# 使用以下命令查看是否成功插入数据\ndb.items.find({})\n\n\n1\n2\n3\n4\n5\n * db.<collection>.insertOne({}) # 插入一个文档\n\n# 写入数据\ndb.items.insertOne({"name":"aaa"})\n\n# 使用以下命令查看是否成功插入数据\ndb.items.find({})\n\n\n1\n2\n3\n4\n5\n * db.<collection>.insertMany([{},{}]) # 插入多个文档\n\n# 写入数据\ndb.items.insertMany([{"name":"bbb"},{"name":"ccc"}])\n\n# 使用以下命令查看是否成功插入数据\ndb.items.find({})\n\n\n1\n2\n3\n4\n5\n * 数据定义为一个变量插入\n\n# 定义变量\ndocument=({"name": \'MongoDB\'});\n# 插入数据\ndb.items.insert(document)\n\n# 使用以下命令查看是否成功插入数据\ndb.items.find()\n\n\n1\n2\n3\n4\n5\n6\n7\n# 查询文档\n * 语法格式: db.collection.find(query, projection)\n   \n    * query ：可选，使用查询操作符指定查询条件\n    * projection ：可选，使用投影操作符指定返回的键。查询时返回文档中所有键值， 只需省略该参数即可（默认省略）\n   \n   \n * $lt, $lte, $gt, $gte, $eq, $inc, $or ...\n   \n   \n\n# 写入数据\ndb.items.insert([\n  {"count": 1},\n  {"count": 2},\n  {"count": 3},\n  {"count": 4},\n  {"count": 5}\n])\n\n# 等于 $eq\ndb.items.find({"count":{$eq:3}}).pretty()\n\n# 小于 $lt\ndb.items.find({"count":{$lt:3}}).pretty()\n\n# 小于或等于 $lte\ndb.items.find({"count":{$lte:3}}).pretty()\n\n# 大于 $gt\ndb.items.find({"count":{$gt:3}}).pretty()\n\n# 大于或等于 $gte\ndb.items.find({"count":{$gte:3}}).pretty()\n\n# 不等于 $ne\ndb.items.find({"count":{$ne:3}}).pretty()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * AND 条件 和 OR 条件\n\n# 写入数据\ndb.items.insert([\n  {"count": 1, "name":"a"},\n  {"count": 2, "name":"b"},\n  {"count": 3, "name":"c"},\n  {"count": 4, "name":"b"},\n])\n\n# AND 条件\ndb.items.find({"count": 1, "name":"a"}).pretty()\n\n# OR 条件\ndb.items.find({$or:[{"count":1},{"name":"b"}]}).pretty()\n\n# AND 和 OR 联合使用\ndb.items.find({"name": "b", $or: [{"count": 2},{"count": 4}]}).pretty()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * db.<collection>.find().pretty() 格式化的方式来显示所有文档\n   \n   \n * db.<collection>.find({}) 如果传递空对象查找该集合中的所有 docs\n   \n   \n * db.<collection>.find({},options)\n   \n   \n * db.<collection>.find({}).sort({}) 按{key:1}排序 (1 正序排序 ， -1 降序排序)\n   \n   \n\n# 写入数据\ndb.items.insert([\n  {"count": 5, "name":"a"},\n  {"count": 2, "name":"b"},\n  {"count": 7, "name":"c"},\n  {"count": 8, "name":"b"},\n  {"count": 1, "name":"d"},\n  {"count": 4, "name":"e"},\n])\n\n# 按照 count 升序排列\ndb.items.find({}).sort({"count": 1})\n\n# 按照 count 降序排列\ndb.items.find({}).sort({"count": -1})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * db.<collection>.find({}).limit(number) 限制显示 number 条\n\n# 写入数据\ndb.items.insert([\n  {"count": 1, "name":"a"},\n  {"count": 2, "name":"b"},\n  {"count": 3, "name":"c"},\n  {"count": 4, "name":"b"},\n  {"count": 5, "name":"d"},\n  {"count": 6, "name":"e"},\n])\n\ndb.items.find({}).limit(3)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * db.<collection>.find({}).skip(number1).limit(number2) 限制显示 number2 条, 从 number1+条数据\n\n# 写入数据\ndb.items.insert([\n  {"count": 1, "name":"a"},\n  {"count": 2, "name":"b"},\n  {"count": 3, "name":"c"},\n  {"count": 4, "name":"b"},\n  {"count": 5, "name":"d"},\n  {"count": 6, "name":"e"},\n])\n\ndb.items.find({}).skip(3).limit(3)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * db.<collection>.find({}).skip((pageIndex -1)* pageNum).limit(pageNum) 分页查询\n   \n   \n * db.<collection>.findOne({}) 查找符合条件的第一个\n   \n   \n * db.<collection>.find({}).count() 查找集合中符合内容的条数\n   \n   \n * 内嵌文档： 集合中嵌套集合为内嵌 ， 查找方式需要key值带 引号\n   \n    * 例： db.user.find({"hor.arr":"hero"})方式查找\n   \n   \n\n# 更新文档\n * update 语法格式\n\ndb.collection.update(\n   <query>,\n   <update>,\n   {\n     upsert: <boolean>,\n     multi: <boolean>,\n     writeConcern: <document>\n   }\n)\n\n\n`query` : update的查询条件\n\n`update` : update的对象和一些更新的操作符（如$,$inc...)\n\n`upsert` : 可选，这个参数的意思是，如果不存在update的记录，\n          是否插入objNew,true为插入，默认是false，不插入\n\n`multi` : 可选，mongodb 默认是false,只更新找到的第一条记录，\n          如果这个参数为true,就把按条件查出来多条记录全部更新\n\n`writeConcern` :可选，抛出异常的级别\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n * 一些更新的操作符（如$,$inc...\n   \n   \n * db.<collection>.update(obj,newObj,options)\n   \n    * options: { multi: true } 修改多个 ， 默认为 false 只有该一个\n    * 如果obj中内容不存在，会添加newObj中的新内容到原obj的属性和内容\n    * $set: 根据newObj中的内容替换obj中的指定想项；\n    * $push: 向数组中添加元素\n    * $addToSet: 向数组中添加元素，如果已存在则不添加\n   \n   \n * db.<collection>.update(obj,newObj,options) newObj 完全替换 obj 的内容\n   \n   \n\ndb.col.update({\'title\':\'MongoDB 教程\'},{\'name\':\'MongoDB\'})\n\n# 使用以下命令查看数据\ndb.col.find().pretty()\n\n\n1\n2\n3\n4\n * db.<collection>.update(obj,newObj,options) 更新找到的第一条记录\n\n# 写入数据\ndb.col.insert({\n  title: \'MongoDB 教程\',\n  description: \'MongoDB 是一个 Nosql 数据库\'\n})\n# 通过 update() 方法来更新标题(title)\ndb.col.update({\'title\':\'MongoDB 教程\'},{$set:{\'title\':\'MongoDB\'}})\n\n# 使用以下命令查看是否成功插入数据\ndb.col.find().pretty()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * db.<collection>.update(obj,{$set: newObj},{multi:true}) 修改多条相同的文档内容\n   \n   # 修改多条相同的文档，则需要设置 multi 参数为 true\n   db.col.update({\'title\':\'MongoDB 教程\'},{$set:{\'title\':\'MongoDB\'}},{multi:true})\n   \n   # 使用以下命令查看是否成功插入数据\n   db.col.find().pretty()\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n * db.<collection>.update(obj,{$set: newObj},{upsert:true}) 插入\n   \n   \n\ndb.items.insert([{"name": "a", "count": 1},{"name": "b", "count": 2},{"name": "c", "count": 1}])\ndb.items.update( { "count" : { $gt : 1 } } , { $set : { "test2" : "OK"} }, {upsert:true} )\ndb.items.find().pretty()\ndb.items.drop()\n\n\n1\n2\n3\n4\n * db.<collection>.update(obj,{$unset: newObj})\n   \n    * $unset: 根据 newObj 中的 key，删除 Obj 中的指定内容的属性\n   \n   \n\ndb.col.update({"_id": ObjectId("5d0324c217b15f47649bb209")}, {$unset: {description:""}})\n\n\n1\n * db.<collection>.updateOne(obj,newObj) # 更改一个\n\ndb.col.update({"title": "MongoDB 教程"},{$set:{"description":"aaa"}})\n\n\n1\n * db.<collection>.updateMany(obj,newObj) # 更改多个\n\ndb.col.updateMany({"title": "MongoDB 教程"},{$set:{"description":"aaa"}})\n\n\n1\n * save 通过传入的文档来替换已有文档\n\ndb.collection.save(\n   <document>,\n   {\n     writeConcern: <document>\n   }\n)\n\n`document` : 文档数据。\n`writeConcern` :可选，抛出异常的级别。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * save 实例\n\n# 替换 5d032b652161e2f9a5baded5的内容\ndb.col.save({\n  "_id" : ObjectId("5d032b652161e2f9a5baded5"),\n  "title" : "MongoDB 教程",\n  "description" : "bbb"\n})\n# 通过 find() 命令来查看替换后的数据\ndb.col.find().pretty()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 删除文档\n * 2.6 版本以后的，语法格式\n\ndb.collection.remove(\n   <query>,\n   {\n     justOne: <boolean>,\n     writeConcern: <document>\n   }\n)\n\n`query` :（可选）删除的文档的条件\n\n`justOne` : （可选）如果设为 true 或 1，则只删除一个文档，\n如果不设置该参数，或使用默认值 false，则删除所有匹配条件的文档\n\n`writeConcern` :（可选）抛出异常的级别\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * db.<collection>.remove({}) # 如果传递空对象则删除全部\n\ndb.items.insert([{"name": "a", "count": 1},{"name": "b", "count": 2}])\n\ndb.items.remove({})\n\ndb.items.find().pretty()\n\ndb.items.drop()\n\n# remove() 方法 并不会真正释放空间\n# db.repairDatabase() 来回收磁盘空间\ndb.repairDatabase()\ndb.runCommand({ repairDatabase: 1 })\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * db.<collection>.deleteOne({})\n\ndb.items.insert([{"name": "a", "count": 1},{"name": "a", "count": 2}])\n\ndb.items.deleteOne({"name": "a"})\n\ndb.items.find().pretty()\n\ndb.items.drop()\n\n\n1\n2\n3\n4\n5\n6\n7\n * db.<collection>.deleteMany({})\n\ndb.items.insert([{"name": "a", "count": 1},{"name": "a", "count": 2}])\n\n# 删除全部符合条件的\ndb.items.deleteMany({"name": "a"})\n\n# 删除集合下全部文档\ndb.items.deleteMany({})\n\ndb.items.find().pretty()\n\ndb.items.drop()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 授权登录\ndocker pull mongo\ndocker run --name some-mongo -p 27017:27017  -d mongo:latest\n\ndocker exec -it some-mongo mongo\n\n# 切换到admin数据库\nuse admin\ndb.createUser({user: "root", pwd: "root", roles: [{role: "userAdminAnyDatabase", db:"admin"}]})\n# 使用db.auth(\'用户名\',\'密码\')进行授权\ndb.auth(\'root\',\'root\') # 1\ndb.system.users.find({}).pretty();\nshow user;\n\n# 创建用户czh, 管理todos\nuse todos\ndb.createUser({user: "czh", pwd: "czh", roles: [{role: "readWrite", db: "todos"}]})\ndb.auth(\'czh\', \'czh\') # 1\n# 修改密码 并且 修改角色为只读\ndb.updateUser(\'czh\',{pwd:\'admin\',roles:[{role:\'read\',db:\'todos\'}]})\n\nuse admin\n# 删除czh用户\ndb.dropUser(\'czh\') # true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23',normalizedContent:' * docs.mongodb\n * mongodb download\n * mongodb document\n\n# 安装\n * service mongod start|stop|restart\n   \n   \n * mongo 默认端口: ip:27017\n   \n   \n * tgz 安装\n   \n   \n\n$ wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel70-3.4.7.tgz\n$ tar zxvf mongodb-linux-x86_64-rhel70-3.4.7.tgz\n$ mv mongodb-linux-x86_64-rhel70-3.4.7 mongodb\n$ cd mongodb\n$ mkdir conf logs db\n$ sudo mv mongodb /usr/local/\n$ vim /usr/local/mongodb/conf/mongodb.conf\n\n  dbpath=/usr/local/mongodb/db\n  logpath=/usr/local/mongodb/logs/mongodb.log\n  bind_ip=0.0.0.0\n  port=27018\n  fork=true\n  nohttpinterface=true\n\n$ cp /usr/local/mongodb/bin/mongo /bin/\n$ /usr/local/mongodb/bin/mongo -f /usr/local/mongodb/conf/mongodb.conf\n$ /bin/mongo 127.0.0.1:27018 -u -p\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * docker\n\ndocker pull mongo\n# 创建数据卷\ndocker volume create my-mongo-db\ndocker volume create my-mongo-configdb\n# 运行容器\ndocker run -d -p 27017:27017 --name mymongo -v my-mongo-db:/data/db  -v my-mongo-configdb:/data/configdb mongo\n# 进入容器\ndocker exec -it mymongo mongo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 基础命令\n * show dbs / show databases # 显示当前的所有的数据库\n   \n   \n * db # 查看当前所处的数据库\n   \n   \n * show collections / show tables # 显示当前的所有的集合\n   \n   \n * use todos # 进入指定的数据库中, 可以不存在 数据库和集合， mongodb 会在写入 docs 中自动创建\n   \n   \n * crud # 增删改查 insert / find / update / delete\n   \n   \n * <collection> 内为具体的集合名称，例： db.user.insert({"name":"zhangsan"})\n   \n   \n * db.<collection>.drop() # 删除相应的集合\n   \n   # 创建使用\n   use del_database\n   \n   # 在当前数据库中的item集合中写入数据\n   db.items.insertone({"aaa":"bbb"})\n   \n   # 查看集合\n   show collections\n   \n   # 删除\n   db.items.drop()\n   \n   # 查看是否删除成功\n   show collections\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n * db.dropdatabase() # 删除相应的数据库\n   \n   \n\n# 创建数据库\n * use todos\n\n# 查看所有数据库\nshow dbs\n# 进入指定的数据库中, 可以不存在 数据库和集合， mongodb会在写入docs中自动创建\nuse todos\n\n# 用show dbs 查看是否创建成功\n# 由于todos中没有任何数据，显示不存在\n\n# 在todos中的items中插入数据\ndb.items.insert({"name":"xiao ming"})\n# 用show dbs 查看是否创建成功\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 删除数据库\n * db.dropdatabase()\n\n# 创建使用\nuse del_database\n\n# 查看当前正在使用的数据库\ndb\n\n# 删除\ndb.dropdatabase()\n\n# 查看是否删除成功\nshow dbs\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 创建集合\n * db.createcollection(name, options)\n   \n    * name: 要创建的集合名称\n    * options: 可选参数, 指定有关内存大小及索引的选项\n   \n   \n\n# optins:\n#   capped:（可选）如果为 true，则创建固定集合。固定集合是指有着固定大小的集合，\n#           当达到最大值时，它会自动覆盖最早的文档\n#           当该值为 true 时，必须指定 size 参数\n\n#   autoindexid: (可选）如为 true，自动在 _id 字段创建索引。默认为 false\n\n#   size:  (可选）为固定集合指定一个最大值（以字节计）\n#          如果 capped 为 true，也需要指定该字段\n\n#   max:  (可选）指定固定集合中包含文档的最大数量\n\n# 方式一\ndb.createcollection("item1")\n\n# 方式二\ndb.createcollection("item2", { capped : true, autoindexid : true, size :\n   6142800, max : 10000 } )\n\n# 方式三\ndb.item3.insert({"name":"hello"})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# 插入文档\n * 插入文档： 一个写入对象： db.<collection>.insert({})\n\n# 写入数据\ndb.items.insert({"name":"xiao ming"})\n\n# 使用以下命令查看是否成功插入数据\ndb.items.find({})\n\n\n1\n2\n3\n4\n5\n * 插入文档： 多个写入包含多个对象的数组： db.<collection>.insert([{},{}])\n\n# 写入数据\ndb.items.insert([{"name":"abc"},{"name":"efg"}])\n\n# 使用以下命令查看是否成功插入数据\ndb.items.find({})\n\n\n1\n2\n3\n4\n5\n * db.<collection>.insertone({}) # 插入一个文档\n\n# 写入数据\ndb.items.insertone({"name":"aaa"})\n\n# 使用以下命令查看是否成功插入数据\ndb.items.find({})\n\n\n1\n2\n3\n4\n5\n * db.<collection>.insertmany([{},{}]) # 插入多个文档\n\n# 写入数据\ndb.items.insertmany([{"name":"bbb"},{"name":"ccc"}])\n\n# 使用以下命令查看是否成功插入数据\ndb.items.find({})\n\n\n1\n2\n3\n4\n5\n * 数据定义为一个变量插入\n\n# 定义变量\ndocument=({"name": \'mongodb\'});\n# 插入数据\ndb.items.insert(document)\n\n# 使用以下命令查看是否成功插入数据\ndb.items.find()\n\n\n1\n2\n3\n4\n5\n6\n7\n# 查询文档\n * 语法格式: db.collection.find(query, projection)\n   \n    * query ：可选，使用查询操作符指定查询条件\n    * projection ：可选，使用投影操作符指定返回的键。查询时返回文档中所有键值， 只需省略该参数即可（默认省略）\n   \n   \n * $lt, $lte, $gt, $gte, $eq, $inc, $or ...\n   \n   \n\n# 写入数据\ndb.items.insert([\n  {"count": 1},\n  {"count": 2},\n  {"count": 3},\n  {"count": 4},\n  {"count": 5}\n])\n\n# 等于 $eq\ndb.items.find({"count":{$eq:3}}).pretty()\n\n# 小于 $lt\ndb.items.find({"count":{$lt:3}}).pretty()\n\n# 小于或等于 $lte\ndb.items.find({"count":{$lte:3}}).pretty()\n\n# 大于 $gt\ndb.items.find({"count":{$gt:3}}).pretty()\n\n# 大于或等于 $gte\ndb.items.find({"count":{$gte:3}}).pretty()\n\n# 不等于 $ne\ndb.items.find({"count":{$ne:3}}).pretty()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * and 条件 和 or 条件\n\n# 写入数据\ndb.items.insert([\n  {"count": 1, "name":"a"},\n  {"count": 2, "name":"b"},\n  {"count": 3, "name":"c"},\n  {"count": 4, "name":"b"},\n])\n\n# and 条件\ndb.items.find({"count": 1, "name":"a"}).pretty()\n\n# or 条件\ndb.items.find({$or:[{"count":1},{"name":"b"}]}).pretty()\n\n# and 和 or 联合使用\ndb.items.find({"name": "b", $or: [{"count": 2},{"count": 4}]}).pretty()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * db.<collection>.find().pretty() 格式化的方式来显示所有文档\n   \n   \n * db.<collection>.find({}) 如果传递空对象查找该集合中的所有 docs\n   \n   \n * db.<collection>.find({},options)\n   \n   \n * db.<collection>.find({}).sort({}) 按{key:1}排序 (1 正序排序 ， -1 降序排序)\n   \n   \n\n# 写入数据\ndb.items.insert([\n  {"count": 5, "name":"a"},\n  {"count": 2, "name":"b"},\n  {"count": 7, "name":"c"},\n  {"count": 8, "name":"b"},\n  {"count": 1, "name":"d"},\n  {"count": 4, "name":"e"},\n])\n\n# 按照 count 升序排列\ndb.items.find({}).sort({"count": 1})\n\n# 按照 count 降序排列\ndb.items.find({}).sort({"count": -1})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * db.<collection>.find({}).limit(number) 限制显示 number 条\n\n# 写入数据\ndb.items.insert([\n  {"count": 1, "name":"a"},\n  {"count": 2, "name":"b"},\n  {"count": 3, "name":"c"},\n  {"count": 4, "name":"b"},\n  {"count": 5, "name":"d"},\n  {"count": 6, "name":"e"},\n])\n\ndb.items.find({}).limit(3)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * db.<collection>.find({}).skip(number1).limit(number2) 限制显示 number2 条, 从 number1+条数据\n\n# 写入数据\ndb.items.insert([\n  {"count": 1, "name":"a"},\n  {"count": 2, "name":"b"},\n  {"count": 3, "name":"c"},\n  {"count": 4, "name":"b"},\n  {"count": 5, "name":"d"},\n  {"count": 6, "name":"e"},\n])\n\ndb.items.find({}).skip(3).limit(3)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * db.<collection>.find({}).skip((pageindex -1)* pagenum).limit(pagenum) 分页查询\n   \n   \n * db.<collection>.findone({}) 查找符合条件的第一个\n   \n   \n * db.<collection>.find({}).count() 查找集合中符合内容的条数\n   \n   \n * 内嵌文档： 集合中嵌套集合为内嵌 ， 查找方式需要key值带 引号\n   \n    * 例： db.user.find({"hor.arr":"hero"})方式查找\n   \n   \n\n# 更新文档\n * update 语法格式\n\ndb.collection.update(\n   <query>,\n   <update>,\n   {\n     upsert: <boolean>,\n     multi: <boolean>,\n     writeconcern: <document>\n   }\n)\n\n\n`query` : update的查询条件\n\n`update` : update的对象和一些更新的操作符（如$,$inc...)\n\n`upsert` : 可选，这个参数的意思是，如果不存在update的记录，\n          是否插入objnew,true为插入，默认是false，不插入\n\n`multi` : 可选，mongodb 默认是false,只更新找到的第一条记录，\n          如果这个参数为true,就把按条件查出来多条记录全部更新\n\n`writeconcern` :可选，抛出异常的级别\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n * 一些更新的操作符（如$,$inc...\n   \n   \n * db.<collection>.update(obj,newobj,options)\n   \n    * options: { multi: true } 修改多个 ， 默认为 false 只有该一个\n    * 如果obj中内容不存在，会添加newobj中的新内容到原obj的属性和内容\n    * $set: 根据newobj中的内容替换obj中的指定想项；\n    * $push: 向数组中添加元素\n    * $addtoset: 向数组中添加元素，如果已存在则不添加\n   \n   \n * db.<collection>.update(obj,newobj,options) newobj 完全替换 obj 的内容\n   \n   \n\ndb.col.update({\'title\':\'mongodb 教程\'},{\'name\':\'mongodb\'})\n\n# 使用以下命令查看数据\ndb.col.find().pretty()\n\n\n1\n2\n3\n4\n * db.<collection>.update(obj,newobj,options) 更新找到的第一条记录\n\n# 写入数据\ndb.col.insert({\n  title: \'mongodb 教程\',\n  description: \'mongodb 是一个 nosql 数据库\'\n})\n# 通过 update() 方法来更新标题(title)\ndb.col.update({\'title\':\'mongodb 教程\'},{$set:{\'title\':\'mongodb\'}})\n\n# 使用以下命令查看是否成功插入数据\ndb.col.find().pretty()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * db.<collection>.update(obj,{$set: newobj},{multi:true}) 修改多条相同的文档内容\n   \n   # 修改多条相同的文档，则需要设置 multi 参数为 true\n   db.col.update({\'title\':\'mongodb 教程\'},{$set:{\'title\':\'mongodb\'}},{multi:true})\n   \n   # 使用以下命令查看是否成功插入数据\n   db.col.find().pretty()\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n * db.<collection>.update(obj,{$set: newobj},{upsert:true}) 插入\n   \n   \n\ndb.items.insert([{"name": "a", "count": 1},{"name": "b", "count": 2},{"name": "c", "count": 1}])\ndb.items.update( { "count" : { $gt : 1 } } , { $set : { "test2" : "ok"} }, {upsert:true} )\ndb.items.find().pretty()\ndb.items.drop()\n\n\n1\n2\n3\n4\n * db.<collection>.update(obj,{$unset: newobj})\n   \n    * $unset: 根据 newobj 中的 key，删除 obj 中的指定内容的属性\n   \n   \n\ndb.col.update({"_id": objectid("5d0324c217b15f47649bb209")}, {$unset: {description:""}})\n\n\n1\n * db.<collection>.updateone(obj,newobj) # 更改一个\n\ndb.col.update({"title": "mongodb 教程"},{$set:{"description":"aaa"}})\n\n\n1\n * db.<collection>.updatemany(obj,newobj) # 更改多个\n\ndb.col.updatemany({"title": "mongodb 教程"},{$set:{"description":"aaa"}})\n\n\n1\n * save 通过传入的文档来替换已有文档\n\ndb.collection.save(\n   <document>,\n   {\n     writeconcern: <document>\n   }\n)\n\n`document` : 文档数据。\n`writeconcern` :可选，抛出异常的级别。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * save 实例\n\n# 替换 5d032b652161e2f9a5baded5的内容\ndb.col.save({\n  "_id" : objectid("5d032b652161e2f9a5baded5"),\n  "title" : "mongodb 教程",\n  "description" : "bbb"\n})\n# 通过 find() 命令来查看替换后的数据\ndb.col.find().pretty()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 删除文档\n * 2.6 版本以后的，语法格式\n\ndb.collection.remove(\n   <query>,\n   {\n     justone: <boolean>,\n     writeconcern: <document>\n   }\n)\n\n`query` :（可选）删除的文档的条件\n\n`justone` : （可选）如果设为 true 或 1，则只删除一个文档，\n如果不设置该参数，或使用默认值 false，则删除所有匹配条件的文档\n\n`writeconcern` :（可选）抛出异常的级别\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * db.<collection>.remove({}) # 如果传递空对象则删除全部\n\ndb.items.insert([{"name": "a", "count": 1},{"name": "b", "count": 2}])\n\ndb.items.remove({})\n\ndb.items.find().pretty()\n\ndb.items.drop()\n\n# remove() 方法 并不会真正释放空间\n# db.repairdatabase() 来回收磁盘空间\ndb.repairdatabase()\ndb.runcommand({ repairdatabase: 1 })\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * db.<collection>.deleteone({})\n\ndb.items.insert([{"name": "a", "count": 1},{"name": "a", "count": 2}])\n\ndb.items.deleteone({"name": "a"})\n\ndb.items.find().pretty()\n\ndb.items.drop()\n\n\n1\n2\n3\n4\n5\n6\n7\n * db.<collection>.deletemany({})\n\ndb.items.insert([{"name": "a", "count": 1},{"name": "a", "count": 2}])\n\n# 删除全部符合条件的\ndb.items.deletemany({"name": "a"})\n\n# 删除集合下全部文档\ndb.items.deletemany({})\n\ndb.items.find().pretty()\n\ndb.items.drop()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 授权登录\ndocker pull mongo\ndocker run --name some-mongo -p 27017:27017  -d mongo:latest\n\ndocker exec -it some-mongo mongo\n\n# 切换到admin数据库\nuse admin\ndb.createuser({user: "root", pwd: "root", roles: [{role: "useradminanydatabase", db:"admin"}]})\n# 使用db.auth(\'用户名\',\'密码\')进行授权\ndb.auth(\'root\',\'root\') # 1\ndb.system.users.find({}).pretty();\nshow user;\n\n# 创建用户czh, 管理todos\nuse todos\ndb.createuser({user: "czh", pwd: "czh", roles: [{role: "readwrite", db: "todos"}]})\ndb.auth(\'czh\', \'czh\') # 1\n# 修改密码 并且 修改角色为只读\ndb.updateuser(\'czh\',{pwd:\'admin\',roles:[{role:\'read\',db:\'todos\'}]})\n\nuse admin\n# 删除czh用户\ndb.dropuser(\'czh\') # true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23',charsets:{cjk:!0}},{title:"mongoose的使用记录",frontmatter:{title:"mongoose的使用记录",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["mongodb"],readingShow:"top"},regularPath:"/database/mongoose.html",relativePath:"database/mongoose.md",key:"v-2393b2ea",path:"/database/mongoose.html",headers:[{level:2,title:"connect",slug:"connect",normalizedTitle:"connect",charIndex:783},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:128},{level:2,title:"create",slug:"create",normalizedTitle:"create",charIndex:2850},{level:2,title:"find",slug:"find",normalizedTitle:"find",charIndex:3420},{level:2,title:"update",slug:"update",normalizedTitle:"update",charIndex:5330},{level:2,title:"delete",slug:"delete",normalizedTitle:"delete",charIndex:5983},{level:2,title:"remove",slug:"remove",normalizedTitle:"remove",charIndex:6071},{level:2,title:"count",slug:"count",normalizedTitle:"count",charIndex:6403},{level:2,title:"Document",slug:"document",normalizedTitle:"document",charIndex:195},{level:2,title:"支持 Promise",slug:"支持-promise",normalizedTitle:"支持 promise",charIndex:8172},{level:2,title:"example",slug:"example",normalizedTitle:"example",charIndex:8400}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"connect Schema create find update delete remove count Document 支持 Promise example",content:' * mongoose: npm install mongoose\n   \n   \n * mongoose 中文\n   \n   \n * Mongoose(mongoDB) functions for CRUD Application\n   \n   \n * Schema 约束文档结构\n   \n   \n * Model 集合中所有文档的对象， 即 collection\n   \n   \n * Document 集合中具体的文档， 即 docs 数据\n   \n   \n * mongoose version: 5.5.11\n   \n   \n * 常见的查询条件\n   \n   \n\n$or   # 或关系\n$nor  # 或关系取反\n$gt  # 大于\n$gte  # 大于等于\n$lt  # 小于\n$lte  # 小于等于\n$ne  # 不等于\n$in  # 在多个值范围内\n$nin  # 不在多个值范围内\n$all  # 匹配数组中多个值\n$regex  # 正则，用于模糊查询\n$size  # 匹配数组大小\n$maxDistance  # 范围查询，距离（基于LBS）\n$mod    # 取模运算\n$near  # 邻域查询，查询附近的位置（基于LBS）\n$exists  # 字段是否存在\n$elemMatch  # 匹配内数组内的元素\n$within  # 范围查询（基于LBS）\n$box  # 范围查询，矩形范围（基于LBS）\n$center  # 范围醒询，圆形范围（基于LBS）\n$centerSphere  # 范围查询，球形范围（基于LBS）\n$slice  # 查询字段集合中的元素（比如从第几个之后，第N到第M个元素\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# connect\n * Mongoose.connect(url, [options]);\n   \n   \n * 默认情况下，用户名和密码可以省略\n   \n   \n\nMongoose.connect(\'MongoDB://localhost/db1\');\n\n\n1\n * 需要传递用户名、密码\n\nMongoose.connect(\'MongoDB://username:password@host:port/database?options...\');\n\n\n1\n * 实例\n\n// 引入mongoose库\nvar mongoose = require("mongoose");\n// 连接mongodb\nmongoose.connect("mongodb://localhost/nodejs_user", { useNewUrlParser: true });\n\n// 将 mongooose.Schema 赋值给一个变量\nvar db = mongoose.connection;\n\ndb.on("error", console.error.bind(console, "connection error:"));\n// 监听数据库连接成功的事件\ndb.once("open", () => {});\n// 监听数据库断开连接的事件\ndb.once("close", () => {});\n\n// 断开连接\nmongoose.disconnect();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# Schema\n * 基本类型\n\nString | Number | Date | Buffer | Boolean | Schema.Types.Mixed |\nSchema.Types.ObjectId | Array | Schema.Types.Decimal128 | Map\n\n# 实例\nconst studentSchema = new Mongoose.Schema({\n  name: String,\n  age: Number,\n});\n\nmongoose.connect(database).then(\n  ()=>{console.log("connected")},\n  err =>{console.log("err",err);}\n);\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * 额外约束：更多详情\n   \n    * 所有类型可用:\n   \n   required: boolean or function, 很好理解，如果为真就表示该字段必须要存在\n   \n   default: Any or function, 设置默认值\n   \n   validate: function, 增加一个校验函数\n   \n   \n   1\n   2\n   3\n   4\n   5\n    * 字符串 String\n   \n   lowercase/upppercase: boolean, 是否做大小写处理\n   \n   trim: boolean, 是否去除首尾空格\n   \n   match: RegExp, 只有满足特定正则的值才能被接受\n   \n   enum: Array, 只有数组内的值才被接受\n   \n   minlength/ maxLength: Number, 最小、大长度\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n    * 数字 Number / 日期 Date\n   \n   min / max: Number / Date (根据类型），必须满足的最大值/最小值\n   \n   \n   1\n   \n\nconst studentSchema = new Mongoose.Schema({\n  name: { type: String, minlength: 2 },\n  age: { type: Number, min: 12, max: 16},\n});\n\n\n1\n2\n3\n4\n * 实例\n\n# Model 类似mongodb中的Collection\n# Document 是 Model 的实例， 与mongodb中的Document一致\n\nvar schema = new Schema({\n  name: String,\n  age: Number,\n  gender: {\n    type: String,\n    default: \'female\' # 默认值\n  }\n})\n\n# 创建模型, 需要在填入数据文档时才会在mongodb中创建, (use)\nvar stuModel = mongoose.model(\'students\', schema)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# create\n * Modle.create(doc(s), callback): 用来创建一个文档或多个文档并添加到数据库中 * doc(s)可以是一个文档对象，也可以是一个文档对象的数组\n   \n   \n\n// 单个\nstuModel.create(\n  {\n    name: "小明",\n    age: 21\n  },\n  function(err) {\n    if (!err) {\n      console.log("创建文档成功");\n    }\n  }\n);\n\n// 多个\nlet arrlist = [\n  { name: "aaa", age: 12 },\n  { name: "bbb", age: 14 }\n];\nstuModel.create(array, function(err, docs) {\n  if (err) {\n    return console.error(err);\n  }\n  console.log(docs);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * Modle.insertMany([object], callback) : 可以批量增加，从内存写到数据库比较实用\n\n# find\nconditions «Object» : 查询条件\n\n[projection] «Object|String»  ：选取字段\n            两种方式: {name:1,id:0} / "name -id"\n\n[options] «Object» ：查询选项（skip limit)\n\n[callback] «Function»：回调函数，查询结果会通过回调函数返回\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * Modle.find(conditions, [projection], [options], [callback] )\n   \n    * 查询文档 参数分别为：条件、选择字段、操作、回调\n    * 查询符合条件的文档\n    * 总会返回一个数组\n   \n   \n * Model.findOne([conditions],[projection],[options],[callback])\n   \n    * 查询一个文档 参数分别为：条件、选择字段、操作、回调\n    * 查询符合条件的第一个文档\n    * 返回第一个具体的文档对象\n   \n   \n * Model.findOneAndDelete()\n   \n    * 查询一个匹配的文档并删除 参数分别为：条件、操作、回调\n   \n   \n * Model.findOneAndRemove()\n   \n    * 查询一个匹配的文档并移除 参数分别为：条件、操作、回调\n   \n   \n * Model.findOneAndUpdate()\n   \n    * 查询一个匹配的文档并更新 参数分别为：条件、更新字段、操作、回调\n    * 通过_id 字段查询文档并更新\n    * 相当于 findOneAndUpdate({ _id: id }, ...) 参数分别为：id、更新字段、操作、回调\n   \n   \n * Model.findById(id,[projection],[options],[callback])\n   \n    * 通过_id 字段查询文档 相当于 findOne({ _id: id }) 参数分别为：id、选择字段、操作、回调\n    * 根据文档的 id 属性查询文档\n   \n   \n * Model.findByIdAndDelete()\n   \n    * 大多数情况使用它 通过_id 字段查询文档并删除\n    * 相当于 findOneAndDelete({ _id: id })的快捷方式 参数分别为：id、操作、回调\n   \n   \n * Model.findByIdAndRemove()\n   \n    * 通过_id 字段查询文档并移除\n    * 相当于 findOneAndRemove({ _id: id })的快捷方式 参数分别为：id、操作、回调\n   \n   \n * 实例\n   \n   \n\nstuModel.find({name:"小明"}，function(err,docs){\n    if(!err){\n\t\tconsole.log(docs);\n    }\n})\nstuModel.find({},"name -id",function(err,docs){\n    if(!err){\n        console.log(docs);\n    }\n})\nstuModel.find({},"name -id",{skip:3},function(err,docs){\n    if(!err){\n        console.log(docs);\n    }\n})\n// promise\nstuModel.find({})\n .then((data)=>{\n    console.log(data);\n  })\n .catch((err)=>{\n   console.log(err);\n })\n// you can pass query parameter to get particular record\nstuModel.find({name:"YOUR_NAME"})\n .then((doc)=>{\n    console.log(doc);\n })\n.catch((err)=>{\n    console.log(err);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# update\nconditions # 查询条件\ndoc # 修改后的对象\noptions # 配置参数\ncallback # 回调函数\n\n\n1\n2\n3\n4\n * Model.replaceOne(conditions, doc, [options], [callback] )\n   \n    * 覆盖一个已经存在的文档 相当于 update() 参数分别为：条件、更新字段、操作、回调\n   \n   \n * Model.updateMany(conditions, doc, [options], [callback] )\n   \n    * 更新多个已经存在的文档 相当于 update() 参数分别为：条件、更新字段、操作、回调\n   \n   \n * Model.updateOne(conditions, doc, [options], [callback] )\n   \n    * 更新一个已经存在的文档 相当于 update() 参数分别为：条件、更新字段、操作、回调\n   \n   \n * Model.update()\n   \n    * 更新一个文档 参数分别为：条件、更新字段、操作、回调\n   \n   \n * 实例\n   \n   \n\nstuModel.update({name:"小明"}，{$set:{age:20}},function(err){\n    if(!err){\n        console.log("修改成功")；\n    }\n})\n\n\n1\n2\n3\n4\n5\n# delete\n * Model.deleteMany(confitions,[options],[callback])\n   \n    * 删除所有文档集合的匹配条件 相当于 remove() 参数分别为：条件、操作、回调\n   \n   \n * Model.deleteOne(confitions,[options],[callback])\n   \n    * 删除匹配条件的文档集合的第一个文档 想当于 remove() 参数分别为：条件、回调\n   \n   \n\n# remove\n * Model.remove(confitions,[callback])\n   \n    * 移除所有匹配的文档 参数分别为：条件、回调\n   \n   \n * 实例\n   \n   \n\nModel.remove(condition，function(err, data){\n    console.log("删除成功！")；\n})\n\n\n1\n2\n3\n# count\n * Model.count(conditions,[callback]) 统计文档数量\n\nlet Schema = mongoose.Schema;\nlet schema = new Schema({\n  name: String,\n  age: Number\n});\nlet Person = mongoose.model("Person", schema);\nPerson.count({ name: "noshower" }, function(err, count) {\n  if (err) {\n    return console.error(err);\n  }\n  console.log(count);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# Document\nlet Schema = mongoose.Schema;\nlet schema = new Schema({\n  name: String,\n  age: Number\n});\nlet Person = mongoose.model("Person", schema);\n\nlet person = new Person({\n  name: "小明",\n  age: 24\n});\n//\t此时还没有插入数据库中\n\n/*\n\tdocument的方法\n\t\tModel#save([option],[callback])\n*/\nperson.save(function(err, product) {\n  if (err) {\n    return console.error(err);\n  }\n  console.log(product); //1\n});\n/*\n\tdoc.update(update,[options],[callback] )\n\t\t-\t修改对象\n\tdoc.remove([callback])\n\t\t-\t删除文档\n\n\tdoc.get(name)===doc[name]\n    doc.set(name,value)===doc[name]=value\n    doc._id\n    doc.toObject   转化为JS对象\n    转化为js对象才能删除其中一个属性\n    但转化后document的方法都不能使用了\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n * 关联表的操作\n   \n   \n * 建立约束模型式，指定关联字段\n   \n   \n\nvar mongoose = require("mongoose");\nvar Schema = mongoose.Schema;\nvar article = new Schema({\n  //关联字段 - 内容分类的id\n  category: {\n    //类型\n    type: mongoose.Schema.Types.ObjectId,\n    //引用\n    ref: "Category" //数据库中集合的名字\n  }\n});\n// - ref 表示要关联的集合名字\n// - type 表示通过 ObjectId 关联该集合\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * 关联查询表时，使用populate\n\nQuery.populate(path, [select], [model], [match],[options])\n\n`path`:你要查询的集合名\n\n`model`:类型Model，指定要关联字段的model,没有指定的话，就会使用ref指定的\n\n`match`:查询条件\n\n`options`:查询参数，如limit,skip等\n\n# 实例\ncontent.findOne()\n    .populate({path:[\'user\',\'catagory\']})\n    .exec(function(err,data){\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 支持 Promise\ncontent\n  .find()\n  .count()\n  .then(function(data) {\n    return content\n      .find()\n      .skip(data / 2)\n      .limit(10);\n  })\n  .then(function(data) {\n    console.log(data);\n  });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# example\nvar mongoose = require(\'mongoose\');\nvar url = \'mongodb://localhost/test\';\nmongoose.connect(url,{useMongoClient: true})\nmongoose.connection.once(\'open\',()=>{\n  console.log(\'数据库连接成功\')\n})\nmongoose.connection.once(\'close\',()=>{\n  console.log(\'数据库已断开连接\')\n})\n\n// 创建 Schema\nvar Schema = mongoose.Schema;\n\nvar user = new Schema({\n  name: String,\n  age: Number,\n  gender: {\n    type: String,\n    default: \'female\' // 默认值\n  }\n})\n\n// mongoose.model(ModelName, schema)\n// ModelName 即需要映射的集合名\nvar Todos = mongoose.Model(\'users\', user);\n\n// 插入数据\nTodos.create({"name": "zhangsan","age": 12, "gender": "man"}, (err, doc) => {\n  if(err) }{\n    console.log(\'error\',error)\n  }else{\n    console.log(\'success\')\n  }\n})\n\n// 创建文档Document\nvar doc = new Todos({"name": "li si","age": 22, "gender": "man"});\n// Model#save([options], callback) 保存文档到数据模型中\ndoc.save((err) => {})\n\n// TODO\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n- use admin\n- 添加管理员用户\n  db.createUser({\n    user:"admin",\n    pwd:"123",\n    roles:["userAdminAnyDatabase"]\n  })\n\n  db.createUser({user:"root",pwd:"123",roles:["root"]})\n\n- vim /etc/mongod.conf 添加修改如下\n  # ip\n  bindIp: 0.0.0.0\n  # 认证\n  security:\n    authorization: enabled\n\n- service mongod restart\n- service mongod status\n- 进入mongo\n  # 方式1\n  mongo --port 27017 -u admin -p 123 --authenticationDatabase "admin"\n  # 方式2\n  mongo\n  use admin\n  db.auth("admin","123")\n  db.system.users.find()\n  show users\n\n  # 添加远程用户\n  use test\n  db.createUser({\n    user:"test",\n    pwd:"123",\n    roles:[{role:"readWrite",db:"test"}]\n  })\n  exit # 退出\n\n  # 进入mongo\n  mongo --port 27017 -u test -p 123 --authenticationDatabase "test"\n  use test\n  show tables\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42',normalizedContent:' * mongoose: npm install mongoose\n   \n   \n * mongoose 中文\n   \n   \n * mongoose(mongodb) functions for crud application\n   \n   \n * schema 约束文档结构\n   \n   \n * model 集合中所有文档的对象， 即 collection\n   \n   \n * document 集合中具体的文档， 即 docs 数据\n   \n   \n * mongoose version: 5.5.11\n   \n   \n * 常见的查询条件\n   \n   \n\n$or   # 或关系\n$nor  # 或关系取反\n$gt  # 大于\n$gte  # 大于等于\n$lt  # 小于\n$lte  # 小于等于\n$ne  # 不等于\n$in  # 在多个值范围内\n$nin  # 不在多个值范围内\n$all  # 匹配数组中多个值\n$regex  # 正则，用于模糊查询\n$size  # 匹配数组大小\n$maxdistance  # 范围查询，距离（基于lbs）\n$mod    # 取模运算\n$near  # 邻域查询，查询附近的位置（基于lbs）\n$exists  # 字段是否存在\n$elemmatch  # 匹配内数组内的元素\n$within  # 范围查询（基于lbs）\n$box  # 范围查询，矩形范围（基于lbs）\n$center  # 范围醒询，圆形范围（基于lbs）\n$centersphere  # 范围查询，球形范围（基于lbs）\n$slice  # 查询字段集合中的元素（比如从第几个之后，第n到第m个元素\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# connect\n * mongoose.connect(url, [options]);\n   \n   \n * 默认情况下，用户名和密码可以省略\n   \n   \n\nmongoose.connect(\'mongodb://localhost/db1\');\n\n\n1\n * 需要传递用户名、密码\n\nmongoose.connect(\'mongodb://username:password@host:port/database?options...\');\n\n\n1\n * 实例\n\n// 引入mongoose库\nvar mongoose = require("mongoose");\n// 连接mongodb\nmongoose.connect("mongodb://localhost/nodejs_user", { usenewurlparser: true });\n\n// 将 mongooose.schema 赋值给一个变量\nvar db = mongoose.connection;\n\ndb.on("error", console.error.bind(console, "connection error:"));\n// 监听数据库连接成功的事件\ndb.once("open", () => {});\n// 监听数据库断开连接的事件\ndb.once("close", () => {});\n\n// 断开连接\nmongoose.disconnect();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# schema\n * 基本类型\n\nstring | number | date | buffer | boolean | schema.types.mixed |\nschema.types.objectid | array | schema.types.decimal128 | map\n\n# 实例\nconst studentschema = new mongoose.schema({\n  name: string,\n  age: number,\n});\n\nmongoose.connect(database).then(\n  ()=>{console.log("connected")},\n  err =>{console.log("err",err);}\n);\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * 额外约束：更多详情\n   \n    * 所有类型可用:\n   \n   required: boolean or function, 很好理解，如果为真就表示该字段必须要存在\n   \n   default: any or function, 设置默认值\n   \n   validate: function, 增加一个校验函数\n   \n   \n   1\n   2\n   3\n   4\n   5\n    * 字符串 string\n   \n   lowercase/upppercase: boolean, 是否做大小写处理\n   \n   trim: boolean, 是否去除首尾空格\n   \n   match: regexp, 只有满足特定正则的值才能被接受\n   \n   enum: array, 只有数组内的值才被接受\n   \n   minlength/ maxlength: number, 最小、大长度\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n    * 数字 number / 日期 date\n   \n   min / max: number / date (根据类型），必须满足的最大值/最小值\n   \n   \n   1\n   \n\nconst studentschema = new mongoose.schema({\n  name: { type: string, minlength: 2 },\n  age: { type: number, min: 12, max: 16},\n});\n\n\n1\n2\n3\n4\n * 实例\n\n# model 类似mongodb中的collection\n# document 是 model 的实例， 与mongodb中的document一致\n\nvar schema = new schema({\n  name: string,\n  age: number,\n  gender: {\n    type: string,\n    default: \'female\' # 默认值\n  }\n})\n\n# 创建模型, 需要在填入数据文档时才会在mongodb中创建, (use)\nvar stumodel = mongoose.model(\'students\', schema)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# create\n * modle.create(doc(s), callback): 用来创建一个文档或多个文档并添加到数据库中 * doc(s)可以是一个文档对象，也可以是一个文档对象的数组\n   \n   \n\n// 单个\nstumodel.create(\n  {\n    name: "小明",\n    age: 21\n  },\n  function(err) {\n    if (!err) {\n      console.log("创建文档成功");\n    }\n  }\n);\n\n// 多个\nlet arrlist = [\n  { name: "aaa", age: 12 },\n  { name: "bbb", age: 14 }\n];\nstumodel.create(array, function(err, docs) {\n  if (err) {\n    return console.error(err);\n  }\n  console.log(docs);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * modle.insertmany([object], callback) : 可以批量增加，从内存写到数据库比较实用\n\n# find\nconditions «object» : 查询条件\n\n[projection] «object|string»  ：选取字段\n            两种方式: {name:1,id:0} / "name -id"\n\n[options] «object» ：查询选项（skip limit)\n\n[callback] «function»：回调函数，查询结果会通过回调函数返回\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * modle.find(conditions, [projection], [options], [callback] )\n   \n    * 查询文档 参数分别为：条件、选择字段、操作、回调\n    * 查询符合条件的文档\n    * 总会返回一个数组\n   \n   \n * model.findone([conditions],[projection],[options],[callback])\n   \n    * 查询一个文档 参数分别为：条件、选择字段、操作、回调\n    * 查询符合条件的第一个文档\n    * 返回第一个具体的文档对象\n   \n   \n * model.findoneanddelete()\n   \n    * 查询一个匹配的文档并删除 参数分别为：条件、操作、回调\n   \n   \n * model.findoneandremove()\n   \n    * 查询一个匹配的文档并移除 参数分别为：条件、操作、回调\n   \n   \n * model.findoneandupdate()\n   \n    * 查询一个匹配的文档并更新 参数分别为：条件、更新字段、操作、回调\n    * 通过_id 字段查询文档并更新\n    * 相当于 findoneandupdate({ _id: id }, ...) 参数分别为：id、更新字段、操作、回调\n   \n   \n * model.findbyid(id,[projection],[options],[callback])\n   \n    * 通过_id 字段查询文档 相当于 findone({ _id: id }) 参数分别为：id、选择字段、操作、回调\n    * 根据文档的 id 属性查询文档\n   \n   \n * model.findbyidanddelete()\n   \n    * 大多数情况使用它 通过_id 字段查询文档并删除\n    * 相当于 findoneanddelete({ _id: id })的快捷方式 参数分别为：id、操作、回调\n   \n   \n * model.findbyidandremove()\n   \n    * 通过_id 字段查询文档并移除\n    * 相当于 findoneandremove({ _id: id })的快捷方式 参数分别为：id、操作、回调\n   \n   \n * 实例\n   \n   \n\nstumodel.find({name:"小明"}，function(err,docs){\n    if(!err){\n\t\tconsole.log(docs);\n    }\n})\nstumodel.find({},"name -id",function(err,docs){\n    if(!err){\n        console.log(docs);\n    }\n})\nstumodel.find({},"name -id",{skip:3},function(err,docs){\n    if(!err){\n        console.log(docs);\n    }\n})\n// promise\nstumodel.find({})\n .then((data)=>{\n    console.log(data);\n  })\n .catch((err)=>{\n   console.log(err);\n })\n// you can pass query parameter to get particular record\nstumodel.find({name:"your_name"})\n .then((doc)=>{\n    console.log(doc);\n })\n.catch((err)=>{\n    console.log(err);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# update\nconditions # 查询条件\ndoc # 修改后的对象\noptions # 配置参数\ncallback # 回调函数\n\n\n1\n2\n3\n4\n * model.replaceone(conditions, doc, [options], [callback] )\n   \n    * 覆盖一个已经存在的文档 相当于 update() 参数分别为：条件、更新字段、操作、回调\n   \n   \n * model.updatemany(conditions, doc, [options], [callback] )\n   \n    * 更新多个已经存在的文档 相当于 update() 参数分别为：条件、更新字段、操作、回调\n   \n   \n * model.updateone(conditions, doc, [options], [callback] )\n   \n    * 更新一个已经存在的文档 相当于 update() 参数分别为：条件、更新字段、操作、回调\n   \n   \n * model.update()\n   \n    * 更新一个文档 参数分别为：条件、更新字段、操作、回调\n   \n   \n * 实例\n   \n   \n\nstumodel.update({name:"小明"}，{$set:{age:20}},function(err){\n    if(!err){\n        console.log("修改成功")；\n    }\n})\n\n\n1\n2\n3\n4\n5\n# delete\n * model.deletemany(confitions,[options],[callback])\n   \n    * 删除所有文档集合的匹配条件 相当于 remove() 参数分别为：条件、操作、回调\n   \n   \n * model.deleteone(confitions,[options],[callback])\n   \n    * 删除匹配条件的文档集合的第一个文档 想当于 remove() 参数分别为：条件、回调\n   \n   \n\n# remove\n * model.remove(confitions,[callback])\n   \n    * 移除所有匹配的文档 参数分别为：条件、回调\n   \n   \n * 实例\n   \n   \n\nmodel.remove(condition，function(err, data){\n    console.log("删除成功！")；\n})\n\n\n1\n2\n3\n# count\n * model.count(conditions,[callback]) 统计文档数量\n\nlet schema = mongoose.schema;\nlet schema = new schema({\n  name: string,\n  age: number\n});\nlet person = mongoose.model("person", schema);\nperson.count({ name: "noshower" }, function(err, count) {\n  if (err) {\n    return console.error(err);\n  }\n  console.log(count);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# document\nlet schema = mongoose.schema;\nlet schema = new schema({\n  name: string,\n  age: number\n});\nlet person = mongoose.model("person", schema);\n\nlet person = new person({\n  name: "小明",\n  age: 24\n});\n//\t此时还没有插入数据库中\n\n/*\n\tdocument的方法\n\t\tmodel#save([option],[callback])\n*/\nperson.save(function(err, product) {\n  if (err) {\n    return console.error(err);\n  }\n  console.log(product); //1\n});\n/*\n\tdoc.update(update,[options],[callback] )\n\t\t-\t修改对象\n\tdoc.remove([callback])\n\t\t-\t删除文档\n\n\tdoc.get(name)===doc[name]\n    doc.set(name,value)===doc[name]=value\n    doc._id\n    doc.toobject   转化为js对象\n    转化为js对象才能删除其中一个属性\n    但转化后document的方法都不能使用了\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n * 关联表的操作\n   \n   \n * 建立约束模型式，指定关联字段\n   \n   \n\nvar mongoose = require("mongoose");\nvar schema = mongoose.schema;\nvar article = new schema({\n  //关联字段 - 内容分类的id\n  category: {\n    //类型\n    type: mongoose.schema.types.objectid,\n    //引用\n    ref: "category" //数据库中集合的名字\n  }\n});\n// - ref 表示要关联的集合名字\n// - type 表示通过 objectid 关联该集合\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * 关联查询表时，使用populate\n\nquery.populate(path, [select], [model], [match],[options])\n\n`path`:你要查询的集合名\n\n`model`:类型model，指定要关联字段的model,没有指定的话，就会使用ref指定的\n\n`match`:查询条件\n\n`options`:查询参数，如limit,skip等\n\n# 实例\ncontent.findone()\n    .populate({path:[\'user\',\'catagory\']})\n    .exec(function(err,data){\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 支持 promise\ncontent\n  .find()\n  .count()\n  .then(function(data) {\n    return content\n      .find()\n      .skip(data / 2)\n      .limit(10);\n  })\n  .then(function(data) {\n    console.log(data);\n  });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# example\nvar mongoose = require(\'mongoose\');\nvar url = \'mongodb://localhost/test\';\nmongoose.connect(url,{usemongoclient: true})\nmongoose.connection.once(\'open\',()=>{\n  console.log(\'数据库连接成功\')\n})\nmongoose.connection.once(\'close\',()=>{\n  console.log(\'数据库已断开连接\')\n})\n\n// 创建 schema\nvar schema = mongoose.schema;\n\nvar user = new schema({\n  name: string,\n  age: number,\n  gender: {\n    type: string,\n    default: \'female\' // 默认值\n  }\n})\n\n// mongoose.model(modelname, schema)\n// modelname 即需要映射的集合名\nvar todos = mongoose.model(\'users\', user);\n\n// 插入数据\ntodos.create({"name": "zhangsan","age": 12, "gender": "man"}, (err, doc) => {\n  if(err) }{\n    console.log(\'error\',error)\n  }else{\n    console.log(\'success\')\n  }\n})\n\n// 创建文档document\nvar doc = new todos({"name": "li si","age": 22, "gender": "man"});\n// model#save([options], callback) 保存文档到数据模型中\ndoc.save((err) => {})\n\n// todo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n- use admin\n- 添加管理员用户\n  db.createuser({\n    user:"admin",\n    pwd:"123",\n    roles:["useradminanydatabase"]\n  })\n\n  db.createuser({user:"root",pwd:"123",roles:["root"]})\n\n- vim /etc/mongod.conf 添加修改如下\n  # ip\n  bindip: 0.0.0.0\n  # 认证\n  security:\n    authorization: enabled\n\n- service mongod restart\n- service mongod status\n- 进入mongo\n  # 方式1\n  mongo --port 27017 -u admin -p 123 --authenticationdatabase "admin"\n  # 方式2\n  mongo\n  use admin\n  db.auth("admin","123")\n  db.system.users.find()\n  show users\n\n  # 添加远程用户\n  use test\n  db.createuser({\n    user:"test",\n    pwd:"123",\n    roles:[{role:"readwrite",db:"test"}]\n  })\n  exit # 退出\n\n  # 进入mongo\n  mongo --port 27017 -u test -p 123 --authenticationdatabase "test"\n  use test\n  show tables\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42',charsets:{cjk:!0}},{title:"mysql的学习记录",frontmatter:{title:"mysql的学习记录",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["mysql"],readingShow:"top"},regularPath:"/database/mysql.html",relativePath:"database/mysql.md",key:"v-f6b60f8a",path:"/database/mysql.html",headers:[{level:2,title:"mysql",slug:"mysql",normalizedTitle:"mysql",charIndex:2},{level:2,title:"登录与退出",slug:"登录与退出",normalizedTitle:"登录与退出",charIndex:745},{level:2,title:"数据类型",slug:"数据类型",normalizedTitle:"数据类型",charIndex:1100},{level:2,title:"mysql 数据库",slug:"mysql-数据库",normalizedTitle:"mysql 数据库",charIndex:2014},{level:2,title:"约束",slug:"约束",normalizedTitle:"约束",charIndex:2422},{level:2,title:"添加约束",slug:"添加约束",normalizedTitle:"添加约束",charIndex:2814},{level:2,title:"数据表的基本操作",slug:"数据表的基本操作",normalizedTitle:"数据表的基本操作",charIndex:3796},{level:2,title:"表记录的基本操作",slug:"表记录的基本操作",normalizedTitle:"表记录的基本操作",charIndex:5207},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:7372}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"mysql 登录与退出 数据类型 mysql 数据库 约束 添加约束 数据表的基本操作 表记录的基本操作 相关链接",content:"# mysql\n * mysql download\n * mysql-yum-repo-quick-guide\n * wget http://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\n * sudo rpm -Uvh mysql57-community-release-el7-11.noarch.rpm\n * yum update\n * sudo yum install mysql-community-server -y\n * 启动 mysqld 服务: sudo service mysqld start\n * 开启 mysqld 开机启动服务: sudo systemctl enable mysqld.service\n * 检测 mysqld 服务状态: sudo service mysqld status\n * 检测 mysqld 服务状态: sudo systemctl status mysqld.service\n * 获取 mysql-root 密码: sudo grep 'temporary password' /var/log/mysqld.log\n * 进入 mysql: mysql -uroot -p\n * 修改 mysql-root 密码: ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass4!';\n * 添加远程登录用户: GRANT ALL PRIVILEGES ON *.* TO 'user1'@'%' IDENTIFIED BY 'UserName123!' WITH GRANT OPTION;\n\n# 登录与退出\n * mysql 登录命令\n\nmysql -h localhost -P 3306 -u root -p\n# -h：主机名\n# -P：端口 (大写的字母P)\n# -u：用户名\n# -p：密码 (小写的字母p)\n\n# mysql默认连接localhost和3306，所以可以省略-h和-P\nmysql -u root -p\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 退出登录\n\n- exit;\n- quit;\n- \\q;\n\n\n1\n2\n3\n * prompt [参数] [字符串]提示符\n\n# 参数：\n- \\h   # 服务器名称\n- \\d   # 当前数据库\n- \\u   # 当前用户\n- \\D   # 完整的日期\n\nps : prompt mysql \\h>\n\n\n1\n2\n3\n4\n5\n6\n7\n# 数据类型\n * tinyint : 有符号值(signed) => (-27 ~ 27-1) | 无符号值(unsigned) => (0 ~ 28-1)\n * smallint : 有符号值 => (-215 ~ 215-1) | 无符号值 => (0 ~ 216-1)\n * mediumint : 有符号值 => (-223 ~ 223-1) | 无符号值 => (0 ~ 224-1)\n * int : 有符号值 => (-231 ~ 231-1) | 无符号值 => (0 ~ 232-1)\n * bigint : 有符号值 => (-263 ~ 263-1) | 无符号值 => (0 ~ 264-1)\n * float[(M,D)]: M 表示数字总位数 D 表示小数点后面的位数 即 M ≥ D\n * double[(M,D)]: M 表示数字总位数 D 表示小数点后面的位数 即 M ≥ D\n * year|time|date|datetime|timestamp: 日期时间类型 timestamp -> 1970-01-01 00:00:00\n * 一个字节是8位,一个汉字编码两个字节是十六位\n * char: M 个字节,( 0 <= M <= 28-1 )\n * varchar: L+1 个字节,( L<=M 且 0 <= M <= 216-1 )\n * tingtext: L+1 个字节,( L<=M 且 0 <= M <= 28 )\n * text: L+2 个字节,( L<=M 且 0 <= M <= 216 )\n * mediumtext: L+3 个字节,( L<=M 且 0 <= M <= 224 )\n * longtext: L+4 个字节,( L<=M 且 0 <= M <= 232 )\n * enum('value1','value2',...) : 字节取决于枚举值的个数,最多( 216-1 ) 个值 (选择其中一种情况)\n * set('value1','value2',...) : 字节取决于 set 成员的个数,最多 28 个值 (排列组合所有的情况)\n\n# mysql 数据库\n * 创建数据库CREATE DATABASE 数据库名;\n   \n   CREATE DATABASE IF NOT EXISTS database_name;\n   \n   \n   1\n   \n * 查看所有数据库SHOW DATABASES;\n   \n   \n * 显示数据库创建语句 SHOW CREATE DATABASE db_name;\n   \n   \n * 选择数据库\n   \n    * 选择数据库USE db_name;\n    * 查看当前使用的数据库SELECT database();\n   \n   \n * 显示警告信息SHOW WARNINGS\n   \n   \n * 删除数据库DROP DATABASE database_name;\n   \n   DROP DATABASE IF EXISTS database_name;\n   \n   \n   1\n   \n\n# 约束\nPRIMARY KEY    -- 主键约束，用于唯一标识对应的记录,可以赋值\nFOREIGN KEY    -- 外键约束 (数据类型一致,主键)\nNOT NULL    -- 非空约束\nNULL       -- 空\nUNIQUE    -- 唯一性约束(同一张表可以存在多个)\nAUTO_INCREMENT    -- 自动递增,适用于整数类型 默认从0开始\nUNSIGNED    -- 无符号\nDEFAULT\t\t    -- 默认值约束，用于设置字段的默认值\nCHARACTER SET gbk   -- 指定一个字符集\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 外键约束\n\nFOREIGN KEY (Id_P) REFERENCES Persons(Id_P)\nCASCADE\nSET NULL\nRESTRICT\nNO ACTION\n\n\n1\n2\n3\n4\n5\n# 添加约束\n * 添加主键约束\n\nALTER TABLE tb_name ADD [CONSTRAINT[smybol]] PRIMARY KEY [index_type](index_col_name,...)\n\nALTER TABLE users2 ADD CONSTRAINT PRIMARY KEY (id);\n\n\n1\n2\n3\n * 添加唯一约束\n\nALTER TABLE tb_name ADD [CONSTRAINT[smybol]] UNIQUE [INDEX|KEY][index_name] [index_type] (index_col_name,...)\n\nALTER TABLE users2 ADD UNIQUE (username);\n\n\n1\n2\n3\n * 添加外键约束\n\nALTER TABLE tb_name ADD [CONSTRAINT[smybol]] FOREIGN KEY [index_name] (index_col_name,...) reference_definition\n\nALTER TABLE users2 ADD FOREIGN KEY(pid) REFERENCES provinces (id);\n\n\n1\n2\n3\n * 添加/删除默认约束\n\nALTER TABLE tb_name ALTER [COLUMN] col_name{SET DEFAULT literal|DROP DEFAULT}\n\n-- 添加：\nALTER TABLE users2 ALTER age SET DEFAULT 15;\n-- 删除：\nALTER TABLE users2 ALTER age DROP DEFAULT;\n\n\n1\n2\n3\n4\n5\n6\n * 删除约束\n\n-- 主键:\nALTER TABLE table_name DROP PRIMARY KEY;\nALTER TABLE users2 DROP PRIMARY KEY;\n\n-- 唯一:\nALTER TABLE table_name DROP {INDEX|KEY} index_name;\n\n-- 外键:\nALTER TABLE table_name DROP FOREIGN KEY fk-symbol;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 数据表的基本操作\n * 创建数据表 -- 最后一列不需要逗号\n\nCREATE TABLE 表名\n(\n    列名1  类型,\n    列名2  类型,\n    列名3  类型\n);\n\n-- 注意：最后一列不需要逗号\n\n-- 创建数据库\ncreate database IF NOT EXISTS test01 character set utf8;\n-- 选择test01数据库\nuse test01;\n-- 创建students表\ncreate table students\n(\n    id int unsigned not null auto_increment primary key,\n    name char(8) not null,\n    sex char(4) not null,\n    age tinyint unsigned not null,\n    tel char(13) null default \"-\"\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n * 查看数据表\n\n-- 查看当前数据库中的所有表\nshow tables;\n-- 查看表结构\ndesc tb_name;\nSHOW COLUMNS FROM tb_name;\n-- 查看建表语句\nshow create table tb_name;\n\n\n1\n2\n3\n4\n5\n6\n7\n * 增加列\n\nALTER TABLE table_name ADD 列名 列的类型;\n-- 在表的最后追加列 address:\nalter table students add address char(60);\n\n\n1\n2\n3\n * 修改列名/数据类型\n\nALTER TABLE table_name MODIFY 列名 数据类型 [FIRST|ALTER col_name];\nALTER TABLE students MODIFY name VARCHAR(60);\n\nALTER TABLE 表名 change 原列名 新列名 数据类型 [FIRST|ALTER col_name];\n-- 将表 tel 列改名为 telphone:\nalter table students change tel telphone char(13) default \"-\";\n-- 将 name 列的数据类型改为 char(16):\nalter table students change name name char(16) not null;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 删除列\n\nALTER TABLE table_name DROP 列名;\nalter table students drop birthday;\n\n\n1\n2\n * 修改表名\n\nalter table 表名 rename 新表名;\nrename table 表名 to 新表名;\n-- 重命名 students 表为 workmates:\nalter table students rename workmates;\n\n\n1\n2\n3\n4\n * 删除数据表\n\nDROP TABLE 表名;\n-- 删除 workmates 表:\ndrop table workmates;\n\n\n1\n2\n3\n# 表记录的基本操作\n * 向表中插入记录\n\nINSERT [INTO] table_name [(col_name,...)] {VALUES|VALUE} ({expr|DEFAULE},...),(...),...\nINSERT [INTO] table_name SET col_name={expr|DEFAULE},...\n-- 将查询结果写入表table_name中\nINSERT [INTO] table_name [(col_name,...)] SELECT...\n\ninsert [into] 表名 [(列名1, 列名2, 列名3, ...)] values (值1, 值2, 值3, ...);\ninsert into students values(NULL, \"王刚\", \"男\", 20, \"13811371377\");\n-- 部分记录\ninsert into students (name, sex, age) values(\"孙丽华\", \"女\", 21);\ninsert into students set username='李四',sex=\"女\",age=19;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 更新表中的记录\n\n-- 单表更新\nUPDATE [LOW_PRIORITY] [IGNORE] table_reference SET col_name1={expr|DEFAULT} [,col_name1={expr|DEFAULT}] ... [WHERE where_condition]\n-- 多表更新\nUPDATE table_reference SET col_name1={expr1|DEFSULT} [,col_name2={expr2|DEFAULT}]... [WHERE where_condition]\n\ntable_reference {[INNER|CROSS] JOIN | {LEFT|RIGHT} [OUTER] JOIN} table_reference ON conditional_expr\n\nupdate 表名称 set 列名称=新值 where 更新条件;\n-- 所有\nupdate students set age=age+id;\n-- one\nupdate students set tel=default where id=5;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 删除表中的记录\n\nDELETE FROM table_name [WHERE where_condition]\n\nDELETE table_name[.*] [,table_name[.*]] ... FROM table_references [WHERE where_condition]\n\ndelete from 表名称 where 删除条件;\ndelete from students where id=2;\ndelete from students where age<20;\ndelete from students;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 查询表中的记录\n\nSELECT select_expr [,select_expr,...]\n[\n    FROM table_references\n    [WHERE where_condition]\n    [GROUP BY {col_name|position} [ASC|DESC],... ]\n    [HAVING where_condition]\n    [ORDER BY {col_name|expr|position} [ASC|DESC],...]\n    [LIMIT {[offset,] row_count|row_count OFFSET offset} ]\n]\n\nselect 列名称 from 表名称 [查询条件];\nselect 列名称 from 表名称 where 条件;\n  -- AS  起别名alias\n  -- ASC 升序 / DESC 降序\n  -- ANY / SOME / ALL\n  -- IN  / NOT IN / EXISTS / NOT EXISTS\n  -- AVG 平均值 / ROUND 四舍五入 /\n\nselect students.name, students.age from students\\G\nselect students.name as uname, students.age as uage from students;\nselect * from students where sex=\"女\";\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n * create select\n\n-- 创建数据表同时将查询结果写入到数据表\nCREATE TABLE IF NOT EXISTS table_name [(create_definition,...)] select_statement\n\n\n1\n2\n# 相关链接\n * 21 分钟 MySQL 入门教程",normalizedContent:"# mysql\n * mysql download\n * mysql-yum-repo-quick-guide\n * wget http://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm\n * sudo rpm -uvh mysql57-community-release-el7-11.noarch.rpm\n * yum update\n * sudo yum install mysql-community-server -y\n * 启动 mysqld 服务: sudo service mysqld start\n * 开启 mysqld 开机启动服务: sudo systemctl enable mysqld.service\n * 检测 mysqld 服务状态: sudo service mysqld status\n * 检测 mysqld 服务状态: sudo systemctl status mysqld.service\n * 获取 mysql-root 密码: sudo grep 'temporary password' /var/log/mysqld.log\n * 进入 mysql: mysql -uroot -p\n * 修改 mysql-root 密码: alter user 'root'@'localhost' identified by 'mynewpass4!';\n * 添加远程登录用户: grant all privileges on *.* to 'user1'@'%' identified by 'username123!' with grant option;\n\n# 登录与退出\n * mysql 登录命令\n\nmysql -h localhost -p 3306 -u root -p\n# -h：主机名\n# -p：端口 (大写的字母p)\n# -u：用户名\n# -p：密码 (小写的字母p)\n\n# mysql默认连接localhost和3306，所以可以省略-h和-p\nmysql -u root -p\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 退出登录\n\n- exit;\n- quit;\n- \\q;\n\n\n1\n2\n3\n * prompt [参数] [字符串]提示符\n\n# 参数：\n- \\h   # 服务器名称\n- \\d   # 当前数据库\n- \\u   # 当前用户\n- \\d   # 完整的日期\n\nps : prompt mysql \\h>\n\n\n1\n2\n3\n4\n5\n6\n7\n# 数据类型\n * tinyint : 有符号值(signed) => (-27 ~ 27-1) | 无符号值(unsigned) => (0 ~ 28-1)\n * smallint : 有符号值 => (-215 ~ 215-1) | 无符号值 => (0 ~ 216-1)\n * mediumint : 有符号值 => (-223 ~ 223-1) | 无符号值 => (0 ~ 224-1)\n * int : 有符号值 => (-231 ~ 231-1) | 无符号值 => (0 ~ 232-1)\n * bigint : 有符号值 => (-263 ~ 263-1) | 无符号值 => (0 ~ 264-1)\n * float[(m,d)]: m 表示数字总位数 d 表示小数点后面的位数 即 m ≥ d\n * double[(m,d)]: m 表示数字总位数 d 表示小数点后面的位数 即 m ≥ d\n * year|time|date|datetime|timestamp: 日期时间类型 timestamp -> 1970-01-01 00:00:00\n * 一个字节是8位,一个汉字编码两个字节是十六位\n * char: m 个字节,( 0 <= m <= 28-1 )\n * varchar: l+1 个字节,( l<=m 且 0 <= m <= 216-1 )\n * tingtext: l+1 个字节,( l<=m 且 0 <= m <= 28 )\n * text: l+2 个字节,( l<=m 且 0 <= m <= 216 )\n * mediumtext: l+3 个字节,( l<=m 且 0 <= m <= 224 )\n * longtext: l+4 个字节,( l<=m 且 0 <= m <= 232 )\n * enum('value1','value2',...) : 字节取决于枚举值的个数,最多( 216-1 ) 个值 (选择其中一种情况)\n * set('value1','value2',...) : 字节取决于 set 成员的个数,最多 28 个值 (排列组合所有的情况)\n\n# mysql 数据库\n * 创建数据库create database 数据库名;\n   \n   create database if not exists database_name;\n   \n   \n   1\n   \n * 查看所有数据库show databases;\n   \n   \n * 显示数据库创建语句 show create database db_name;\n   \n   \n * 选择数据库\n   \n    * 选择数据库use db_name;\n    * 查看当前使用的数据库select database();\n   \n   \n * 显示警告信息show warnings\n   \n   \n * 删除数据库drop database database_name;\n   \n   drop database if exists database_name;\n   \n   \n   1\n   \n\n# 约束\nprimary key    -- 主键约束，用于唯一标识对应的记录,可以赋值\nforeign key    -- 外键约束 (数据类型一致,主键)\nnot null    -- 非空约束\nnull       -- 空\nunique    -- 唯一性约束(同一张表可以存在多个)\nauto_increment    -- 自动递增,适用于整数类型 默认从0开始\nunsigned    -- 无符号\ndefault\t\t    -- 默认值约束，用于设置字段的默认值\ncharacter set gbk   -- 指定一个字符集\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 外键约束\n\nforeign key (id_p) references persons(id_p)\ncascade\nset null\nrestrict\nno action\n\n\n1\n2\n3\n4\n5\n# 添加约束\n * 添加主键约束\n\nalter table tb_name add [constraint[smybol]] primary key [index_type](index_col_name,...)\n\nalter table users2 add constraint primary key (id);\n\n\n1\n2\n3\n * 添加唯一约束\n\nalter table tb_name add [constraint[smybol]] unique [index|key][index_name] [index_type] (index_col_name,...)\n\nalter table users2 add unique (username);\n\n\n1\n2\n3\n * 添加外键约束\n\nalter table tb_name add [constraint[smybol]] foreign key [index_name] (index_col_name,...) reference_definition\n\nalter table users2 add foreign key(pid) references provinces (id);\n\n\n1\n2\n3\n * 添加/删除默认约束\n\nalter table tb_name alter [column] col_name{set default literal|drop default}\n\n-- 添加：\nalter table users2 alter age set default 15;\n-- 删除：\nalter table users2 alter age drop default;\n\n\n1\n2\n3\n4\n5\n6\n * 删除约束\n\n-- 主键:\nalter table table_name drop primary key;\nalter table users2 drop primary key;\n\n-- 唯一:\nalter table table_name drop {index|key} index_name;\n\n-- 外键:\nalter table table_name drop foreign key fk-symbol;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 数据表的基本操作\n * 创建数据表 -- 最后一列不需要逗号\n\ncreate table 表名\n(\n    列名1  类型,\n    列名2  类型,\n    列名3  类型\n);\n\n-- 注意：最后一列不需要逗号\n\n-- 创建数据库\ncreate database if not exists test01 character set utf8;\n-- 选择test01数据库\nuse test01;\n-- 创建students表\ncreate table students\n(\n    id int unsigned not null auto_increment primary key,\n    name char(8) not null,\n    sex char(4) not null,\n    age tinyint unsigned not null,\n    tel char(13) null default \"-\"\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n * 查看数据表\n\n-- 查看当前数据库中的所有表\nshow tables;\n-- 查看表结构\ndesc tb_name;\nshow columns from tb_name;\n-- 查看建表语句\nshow create table tb_name;\n\n\n1\n2\n3\n4\n5\n6\n7\n * 增加列\n\nalter table table_name add 列名 列的类型;\n-- 在表的最后追加列 address:\nalter table students add address char(60);\n\n\n1\n2\n3\n * 修改列名/数据类型\n\nalter table table_name modify 列名 数据类型 [first|alter col_name];\nalter table students modify name varchar(60);\n\nalter table 表名 change 原列名 新列名 数据类型 [first|alter col_name];\n-- 将表 tel 列改名为 telphone:\nalter table students change tel telphone char(13) default \"-\";\n-- 将 name 列的数据类型改为 char(16):\nalter table students change name name char(16) not null;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 删除列\n\nalter table table_name drop 列名;\nalter table students drop birthday;\n\n\n1\n2\n * 修改表名\n\nalter table 表名 rename 新表名;\nrename table 表名 to 新表名;\n-- 重命名 students 表为 workmates:\nalter table students rename workmates;\n\n\n1\n2\n3\n4\n * 删除数据表\n\ndrop table 表名;\n-- 删除 workmates 表:\ndrop table workmates;\n\n\n1\n2\n3\n# 表记录的基本操作\n * 向表中插入记录\n\ninsert [into] table_name [(col_name,...)] {values|value} ({expr|defaule},...),(...),...\ninsert [into] table_name set col_name={expr|defaule},...\n-- 将查询结果写入表table_name中\ninsert [into] table_name [(col_name,...)] select...\n\ninsert [into] 表名 [(列名1, 列名2, 列名3, ...)] values (值1, 值2, 值3, ...);\ninsert into students values(null, \"王刚\", \"男\", 20, \"13811371377\");\n-- 部分记录\ninsert into students (name, sex, age) values(\"孙丽华\", \"女\", 21);\ninsert into students set username='李四',sex=\"女\",age=19;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 更新表中的记录\n\n-- 单表更新\nupdate [low_priority] [ignore] table_reference set col_name1={expr|default} [,col_name1={expr|default}] ... [where where_condition]\n-- 多表更新\nupdate table_reference set col_name1={expr1|defsult} [,col_name2={expr2|default}]... [where where_condition]\n\ntable_reference {[inner|cross] join | {left|right} [outer] join} table_reference on conditional_expr\n\nupdate 表名称 set 列名称=新值 where 更新条件;\n-- 所有\nupdate students set age=age+id;\n-- one\nupdate students set tel=default where id=5;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 删除表中的记录\n\ndelete from table_name [where where_condition]\n\ndelete table_name[.*] [,table_name[.*]] ... from table_references [where where_condition]\n\ndelete from 表名称 where 删除条件;\ndelete from students where id=2;\ndelete from students where age<20;\ndelete from students;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 查询表中的记录\n\nselect select_expr [,select_expr,...]\n[\n    from table_references\n    [where where_condition]\n    [group by {col_name|position} [asc|desc],... ]\n    [having where_condition]\n    [order by {col_name|expr|position} [asc|desc],...]\n    [limit {[offset,] row_count|row_count offset offset} ]\n]\n\nselect 列名称 from 表名称 [查询条件];\nselect 列名称 from 表名称 where 条件;\n  -- as  起别名alias\n  -- asc 升序 / desc 降序\n  -- any / some / all\n  -- in  / not in / exists / not exists\n  -- avg 平均值 / round 四舍五入 /\n\nselect students.name, students.age from students\\g\nselect students.name as uname, students.age as uage from students;\nselect * from students where sex=\"女\";\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n * create select\n\n-- 创建数据表同时将查询结果写入到数据表\ncreate table if not exists table_name [(create_definition,...)] select_statement\n\n\n1\n2\n# 相关链接\n * 21 分钟 mysql 入门教程",charsets:{cjk:!0}},{title:"debounce",frontmatter:{readingShow:"top"},regularPath:"/feat/lib.html",relativePath:"feat/lib.md",key:"v-73d8ef87",path:"/feat/lib.html",headers:[{level:2,title:"debounce",slug:"debounce",normalizedTitle:"debounce",charIndex:2},{level:2,title:"throttle",slug:"throttle",normalizedTitle:"throttle",charIndex:567},{level:2,title:"bubbleSort",slug:"bubblesort",normalizedTitle:"bubblesort",charIndex:2040},{level:2,title:"quickSort",slug:"quicksort",normalizedTitle:"quicksort",charIndex:2380},{level:2,title:"currying",slug:"currying",normalizedTitle:"currying",charIndex:2664},{level:2,title:"call",slug:"call",normalizedTitle:"call",charIndex:224},{level:2,title:"apply",slug:"apply",normalizedTitle:"apply",charIndex:356},{level:2,title:"bind",slug:"bind",normalizedTitle:"bind",charIndex:3523},{level:2,title:"deepClone",slug:"deepclone",normalizedTitle:"deepclone",charIndex:4434},{level:2,title:"MPromise",slug:"mpromise",normalizedTitle:"mpromise",charIndex:4809},{level:2,title:"sleep",slug:"sleep",normalizedTitle:"sleep",charIndex:8490},{level:2,title:"EventEmitter",slug:"eventemitter",normalizedTitle:"eventemitter",charIndex:8754},{level:2,title:"instanceof",slug:"instanceof",normalizedTitle:"instanceof",charIndex:3693},{level:2,title:"new",slug:"new",normalizedTitle:"new",charIndex:698}],lastUpdated:"2020/8/10 上午2:15:00",headersStr:"debounce throttle bubbleSort quickSort currying call apply bind deepClone MPromise sleep EventEmitter instanceof new",content:"# debounce\n// 单位时间只触发一次\nfunction debounce(fn, wait, now) {\n    var timer = null\n    return function() {\n        var context = this;\n        var args = arguments\n        clearTimeout(timer)\n        if (now) {\n            var callNow = !timer\n            timer = setTimeout(() => {\n                timer = null\n            }, wait)\n            callNow && fn.apply(context, args)\n        } else {\n            timer = setTimeout(() => {\n                fn.apply(context, args)\n            }, wait)\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# throttle\n * 单位时间内多次触发时间，只能执行一次\n * step1\n\nfunction throttle(fn, wait) {\n    var last = 0\n\n    return function() {\n        var cur = new Date()\n        var context = this\n        var args = arguments\n\n        if (cur - last > wait) {\n            fn && fn.apply(context, args)\n            last = cur\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * step2\n\nfunction throttle(fn, wait) {\n    var timeout = null;\n    return () => {\n        var context = this;\n        var args = arguments\n        if (!timeout) {\n            timeout = setTimeout(() => {\n                timeout = null\n                fn.apply(context, args)\n            }, wait)\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * step3\n\nfunction throttle(fn, wait) {\n\n    var timer, context, args, now;\n    var pre = 0;\n\n    var _throttle = function() {\n        context = this;\n        args = arguments;\n        now = +new Date()\n\n        var next = wait - (now - pre);\n\n        if (next <= 0 || next > wait) {\n            if (timer) {\n                clearTimeout(timer)\n                timer = null\n            }\n            pre = now;\n            fn.apply(context, args)\n        } else if (!timer) {\n            timer = setTimeout(function() {\n                fn.apply(context, args)\n                timer = null;\n                pre = +new Date() // update\n            }, next)\n        }\n    }\n    return _throttle\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# bubbleSort\nfunction bubbleSort(arr) {\n    for (let i = 0; i < length - 1; i++) {\n        for (let j = 0; j < length - i - 1; j++) {\n            if (arr[j] > arr[j + 1]) {\n                const temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# quickSort\nfunction quickSort(arr) {\n    if (arr.length < 1) { return arr }\n\n    var pivot = arr.pop()\n    var left = arr.filter(item => item < pivot)\n    var right = arr.filter(item => item >= pivot)\n\n    return quickSort(left).concat(pivot, quickSort(right))\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# currying\nfunction currying(fn) {\n    var args = []\n    return function next() {\n        var _args = Array.from(arguments)\n        // var _args = [].slice.call(arguments)\n\n        if (_args.length > 0) {\n            args = args.concat(_args)\n            return next\n        } else {\n            fn.apply(null, args)\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# call\nFunction.prototype.myCall = function() {\n    var context = {}\n    context.fn = this;\n    var args = [...arguments].slice(1)\n    var result = context.fn(...args)\n    delete context.fn\n    return result\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# apply\nFunction.prototype.myApply = function(context = {}) {\n    context.fn = this;\n    let result\n    if (arguments[1]) {\n        result = context.fn(...arguments[1])\n    } else {\n        result = context.fn()\n    }\n    return result\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# bind\nFunction.prototype.myBind = function(obj) {\n\n    var args = [...arguments].slice(1)\n\n    var context = this\n\n    var bound = function() {\n        context.apply(this instanceof context ? this : obj, args.concat(...arguments))\n    }\n\n    // var Fn = function() { }\n    // Fn.prototype = context.prototype\n    // bound.prototype = new Fn()\n    bound.prototype = Object.create(context.prototype)\n    return bound\n}\n\n//\nFunction.prototype.myBind = function (context) {\n  if (typeof this !== 'function') {\n    throw new TypeError('Error')\n  }\n  var _this = this\n  var args = [...arguments].slice(1)\n  // 返回一个函数\n  return function F() {\n    // 因为返回了一个函数，我们可以 new F()，所以需要判断\n    if (this instanceof F) {\n      return new _this(...args, ...arguments)\n    }\n    return _this.apply(context, args.concat(...arguments))\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# deepClone\nfunction deepClone(obj) {\n    if (typeof window != 'undefined' && window.JSON) {\n        return JSON.parse(JSON.stringify(obj))\n    } else {\n        var newObj = obj.constructor === 'Array' ? [] : {}\n\n        for (let key in obj) {\n            newObj[key] = typeof obj[key] == 'object' ? deepClone(obj[key]) : obj[key]\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# MPromise\nconst PENDING = 'pending'\nconst RESOLVED = 'resolved'\nconst REJECTED = 'rejected'\n\nfunction MPromise(extor) {\n    let that = this;\n\n    that.status = PENDING\n\n    that.value = undefined\n\n    that.reason = undefined\n\n    that.resolvedCb = []\n\n    that.rejectedCb = []\n\n    //\n\n    function resolve(value) {\n        if (val instanceof MPromise) {\n            return value.then(resolve, reject)\n        }\n\n        setTimeout(() => {\n            if (that.status == PENDING) {\n                that.value = value\n                that.status = RESOLVED\n                that.resolvedCb.map(cb => cb(that.value))\n            }\n        }, 0)\n    }\n\n    //\n    function reject(reason) {\n        setTimeout(() => {\n            if (that.status == PENDING) {\n                that.reason = reason\n                that.status = REJECTED\n                that.rejectedCb.map(cb => cb(that.reason))\n            }\n        }, 0)\n    }\n\n\n    try {\n        extor(resolve, reject)\n    } catch (error) {\n        reject(error)\n    }\n}\n\n\nMPromise.prototype.then = function(onFulfilled, onRejected) {\n    const that = this;\n    const promise2;\n\n    onFulfilled = typeof onFulfilled == 'function' ? onFulfilled : v => v\n    onRejected = typeof onRejected == 'function' ? onRejected : r => { throw r }\n\n    if (that.status === PENDING) {\n        // that.resolvedCb.push(onFulfilled)\n        // that.rejectedCb.push(onRejected)\n        return promise2 = new MPromise((resolve, reject) => {\n            that.resolvedCb.push(function(value) {\n                try {\n                    var x = onFulfilled(value)\n                    resolvePromise(promise2, x, resolve, reject)\n                } catch (error) {\n                    reject(error)\n                }\n            })\n\n            that.rejectedCb.push(function(reason) {\n                try {\n                    var x = onRejected(reason)\n                    resolvePromise(promise2, x, resolve, reject)\n                } catch (error) {\n                    reject(error)\n                }\n            })\n        })\n    }\n\n    if (that.status == RESOLVED) {\n        // onFulfilled(that.value)\n\n        return promise2 = new MPromise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    var x = onFulfilled(that.value)\n                    resolvePromise(promise2, x, resolve, reject)\n                } catch (error) {\n                    reject(error)\n                }\n            }, 0)\n        })\n    }\n    if (that.status === REJECTED) {\n        // onRejected(that.reason)\n\n        return promise2 = new MPromise((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    var x = onRejected(that.reason)\n                    resolvePromise(promise2, x, resolve, reject)\n                } catch (error) {\n                    reject(error)\n                }\n            }, 0)\n        })\n    }\n}\n\nfunction resolvePromise(promise, x, resolve, reject) {\n    // ...\n    if (promise === x) { throw ' error' }\n\n    if (x instanceof MPromise) {\n        if (x.status == PENDING) {\n            x.then(value => resolvePromise(promise, value, resolve, reject), err => reject(err))\n        } else {\n            x.then(resolve, reject)\n        }\n        return\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n# sleep\nfunction sleep(sleepTime){\n    var start=new Date().getTime();\n    while(true){\n        if(new Date().getTime()-start>sleepTime){\n            break;\n        }\n    }\n}\n\n// const asyncDelay = ms => new Promise(r => setTimeout(r, ms));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# EventEmitter\nclass EventEmitter {\n    constructor() {\n          this.events = Object.create(null);\n      }\n      on(name, fn) {\n        if (!this.events[name]) {\n            this.events[name] = []\n          }\n          this.events[name].push(fn);\n          return this;\n      }\n      emit(name, ...args) {\n        if (!this.events[name]) {\n            return this;\n        }\n        const fns = this.events[name]\n        fns.forEach(fn => fn.call(this, ...args))\n        return this;\n      }\n      off(name,fn) {\n        if (!this.events[name]) {\n            return this;\n        }\n          if (!fn) {\n            this.events[name] = null\n            return this\n          }\n          const index = this.events[name].indexOf(fn);\n          this.events[name].splice(index, 1);\n        return this;\n      }\n      once(name,fn) {\n        const only = () => {\n          fn.apply(this, arguments);\n          this.off(name, only);\n        };\n        this.on(name, only);\n        return this;\n      }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# instanceof\nfunction instanceof(l, r) {\n  let proto = l.__proto__;\n  let prototype = r.prototype\n  while (true) {\n    if (proto == null) {\n      return false\n    }\n    if (proto == prototype) {\n      return true\n    }\n    proto = proto.__proto__\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# new\nfunction _new() {\n  // 将 arguments 对象转为数组\n  var args = [].slice.call(arguments);\n  // 取出构造函数\n  var constructor = args.shift();\n  // 创建一个空对象,继承构造函数的 prototype 属性\n  var context = Object.create(constructor.prototype);\n  // 执行构造函数\n  var result = constructor.apply(context, args);\n  // 如果返回结果是对象,就直接返回,则返回 context 对象\n  return typeof result === \"object\" && result != null ? result : context;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12",normalizedContent:"# debounce\n// 单位时间只触发一次\nfunction debounce(fn, wait, now) {\n    var timer = null\n    return function() {\n        var context = this;\n        var args = arguments\n        cleartimeout(timer)\n        if (now) {\n            var callnow = !timer\n            timer = settimeout(() => {\n                timer = null\n            }, wait)\n            callnow && fn.apply(context, args)\n        } else {\n            timer = settimeout(() => {\n                fn.apply(context, args)\n            }, wait)\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# throttle\n * 单位时间内多次触发时间，只能执行一次\n * step1\n\nfunction throttle(fn, wait) {\n    var last = 0\n\n    return function() {\n        var cur = new date()\n        var context = this\n        var args = arguments\n\n        if (cur - last > wait) {\n            fn && fn.apply(context, args)\n            last = cur\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * step2\n\nfunction throttle(fn, wait) {\n    var timeout = null;\n    return () => {\n        var context = this;\n        var args = arguments\n        if (!timeout) {\n            timeout = settimeout(() => {\n                timeout = null\n                fn.apply(context, args)\n            }, wait)\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * step3\n\nfunction throttle(fn, wait) {\n\n    var timer, context, args, now;\n    var pre = 0;\n\n    var _throttle = function() {\n        context = this;\n        args = arguments;\n        now = +new date()\n\n        var next = wait - (now - pre);\n\n        if (next <= 0 || next > wait) {\n            if (timer) {\n                cleartimeout(timer)\n                timer = null\n            }\n            pre = now;\n            fn.apply(context, args)\n        } else if (!timer) {\n            timer = settimeout(function() {\n                fn.apply(context, args)\n                timer = null;\n                pre = +new date() // update\n            }, next)\n        }\n    }\n    return _throttle\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# bubblesort\nfunction bubblesort(arr) {\n    for (let i = 0; i < length - 1; i++) {\n        for (let j = 0; j < length - i - 1; j++) {\n            if (arr[j] > arr[j + 1]) {\n                const temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# quicksort\nfunction quicksort(arr) {\n    if (arr.length < 1) { return arr }\n\n    var pivot = arr.pop()\n    var left = arr.filter(item => item < pivot)\n    var right = arr.filter(item => item >= pivot)\n\n    return quicksort(left).concat(pivot, quicksort(right))\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# currying\nfunction currying(fn) {\n    var args = []\n    return function next() {\n        var _args = array.from(arguments)\n        // var _args = [].slice.call(arguments)\n\n        if (_args.length > 0) {\n            args = args.concat(_args)\n            return next\n        } else {\n            fn.apply(null, args)\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# call\nfunction.prototype.mycall = function() {\n    var context = {}\n    context.fn = this;\n    var args = [...arguments].slice(1)\n    var result = context.fn(...args)\n    delete context.fn\n    return result\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# apply\nfunction.prototype.myapply = function(context = {}) {\n    context.fn = this;\n    let result\n    if (arguments[1]) {\n        result = context.fn(...arguments[1])\n    } else {\n        result = context.fn()\n    }\n    return result\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# bind\nfunction.prototype.mybind = function(obj) {\n\n    var args = [...arguments].slice(1)\n\n    var context = this\n\n    var bound = function() {\n        context.apply(this instanceof context ? this : obj, args.concat(...arguments))\n    }\n\n    // var fn = function() { }\n    // fn.prototype = context.prototype\n    // bound.prototype = new fn()\n    bound.prototype = object.create(context.prototype)\n    return bound\n}\n\n//\nfunction.prototype.mybind = function (context) {\n  if (typeof this !== 'function') {\n    throw new typeerror('error')\n  }\n  var _this = this\n  var args = [...arguments].slice(1)\n  // 返回一个函数\n  return function f() {\n    // 因为返回了一个函数，我们可以 new f()，所以需要判断\n    if (this instanceof f) {\n      return new _this(...args, ...arguments)\n    }\n    return _this.apply(context, args.concat(...arguments))\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# deepclone\nfunction deepclone(obj) {\n    if (typeof window != 'undefined' && window.json) {\n        return json.parse(json.stringify(obj))\n    } else {\n        var newobj = obj.constructor === 'array' ? [] : {}\n\n        for (let key in obj) {\n            newobj[key] = typeof obj[key] == 'object' ? deepclone(obj[key]) : obj[key]\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# mpromise\nconst pending = 'pending'\nconst resolved = 'resolved'\nconst rejected = 'rejected'\n\nfunction mpromise(extor) {\n    let that = this;\n\n    that.status = pending\n\n    that.value = undefined\n\n    that.reason = undefined\n\n    that.resolvedcb = []\n\n    that.rejectedcb = []\n\n    //\n\n    function resolve(value) {\n        if (val instanceof mpromise) {\n            return value.then(resolve, reject)\n        }\n\n        settimeout(() => {\n            if (that.status == pending) {\n                that.value = value\n                that.status = resolved\n                that.resolvedcb.map(cb => cb(that.value))\n            }\n        }, 0)\n    }\n\n    //\n    function reject(reason) {\n        settimeout(() => {\n            if (that.status == pending) {\n                that.reason = reason\n                that.status = rejected\n                that.rejectedcb.map(cb => cb(that.reason))\n            }\n        }, 0)\n    }\n\n\n    try {\n        extor(resolve, reject)\n    } catch (error) {\n        reject(error)\n    }\n}\n\n\nmpromise.prototype.then = function(onfulfilled, onrejected) {\n    const that = this;\n    const promise2;\n\n    onfulfilled = typeof onfulfilled == 'function' ? onfulfilled : v => v\n    onrejected = typeof onrejected == 'function' ? onrejected : r => { throw r }\n\n    if (that.status === pending) {\n        // that.resolvedcb.push(onfulfilled)\n        // that.rejectedcb.push(onrejected)\n        return promise2 = new mpromise((resolve, reject) => {\n            that.resolvedcb.push(function(value) {\n                try {\n                    var x = onfulfilled(value)\n                    resolvepromise(promise2, x, resolve, reject)\n                } catch (error) {\n                    reject(error)\n                }\n            })\n\n            that.rejectedcb.push(function(reason) {\n                try {\n                    var x = onrejected(reason)\n                    resolvepromise(promise2, x, resolve, reject)\n                } catch (error) {\n                    reject(error)\n                }\n            })\n        })\n    }\n\n    if (that.status == resolved) {\n        // onfulfilled(that.value)\n\n        return promise2 = new mpromise((resolve, reject) => {\n            settimeout(() => {\n                try {\n                    var x = onfulfilled(that.value)\n                    resolvepromise(promise2, x, resolve, reject)\n                } catch (error) {\n                    reject(error)\n                }\n            }, 0)\n        })\n    }\n    if (that.status === rejected) {\n        // onrejected(that.reason)\n\n        return promise2 = new mpromise((resolve, reject) => {\n            settimeout(() => {\n                try {\n                    var x = onrejected(that.reason)\n                    resolvepromise(promise2, x, resolve, reject)\n                } catch (error) {\n                    reject(error)\n                }\n            }, 0)\n        })\n    }\n}\n\nfunction resolvepromise(promise, x, resolve, reject) {\n    // ...\n    if (promise === x) { throw ' error' }\n\n    if (x instanceof mpromise) {\n        if (x.status == pending) {\n            x.then(value => resolvepromise(promise, value, resolve, reject), err => reject(err))\n        } else {\n            x.then(resolve, reject)\n        }\n        return\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n# sleep\nfunction sleep(sleeptime){\n    var start=new date().gettime();\n    while(true){\n        if(new date().gettime()-start>sleeptime){\n            break;\n        }\n    }\n}\n\n// const asyncdelay = ms => new promise(r => settimeout(r, ms));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# eventemitter\nclass eventemitter {\n    constructor() {\n          this.events = object.create(null);\n      }\n      on(name, fn) {\n        if (!this.events[name]) {\n            this.events[name] = []\n          }\n          this.events[name].push(fn);\n          return this;\n      }\n      emit(name, ...args) {\n        if (!this.events[name]) {\n            return this;\n        }\n        const fns = this.events[name]\n        fns.foreach(fn => fn.call(this, ...args))\n        return this;\n      }\n      off(name,fn) {\n        if (!this.events[name]) {\n            return this;\n        }\n          if (!fn) {\n            this.events[name] = null\n            return this\n          }\n          const index = this.events[name].indexof(fn);\n          this.events[name].splice(index, 1);\n        return this;\n      }\n      once(name,fn) {\n        const only = () => {\n          fn.apply(this, arguments);\n          this.off(name, only);\n        };\n        this.on(name, only);\n        return this;\n      }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# instanceof\nfunction instanceof(l, r) {\n  let proto = l.__proto__;\n  let prototype = r.prototype\n  while (true) {\n    if (proto == null) {\n      return false\n    }\n    if (proto == prototype) {\n      return true\n    }\n    proto = proto.__proto__\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# new\nfunction _new() {\n  // 将 arguments 对象转为数组\n  var args = [].slice.call(arguments);\n  // 取出构造函数\n  var constructor = args.shift();\n  // 创建一个空对象,继承构造函数的 prototype 属性\n  var context = object.create(constructor.prototype);\n  // 执行构造函数\n  var result = constructor.apply(context, args);\n  // 如果返回结果是对象,就直接返回,则返回 context 对象\n  return typeof result === \"object\" && result != null ? result : context;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12",charsets:{cjk:!0}},{frontmatter:{readingShow:"top"},regularPath:"/feat/todo.html",relativePath:"feat/todo.md",key:"v-0fab4a4b",path:"/feat/todo.html",lastUpdated:"2020/7/22 上午10:25:08",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"CSR & SSR",frontmatter:{title:"CSR & SSR",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["CSR & SSR"],readingShow:"top"},regularPath:"/frame/",relativePath:"frame/README.md",key:"v-73897db4",path:"/frame/",headers:[{level:2,title:"admin ui",slug:"admin-ui",normalizedTitle:"admin ui",charIndex:227}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"admin ui",content:"\n\n以下图片来源\n\n * 客户端渲染 CSR（Client Side Rendering）\n\n\n\n * 服务端渲染 SSR（Server Side Rendering）\n\n指将单页应用（SPA）在服务器端渲染成 HTML 片段，发送到浏览器，然后交由浏览器为其绑定状态与事件，成为完全可交互页面的过程\n\n\n\n\n\n\n * 从 0 到 1 教你搭建前端团队的组件系统，进阶高级必备技能\n * 从 0 到 1 教你搭建前端团队的组件系统（高级进阶必备）\n\n# admin ui\n * almasaeed2010/AdminLTE\n * PanJiaChen/vue-element-admin\n * tabler/tabler\n * puikinsh/gentelella\n * akveo/ngx-admin\n * ant-design/ant-design-pro\n * akveo/blur-admin\n * vue-bulma/vue-admin\n * iview/iview-admin\n * creativetimofficial/material-dashboard",normalizedContent:"\n\n以下图片来源\n\n * 客户端渲染 csr（client side rendering）\n\n\n\n * 服务端渲染 ssr（server side rendering）\n\n指将单页应用（spa）在服务器端渲染成 html 片段，发送到浏览器，然后交由浏览器为其绑定状态与事件，成为完全可交互页面的过程\n\n\n\n\n\n\n * 从 0 到 1 教你搭建前端团队的组件系统，进阶高级必备技能\n * 从 0 到 1 教你搭建前端团队的组件系统（高级进阶必备）\n\n# admin ui\n * almasaeed2010/adminlte\n * panjiachen/vue-element-admin\n * tabler/tabler\n * puikinsh/gentelella\n * akveo/ngx-admin\n * ant-design/ant-design-pro\n * akveo/blur-admin\n * vue-bulma/vue-admin\n * iview/iview-admin\n * creativetimofficial/material-dashboard",charsets:{cjk:!0}},{title:"angular1.x的使用记录",frontmatter:{title:"angular1.x的使用记录",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["angular.js"],readingShow:"top"},regularPath:"/frame/angular.html",relativePath:"frame/angular.md",key:"v-0f06b62b",path:"/frame/angular.html",headers:[{level:2,title:"ng 指令",slug:"ng-指令",normalizedTitle:"ng 指令",charIndex:2},{level:3,title:"ng-module",slug:"ng-module",normalizedTitle:"ng-module",charIndex:1351},{level:3,title:"ng-init 用法",slug:"ng-init-用法",normalizedTitle:"ng-init 用法",charIndex:2937},{level:3,title:"ng-repeat 用法",slug:"ng-repeat-用法",normalizedTitle:"ng-repeat 用法",charIndex:3464},{level:3,title:"ng-switch 用法",slug:"ng-switch-用法",normalizedTitle:"ng-switch 用法",charIndex:5659},{level:2,title:"指令",slug:"指令",normalizedTitle:"指令",charIndex:5},{level:3,title:"ng-controller as 用法",slug:"ng-controller-as-用法",normalizedTitle:"ng-controller as 用法",charIndex:7796},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:9694},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:7487},{level:2,title:"from 表单",slug:"from-表单",normalizedTitle:"from 表单",charIndex:10494},{level:3,title:"ng-form 用法",slug:"ng-form-用法",normalizedTitle:"ng-form 用法",charIndex:12070},{level:3,title:"ng-model-options 用法",slug:"ng-model-options-用法",normalizedTitle:"ng-model-options 用法",charIndex:13014},{level:2,title:"angualr 方法",slug:"angualr-方法",normalizedTitle:"angualr 方法",charIndex:13926},{level:2,title:"自定义指令",slug:"自定义指令",normalizedTitle:"自定义指令",charIndex:14952},{level:3,title:"ng-transclude 用法",slug:"ng-transclude-用法",normalizedTitle:"ng-transclude 用法",charIndex:16747},{level:3,title:"Transclude fallback content",slug:"transclude-fallback-content",normalizedTitle:"transclude fallback content",charIndex:17713},{level:3,title:"directives controller 用法",slug:"directives-controller-用法",normalizedTitle:"directives controller 用法",charIndex:19782},{level:3,title:"directive scope &",slug:"directive-scope",normalizedTitle:"directive scope &amp;",charIndex:null},{level:3,title:"directive scope @ =",slug:"directive-scope-2",normalizedTitle:"directive scope @ =",charIndex:23216},{level:2,title:"过滤器(filter)",slug:"过滤器-filter",normalizedTitle:"过滤器(filter)",charIndex:24746},{level:3,title:"filter demo",slug:"filter-demo",normalizedTitle:"filter demo",charIndex:25571},{level:2,title:"angular 服务",slug:"angular-服务",normalizedTitle:"angular 服务",charIndex:27316},{level:3,title:"constant",slug:"constant",normalizedTitle:"constant",charIndex:27396},{level:3,title:"value",slug:"value",normalizedTitle:"value",charIndex:1892},{level:3,title:"decorator",slug:"decorator",normalizedTitle:"decorator",charIndex:27576},{level:3,title:"factory",slug:"factory",normalizedTitle:"factory",charIndex:27409},{level:3,title:"service",slug:"service",normalizedTitle:"service",charIndex:1872},{level:3,title:"provider",slug:"provider",normalizedTitle:"provider",charIndex:27343},{level:2,title:"扩展小知识",slug:"扩展小知识",normalizedTitle:"扩展小知识",charIndex:31504},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:32259}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"ng 指令 ng-module ng-init 用法 ng-repeat 用法 ng-switch 用法 指令 ng-controller as 用法 事件 样式 from 表单 ng-form 用法 ng-model-options 用法 angualr 方法 自定义指令 ng-transclude 用法 Transclude fallback content directives controller 用法 directive scope & directive scope @ = 过滤器(filter) filter demo angular 服务 constant value decorator factory service provider 扩展小知识 相关链接",content:'# ng 指令\n * 描述：ng-?指令表示 angular 框架对元素的操作，常见的有如下几种：\n\nng-app  # 定义应用程序的根元素,若不为""时需在js脚本中初始化。\nng-bind  # 把应用程序变量绑定到某个元素的 innerHTML。\nng-controller  # 定义应用的控制器对象，可以控制的服务有\n# $scope,$rootScope,$location,$http,$timeout,$interval,\n# 其中$scope.$watch(\'lastName\', function() {)); # 可以监控变量的变化\n\n$rootScope # 全局作用域，在任一controller之中都能够使用\n$scope # $scope都是$rootScope的子作用域\n$state # 路由中的一项服务\n$stateParams # 处理url的接收参数\n\nng-init  # 定义应用的初始化值,一般为angular变量值\n\nng-hide # 隐藏或显示 HTML 元素\nng-show # 显示或隐藏 HTML 元素\n\nng-href # 为<a>元素指定链接\n\nng-if # 如果条件为 false 移除 HTML 元素\nng-repeat # 定义集合中每项数据的模板,该参数还常与ng-click、ng-class配合使用\n  $index, $first, $middle, $last, $even, $odd\n\nng-switch # 规定显示或隐藏子元素的条件。常与ng-switch-when配合使用，类似于switch和case\n\nng-include # 在应用中包含 HTML 文件，如<div ng-include="\'myFile.htm\'"></div>,但不能执行js代码\n\nng-non-bindable # 规定元素或子元素不能绑定数据,\n# 如<p ng-non-bindable>不使用 AngularJS: {{ 5+5 }}</p>显示的是“5+5”而不是“10”\n\nng-open # 指定元素的 open 属性,可设值为true|false,常与details等具展开效果的元素配合使用\n\t<details ng-open=true>\n\t\t<summary>学的不仅是技术，更是梦想！</summary>\n\t\t<p> - 菜鸟教程</p>\n\t</details>\n\nng-src # 指定 <img> 元素的 src 属性\nng-srcset # 指定 <img> 元素的 srcset 属性。H5的新属性，允许输入多张图片地址以匹配不同w像素值宽度的容器\n\t<img ng-src="source.jpg" width="100%" ng-srcset="source_400.jpg 400w, source_600.jpg 600w, source_1280.jpg 1280w">\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n# ng-module\nvar myFilterModule = angular.module("myFilterApp", []);\n\n// configure the module.\n// in this example we will create a greeting filter\nmyFilterModule.filter("greet", function() {\n  return function(name) {\n    return "Hello, " + name + "!";\n  };\n});\n\nvar myApp = angular.module("myApp", ["myFilterApp"]);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n<div ng-app="myApp">\n  <div>\n    {{ \'World\' | greet }}\n  </div>\n</div>\n\n\n1\n2\n3\n4\n5\n<div ng-controller="XmplController">\n  {{ greeting }}\n</div>\n\n<script>\n  angular\n    .module("xmpl.service", [])\n\n    .value("greeter", {\n      salutation: "Hello",\n      localize: function(localization) {\n        this.salutation = localization.salutation;\n      },\n      greet: function(name) {\n        return this.salutation + " " + name + "!";\n      }\n    })\n\n    .value("user", {\n      load: function(name) {\n        this.name = name;\n      }\n    });\n\n  angular.module("xmpl.directive", []);\n\n  angular.module("xmpl.filter", []);\n\n  angular\n    .module("xmpl", ["xmpl.service", "xmpl.directive", "xmpl.filter"])\n\n    .run(function(greeter, user) {\n      // This is effectively part of the main method initialization code\n      greeter.localize({\n        salutation: "Bonjour"\n      });\n      user.load("World");\n    })\n\n    .controller("XmplController", [\n      "$scope",\n      "greeter",\n      "user",\n      function($scope, greeter, user) {\n        $scope.greeting = greeter.greet(user.name);\n      }\n    ]);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n# ng-init 用法\n<script>\n  angular.module(\'initExample\', [])\n    .controller(\'ExampleController\', [\'$scope\', function($scope) {\n      $scope.list = [[\'a\', \'b\'], [\'c\', \'d\']];\n    }]);\n<\/script>\n\n<div ng-controller="ExampleController">\n  <div ng-repeat="innerList in list" ng-init="outerIndex = $index">\n    <div ng-repeat="value in innerList" ng-init="innerIndex = $index">\n       <span class="example-init">list[ {{outerIndex}} ][ {{innerIndex}} ] = {{value}};</span>\n    </div>\n  </div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# ng-repeat 用法\n<div ng-controller="repeatController">\n  I have {{friends.length}} friends. They are:\n  <input\n    type="search"\n    ng-model="q"\n    placeholder="filter friends..."\n    aria-label="filter friends"\n  />\n  <ul class="example-animate-container">\n    <li\n      class="animate-repeat"\n      ng-repeat="friend in friends | filter:q as results track by friend.name"\n    >\n      [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.\n    </li>\n    <li class="animate-repeat" ng-if="results.length === 0">\n      <strong>No results found...</strong>\n    </li>\n  </ul>\n</div>\n\n<style media="screen">\n  .example-animate-container {\n    background: white;\n    border: 1px solid black;\n    list-style: none;\n    margin: 0;\n    padding: 0 10px;\n  }\n\n  .animate-repeat {\n    line-height: 30px;\n    list-style: none;\n    box-sizing: border-box;\n  }\n\n  .animate-repeat.ng-move,\n  .animate-repeat.ng-enter,\n  .animate-repeat.ng-leave {\n    transition: all linear 0.5s;\n  }\n\n  .animate-repeat.ng-leave.ng-leave-active,\n  .animate-repeat.ng-move,\n  .animate-repeat.ng-enter {\n    opacity: 0;\n    max-height: 0;\n  }\n\n  .animate-repeat.ng-leave,\n  .animate-repeat.ng-move.ng-move-active,\n  .animate-repeat.ng-enter.ng-enter-active {\n    opacity: 1;\n    max-height: 30px;\n  }\n</style>\n\n<script>\n  angular\n    .module("ngRepeat", ["ngAnimate"])\n    .controller("repeatController", function($scope) {\n      $scope.friends = [\n        { name: "John", age: 25, gender: "boy" },\n        { name: "Jessie", age: 30, gender: "girl" },\n        { name: "Johanna", age: 28, gender: "girl" },\n        { name: "Joy", age: 15, gender: "girl" },\n        { name: "Mary", age: 28, gender: "girl" },\n        { name: "Peter", age: 95, gender: "boy" },\n        { name: "Sebastian", age: 50, gender: "boy" },\n        { name: "Erika", age: 27, gender: "girl" },\n        { name: "Patrick", age: 40, gender: "boy" },\n        { name: "Samantha", age: 60, gender: "girl" }\n      ];\n    });\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n# ng-switch 用法\n<div ng-controller="ExampleController">\n  <select ng-model="selection" ng-options="item for item in items"> </select>\n  <code>selection={{selection}}</code>\n  <hr />\n  <div class="animate-switch-container" ng-switch on="selection">\n    <div\n      class="animate-switch"\n      ng-switch-when="settings|options"\n      ng-switch-when-separator="|"\n    >\n      Settings Div\n    </div>\n    <div class="animate-switch" ng-switch-when="home">Home Span</div>\n    <div class="animate-switch" ng-switch-default>default</div>\n  </div>\n</div>\n\n<style media="screen">\n  .animate-switch-container {\n    position: relative;\n    background: white;\n    border: 1px solid black;\n    height: 40px;\n    overflow: hidden;\n  }\n\n  .animate-switch {\n    padding: 10px;\n  }\n\n  .animate-switch.ng-animate {\n    transition: all cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.5s;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n\n  .animate-switch.ng-leave.ng-leave-active,\n  .animate-switch.ng-enter {\n    top: -50px;\n  }\n  .animate-switch.ng-leave,\n  .animate-switch.ng-enter.ng-enter-active {\n    top: 0;\n  }\n</style>\n\n<script>\n  angular\n    .module("switchExample", ["ngAnimate"])\n    .controller("ExampleController", [\n      "$scope",\n      function($scope) {\n        $scope.items = ["settings", "home", "options", "other"];\n        $scope.selection = $scope.items[0];\n      }\n    ]);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n# 指令\nng-app # 相当于一个入，告诉angular来管理ng-app指令所在的元素及其子元素。\nng-controller # 指定了一个控制来管理页面的数据模型/行为模型。\nng-model # 主要是用来进行双向数据绑定。\nng-click # 类似于onclick,指定一个方法就能运行。\n\nng-repeat # 渲染数组中的元素。\nng-bind # 为了解决表达式闪烁问题；只能使用在有双标签的元素上。\nng-cloak # 利用了anuglar加载后会移动类样式名为ng-cloak的特性。\nng-bind-html\n\nng-show/ng-hide # 控制页面元素的显示与否,需要提供一个布尔值。\nng-if # 类似于ng-show,区别是ng-if会彻底删除元素。\nng-switch:ng-switch-when\n\nng-class:\n   多选一：<div ng-class="{\'A\':\'classA\',\'B\':classB}["A"]"></div>\n   多选多：<div ng-class="{\'classA\':布尔值,\'classB\':布尔值}"></div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# ng-controller as 用法\n<div id="ctrl-as-exmpl" ng-controller="SettingsController1 as settings">\n  <label>Name: <input type="text" ng-model="settings.name"/></label>\n  <button ng-click="settings.greet()">greet</button><br />\n  Contact:\n  <ul>\n    <li ng-repeat="contact in settings.contacts">\n      <select\n        ng-model="contact.type"\n        aria-label="Contact method"\n        id="select_{{$index}}"\n      >\n        <option>phone</option>\n        <option>email</option>\n      </select>\n      <input\n        type="text"\n        ng-model="contact.value"\n        aria-labelledby="select_{{$index}}"\n      />\n      <button ng-click="settings.clearContact(contact)">clear</button>\n      <button ng-click="settings.removeContact(contact)" aria-label="Remove">\n        X\n      </button>\n    </li>\n    <li><button ng-click="settings.addContact()">add</button></li>\n  </ul>\n</div>\n\n<script>\n  angular\n    .module("controllerAsExample", [])\n    .controller("SettingsController1", SettingsController1);\n\n  function SettingsController1() {\n    this.name = "John Smith";\n    this.contacts = [\n      { type: "phone", value: "408 555 1212" },\n      { type: "email", value: "john.smith@example.org" }\n    ];\n  }\n\n  SettingsController1.prototype.greet = function() {\n    alert(this.name);\n  };\n\n  SettingsController1.prototype.addContact = function() {\n    this.contacts.push({ type: "email", value: "yourname@example.org" });\n  };\n\n  SettingsController1.prototype.removeContact = function(contactToRemove) {\n    var index = this.contacts.indexOf(contactToRemove);\n    this.contacts.splice(index, 1);\n  };\n\n  SettingsController1.prototype.clearContact = function(contact) {\n    contact.type = "phone";\n    contact.value = "";\n  };\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n# 事件\nng-copy # 用户触发拷贝事件时，规定拷贝事件的行为\nng-cut # 用户触发剪切事件时，规定剪切事件的行为\nng-paste # 用户触发粘贴事件时，规定粘贴事件的行为\n\nng-click # 规定click 事件的行为\nng-dblclick # 用户触发双击事件时，规定双击事件的行为\n\nng-blur # 规定 blur 事件的行为\nng-focus # 规定focus焦点事件的行为\n\nng-keydown # 规定按下按键事件的行为\nng-keypress # 规定按下按键事件的行为,通常情况下会用ng-keydown\nng-keyup # 规定松开按键事件的行为\n\nng-mousedown # 规定按下鼠标按键时的行为\nng-mouseenter # 规定鼠标指针穿过元素时的行为\nng-mouseleave # 规定鼠标指针离开元素时的行为\nng-mousemove # 规定鼠标指针在指定的元素中移动时的行为\nng-mouseover # 规定鼠标指针位于元素上方时的行为\nng-mouseup # 规定当在元素上松开鼠标按钮时的行为\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# 样式\nng-class # 指定 HTML 元素使用的 CSS 类\nng-class-even # 类似 ng-class，但只在偶数行起作用,常用table/tr/td、ul/li等元素配合使用\nng-class-odd # 类似 ng-class，但只在奇数行起作用\n\nng-style # 指定元素的 style 属性,可在控制器中为ng-style所在变量赋值\n\n*ng-cloak # 在应用正要加载时防止其闪烁。如<p ng-cloak>{{ 5 + 5 }}</p>\n\n\n1\n2\n3\n4\n5\n6\n7\n# from 表单\nng-submit # 规定submit 事件的行为\nng-value # 规定 input 元素的值\nng-model # 绑定 HTML 控制器的值到应用数据,即angular变量值,变量值可以是字符串、对象甚至是对象属性\n\nng-selected # 指定元素的 selected 属性,表示当前选择项,常需与select元素配合使用，类似于ng-checked\nng-readonly # 指定元素的 readonly 属性\n\nng-disabled # 可设为true|false时，规定一个元素是否被禁用,但不会隐藏\n\nng-change # 规定在内容改变时要执行的表达式\nng-checked # 用于设置复选框(checkbox)或单选按钮(radio)的 checked 属性\n\nng-list # 输出时将文本转换为列表 (数组)，输入文本时用逗号隔开\n\t<input ng-model="customers" ng-list/>\n\t<pre>{{customers}}</pre>\n\nng-model-options # 规定如何更新模型,option\t指定了绑定数据的规则，规则如下:\n\t{updateOn: \'event\'} # 规则指定事件发生后绑定数据,如ng-model-options="{updateOn: \'blur\'}"\n\t{debounce : 1000} # 规定等待多少毫秒后绑定数据\n\t{allowInvalid : true|false} # 规定是否需要验证后绑定数据\n\t{getterSetter : true|false} # 规定是否作为 getters/setters 绑定到模型\n\t{timezone : \'0100\'} # 规则是否使用时区\n\nng-options:\n在 <select> 下拉列中指定 <options>,\n如<select ng-model="selectedName" ng-options="item for item in names"></select>\n\t数据格式为字符串数组["",""] 使用x for x in names\n\t数据格式为单独的对象{"a":1,"b":2} 使用x for (x,y) in names\n\t数据格式为对象数组[{},{}] 使用x.attr for x in names\n\n<option ng-repeat="x in address">{{x}}</option>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n * form 表单的系统检验指令\n\n$error.required # 唯一值验证\n$error.email # 文本输入内置电子邮件验证。\n$error.number # 带有数量验证的文本输入。也可以有最小和最大值的附加属性。\n$error.date # 带有输入日期文本输入。\n$error.url # 带有输入验证的URL文本输入。\n$error.minlength # 参数范围需从input中ng-minlength设置\n$error.maxlength # 参数范围需从input中ng-maxlength设置\n$error.pattern # 正则表达式需从input中ng-pattern设置\n$dirty # 表单有填写记录\n$pristine # 表单没有填写记录\n$valid # 字段内容合法的,如formname.$valid\n$invalid # 字段内容是非法的\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# ng-form 用法\n<form name="myForm" ng-controller="FormController" class="my-form">\n  userType: <input name="input" ng-model="userType" required />\n  <span class="error" ng-show="myForm.input.$error.required">Required!</span\n  ><br />\n  <code>userType = {{userType}}</code><br />\n  <code>myForm.input.$valid = {{myForm.input.$valid}}</code><br />\n  <code>myForm.input.$error = {{myForm.input.$error}}</code><br />\n  <code>myForm.$valid = {{myForm.$valid}}</code><br />\n  <code>myForm.$error.required = {{!!myForm.$error.required}}</code><br />\n</form>\n\n<style>\n  .my-form {\n    transition: all linear 0.5s;\n    background: transparent;\n  }\n  .my-form.ng-invalid {\n    background: red;\n  }\n</style>\n\n<script>\n  angular.module("formExample", []).controller("FormController", [\n    "$scope",\n    function($scope) {\n      $scope.userType = "guest";\n    }\n  ]);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# ng-model-options 用法\n<div ng-controller="ExampleController">\n  <form name="userForm">\n    <label>\n      Name:\n      <input\n        type="text"\n        name="userName"\n        ng-model="user.name"\n        ng-model-options="{ updateOn: \'blur\' }"\n        ng-keyup="cancel($event)"\n      /> </label\n    ><br />\n    <label>\n      Other data:\n      <input type="text" ng-model="user.data" /> </label\n    ><br />\n  </form>\n  <pre>user.name = <span ng-bind="user.name"></span></pre>\n</div>\n\n<script>\n  angular.module("optionsExample", []).controller("ExampleController", [\n    "$scope",\n    function($scope) {\n      $scope.user = { name: "say", data: "" };\n\n      $scope.cancel = function(e) {\n        if (e.keyCode === 27) {\n          $scope.userForm.userName.$rollbackViewValue();\n        }\n      };\n    }\n  ]);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# angualr 方法\nangular.isArray()\t# 如果引用的是数组返回 true\nangular.isDate()\t# 如果引用的是日期返回 true\nangular.isDefined()\t# 如果引用的已定义返回 true\nangular.isElement()\t# 如果引用的是 DOM 元素返回 true\nangular.isFunction()\t# 如果引用的是函数返回 true\nangular.isNumber()\t# 如果引用的是数字返回 true,如果输入框是input标签，要检测输入框内容是否为数字，则使用!isNaN($scope.myInput);\nangular.isObject()\t# 如果引用的是对象返回 true\nangular.isString()\t# 如果引用的是字符串返回 true\nangular.isUndefined()\t# 如果引用的未定义返回 true\nangular.equals(a,b)\t# 如果两个对象相等返回 true\n\n*angular.fromJson()\t# 反序列化 JSON 字符串\n*angular.toJson()\t# 序列化 JSON 字符串\n\nangular.lowercase()\t# 将字符串转换为小写\nangular.uppercase()\t# 将字符串转换为大写\n\nangular.copy()\t# 数组或对象深度拷贝\n\n*angular.forEach()\t# 对象或数组的迭代函数\n\nvar objs = [{a: 1}, {a: 2}];\nangular.forEach(objs, function(data, index, array) {\n\t//data等价于array[index]\n\tconsole.log(data.a + \'=\' + array[index].a);\n});\n\nvar objs = {"a":1,"b":2}\nangular.forEach(objs, function(data, index, array) {\n\t//1 "a" {a: 1, b: 2}\n\tconsole.log(data,index,array);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n# 自定义指令\n-  template:\n指定了一个字符，最终会被加入自定义指令所有标签的innerHTML位置\n\n-  templateUrl:\n    + 指定了一个文件路径，最终angular会发一个异步请求\n      把文件内容加入到自定义指令所在标签的innerHTML位置。\n    + 也可以指定一个script标签的id,`templateUrl:\'id值\'` ,\n      会将这个script标签中的内容以字符串的形式加入到页面，\n      需要更改script标签中的type属性：type="text/ng-template"\n\n- replace:告诉angular,用template对应的字符串替换自定义指令所在的标签。\n\n- restrict:限制自定义指令的使用方式：\n    +\'A\':attribue :需要以属性的形式书写自定义指令。\'<div my-zhiling></div>\'\n    +\'C\':class :以类样式名的形式来书指令。   \'<div class="my-zhiling"></div>\'\n    +\'E\':element:以自定义标签的形式来书写指令 \'<my-zhiling></my-zhiling>\'\n    +\'M\':comment:以注释的形式来书写指令  \x3c!-- directive: my-zhiling --\x3e\n\n- controller：控制器里的数据在多个实例中公用\n\n- transclude:需要提供一个布尔，为true会把自定义指令\n    所在标签的innerHTML插入到模板中拥有ng-transclude指令的元素的innerHTML位置。\n    *注意：不能够与replace共用(指的是transclude为true时，replace不能为true)*\n\n- scope:属性\n    第一种写法：`scope:{aaa:\'@myclass\'}` 可以获得自定义指令所在标签中名为myclass的属性值\n    第二种写法：`scope:{myclass:\'@\'}` //第一种的简写方式;\n\n    `@` : 接收外部传入的字符串\n    `=` : 接收外部传入的变量\n    `&` : 将内部的信息通过function函数传递给外部使用\n\n- link：这个属性指向的是function(scope,element,attributes,controllers),\n有三个参数\n    scope: 这里的scope下的属性值只能用在模板中, 一定要与控制器中$scope的使用范围区分\n    element: 自定义指令所在标签的jqLite对象\n    attributes: 是一个object对象，通过它可以获取所有自定义指令所在标签\n    controllers: 控制器，与require一起使用\n\nangular.module(\'docsTabsExample\', [])\n.directive(\'myPane\', function() {\n  return {\n    require: [\'^^myTabs\', \'ngModel\'],\n    restrict: \'E\',\n    transclude: true,\n    scope: {\n      title: \'@\'\n    },\n    link: function(scope, element, attrs, controllers) {\n      var tabsCtrl = controllers[0],\n          modelCtrl = controllers[1];\n\n      tabsCtrl.addPane(scope);\n    },\n    templateUrl: \'my-pane.html\'\n  };\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n# ng-transclude 用法\n<script>\n  angular\n    .module("transcludeExample", [])\n    .directive("pane", function() {\n      return {\n        restrict: "E",\n        transclude: true,\n        scope: { title: "@" },\n        template:\n          \'<div style="border: 1px solid black;">\' +\n          \'<div style="background-color: gray">{{title}}</div>\' +\n          "<ng-transclude></ng-transclude>" +\n          "</div>"\n      };\n    })\n    .controller("ExampleController", [\n      "$scope",\n      function($scope) {\n        $scope.title = "Lorem Ipsum";\n        $scope.text =\n          "Neque porro quisquam est qui dolorem ipsum quia dolor...";\n      }\n    ]);\n<\/script>\n\n<div ng-controller="ExampleController">\n  <input ng-model="title" aria-label="title" /> <br />\n  <textarea ng-model="text" aria-label="text"></textarea> <br />\n  <pane title="{{title}}"><span>{{text}}</span></pane>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# Transclude fallback content\n<script>\n  angular\n    .module("transcludeFallbackContentExample", [])\n    .directive("myButton", function() {\n      return {\n        restrict: "E",\n        transclude: true,\n        scope: true,\n        template:\n          \'<button style="cursor: pointer;">\' +\n          "<ng-transclude>" +\n          \'<b style="color: red;">Button1</b>\' +\n          "</ng-transclude>" +\n          "</button>"\n      };\n    });\n<\/script>\n\n\x3c!-- fallback button content --\x3e\n<my-button id="fallback"></my-button>\n\x3c!-- modified button content --\x3e\n<my-button id="modified">\n  <i style="color: green;">Button2</i>\n</my-button>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * Multi-slot transclusion\n\n<style>\n  .title,\n  .footer {\n    background-color: gray;\n  }\n</style>\n<div ng-controller="ExampleController">\n  <input ng-model="title" aria-label="title" /> <br />\n  <textarea ng-model="text" aria-label="text"></textarea> <br />\n  <pane>\n    <pane-title><a ng-href="{{link}}">{{title}}</a></pane-title>\n    <pane-body><p>{{text}}</p></pane-body>\n  </pane>\n</div>\n\n<script>\n  angular\n    .module("multiSlotTranscludeExample", [])\n    .directive("pane", function() {\n      return {\n        restrict: "E",\n        transclude: {\n          title: "?paneTitle",\n          body: "paneBody",\n          footer: "?paneFooter"\n        },\n        template:\n          \'<div style="border: 1px solid black;">\' +\n          \'<div class="title" ng-transclude="title">Fallback Title</div>\' +\n          \'<div ng-transclude="body"></div>\' +\n          \'<div class="footer" ng-transclude="footer">Fallback Footer</div>\' +\n          "</div>"\n      };\n    })\n    .controller("ExampleController", [\n      "$scope",\n      function($scope) {\n        $scope.title = "Lorem Ipsum";\n        $scope.link = "https://google.com";\n        $scope.text =\n          "Neque porro quisquam est qui dolorem ipsum quia dolor...";\n      }\n    ]);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# directives controller 用法\nangular\n  .module("docsTabsExample", [])\n  .directive("myTabs", function() {\n    return {\n      restrict: "E",\n      transclude: true,\n      scope: {},\n      controller: [\n        "$scope",\n        function MyTabsController($scope) {\n          var panes = ($scope.panes = []);\n          // title在多个实例中公用\n          $scope.title = "controller tab panel";\n          $scope.select = function(pane) {\n            angular.forEach(panes, function(pane) {\n              pane.selected = false;\n            });\n            pane.selected = true;\n          };\n\n          this.addPane = function(pane) {\n            if (panes.length === 0) {\n              $scope.select(pane);\n            }\n            panes.push(pane);\n          };\n        }\n      ],\n      templateUrl: "my-tabs.html"\n    };\n  })\n  .directive("myPane", function() {\n    return {\n      require: "^^myTabs",\n      restrict: "E",\n      transclude: true,\n      scope: {\n        title: "@"\n      },\n      link: function(scope, element, attrs, tabsCtrl) {\n        tabsCtrl.addPane(scope);\n      },\n      templateUrl: "my-pane.html"\n    };\n  });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n\x3c!-- index.html --\x3e\n<my-tabs>\n  <my-pane title="Hello">\n    <p>Lorem ipsum dolor sit amet</p>\n  </my-pane>\n  <my-pane title="World">\n    <em>Mauris elementum elementum enim at suscipit.</em>\n    <p><a href ng-click="i = i + 1">counter: {{i || 0}}</a></p>\n  </my-pane>\n</my-tabs>\n<p>-------------------------</p>\n<my-tabs>\n  <my-pane title="Angular">\n    <p>Lorem ipsum</p>\n  </my-pane>\n  <my-pane title="Well">\n    <em>Mauris elementum .</em>\n    <p><a href ng-click="i = i + 1">counter: {{i || 0}}</a></p>\n  </my-pane>\n</my-tabs>\n\n\x3c!-- my-tab.html --\x3e\n<div class="tabbable">\n  <div>{{title}}</div>\n  <ul class="nav nav-tabs">\n    <li ng-repeat="pane in panes" ng-class="{active:pane.selected}">\n      <a href="" ng-click="select(pane)">{{pane.title}}</a>\n    </li>\n  </ul>\n  <div class="tab-content" ng-transclude></div>\n</div>\n\n\x3c!-- my-pane.html --\x3e\n<div class="tab-pane" ng-show="selected">\n  <h4>{{title}}</h4>\n  <div ng-transclude></div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n# directive scope &\nangular\n  .module("docsIsoFnBindExample", [])\n  .controller("Controller", [\n    "$scope",\n    "$timeout",\n    function($scope, $timeout) {\n      $scope.name = "Tobias";\n      $scope.message = "";\n      $scope.hideDialog = function(message) {\n        $scope.message = message;\n        $scope.dialogIsHidden = true;\n        $timeout(function() {\n          $scope.message = "";\n          $scope.dialogIsHidden = false;\n        }, 2000);\n      };\n    }\n  ])\n  .directive("myDialog", function() {\n    return {\n      restrict: "E",\n      transclude: true,\n      scope: { close: "&onClose" },\n      templateUrl: "my-dialog-close.html"\n    };\n  });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# index.html\n<div ng-controller="Controller">\n  {{message}}\n  <my-dialog ng-hide="dialogIsHidden" on-close="hideDialog(message)">\n    Check out the contents, {{name}}!\n  </my-dialog>\n</div>\n\n# my-dialog-close.html\n<div class="alert">\n  <a href class="close" ng-click="close({message: \'closing for now\'})"\n    >&times;</a\n  >\n  <div ng-transclude></div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# directive scope @ =\n// script.js\n(function(angular) {\n  "use strict";\n  angular\n    .module("docsIsolationExample", [])\n    .controller("Controller", [\n      "$scope",\n      function($scope) {\n        $scope.naomi = { name: "Naomi", address: "1600 Amphitheatre" };\n        $scope.vojta = { name: "Vojta", address: "3456 Somewhere Else" };\n      }\n    ])\n    .directive("myCustomer", function() {\n      return {\n        restrict: "E",\n        scope: {\n          customerInfo: "=info",\n          customVajta: "@info"\n        },\n        templateUrl: "my-customer-plus-vojta.html"\n      };\n    });\n})(window.angular);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\x3c!-- my-customer-plus-vojta.html --\x3e\nName: {{customerInfo.name}} Address: {{customerInfo.address}}\n<hr />\nName: {{vojta.name}} Address: {{vojta.address}}\n<hr />\nName: {{customerInfo}}\n\n<hr />\nName: {{customVajta}}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\x3c!-- index.html --\x3e\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Example - example-directive-isolate-2-production</title>\n    <script src="//code.angularjs.org/1.7.7/angular.min.js"><\/script>\n    <script src="script.js"><\/script>\n  </head>\n  <body ng-app="docsIsolationExample">\n    <div ng-controller="Controller">\n      <p>--------------naomi---------------</p>\n      <my-customer info="naomi"></my-customer>\n      <p>--------------vojta---------------</p>\n      <my-customer info="aaaa"></my-customer>\n    </div>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 过滤器(filter)\n * date : 格式化显示数据\n\n\x3c!-- 需要传递参数告诉它，要按照我们想要的格式去显示\n        yyyy 表示年\n        MM 表示月\n        dd 表示日\n        HH 表示小时\n        mm 表示分钟,\n        ss 表示秒数\n    --\x3e\n<p>{{9838232323 | date :\'yyyy年MM月dd日 HH:mm:ss\'}}</p>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * orderBy: 对我们数据进行排序\n   \n   \n * 一般和 ng-repeat 一起使用，第一个参数，是个字符串： 字符串前加+或什么都不写时，会按照所对应的数据的属性正向排序，加上-就是逆向排序;<li ng-repeat="item in data |orderBy:\'+id\'"></li>\n   \n   \n * filter : 也需要一个参数\n   \n    * 可以传递一个布尔值，或者字符串，angular 进根据它对数据进行全局查找\n    * 也可以传递一个对象，angular 会按照对象的属性到数据中精确查找对应的属性。\n   \n   \n\n描述：过滤器\nuppercase:格式化字符串为大写\nlowercase:格式化字符串为小写\ncurrency:格式化为货币符号\nlimitTo　: 正数，表示从头开始截取；负数表示从尾巴开始截取\nnumber : 格式化为保留小数点\ndate : 格式化为时间\norderBy:"?":某属性按从小到大排序 ( orderBy:\'-id\' , id 降序排列   )  ( orderBy:\'id\',  id 升序排列   )\nfilter:"?":按条件过滤，如filter:{\'name\':\'iphone\'}为查找属性name值为iphone的对象\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# filter demo\n<div ng-app="myApp" ng-controller="myCtrl">\n  <input type="text" ng-model="name" />\n  <span>大写：{{name | uppercase}}</span>\n  <span>小写：{{name | lowercase}}</span>\n  <br />\n  <p>货币符号：{{ 250 | currency:"RMB" }}</p>\n  <p>正数截取4位：{{"1234567890" | limitTo :4}}</p>\n  <p>负数截取4位：{{"1234567890" | limitTo:-4}}</p>\n  <p>保留2位小数点：{{149016.1945000 | number:2}}</p>\n  <p>time转化为时间：{{1490161945000 | date:"yyyy-MM-dd HH:mm:ss"}}</p>\n  <p>排序及按条件筛选：</p>\n  <input type="text" ng-model="inData" />\n  <ul>\n    <li ng-repeat="x in names | orderBy:\'-country\' | filter : inData">\n      {{ x.name + \', \' + x.country }}\n    </li>\n  </ul>\n  <p>自定义过滤器，输入一个数值，得到该值+1结果：</p>\n  <input type="text" ng-model="inDIY" />\n  <p>{{inDIY|addOne}}</p>\n  <p>{{inDIY|addOneFilter}}</p>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\nvar app = angular.module("myApp", []);\napp.controller("myCtrl", function($scope) {\n  $scope.names = [\n    {\n      name: "Jani",\n      country: "Norway"\n    },\n    {\n      name: "Hege",\n      country: "Sweden"\n    },\n    {\n      name: "Kai",\n      country: "Denmark"\n    }\n  ];\n});\n//自定义过滤器\napp.filter("addOne", function() {\n  return function(i) {\n    var result = 0;\n    if (!isNaN(i)) {\n      result = 1 + parseInt(i);\n    }\n    return result;\n  };\n});\n//自定义过滤器带参数\napp.service("addOneService", function() {\n  this.add = function(i) {\n    var result = 0;\n    if (!isNaN(i)) {\n      result = 1 + parseInt(i);\n    }\n    return result;\n  };\n});\napp.filter("addOneFilter", [\n  "addOneService",\n  function(addOneService) {\n    return function(i) {\n      return addOneService.add(i);\n    };\n  }\n]);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n# angular 服务\n * config 允许注入的是provider和constance(常量)\n   \n   \n * run 允许注入的是provider和constant,还可以是factory，service，value\n   \n   \n * angular.run 和 angular.config 有什么不同？config--\x3erun--\x3ecompile/link\n   \n   \n\n# constant\n * constant: 用于定义常量，一旦定义就不能被改变。可以被注入到任何地方，但是不能被装饰器(decorator)装饰\n\napp.constant("APP_KEY", "a1s2d3f4");\n\n\n1\n# value\n * value： 用来定义值。但与 constant 的区别是：可以被修改，可以被 decorator 装饰，不能被注入到 config 中\n\napp.value("version", "1.0");\n\n\n1\n# decorator\n * decorator: 用来装饰其他 provider 的，不过 constant 除外\n\nvar app = angular.module("myApp", []);\napp.value("version", "1.0");\napp.decorator("version", function($delegate) {\n  return $delegate + ".1";\n});\n\napp.service("myService", function() {\n  this.setA = function() {};\n  this.getA = function() {};\n  this.foo = function() {};\n});\n// 装饰myService\napp.decorator("myService", function($delegate) {\n  // $delegate 代表实际上的 service 实例\n  $delegate.greet = function() {\n    return "Hello, I am a new function of \'myService\'";\n  };\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# factory\n * factory: 需要返回一个包含数据，方法的对象\n\n// 创建\nangular.module("myApp.services").factory("User", function($http) {\n  // factory的名字和注入的方法\n  var url = "http://localhost:3000";\n  //把我们定义的方法和数据都放到一个对象中，并且返回这个对象，这就是factory\n  var service = {\n    user: {},\n    setName: function(newName) {\n      service.user["name"] = newName;\n    },\n    save: function() {\n      return $http.post(url + "/users", {\n        user: service.user\n      });\n    }\n  };\n  return service;\n});\n\n// 调用\n// 注意：需要使用.config()来配置service的时候不能使用factory的方法\nangular.module("myApp").controller("MainCtrl", function($scope, User) {\n  //User就是factory的名字\n  //我们将User这个factory中的一个叫做save()的function赋给我们controller中的变量\n  $scope.saveUser = User.save;\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# service\n * service\n\n// 创建\nangular.module("myApp.services").service("User", function($http) {\n  // 在这里注入我们需要的服务\n  var self = this;\n  // 由于service()是通过构造函数创建的，\n  // 那么service()中的function和data都要以this.data和this.function的方式进行声明\n  // service()方法会持有构造函数创建的对象\n  this.user = {};\n  this.url = "http://localhost:3000";\n  this.setName = function(newName) {\n    self.user["name"] = newName;\n  };\n  this.save = function() {\n    return $http.post(self.url + "/users", {\n      user: self.user\n    });\n  };\n});\n\n// 调用\n// 注意：需要使用.config()来配置service的时候不能使用service的方法\nangular.module("myApp").controller("MainCtrl", function($scope, User) {\n  //注入名字为User的service\n  //用User中名字叫做的save的function给本地变量赋值\n  $scope.saveUser = User.save;\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# provider\n * provider: 创建 provider，与 factory、service 不同的是，provider 需要使用 this.$get 来返回方法和数据, 可以在 config 中被调用和配置\n\nvar app = angular.module("myApp", []);\n\n// 在.config()中配置provider\napp.config(function (myFirstProvider) {\n  myFirstProvider.name = "zhangsan";\n});\n\n// 创建\napp.provider("myFirst", function () {\n  this.$get = function () {\n    var that = this;\n    var service = {};\n    service.console = function () {\n      return that.name;\n    }\n    return service;\n  }\n});\n\n// 调用\n// provider 可以在 config 中调用\napp.controller("CartController", ["myFirst", "$scope", function (a, b) {\n  console.log(a.console());\n  b.name = "lisi";\n}]);\n\n--------------\n// other 1\nvar myApp = angular.module(\'app\',[]);\n\nmyApp.provider(\'HelloAngular\',function(){\n\treturn {\n\t\t$get:function(){\n\t\t\tvar name = \'xiaowang\';\n\t\t\tfunction getName(){\n\t\t\t\treturn name;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tgetName:getName\n\t\t\t}\n\t\t}\n\t}\n})\n\nmyApp.controller(\'myCtrl\', [\'$scope\',\'HelloAngular\', function($scope,HelloAngular){\n\t$scope.name = HelloAngular.getName();\n}])\n\n-------------\n// other 2\nvar myApp = angular.module(\'app\',[],function($provide){\n\tconsole.log(\'1\');\n\t// 自定义服务\n\t$provide.provider(\'CustomService\',function(){\n\t\tthis.$get = function(){\n\t\t\treturn {\n\t\t\t\tmessage : \'CustomService Message\'\n\t\t\t}\n\t\t}\n\t})\n});\n\nmyApp.controller(\'ctrl\',[\'$scope\',\'CustomService\',function($scope,CustomService){\n\tconsole.log(\'2\');\n\t$scope.name = \'小明\';\n\tconsole.log(CustomService.message)\n}]);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n# 扩展小知识\n * track by $index 解决 ng-repeat 遍历数组时有重复问题\n   \n   \n * 使用$scope.$apply()通过 anuglar 监视数据模型的变化。\n   \n    * setInterval()\n    * setTimeout()\n   \n   \n * $route ,提供一个方法，用于更新路由参数\n   \n    * $route.updateParams({page:2})//需要传入一个对象：就路由中的参数名及新的参数值;\n   \n   \n * 在一个页面里创建多个 ng-app\n   \n   \n\n<div id="A1" ng-app="app1">\n\t<input ng-model="name" type="text" placeholder="请输入姓名">\n\t<p>我的姓名： {{name}}</p>\n</div>\n\n<div id="A2" ng-app="app2">\n\t<input ng-model="age" type="number" placeholder="请输入年龄">\n\t<p>我的年龄: {{age}}</p>\n</div>\n<script type="text/javascript">\n\tvar app1 = angular.module("app1", []); //自动加载\n\tvar app2 = angular.module("app2", []); //手动加载\n\tangular.bootstrap(document.getElementById("A2"), [\'app2\']); // 手动加载2\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 相关链接\n * docs angularjs\n * angularjs1.6.x 实例教程\n * AngularJS 学习笔记\n * AngularStrap\n * learning_angular doc\n * AngularJs 父子级 Controller 传递数据',normalizedContent:'# ng 指令\n * 描述：ng-?指令表示 angular 框架对元素的操作，常见的有如下几种：\n\nng-app  # 定义应用程序的根元素,若不为""时需在js脚本中初始化。\nng-bind  # 把应用程序变量绑定到某个元素的 innerhtml。\nng-controller  # 定义应用的控制器对象，可以控制的服务有\n# $scope,$rootscope,$location,$http,$timeout,$interval,\n# 其中$scope.$watch(\'lastname\', function() {)); # 可以监控变量的变化\n\n$rootscope # 全局作用域，在任一controller之中都能够使用\n$scope # $scope都是$rootscope的子作用域\n$state # 路由中的一项服务\n$stateparams # 处理url的接收参数\n\nng-init  # 定义应用的初始化值,一般为angular变量值\n\nng-hide # 隐藏或显示 html 元素\nng-show # 显示或隐藏 html 元素\n\nng-href # 为<a>元素指定链接\n\nng-if # 如果条件为 false 移除 html 元素\nng-repeat # 定义集合中每项数据的模板,该参数还常与ng-click、ng-class配合使用\n  $index, $first, $middle, $last, $even, $odd\n\nng-switch # 规定显示或隐藏子元素的条件。常与ng-switch-when配合使用，类似于switch和case\n\nng-include # 在应用中包含 html 文件，如<div ng-include="\'myfile.htm\'"></div>,但不能执行js代码\n\nng-non-bindable # 规定元素或子元素不能绑定数据,\n# 如<p ng-non-bindable>不使用 angularjs: {{ 5+5 }}</p>显示的是“5+5”而不是“10”\n\nng-open # 指定元素的 open 属性,可设值为true|false,常与details等具展开效果的元素配合使用\n\t<details ng-open=true>\n\t\t<summary>学的不仅是技术，更是梦想！</summary>\n\t\t<p> - 菜鸟教程</p>\n\t</details>\n\nng-src # 指定 <img> 元素的 src 属性\nng-srcset # 指定 <img> 元素的 srcset 属性。h5的新属性，允许输入多张图片地址以匹配不同w像素值宽度的容器\n\t<img ng-src="source.jpg" width="100%" ng-srcset="source_400.jpg 400w, source_600.jpg 600w, source_1280.jpg 1280w">\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n# ng-module\nvar myfiltermodule = angular.module("myfilterapp", []);\n\n// configure the module.\n// in this example we will create a greeting filter\nmyfiltermodule.filter("greet", function() {\n  return function(name) {\n    return "hello, " + name + "!";\n  };\n});\n\nvar myapp = angular.module("myapp", ["myfilterapp"]);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n<div ng-app="myapp">\n  <div>\n    {{ \'world\' | greet }}\n  </div>\n</div>\n\n\n1\n2\n3\n4\n5\n<div ng-controller="xmplcontroller">\n  {{ greeting }}\n</div>\n\n<script>\n  angular\n    .module("xmpl.service", [])\n\n    .value("greeter", {\n      salutation: "hello",\n      localize: function(localization) {\n        this.salutation = localization.salutation;\n      },\n      greet: function(name) {\n        return this.salutation + " " + name + "!";\n      }\n    })\n\n    .value("user", {\n      load: function(name) {\n        this.name = name;\n      }\n    });\n\n  angular.module("xmpl.directive", []);\n\n  angular.module("xmpl.filter", []);\n\n  angular\n    .module("xmpl", ["xmpl.service", "xmpl.directive", "xmpl.filter"])\n\n    .run(function(greeter, user) {\n      // this is effectively part of the main method initialization code\n      greeter.localize({\n        salutation: "bonjour"\n      });\n      user.load("world");\n    })\n\n    .controller("xmplcontroller", [\n      "$scope",\n      "greeter",\n      "user",\n      function($scope, greeter, user) {\n        $scope.greeting = greeter.greet(user.name);\n      }\n    ]);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n# ng-init 用法\n<script>\n  angular.module(\'initexample\', [])\n    .controller(\'examplecontroller\', [\'$scope\', function($scope) {\n      $scope.list = [[\'a\', \'b\'], [\'c\', \'d\']];\n    }]);\n<\/script>\n\n<div ng-controller="examplecontroller">\n  <div ng-repeat="innerlist in list" ng-init="outerindex = $index">\n    <div ng-repeat="value in innerlist" ng-init="innerindex = $index">\n       <span class="example-init">list[ {{outerindex}} ][ {{innerindex}} ] = {{value}};</span>\n    </div>\n  </div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# ng-repeat 用法\n<div ng-controller="repeatcontroller">\n  i have {{friends.length}} friends. they are:\n  <input\n    type="search"\n    ng-model="q"\n    placeholder="filter friends..."\n    aria-label="filter friends"\n  />\n  <ul class="example-animate-container">\n    <li\n      class="animate-repeat"\n      ng-repeat="friend in friends | filter:q as results track by friend.name"\n    >\n      [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.\n    </li>\n    <li class="animate-repeat" ng-if="results.length === 0">\n      <strong>no results found...</strong>\n    </li>\n  </ul>\n</div>\n\n<style media="screen">\n  .example-animate-container {\n    background: white;\n    border: 1px solid black;\n    list-style: none;\n    margin: 0;\n    padding: 0 10px;\n  }\n\n  .animate-repeat {\n    line-height: 30px;\n    list-style: none;\n    box-sizing: border-box;\n  }\n\n  .animate-repeat.ng-move,\n  .animate-repeat.ng-enter,\n  .animate-repeat.ng-leave {\n    transition: all linear 0.5s;\n  }\n\n  .animate-repeat.ng-leave.ng-leave-active,\n  .animate-repeat.ng-move,\n  .animate-repeat.ng-enter {\n    opacity: 0;\n    max-height: 0;\n  }\n\n  .animate-repeat.ng-leave,\n  .animate-repeat.ng-move.ng-move-active,\n  .animate-repeat.ng-enter.ng-enter-active {\n    opacity: 1;\n    max-height: 30px;\n  }\n</style>\n\n<script>\n  angular\n    .module("ngrepeat", ["nganimate"])\n    .controller("repeatcontroller", function($scope) {\n      $scope.friends = [\n        { name: "john", age: 25, gender: "boy" },\n        { name: "jessie", age: 30, gender: "girl" },\n        { name: "johanna", age: 28, gender: "girl" },\n        { name: "joy", age: 15, gender: "girl" },\n        { name: "mary", age: 28, gender: "girl" },\n        { name: "peter", age: 95, gender: "boy" },\n        { name: "sebastian", age: 50, gender: "boy" },\n        { name: "erika", age: 27, gender: "girl" },\n        { name: "patrick", age: 40, gender: "boy" },\n        { name: "samantha", age: 60, gender: "girl" }\n      ];\n    });\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n# ng-switch 用法\n<div ng-controller="examplecontroller">\n  <select ng-model="selection" ng-options="item for item in items"> </select>\n  <code>selection={{selection}}</code>\n  <hr />\n  <div class="animate-switch-container" ng-switch on="selection">\n    <div\n      class="animate-switch"\n      ng-switch-when="settings|options"\n      ng-switch-when-separator="|"\n    >\n      settings div\n    </div>\n    <div class="animate-switch" ng-switch-when="home">home span</div>\n    <div class="animate-switch" ng-switch-default>default</div>\n  </div>\n</div>\n\n<style media="screen">\n  .animate-switch-container {\n    position: relative;\n    background: white;\n    border: 1px solid black;\n    height: 40px;\n    overflow: hidden;\n  }\n\n  .animate-switch {\n    padding: 10px;\n  }\n\n  .animate-switch.ng-animate {\n    transition: all cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.5s;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n\n  .animate-switch.ng-leave.ng-leave-active,\n  .animate-switch.ng-enter {\n    top: -50px;\n  }\n  .animate-switch.ng-leave,\n  .animate-switch.ng-enter.ng-enter-active {\n    top: 0;\n  }\n</style>\n\n<script>\n  angular\n    .module("switchexample", ["nganimate"])\n    .controller("examplecontroller", [\n      "$scope",\n      function($scope) {\n        $scope.items = ["settings", "home", "options", "other"];\n        $scope.selection = $scope.items[0];\n      }\n    ]);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n# 指令\nng-app # 相当于一个入，告诉angular来管理ng-app指令所在的元素及其子元素。\nng-controller # 指定了一个控制来管理页面的数据模型/行为模型。\nng-model # 主要是用来进行双向数据绑定。\nng-click # 类似于onclick,指定一个方法就能运行。\n\nng-repeat # 渲染数组中的元素。\nng-bind # 为了解决表达式闪烁问题；只能使用在有双标签的元素上。\nng-cloak # 利用了anuglar加载后会移动类样式名为ng-cloak的特性。\nng-bind-html\n\nng-show/ng-hide # 控制页面元素的显示与否,需要提供一个布尔值。\nng-if # 类似于ng-show,区别是ng-if会彻底删除元素。\nng-switch:ng-switch-when\n\nng-class:\n   多选一：<div ng-class="{\'a\':\'classa\',\'b\':classb}["a"]"></div>\n   多选多：<div ng-class="{\'classa\':布尔值,\'classb\':布尔值}"></div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# ng-controller as 用法\n<div id="ctrl-as-exmpl" ng-controller="settingscontroller1 as settings">\n  <label>name: <input type="text" ng-model="settings.name"/></label>\n  <button ng-click="settings.greet()">greet</button><br />\n  contact:\n  <ul>\n    <li ng-repeat="contact in settings.contacts">\n      <select\n        ng-model="contact.type"\n        aria-label="contact method"\n        id="select_{{$index}}"\n      >\n        <option>phone</option>\n        <option>email</option>\n      </select>\n      <input\n        type="text"\n        ng-model="contact.value"\n        aria-labelledby="select_{{$index}}"\n      />\n      <button ng-click="settings.clearcontact(contact)">clear</button>\n      <button ng-click="settings.removecontact(contact)" aria-label="remove">\n        x\n      </button>\n    </li>\n    <li><button ng-click="settings.addcontact()">add</button></li>\n  </ul>\n</div>\n\n<script>\n  angular\n    .module("controllerasexample", [])\n    .controller("settingscontroller1", settingscontroller1);\n\n  function settingscontroller1() {\n    this.name = "john smith";\n    this.contacts = [\n      { type: "phone", value: "408 555 1212" },\n      { type: "email", value: "john.smith@example.org" }\n    ];\n  }\n\n  settingscontroller1.prototype.greet = function() {\n    alert(this.name);\n  };\n\n  settingscontroller1.prototype.addcontact = function() {\n    this.contacts.push({ type: "email", value: "yourname@example.org" });\n  };\n\n  settingscontroller1.prototype.removecontact = function(contacttoremove) {\n    var index = this.contacts.indexof(contacttoremove);\n    this.contacts.splice(index, 1);\n  };\n\n  settingscontroller1.prototype.clearcontact = function(contact) {\n    contact.type = "phone";\n    contact.value = "";\n  };\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n# 事件\nng-copy # 用户触发拷贝事件时，规定拷贝事件的行为\nng-cut # 用户触发剪切事件时，规定剪切事件的行为\nng-paste # 用户触发粘贴事件时，规定粘贴事件的行为\n\nng-click # 规定click 事件的行为\nng-dblclick # 用户触发双击事件时，规定双击事件的行为\n\nng-blur # 规定 blur 事件的行为\nng-focus # 规定focus焦点事件的行为\n\nng-keydown # 规定按下按键事件的行为\nng-keypress # 规定按下按键事件的行为,通常情况下会用ng-keydown\nng-keyup # 规定松开按键事件的行为\n\nng-mousedown # 规定按下鼠标按键时的行为\nng-mouseenter # 规定鼠标指针穿过元素时的行为\nng-mouseleave # 规定鼠标指针离开元素时的行为\nng-mousemove # 规定鼠标指针在指定的元素中移动时的行为\nng-mouseover # 规定鼠标指针位于元素上方时的行为\nng-mouseup # 规定当在元素上松开鼠标按钮时的行为\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# 样式\nng-class # 指定 html 元素使用的 css 类\nng-class-even # 类似 ng-class，但只在偶数行起作用,常用table/tr/td、ul/li等元素配合使用\nng-class-odd # 类似 ng-class，但只在奇数行起作用\n\nng-style # 指定元素的 style 属性,可在控制器中为ng-style所在变量赋值\n\n*ng-cloak # 在应用正要加载时防止其闪烁。如<p ng-cloak>{{ 5 + 5 }}</p>\n\n\n1\n2\n3\n4\n5\n6\n7\n# from 表单\nng-submit # 规定submit 事件的行为\nng-value # 规定 input 元素的值\nng-model # 绑定 html 控制器的值到应用数据,即angular变量值,变量值可以是字符串、对象甚至是对象属性\n\nng-selected # 指定元素的 selected 属性,表示当前选择项,常需与select元素配合使用，类似于ng-checked\nng-readonly # 指定元素的 readonly 属性\n\nng-disabled # 可设为true|false时，规定一个元素是否被禁用,但不会隐藏\n\nng-change # 规定在内容改变时要执行的表达式\nng-checked # 用于设置复选框(checkbox)或单选按钮(radio)的 checked 属性\n\nng-list # 输出时将文本转换为列表 (数组)，输入文本时用逗号隔开\n\t<input ng-model="customers" ng-list/>\n\t<pre>{{customers}}</pre>\n\nng-model-options # 规定如何更新模型,option\t指定了绑定数据的规则，规则如下:\n\t{updateon: \'event\'} # 规则指定事件发生后绑定数据,如ng-model-options="{updateon: \'blur\'}"\n\t{debounce : 1000} # 规定等待多少毫秒后绑定数据\n\t{allowinvalid : true|false} # 规定是否需要验证后绑定数据\n\t{gettersetter : true|false} # 规定是否作为 getters/setters 绑定到模型\n\t{timezone : \'0100\'} # 规则是否使用时区\n\nng-options:\n在 <select> 下拉列中指定 <options>,\n如<select ng-model="selectedname" ng-options="item for item in names"></select>\n\t数据格式为字符串数组["",""] 使用x for x in names\n\t数据格式为单独的对象{"a":1,"b":2} 使用x for (x,y) in names\n\t数据格式为对象数组[{},{}] 使用x.attr for x in names\n\n<option ng-repeat="x in address">{{x}}</option>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n * form 表单的系统检验指令\n\n$error.required # 唯一值验证\n$error.email # 文本输入内置电子邮件验证。\n$error.number # 带有数量验证的文本输入。也可以有最小和最大值的附加属性。\n$error.date # 带有输入日期文本输入。\n$error.url # 带有输入验证的url文本输入。\n$error.minlength # 参数范围需从input中ng-minlength设置\n$error.maxlength # 参数范围需从input中ng-maxlength设置\n$error.pattern # 正则表达式需从input中ng-pattern设置\n$dirty # 表单有填写记录\n$pristine # 表单没有填写记录\n$valid # 字段内容合法的,如formname.$valid\n$invalid # 字段内容是非法的\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# ng-form 用法\n<form name="myform" ng-controller="formcontroller" class="my-form">\n  usertype: <input name="input" ng-model="usertype" required />\n  <span class="error" ng-show="myform.input.$error.required">required!</span\n  ><br />\n  <code>usertype = {{usertype}}</code><br />\n  <code>myform.input.$valid = {{myform.input.$valid}}</code><br />\n  <code>myform.input.$error = {{myform.input.$error}}</code><br />\n  <code>myform.$valid = {{myform.$valid}}</code><br />\n  <code>myform.$error.required = {{!!myform.$error.required}}</code><br />\n</form>\n\n<style>\n  .my-form {\n    transition: all linear 0.5s;\n    background: transparent;\n  }\n  .my-form.ng-invalid {\n    background: red;\n  }\n</style>\n\n<script>\n  angular.module("formexample", []).controller("formcontroller", [\n    "$scope",\n    function($scope) {\n      $scope.usertype = "guest";\n    }\n  ]);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# ng-model-options 用法\n<div ng-controller="examplecontroller">\n  <form name="userform">\n    <label>\n      name:\n      <input\n        type="text"\n        name="username"\n        ng-model="user.name"\n        ng-model-options="{ updateon: \'blur\' }"\n        ng-keyup="cancel($event)"\n      /> </label\n    ><br />\n    <label>\n      other data:\n      <input type="text" ng-model="user.data" /> </label\n    ><br />\n  </form>\n  <pre>user.name = <span ng-bind="user.name"></span></pre>\n</div>\n\n<script>\n  angular.module("optionsexample", []).controller("examplecontroller", [\n    "$scope",\n    function($scope) {\n      $scope.user = { name: "say", data: "" };\n\n      $scope.cancel = function(e) {\n        if (e.keycode === 27) {\n          $scope.userform.username.$rollbackviewvalue();\n        }\n      };\n    }\n  ]);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# angualr 方法\nangular.isarray()\t# 如果引用的是数组返回 true\nangular.isdate()\t# 如果引用的是日期返回 true\nangular.isdefined()\t# 如果引用的已定义返回 true\nangular.iselement()\t# 如果引用的是 dom 元素返回 true\nangular.isfunction()\t# 如果引用的是函数返回 true\nangular.isnumber()\t# 如果引用的是数字返回 true,如果输入框是input标签，要检测输入框内容是否为数字，则使用!isnan($scope.myinput);\nangular.isobject()\t# 如果引用的是对象返回 true\nangular.isstring()\t# 如果引用的是字符串返回 true\nangular.isundefined()\t# 如果引用的未定义返回 true\nangular.equals(a,b)\t# 如果两个对象相等返回 true\n\n*angular.fromjson()\t# 反序列化 json 字符串\n*angular.tojson()\t# 序列化 json 字符串\n\nangular.lowercase()\t# 将字符串转换为小写\nangular.uppercase()\t# 将字符串转换为大写\n\nangular.copy()\t# 数组或对象深度拷贝\n\n*angular.foreach()\t# 对象或数组的迭代函数\n\nvar objs = [{a: 1}, {a: 2}];\nangular.foreach(objs, function(data, index, array) {\n\t//data等价于array[index]\n\tconsole.log(data.a + \'=\' + array[index].a);\n});\n\nvar objs = {"a":1,"b":2}\nangular.foreach(objs, function(data, index, array) {\n\t//1 "a" {a: 1, b: 2}\n\tconsole.log(data,index,array);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n# 自定义指令\n-  template:\n指定了一个字符，最终会被加入自定义指令所有标签的innerhtml位置\n\n-  templateurl:\n    + 指定了一个文件路径，最终angular会发一个异步请求\n      把文件内容加入到自定义指令所在标签的innerhtml位置。\n    + 也可以指定一个script标签的id,`templateurl:\'id值\'` ,\n      会将这个script标签中的内容以字符串的形式加入到页面，\n      需要更改script标签中的type属性：type="text/ng-template"\n\n- replace:告诉angular,用template对应的字符串替换自定义指令所在的标签。\n\n- restrict:限制自定义指令的使用方式：\n    +\'a\':attribue :需要以属性的形式书写自定义指令。\'<div my-zhiling></div>\'\n    +\'c\':class :以类样式名的形式来书指令。   \'<div class="my-zhiling"></div>\'\n    +\'e\':element:以自定义标签的形式来书写指令 \'<my-zhiling></my-zhiling>\'\n    +\'m\':comment:以注释的形式来书写指令  \x3c!-- directive: my-zhiling --\x3e\n\n- controller：控制器里的数据在多个实例中公用\n\n- transclude:需要提供一个布尔，为true会把自定义指令\n    所在标签的innerhtml插入到模板中拥有ng-transclude指令的元素的innerhtml位置。\n    *注意：不能够与replace共用(指的是transclude为true时，replace不能为true)*\n\n- scope:属性\n    第一种写法：`scope:{aaa:\'@myclass\'}` 可以获得自定义指令所在标签中名为myclass的属性值\n    第二种写法：`scope:{myclass:\'@\'}` //第一种的简写方式;\n\n    `@` : 接收外部传入的字符串\n    `=` : 接收外部传入的变量\n    `&` : 将内部的信息通过function函数传递给外部使用\n\n- link：这个属性指向的是function(scope,element,attributes,controllers),\n有三个参数\n    scope: 这里的scope下的属性值只能用在模板中, 一定要与控制器中$scope的使用范围区分\n    element: 自定义指令所在标签的jqlite对象\n    attributes: 是一个object对象，通过它可以获取所有自定义指令所在标签\n    controllers: 控制器，与require一起使用\n\nangular.module(\'docstabsexample\', [])\n.directive(\'mypane\', function() {\n  return {\n    require: [\'^^mytabs\', \'ngmodel\'],\n    restrict: \'e\',\n    transclude: true,\n    scope: {\n      title: \'@\'\n    },\n    link: function(scope, element, attrs, controllers) {\n      var tabsctrl = controllers[0],\n          modelctrl = controllers[1];\n\n      tabsctrl.addpane(scope);\n    },\n    templateurl: \'my-pane.html\'\n  };\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n# ng-transclude 用法\n<script>\n  angular\n    .module("transcludeexample", [])\n    .directive("pane", function() {\n      return {\n        restrict: "e",\n        transclude: true,\n        scope: { title: "@" },\n        template:\n          \'<div style="border: 1px solid black;">\' +\n          \'<div style="background-color: gray">{{title}}</div>\' +\n          "<ng-transclude></ng-transclude>" +\n          "</div>"\n      };\n    })\n    .controller("examplecontroller", [\n      "$scope",\n      function($scope) {\n        $scope.title = "lorem ipsum";\n        $scope.text =\n          "neque porro quisquam est qui dolorem ipsum quia dolor...";\n      }\n    ]);\n<\/script>\n\n<div ng-controller="examplecontroller">\n  <input ng-model="title" aria-label="title" /> <br />\n  <textarea ng-model="text" aria-label="text"></textarea> <br />\n  <pane title="{{title}}"><span>{{text}}</span></pane>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# transclude fallback content\n<script>\n  angular\n    .module("transcludefallbackcontentexample", [])\n    .directive("mybutton", function() {\n      return {\n        restrict: "e",\n        transclude: true,\n        scope: true,\n        template:\n          \'<button style="cursor: pointer;">\' +\n          "<ng-transclude>" +\n          \'<b style="color: red;">button1</b>\' +\n          "</ng-transclude>" +\n          "</button>"\n      };\n    });\n<\/script>\n\n\x3c!-- fallback button content --\x3e\n<my-button id="fallback"></my-button>\n\x3c!-- modified button content --\x3e\n<my-button id="modified">\n  <i style="color: green;">button2</i>\n</my-button>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * multi-slot transclusion\n\n<style>\n  .title,\n  .footer {\n    background-color: gray;\n  }\n</style>\n<div ng-controller="examplecontroller">\n  <input ng-model="title" aria-label="title" /> <br />\n  <textarea ng-model="text" aria-label="text"></textarea> <br />\n  <pane>\n    <pane-title><a ng-href="{{link}}">{{title}}</a></pane-title>\n    <pane-body><p>{{text}}</p></pane-body>\n  </pane>\n</div>\n\n<script>\n  angular\n    .module("multislottranscludeexample", [])\n    .directive("pane", function() {\n      return {\n        restrict: "e",\n        transclude: {\n          title: "?panetitle",\n          body: "panebody",\n          footer: "?panefooter"\n        },\n        template:\n          \'<div style="border: 1px solid black;">\' +\n          \'<div class="title" ng-transclude="title">fallback title</div>\' +\n          \'<div ng-transclude="body"></div>\' +\n          \'<div class="footer" ng-transclude="footer">fallback footer</div>\' +\n          "</div>"\n      };\n    })\n    .controller("examplecontroller", [\n      "$scope",\n      function($scope) {\n        $scope.title = "lorem ipsum";\n        $scope.link = "https://google.com";\n        $scope.text =\n          "neque porro quisquam est qui dolorem ipsum quia dolor...";\n      }\n    ]);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# directives controller 用法\nangular\n  .module("docstabsexample", [])\n  .directive("mytabs", function() {\n    return {\n      restrict: "e",\n      transclude: true,\n      scope: {},\n      controller: [\n        "$scope",\n        function mytabscontroller($scope) {\n          var panes = ($scope.panes = []);\n          // title在多个实例中公用\n          $scope.title = "controller tab panel";\n          $scope.select = function(pane) {\n            angular.foreach(panes, function(pane) {\n              pane.selected = false;\n            });\n            pane.selected = true;\n          };\n\n          this.addpane = function(pane) {\n            if (panes.length === 0) {\n              $scope.select(pane);\n            }\n            panes.push(pane);\n          };\n        }\n      ],\n      templateurl: "my-tabs.html"\n    };\n  })\n  .directive("mypane", function() {\n    return {\n      require: "^^mytabs",\n      restrict: "e",\n      transclude: true,\n      scope: {\n        title: "@"\n      },\n      link: function(scope, element, attrs, tabsctrl) {\n        tabsctrl.addpane(scope);\n      },\n      templateurl: "my-pane.html"\n    };\n  });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n\x3c!-- index.html --\x3e\n<my-tabs>\n  <my-pane title="hello">\n    <p>lorem ipsum dolor sit amet</p>\n  </my-pane>\n  <my-pane title="world">\n    <em>mauris elementum elementum enim at suscipit.</em>\n    <p><a href ng-click="i = i + 1">counter: {{i || 0}}</a></p>\n  </my-pane>\n</my-tabs>\n<p>-------------------------</p>\n<my-tabs>\n  <my-pane title="angular">\n    <p>lorem ipsum</p>\n  </my-pane>\n  <my-pane title="well">\n    <em>mauris elementum .</em>\n    <p><a href ng-click="i = i + 1">counter: {{i || 0}}</a></p>\n  </my-pane>\n</my-tabs>\n\n\x3c!-- my-tab.html --\x3e\n<div class="tabbable">\n  <div>{{title}}</div>\n  <ul class="nav nav-tabs">\n    <li ng-repeat="pane in panes" ng-class="{active:pane.selected}">\n      <a href="" ng-click="select(pane)">{{pane.title}}</a>\n    </li>\n  </ul>\n  <div class="tab-content" ng-transclude></div>\n</div>\n\n\x3c!-- my-pane.html --\x3e\n<div class="tab-pane" ng-show="selected">\n  <h4>{{title}}</h4>\n  <div ng-transclude></div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n# directive scope &\nangular\n  .module("docsisofnbindexample", [])\n  .controller("controller", [\n    "$scope",\n    "$timeout",\n    function($scope, $timeout) {\n      $scope.name = "tobias";\n      $scope.message = "";\n      $scope.hidedialog = function(message) {\n        $scope.message = message;\n        $scope.dialogishidden = true;\n        $timeout(function() {\n          $scope.message = "";\n          $scope.dialogishidden = false;\n        }, 2000);\n      };\n    }\n  ])\n  .directive("mydialog", function() {\n    return {\n      restrict: "e",\n      transclude: true,\n      scope: { close: "&onclose" },\n      templateurl: "my-dialog-close.html"\n    };\n  });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# index.html\n<div ng-controller="controller">\n  {{message}}\n  <my-dialog ng-hide="dialogishidden" on-close="hidedialog(message)">\n    check out the contents, {{name}}!\n  </my-dialog>\n</div>\n\n# my-dialog-close.html\n<div class="alert">\n  <a href class="close" ng-click="close({message: \'closing for now\'})"\n    >&times;</a\n  >\n  <div ng-transclude></div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# directive scope @ =\n// script.js\n(function(angular) {\n  "use strict";\n  angular\n    .module("docsisolationexample", [])\n    .controller("controller", [\n      "$scope",\n      function($scope) {\n        $scope.naomi = { name: "naomi", address: "1600 amphitheatre" };\n        $scope.vojta = { name: "vojta", address: "3456 somewhere else" };\n      }\n    ])\n    .directive("mycustomer", function() {\n      return {\n        restrict: "e",\n        scope: {\n          customerinfo: "=info",\n          customvajta: "@info"\n        },\n        templateurl: "my-customer-plus-vojta.html"\n      };\n    });\n})(window.angular);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\x3c!-- my-customer-plus-vojta.html --\x3e\nname: {{customerinfo.name}} address: {{customerinfo.address}}\n<hr />\nname: {{vojta.name}} address: {{vojta.address}}\n<hr />\nname: {{customerinfo}}\n\n<hr />\nname: {{customvajta}}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\x3c!-- index.html --\x3e\n<!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>example - example-directive-isolate-2-production</title>\n    <script src="//code.angularjs.org/1.7.7/angular.min.js"><\/script>\n    <script src="script.js"><\/script>\n  </head>\n  <body ng-app="docsisolationexample">\n    <div ng-controller="controller">\n      <p>--------------naomi---------------</p>\n      <my-customer info="naomi"></my-customer>\n      <p>--------------vojta---------------</p>\n      <my-customer info="aaaa"></my-customer>\n    </div>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 过滤器(filter)\n * date : 格式化显示数据\n\n\x3c!-- 需要传递参数告诉它，要按照我们想要的格式去显示\n        yyyy 表示年\n        mm 表示月\n        dd 表示日\n        hh 表示小时\n        mm 表示分钟,\n        ss 表示秒数\n    --\x3e\n<p>{{9838232323 | date :\'yyyy年mm月dd日 hh:mm:ss\'}}</p>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * orderby: 对我们数据进行排序\n   \n   \n * 一般和 ng-repeat 一起使用，第一个参数，是个字符串： 字符串前加+或什么都不写时，会按照所对应的数据的属性正向排序，加上-就是逆向排序;<li ng-repeat="item in data |orderby:\'+id\'"></li>\n   \n   \n * filter : 也需要一个参数\n   \n    * 可以传递一个布尔值，或者字符串，angular 进根据它对数据进行全局查找\n    * 也可以传递一个对象，angular 会按照对象的属性到数据中精确查找对应的属性。\n   \n   \n\n描述：过滤器\nuppercase:格式化字符串为大写\nlowercase:格式化字符串为小写\ncurrency:格式化为货币符号\nlimitto　: 正数，表示从头开始截取；负数表示从尾巴开始截取\nnumber : 格式化为保留小数点\ndate : 格式化为时间\norderby:"?":某属性按从小到大排序 ( orderby:\'-id\' , id 降序排列   )  ( orderby:\'id\',  id 升序排列   )\nfilter:"?":按条件过滤，如filter:{\'name\':\'iphone\'}为查找属性name值为iphone的对象\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# filter demo\n<div ng-app="myapp" ng-controller="myctrl">\n  <input type="text" ng-model="name" />\n  <span>大写：{{name | uppercase}}</span>\n  <span>小写：{{name | lowercase}}</span>\n  <br />\n  <p>货币符号：{{ 250 | currency:"rmb" }}</p>\n  <p>正数截取4位：{{"1234567890" | limitto :4}}</p>\n  <p>负数截取4位：{{"1234567890" | limitto:-4}}</p>\n  <p>保留2位小数点：{{149016.1945000 | number:2}}</p>\n  <p>time转化为时间：{{1490161945000 | date:"yyyy-mm-dd hh:mm:ss"}}</p>\n  <p>排序及按条件筛选：</p>\n  <input type="text" ng-model="indata" />\n  <ul>\n    <li ng-repeat="x in names | orderby:\'-country\' | filter : indata">\n      {{ x.name + \', \' + x.country }}\n    </li>\n  </ul>\n  <p>自定义过滤器，输入一个数值，得到该值+1结果：</p>\n  <input type="text" ng-model="indiy" />\n  <p>{{indiy|addone}}</p>\n  <p>{{indiy|addonefilter}}</p>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\nvar app = angular.module("myapp", []);\napp.controller("myctrl", function($scope) {\n  $scope.names = [\n    {\n      name: "jani",\n      country: "norway"\n    },\n    {\n      name: "hege",\n      country: "sweden"\n    },\n    {\n      name: "kai",\n      country: "denmark"\n    }\n  ];\n});\n//自定义过滤器\napp.filter("addone", function() {\n  return function(i) {\n    var result = 0;\n    if (!isnan(i)) {\n      result = 1 + parseint(i);\n    }\n    return result;\n  };\n});\n//自定义过滤器带参数\napp.service("addoneservice", function() {\n  this.add = function(i) {\n    var result = 0;\n    if (!isnan(i)) {\n      result = 1 + parseint(i);\n    }\n    return result;\n  };\n});\napp.filter("addonefilter", [\n  "addoneservice",\n  function(addoneservice) {\n    return function(i) {\n      return addoneservice.add(i);\n    };\n  }\n]);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n# angular 服务\n * config 允许注入的是provider和constance(常量)\n   \n   \n * run 允许注入的是provider和constant,还可以是factory，service，value\n   \n   \n * angular.run 和 angular.config 有什么不同？config--\x3erun--\x3ecompile/link\n   \n   \n\n# constant\n * constant: 用于定义常量，一旦定义就不能被改变。可以被注入到任何地方，但是不能被装饰器(decorator)装饰\n\napp.constant("app_key", "a1s2d3f4");\n\n\n1\n# value\n * value： 用来定义值。但与 constant 的区别是：可以被修改，可以被 decorator 装饰，不能被注入到 config 中\n\napp.value("version", "1.0");\n\n\n1\n# decorator\n * decorator: 用来装饰其他 provider 的，不过 constant 除外\n\nvar app = angular.module("myapp", []);\napp.value("version", "1.0");\napp.decorator("version", function($delegate) {\n  return $delegate + ".1";\n});\n\napp.service("myservice", function() {\n  this.seta = function() {};\n  this.geta = function() {};\n  this.foo = function() {};\n});\n// 装饰myservice\napp.decorator("myservice", function($delegate) {\n  // $delegate 代表实际上的 service 实例\n  $delegate.greet = function() {\n    return "hello, i am a new function of \'myservice\'";\n  };\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# factory\n * factory: 需要返回一个包含数据，方法的对象\n\n// 创建\nangular.module("myapp.services").factory("user", function($http) {\n  // factory的名字和注入的方法\n  var url = "http://localhost:3000";\n  //把我们定义的方法和数据都放到一个对象中，并且返回这个对象，这就是factory\n  var service = {\n    user: {},\n    setname: function(newname) {\n      service.user["name"] = newname;\n    },\n    save: function() {\n      return $http.post(url + "/users", {\n        user: service.user\n      });\n    }\n  };\n  return service;\n});\n\n// 调用\n// 注意：需要使用.config()来配置service的时候不能使用factory的方法\nangular.module("myapp").controller("mainctrl", function($scope, user) {\n  //user就是factory的名字\n  //我们将user这个factory中的一个叫做save()的function赋给我们controller中的变量\n  $scope.saveuser = user.save;\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# service\n * service\n\n// 创建\nangular.module("myapp.services").service("user", function($http) {\n  // 在这里注入我们需要的服务\n  var self = this;\n  // 由于service()是通过构造函数创建的，\n  // 那么service()中的function和data都要以this.data和this.function的方式进行声明\n  // service()方法会持有构造函数创建的对象\n  this.user = {};\n  this.url = "http://localhost:3000";\n  this.setname = function(newname) {\n    self.user["name"] = newname;\n  };\n  this.save = function() {\n    return $http.post(self.url + "/users", {\n      user: self.user\n    });\n  };\n});\n\n// 调用\n// 注意：需要使用.config()来配置service的时候不能使用service的方法\nangular.module("myapp").controller("mainctrl", function($scope, user) {\n  //注入名字为user的service\n  //用user中名字叫做的save的function给本地变量赋值\n  $scope.saveuser = user.save;\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# provider\n * provider: 创建 provider，与 factory、service 不同的是，provider 需要使用 this.$get 来返回方法和数据, 可以在 config 中被调用和配置\n\nvar app = angular.module("myapp", []);\n\n// 在.config()中配置provider\napp.config(function (myfirstprovider) {\n  myfirstprovider.name = "zhangsan";\n});\n\n// 创建\napp.provider("myfirst", function () {\n  this.$get = function () {\n    var that = this;\n    var service = {};\n    service.console = function () {\n      return that.name;\n    }\n    return service;\n  }\n});\n\n// 调用\n// provider 可以在 config 中调用\napp.controller("cartcontroller", ["myfirst", "$scope", function (a, b) {\n  console.log(a.console());\n  b.name = "lisi";\n}]);\n\n--------------\n// other 1\nvar myapp = angular.module(\'app\',[]);\n\nmyapp.provider(\'helloangular\',function(){\n\treturn {\n\t\t$get:function(){\n\t\t\tvar name = \'xiaowang\';\n\t\t\tfunction getname(){\n\t\t\t\treturn name;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tgetname:getname\n\t\t\t}\n\t\t}\n\t}\n})\n\nmyapp.controller(\'myctrl\', [\'$scope\',\'helloangular\', function($scope,helloangular){\n\t$scope.name = helloangular.getname();\n}])\n\n-------------\n// other 2\nvar myapp = angular.module(\'app\',[],function($provide){\n\tconsole.log(\'1\');\n\t// 自定义服务\n\t$provide.provider(\'customservice\',function(){\n\t\tthis.$get = function(){\n\t\t\treturn {\n\t\t\t\tmessage : \'customservice message\'\n\t\t\t}\n\t\t}\n\t})\n});\n\nmyapp.controller(\'ctrl\',[\'$scope\',\'customservice\',function($scope,customservice){\n\tconsole.log(\'2\');\n\t$scope.name = \'小明\';\n\tconsole.log(customservice.message)\n}]);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n# 扩展小知识\n * track by $index 解决 ng-repeat 遍历数组时有重复问题\n   \n   \n * 使用$scope.$apply()通过 anuglar 监视数据模型的变化。\n   \n    * setinterval()\n    * settimeout()\n   \n   \n * $route ,提供一个方法，用于更新路由参数\n   \n    * $route.updateparams({page:2})//需要传入一个对象：就路由中的参数名及新的参数值;\n   \n   \n * 在一个页面里创建多个 ng-app\n   \n   \n\n<div id="a1" ng-app="app1">\n\t<input ng-model="name" type="text" placeholder="请输入姓名">\n\t<p>我的姓名： {{name}}</p>\n</div>\n\n<div id="a2" ng-app="app2">\n\t<input ng-model="age" type="number" placeholder="请输入年龄">\n\t<p>我的年龄: {{age}}</p>\n</div>\n<script type="text/javascript">\n\tvar app1 = angular.module("app1", []); //自动加载\n\tvar app2 = angular.module("app2", []); //手动加载\n\tangular.bootstrap(document.getelementbyid("a2"), [\'app2\']); // 手动加载2\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 相关链接\n * docs angularjs\n * angularjs1.6.x 实例教程\n * angularjs 学习笔记\n * angularstrap\n * learning_angular doc\n * angularjs 父子级 controller 传递数据',charsets:{cjk:!0}},{title:"微信小程序介绍",frontmatter:{title:"微信小程序介绍",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["微信小程序"],readingShow:"top"},regularPath:"/frame/wxminiapp.html",relativePath:"frame/wxminiapp.md",key:"v-1100e1ea",path:"/frame/wxminiapp.html",headers:[{level:2,title:"介绍",slug:"介绍",normalizedTitle:"介绍",charIndex:63},{level:2,title:"相关资料",slug:"相关资料",normalizedTitle:"相关资料",charIndex:219}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"介绍 相关资料",content:" * 小程序注册\n * 小程序登录\n * 小程序开发文档\n * 小程序助手\n * 申请测试号\n * 小程序官方开发工具\n\n# 介绍\n * 小程序启动流程图\n   \n   \n * 小程序技术发展历史\n   \n   \n * 小程序与普通网页开发的区别\n   \n   \n * 聊聊 Web App、Hybrid App 与 Native App 的设计差异\n   \n   \n * 生命周期图-微信官方原图\n   \n   \n   \n   \n\n# 相关资料\n * 小程序开发指南\n * 浅析微信小程序技术架构（原创）\n * 微信小程序架构原理\n * 手把手教会你小程序登录鉴权\n * 微信小程序的登录体系\n * 你必须要知道的微信小程序云开发\n * 微信小程序之加载更多（分页加载）\n * 我们评测了 5 个主流跨端框架，这是它们的区别\n * 微信小程序——自定义圆形进度条\n * 微信小程序之圆形进度条\n * 微信小程序 canvas 绘制星星闪动效果\n * 微信小程序动画特效\n * mpvue\n * taro\n * 看大神如何玩转微信小程序日历插件？\n * 小程序如何生成海报分享朋友圈",normalizedContent:" * 小程序注册\n * 小程序登录\n * 小程序开发文档\n * 小程序助手\n * 申请测试号\n * 小程序官方开发工具\n\n# 介绍\n * 小程序启动流程图\n   \n   \n * 小程序技术发展历史\n   \n   \n * 小程序与普通网页开发的区别\n   \n   \n * 聊聊 web app、hybrid app 与 native app 的设计差异\n   \n   \n * 生命周期图-微信官方原图\n   \n   \n   \n   \n\n# 相关资料\n * 小程序开发指南\n * 浅析微信小程序技术架构（原创）\n * 微信小程序架构原理\n * 手把手教会你小程序登录鉴权\n * 微信小程序的登录体系\n * 你必须要知道的微信小程序云开发\n * 微信小程序之加载更多（分页加载）\n * 我们评测了 5 个主流跨端框架，这是它们的区别\n * 微信小程序——自定义圆形进度条\n * 微信小程序之圆形进度条\n * 微信小程序 canvas 绘制星星闪动效果\n * 微信小程序动画特效\n * mpvue\n * taro\n * 看大神如何玩转微信小程序日历插件？\n * 小程序如何生成海报分享朋友圈",charsets:{cjk:!0}},{title:"web工具网站",frontmatter:{title:"web工具网站",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["blog"],categories:["faq"],readingShow:"top"},regularPath:"/issues/",relativePath:"issues/README.md",key:"v-26fec7c0",path:"/issues/",headers:[{level:2,title:"博客生成器",slug:"博客生成器",normalizedTitle:"博客生成器",charIndex:2},{level:2,title:"代码托管",slug:"代码托管",normalizedTitle:"代码托管",charIndex:91},{level:2,title:"集成 ci",slug:"集成-ci",normalizedTitle:"集成 ci",charIndex:128},{level:2,title:"mock api",slug:"mock-api",normalizedTitle:"mock api",charIndex:232},{level:2,title:"评论系统",slug:"评论系统",normalizedTitle:"评论系统",charIndex:275},{level:2,title:"服务部署",slug:"服务部署",normalizedTitle:"服务部署",charIndex:353},{level:2,title:"线上服务",slug:"线上服务",normalizedTitle:"线上服务",charIndex:428},{level:2,title:"流程图",slug:"流程图",normalizedTitle:"流程图",charIndex:547},{level:2,title:"图床",slug:"图床",normalizedTitle:"图床",charIndex:575},{level:2,title:"free ssl",slug:"free-ssl",normalizedTitle:"free ssl",charIndex:647},{level:2,title:"js 在线编辑器",slug:"js-在线编辑器",normalizedTitle:"js 在线编辑器",charIndex:723},{level:2,title:"cdn",slug:"cdn",normalizedTitle:"cdn",charIndex:778},{level:2,title:"为 gh-pages 添加 ssl",slug:"为-gh-pages-添加-ssl",normalizedTitle:"为 gh-pages 添加 ssl",charIndex:840}],lastUpdated:"2020/8/2 下午4:27:20",headersStr:"博客生成器 代码托管 集成 ci mock api 评论系统 服务部署 线上服务 流程图 图床 free ssl js 在线编辑器 cdn 为 gh-pages 添加 ssl",content:"# 博客生成器\n * gatsby\n * vuepress\n * hexo\n * hugo\n * docsify\n * jekyll\n * storybook\n * docz\n\n# 代码托管\n * github\n * gitlab\n * gitee\n\n# 集成 ci\n * 禅道\n * walle-web\n * jenkins\n * travis-ci\n * gitlab-runner\n * flow.ci\n * strider\n * atlassian\n\n# mock api\n * YApi\n * mockjs\n * easy-mock\n\n# 评论系统\n * Disqus\n * Facebook\n * Gitment\n * Valine\n * gitalk\n * isso\n * Vssue\n\n# 服务部署\n * netlify\n * gh-pages@github\n * zeit.co/now\n * surge.sh\n * vercel\n\n# 线上服务\n * mlab\n * firebase\n * Parse\n * contentful\n * 语雀\n * leancloud\n * daocloud\n * wilddog\n * Heroku\n * digitalocean\n\n# 流程图\n * processOn\n * 百度脑图\n\n# 图床\n * 又拍云\n * sm.ms 图床\n * 七牛云\n * PicGo@图床工具\n * ipic@图床工具\n * mpic@图床工具\n\n# free ssl\n * letsencrypt\n * certbot\n * Neilpang/acme.sh@github\n * freessl\n\n# js 在线编辑器\n * codesandbox\n * stackblitz\n * npm.runkit\n\n# cdn\n * unpkg\n * jsdelivr\n * bootcdn\n * cdnjs\n * cloudflare\n\n# 为 gh-pages 添加 ssl\n * github 怎么绑定自己的域名？\n * Custom domain redirects for GitHub Pages sites\n * Troubleshooting custom domains\n * github graphql explorer",normalizedContent:"# 博客生成器\n * gatsby\n * vuepress\n * hexo\n * hugo\n * docsify\n * jekyll\n * storybook\n * docz\n\n# 代码托管\n * github\n * gitlab\n * gitee\n\n# 集成 ci\n * 禅道\n * walle-web\n * jenkins\n * travis-ci\n * gitlab-runner\n * flow.ci\n * strider\n * atlassian\n\n# mock api\n * yapi\n * mockjs\n * easy-mock\n\n# 评论系统\n * disqus\n * facebook\n * gitment\n * valine\n * gitalk\n * isso\n * vssue\n\n# 服务部署\n * netlify\n * gh-pages@github\n * zeit.co/now\n * surge.sh\n * vercel\n\n# 线上服务\n * mlab\n * firebase\n * parse\n * contentful\n * 语雀\n * leancloud\n * daocloud\n * wilddog\n * heroku\n * digitalocean\n\n# 流程图\n * processon\n * 百度脑图\n\n# 图床\n * 又拍云\n * sm.ms 图床\n * 七牛云\n * picgo@图床工具\n * ipic@图床工具\n * mpic@图床工具\n\n# free ssl\n * letsencrypt\n * certbot\n * neilpang/acme.sh@github\n * freessl\n\n# js 在线编辑器\n * codesandbox\n * stackblitz\n * npm.runkit\n\n# cdn\n * unpkg\n * jsdelivr\n * bootcdn\n * cdnjs\n * cloudflare\n\n# 为 gh-pages 添加 ssl\n * github 怎么绑定自己的域名？\n * custom domain redirects for github pages sites\n * troubleshooting custom domains\n * github graphql explorer",charsets:{cjk:!0}},{title:"github的graphql使用",frontmatter:{title:"github的graphql使用",date:"2020-08-02T00:00:00.000Z",sidebar:"auto",tags:["graphql","github"],categories:["faq"],readingShow:"top"},regularPath:"/issues/graphql-github.html",relativePath:"issues/graphql-github.md",key:"v-898c4eaa",path:"/issues/graphql-github.html",headers:[{level:2,title:"变量（Variables）",slug:"变量-variables",normalizedTitle:"变量（variables）",charIndex:112},{level:2,title:"操作名称（Operation name）",slug:"操作名称-operation-name",normalizedTitle:"操作名称（operation name）",charIndex:586},{level:2,title:"别名（Aliases）",slug:"别名-aliases",normalizedTitle:"别名（aliases）",charIndex:681},{level:2,title:"片段（Fragments）",slug:"片段-fragments",normalizedTitle:"片段（fragments）",charIndex:1655},{level:2,title:"指令（Directives）",slug:"指令-directives",normalizedTitle:"指令（directives）",charIndex:2799},{level:2,title:"变更（Mutations）",slug:"变更-mutations",normalizedTitle:"变更（mutations）",charIndex:3252},{level:2,title:"分页（Pagination）",slug:"分页-pagination",normalizedTitle:"分页（pagination）",charIndex:4041},{level:2,title:"nodejs 示例",slug:"nodejs-示例",normalizedTitle:"nodejs 示例",charIndex:4618}],lastUpdated:"2020/8/2 下午4:27:20",headersStr:"变量（Variables） 操作名称（Operation name） 别名（Aliases） 片段（Fragments） 指令（Directives） 变更（Mutations） 分页（Pagination） nodejs 示例",content:'\n\n * https://developer.github.com/v4/explorer/\n * Graphql Api : https://api.github.com/graphql\n * Schema 和类型\n\n# 变量（Variables）\n * 变量以 $ 开头， Int 为类型 ， ！为是否必填\n\n# $repo 为变量名\n\nquery($repo:Int!) {\n  viewer {\n    # 用户名 -> 注释\n    name #  -> 字段\n     repositories(last: $repo) { # 在操作中使用变量 $repo\n       nodes {\n         name\n       }\n     }\n   }\n}\n\n// query variables\nvariables {\n   "repo": 3\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 默认变量（Default variables）\n\n// "chengzao" 为 $user 的默认值\nquery MyQuery($user: String = "chengzao") {\n  user(login: $user) {\n    login\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n# 操作名称（Operation name）\n# MyQuery 为操作名\nquery MyQuery {\n  viewer {\n    login\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n# 别名（Aliases）\nquery MyPaginationQuery($pageSize: Int = 10) {\n  viewer {\n    # startsRepos 为 starredRepositories 的别名\n    startsRepos: starredRepositories(first: $pageSize) {\n      pageInfo {\n        endCursor\n        hasNextPage\n        hasPreviousPage\n        startCursor\n      }\n      edges {\n        cursor\n        node {\n          id\n          name\n        }\n      }\n      totalCount\n    }\n  }\n}\n\n# 返回数据\n{\n  "data": {\n    "viewer": {\n      "startsRepo": {\n        "pageInfo": {\n          "endCursor": "xxx",\n          "hasNextPage": true,\n          "hasPreviousPage": false,\n          "startCursor": "xxx"\n        },\n        "edges": [\n          {\n            "cursor": "xxx",\n            "node": {\n              "id": "xxx",\n              "name": "nvm"\n            }\n          },\n        ],\n        "totalCount": 17\n      }\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n# 片段（Fragments）\nquery MyPaginationQuery($pageSize: Int = 10) {\n  viewer {\n    startsRepos: starredRepositories(first: $pageSize) {\n      pageInfo {\n        endCursor\n        hasNextPage\n        hasPreviousPage\n        startCursor\n      }\n      totalCount\n      ...nodes\n    }\n  }\n}\n\n# https://graphql.cn/learn/schema/#interfaces\n# StarredRepositoryConnection 为 github graphql 中定义好的类型\nfragment nodes on StarredRepositoryConnection {\n   repos: edges {\n      cursor\n      node {\n        id\n        name\n      }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * 在片段内使用变量\n\nquery MyPaginationQuery($pageSize: Int = 10) {\n  viewer {\n    ...viewer\n  }\n}\n\n# viewer\nfragment viewer on User{\n   startsRepos: starredRepositories(first: $pageSize) {\n      pageInfo {\n        endCursor\n        hasNextPage\n        hasPreviousPage\n        startCursor\n      }\n      totalCount\n      ...nodes\n    }\n}\n\n\n# nodes\nfragment nodes on StarredRepositoryConnection {\n   repos: edges {\n      cursor\n      node {\n        id\n        name\n      }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# 指令（Directives）\n * include包含此字段\n\nquery MyQuery($showStatus: Boolean!) {\n  viewer {\n    login\n    status @include(if: $showStatus) {\n      emoji\n    }\n  }\n}\n\n# query variables\n{\n  "showStatus": true\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * skip跳过此字段\n\nquery MyQuery($showStatus: Boolean!) {\n  viewer {\n    login\n    status @skip(if: $showStatus) {\n      emoji\n    }\n    id\n  }\n}\n\n# query variables\n{\n  "showStatus": true\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 变更（Mutations）\n * 约定规范任何导致写入的操作都应该显式通过变更（mutation）来发送\n\nquery FindIssueID {\n  repository(owner:"octocat", name:"Hello-World") {\n    issue(number:349) {\n      id\n    }\n  }\n}\n\nmutation AddReactionToIssue {\n  addReaction(input:{subjectId:"MDU6SXNzdWUyMzEzOTE1NTE=",content:HOORAY}) {\n    reaction {\n      content\n    }\n    subject {\n      id\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 多个参数\n\nmutation($myVar:AddReactionInput!) {\n  addReaction(input:$myVar) {\n    reaction {\n      content\n    }\n    subject {\n      id\n    }\n  }\n}\n\n# query variables\n# https://docs.github.com/cn/graphql/reference/input-objects#addreactioninput\nvariables {\n  "myVar": {\n    "subjectId":"MDU6SXNzdWUyMTc5NTQ0OTc=",\n    "content":"HOORAY"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 分页（Pagination）\n * github分页query\n\nquery MyPaginationQuery($cursorNo: String!, $pageSize: Int=10) {\n  viewer {\n    starredRepositories(first: $pageSize, after: $cursorNo) {\n      pageInfo {\n        endCursor\n        hasNextPage\n        hasPreviousPage\n        startCursor\n      }\n      edges {\n        cursor\n        node {\n          id\n          name\n        }\n      }\n      totalCount\n    }\n  }\n}\n\n# query variables\n# cursorNo: 传入返回数据中的 pageInfo.startCursor / pageInfo.endCursor\n{\n  "cursorNo": "xxx",\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# nodejs 示例\n * 使用 GraphQL 进行身份验证\n * creating-a-personal-access-token\n\nconst axios = require(\'axios\')\n\n// ACCESS_TOKEN -> https://github.com/settings/tokens\n// .env -> ACCESS_TOKEN=axxxx54\n\nrequire("dotenv").config();\nconst TOKEN = process.env.ACCESS_TOKEN;\nconst GH_API = "https://api.github.com/graphql";\n\nfunction request (query, variables, headers = {}) {\n  return axios({\n    url: GH_API,\n    method: "post",\n    headers:{\n      Authorization: `bearer ${TOKEN}`,\n      ...headers\n    },\n    data:{\n      query,\n      variables\n    },\n  });\n}\n\nconst query = `\n  query MyPaginationQuery($pageSize: Int = 10) {\n    viewer {\n      startsRepos: starredRepositories(first: $pageSize) {\n        pageInfo {\n          endCursor\n          hasNextPage\n          hasPreviousPage\n          startCursor\n        }\n        totalCount\n        ...nodes\n      }\n    }\n  }\n\n  fragment nodes on StarredRepositoryConnection {\n    repos: edges {\n        cursor\n        node {\n          id\n          name\n        }\n      }\n  }\n`\n\nconst variables = {\n  pageSize: 5\n}\n\nconst data = async () => {\n  const res = await request(query, variables)\n  console.log(JSON.stringify(res.data, 0 ,2));\n}\n\ndata()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61',normalizedContent:'\n\n * https://developer.github.com/v4/explorer/\n * graphql api : https://api.github.com/graphql\n * schema 和类型\n\n# 变量（variables）\n * 变量以 $ 开头， int 为类型 ， ！为是否必填\n\n# $repo 为变量名\n\nquery($repo:int!) {\n  viewer {\n    # 用户名 -> 注释\n    name #  -> 字段\n     repositories(last: $repo) { # 在操作中使用变量 $repo\n       nodes {\n         name\n       }\n     }\n   }\n}\n\n// query variables\nvariables {\n   "repo": 3\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 默认变量（default variables）\n\n// "chengzao" 为 $user 的默认值\nquery myquery($user: string = "chengzao") {\n  user(login: $user) {\n    login\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n# 操作名称（operation name）\n# myquery 为操作名\nquery myquery {\n  viewer {\n    login\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n# 别名（aliases）\nquery mypaginationquery($pagesize: int = 10) {\n  viewer {\n    # startsrepos 为 starredrepositories 的别名\n    startsrepos: starredrepositories(first: $pagesize) {\n      pageinfo {\n        endcursor\n        hasnextpage\n        haspreviouspage\n        startcursor\n      }\n      edges {\n        cursor\n        node {\n          id\n          name\n        }\n      }\n      totalcount\n    }\n  }\n}\n\n# 返回数据\n{\n  "data": {\n    "viewer": {\n      "startsrepo": {\n        "pageinfo": {\n          "endcursor": "xxx",\n          "hasnextpage": true,\n          "haspreviouspage": false,\n          "startcursor": "xxx"\n        },\n        "edges": [\n          {\n            "cursor": "xxx",\n            "node": {\n              "id": "xxx",\n              "name": "nvm"\n            }\n          },\n        ],\n        "totalcount": 17\n      }\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n# 片段（fragments）\nquery mypaginationquery($pagesize: int = 10) {\n  viewer {\n    startsrepos: starredrepositories(first: $pagesize) {\n      pageinfo {\n        endcursor\n        hasnextpage\n        haspreviouspage\n        startcursor\n      }\n      totalcount\n      ...nodes\n    }\n  }\n}\n\n# https://graphql.cn/learn/schema/#interfaces\n# starredrepositoryconnection 为 github graphql 中定义好的类型\nfragment nodes on starredrepositoryconnection {\n   repos: edges {\n      cursor\n      node {\n        id\n        name\n      }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * 在片段内使用变量\n\nquery mypaginationquery($pagesize: int = 10) {\n  viewer {\n    ...viewer\n  }\n}\n\n# viewer\nfragment viewer on user{\n   startsrepos: starredrepositories(first: $pagesize) {\n      pageinfo {\n        endcursor\n        hasnextpage\n        haspreviouspage\n        startcursor\n      }\n      totalcount\n      ...nodes\n    }\n}\n\n\n# nodes\nfragment nodes on starredrepositoryconnection {\n   repos: edges {\n      cursor\n      node {\n        id\n        name\n      }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# 指令（directives）\n * include包含此字段\n\nquery myquery($showstatus: boolean!) {\n  viewer {\n    login\n    status @include(if: $showstatus) {\n      emoji\n    }\n  }\n}\n\n# query variables\n{\n  "showstatus": true\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * skip跳过此字段\n\nquery myquery($showstatus: boolean!) {\n  viewer {\n    login\n    status @skip(if: $showstatus) {\n      emoji\n    }\n    id\n  }\n}\n\n# query variables\n{\n  "showstatus": true\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 变更（mutations）\n * 约定规范任何导致写入的操作都应该显式通过变更（mutation）来发送\n\nquery findissueid {\n  repository(owner:"octocat", name:"hello-world") {\n    issue(number:349) {\n      id\n    }\n  }\n}\n\nmutation addreactiontoissue {\n  addreaction(input:{subjectid:"mdu6sxnzdwuymzezote1nte=",content:hooray}) {\n    reaction {\n      content\n    }\n    subject {\n      id\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 多个参数\n\nmutation($myvar:addreactioninput!) {\n  addreaction(input:$myvar) {\n    reaction {\n      content\n    }\n    subject {\n      id\n    }\n  }\n}\n\n# query variables\n# https://docs.github.com/cn/graphql/reference/input-objects#addreactioninput\nvariables {\n  "myvar": {\n    "subjectid":"mdu6sxnzdwuymtc5ntq0otc=",\n    "content":"hooray"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 分页（pagination）\n * github分页query\n\nquery mypaginationquery($cursorno: string!, $pagesize: int=10) {\n  viewer {\n    starredrepositories(first: $pagesize, after: $cursorno) {\n      pageinfo {\n        endcursor\n        hasnextpage\n        haspreviouspage\n        startcursor\n      }\n      edges {\n        cursor\n        node {\n          id\n          name\n        }\n      }\n      totalcount\n    }\n  }\n}\n\n# query variables\n# cursorno: 传入返回数据中的 pageinfo.startcursor / pageinfo.endcursor\n{\n  "cursorno": "xxx",\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# nodejs 示例\n * 使用 graphql 进行身份验证\n * creating-a-personal-access-token\n\nconst axios = require(\'axios\')\n\n// access_token -> https://github.com/settings/tokens\n// .env -> access_token=axxxx54\n\nrequire("dotenv").config();\nconst token = process.env.access_token;\nconst gh_api = "https://api.github.com/graphql";\n\nfunction request (query, variables, headers = {}) {\n  return axios({\n    url: gh_api,\n    method: "post",\n    headers:{\n      authorization: `bearer ${token}`,\n      ...headers\n    },\n    data:{\n      query,\n      variables\n    },\n  });\n}\n\nconst query = `\n  query mypaginationquery($pagesize: int = 10) {\n    viewer {\n      startsrepos: starredrepositories(first: $pagesize) {\n        pageinfo {\n          endcursor\n          hasnextpage\n          haspreviouspage\n          startcursor\n        }\n        totalcount\n        ...nodes\n      }\n    }\n  }\n\n  fragment nodes on starredrepositoryconnection {\n    repos: edges {\n        cursor\n        node {\n          id\n          name\n        }\n      }\n  }\n`\n\nconst variables = {\n  pagesize: 5\n}\n\nconst data = async () => {\n  const res = await request(query, variables)\n  console.log(json.stringify(res.data, 0 ,2));\n}\n\ndata()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61',charsets:{cjk:!0}},{title:"javascript的module属性",frontmatter:{title:"javascript的module属性",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["性能优化","get/post","async&defer"],categories:["faq"],readingShow:"top"},regularPath:"/issues/issue.html",relativePath:"issues/issue.md",key:"v-c4dcad62",path:"/issues/issue.html",headers:[{level:2,title:"transition 和 animation 的区别",slug:"transition-和-animation-的区别",normalizedTitle:"transition 和 animation 的区别",charIndex:2},{level:2,title:"mouseover 和 mouseenter 的区别",slug:"mouseover-和-mouseenter-的区别",normalizedTitle:"mouseover 和 mouseenter 的区别",charIndex:148},{level:2,title:"图片的懒加载和预加载",slug:"图片的懒加载和预加载",normalizedTitle:"图片的懒加载和预加载",charIndex:312},{level:2,title:"get 和 post",slug:"get-和-post",normalizedTitle:"get 和 post",charIndex:429},{level:2,title:"性能优化",slug:"性能优化",normalizedTitle:"性能优化",charIndex:719}],lastUpdated:"2020/8/3 上午10:17:07",headersStr:"transition 和 animation 的区别 mouseover 和 mouseenter 的区别 图片的懒加载和预加载 get 和 post 性能优化",content:"# transition 和 animation 的区别\n * transition 需要触发一个事件才能改变属性,transition 为 2 帧，从from .... to;\n * animation 不需要触发任何事件的情况下才会随时间改变属性值,animation 可以一帧一帧的\n\n# mouseover 和 mouseenter 的区别\n * mouseover：当鼠标移入元素或其子元素都会触发事件，所以有一个重复触发，冒泡的过程。对应的移除事件是 mouseout\n * mouseenter：当鼠标移除元素本身（不包含元素的子元素）会触发事件，也就是不会冒泡，对应的移除事件是 mouseleave\n\n# 图片的懒加载和预加载\n * 预加载：提前加载图片，当用户需要查看时可直接从本地缓存中渲染, 会增加服务器前端压力\n * 懒加载：懒加载的主要目的是作为服务器前端的优化，减少请求数或延迟请求数, 对服务器前端有一定的缓解压力作用\n\n# get 和 post\n * HTTP 协议 未规定 GET 和 POST 的长度限制\n * GET 的最大长度显示是因为 浏览器和 web 服务器限制了 URI 的长度\n * 不同的浏览器和 WEB 服务器，限制的最大长度不一样\n * get 要支持 IE，则最大长度为 2083byte，若只支持 Chrome，则最大长度 8182byte\n * get 请求类似于查找的过程，用户获取数据，可以不用每次都与数据库连接，所以可以使用缓存\n * post 不同，post 做的一般是修改和删除的工作，所以必须与数据库交互，所以不能使用缓存。因此 get 请求适合于请求缓存\n\n# 性能优化\n * 使用 CDN\n * gzip 压缩\n * 文本压缩\n * 合并请求\n * 雪碧图\n * 图片懒加载\n * 缓存资源\n * 减少 DOM 操作",normalizedContent:"# transition 和 animation 的区别\n * transition 需要触发一个事件才能改变属性,transition 为 2 帧，从from .... to;\n * animation 不需要触发任何事件的情况下才会随时间改变属性值,animation 可以一帧一帧的\n\n# mouseover 和 mouseenter 的区别\n * mouseover：当鼠标移入元素或其子元素都会触发事件，所以有一个重复触发，冒泡的过程。对应的移除事件是 mouseout\n * mouseenter：当鼠标移除元素本身（不包含元素的子元素）会触发事件，也就是不会冒泡，对应的移除事件是 mouseleave\n\n# 图片的懒加载和预加载\n * 预加载：提前加载图片，当用户需要查看时可直接从本地缓存中渲染, 会增加服务器前端压力\n * 懒加载：懒加载的主要目的是作为服务器前端的优化，减少请求数或延迟请求数, 对服务器前端有一定的缓解压力作用\n\n# get 和 post\n * http 协议 未规定 get 和 post 的长度限制\n * get 的最大长度显示是因为 浏览器和 web 服务器限制了 uri 的长度\n * 不同的浏览器和 web 服务器，限制的最大长度不一样\n * get 要支持 ie，则最大长度为 2083byte，若只支持 chrome，则最大长度 8182byte\n * get 请求类似于查找的过程，用户获取数据，可以不用每次都与数据库连接，所以可以使用缓存\n * post 不同，post 做的一般是修改和删除的工作，所以必须与数据库交互，所以不能使用缓存。因此 get 请求适合于请求缓存\n\n# 性能优化\n * 使用 cdn\n * gzip 压缩\n * 文本压缩\n * 合并请求\n * 雪碧图\n * 图片懒加载\n * 缓存资源\n * 减少 dom 操作",charsets:{cjk:!0}},{title:"Cookie、JWT、Token",frontmatter:{title:"Cookie、JWT、Token",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["Cookie","jwt","token"],categories:["faq"],readingShow:"top"},regularPath:"/issues/jwt.html",relativePath:"issues/jwt.md",key:"v-416fae73",path:"/issues/jwt.html",headers:[{level:2,title:"Cookie、sessionStorage、localStorage",slug:"cookie、sessionstorage、localstorage",normalizedTitle:"cookie、sessionstorage、localstorage",charIndex:2},{level:2,title:"XSS 和 CSRF",slug:"xss-和-csrf",normalizedTitle:"xss 和 csrf",charIndex:261},{level:2,title:"Cookie、Session、Token、JWT",slug:"cookie、session、token、jwt",normalizedTitle:"cookie、session、token、jwt",charIndex:734},{level:2,title:"Cookie",slug:"cookie",normalizedTitle:"cookie",charIndex:2},{level:2,title:"Session",slug:"session",normalizedTitle:"session",charIndex:741},{level:2,title:"Cookie 和 Session 的区别",slug:"cookie-和-session-的区别",normalizedTitle:"cookie 和 session 的区别",charIndex:1810},{level:2,title:"Token",slug:"token",normalizedTitle:"token",charIndex:749},{level:3,title:"Acesss Token",slug:"acesss-token",normalizedTitle:"acesss token",charIndex:2127},{level:3,title:"Refresh Token",slug:"refresh-token",normalizedTitle:"refresh token",charIndex:2261},{level:2,title:"Token 和 Session 的区别",slug:"token-和-session-的区别",normalizedTitle:"token 和 session 的区别",charIndex:2324},{level:2,title:"JWT",slug:"jwt",normalizedTitle:"jwt",charIndex:755},{level:2,title:"Token 和 JWT 的区别",slug:"token-和-jwt-的区别",normalizedTitle:"token 和 jwt 的区别",charIndex:2886}],lastUpdated:"2021/1/5 上午7:49:43",headersStr:"Cookie、sessionStorage、localStorage XSS 和 CSRF Cookie、Session、Token、JWT Cookie Session Cookie 和 Session 的区别 Token Acesss Token Refresh Token Token 和 Session 的区别 JWT Token 和 JWT 的区别",content:"# Cookie、sessionStorage、localStorage\n * cookie 大小限制 4k, sessionStorage/localStorage 大小限制在 5MB\n * sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存\n * sessionStorage仅在当前浏览器窗口关闭前有效，自然也就不可能持久保持\n * localStorage始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；localStorage 在所有同源窗口中都是共享的\n\n# XSS 和 CSRF\n * 跨站脚本攻击（Cross Site Scripting)\n   \n   \n * 跨站请求伪造（Cross-site request forgery），是伪造请求，冒充用户在站内的正常操作\n   \n   \n * 区别：\n   \n    * CSRF 是利用网站 A 本身的漏洞，去请求网站 A 的 api；XSS 是向目标网站注入 JS 代码，然后执行 JS 里的代码\n    * CSRF 需要用户先登录目标网站获取 cookie，而 XSS 不需要登录\n    * CSRF 的目标是用户，XSS 的目标是服务器\n    * XSS 是利用合法用户获取其信息，而 CSRF 是伪造成合法用户发起请求\n   \n   \n * CSRF 防御措施: 来源\n   \n    * 检查 Referer 字段\n    * 添加校验 token\n   \n   \n * XSS 防御措施: 来源\n   \n    * 过滤特殊字符\n    * 使用 HTTP 头指定类型,使输出的内容避免被作为 HTML 解析\n   \n   \n\n# Cookie、Session、Token、JWT\n * 原文：Cookie、Session、Token、JWT\n   \n   \n * 什么是认证（Authentication）: 验证当前用户的身份 (用户名密码登录/邮箱发送登录链接/手机号接收验证码)\n   \n   \n * 什么是授权（Authorization）: 用户授予第三方应用访问该用户某些资源的权限 (cookie、session、token、OAuth)\n   \n   \n * 什么是凭证（Credentials）: 实现认证和授权的前提是需要一种媒介（证书） 来标记访问者的身份\n   \n   \n\n# Cookie\n * HTTP 是无状态的协议\n * cookie 存储在客户端\n * cookie 不可跨域, 设置 domain 属性，一级域名和二级域名之间是允许共享使用\n * 属性\n\nname=value\t键值对，设置 Cookie 的名称及相对应的值，都必须是字符串类型\ndomain      指定 cookie 所属域名，默认是当前域名\npath        指定 cookie 在哪个路径下生效，默认是 '/'\nmaxAge      cookie 失效的时间，单位秒. 值为0，表示删除，默认为 -1\nexpires     过期时间，在设置的某个时间点后该 cookie 就会失效\nsecure      该 cookie 是否仅被使用安全协议传输，默认为false\nhttpOnly    设置了 httpOnly 属性，则无法通过JS读取到该cookie信息\n\n\n1\n2\n3\n4\n5\n6\n7\n * 注意事项\n\n不要存储敏感数据\n使用 httpOnly 在一定程度上提高安全性\n尽量减少 cookie 的体积，能存储的数据量不能超过 4kb\n设置正确的 domain 和 path，减少数据传输\ncookie 无法跨域, 设置domain属性，一级域名和二级域名之间是允许共享使用\n\n\n1\n2\n3\n4\n5\n# Session\n * session 是另一种记录服务器和客户端会话状态的机制\n * session 是基于 cookie 实现的，session 存储在服务器端，sessionId 会被存储到客户端的 cookie 中\n\n\n\n * 浏览器禁止 cookie 或不支持 cookie 怎么办？\n\n一般会把 sessionId 跟在 url 参数后面即重写 url\n移动端对 cookie 的支持不是很好，移动端常用的是 token\n\n\n1\n2\n# Cookie 和 Session 的区别\n * 安全性： Session 比 Cookie 安全，Session 是存储在服务器端的，Cookie 是存储在客户端的\n * 存取值的类型不同：Cookie 只支持存字符串数据，想要设置其他类型的数据，需要将其转换成字符串，Session 可以存任意数据类型\n * 有效期不同： Cookie 可设置为长时间保持，Session 一般失效时间较短，客户端关闭（默认情况下）或者 Session 超时都会失效\n * 存储大小不同： 单个 Cookie 保存的数据不能超过 4K，Session 可存储数据远高于 Cookie，但是当访问量过多，会占用过多的服务器资源\n\n# Token\n# Acesss Token\n * 访问资源接口（API）时所需要的资源凭证\n * 简单 token 的组成： uid(用户唯一的身份标识)、time(时间戳)、sign（签名）\n * 特点: 服务端无状态化、可扩展性好 / 支持移动端设备 / 支持跨程序调用\n\n\n\n# Refresh Token\n * refresh token 是用于刷新 access token 的 token\n\n\n\n# Token 和 Session 的区别\n * Session 是一种记录服务器和客户端会话状态的机制，使服务端有状态化，可以记录会话信息\n * Token 是令牌，访问资源接口（API）时所需要的资源凭证; 使服务端无状态化，不会存储会话信息\n\n# JWT\n * JSON Web Token（JWT）是跨域认证解决方案,是一种认证授权机制\n * JWT | jsonwebtoken\n\n\n\n * HTTP Request Headers\n\nAuthorization: Bearer <token>\n\n\n1\n * 注意事项\n\nJWT 不加密的情况下，不能将秘密数据写入 JWT\nJWT 优势：服务器不再需要存储 Session，使得服务器认证鉴权业务可以方便扩展\nJWT 缺点：由于服务器不需要存储 Session 状态，因此使用过程中无法废弃某个 Token 或者更改 Token 的权限。\n    也就是说一旦 JWT 签发了，到期之前就会始终有效，除非服务器部署额外的逻辑\nJWT 本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限\nJWT 不应该使用 HTTP 协议明码传输，要使用 HTTPS 协议传输\nJWT 适合一次性的命令认证，颁发一个有效期极短的 JWT\n\n\n1\n2\n3\n4\n5\n6\n7\n# Token 和 JWT 的区别\n * 相同: * 访问资源的令牌\n    * 记录用户的信息\n    * 使服务端无状态化\n    * 只有验证成功后，客户端才能访问服务端上受保护的资源\n   \n   \n * 区别 * Token：服务端验证客户端发送过来的 Token 时，还需要查询数据库获取用户信息，然后验证 Token 是否有效\n    * JWT：将 Token 和 Payload 加密后存储于客户端，服务端只需要使用密钥解密进行校验，不需要查询或者减少查询数据库",normalizedContent:"# cookie、sessionstorage、localstorage\n * cookie 大小限制 4k, sessionstorage/localstorage 大小限制在 5mb\n * sessionstorage和localstorage不会自动把数据发给服务器，仅在本地保存\n * sessionstorage仅在当前浏览器窗口关闭前有效，自然也就不可能持久保持\n * localstorage始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；localstorage 在所有同源窗口中都是共享的\n\n# xss 和 csrf\n * 跨站脚本攻击（cross site scripting)\n   \n   \n * 跨站请求伪造（cross-site request forgery），是伪造请求，冒充用户在站内的正常操作\n   \n   \n * 区别：\n   \n    * csrf 是利用网站 a 本身的漏洞，去请求网站 a 的 api；xss 是向目标网站注入 js 代码，然后执行 js 里的代码\n    * csrf 需要用户先登录目标网站获取 cookie，而 xss 不需要登录\n    * csrf 的目标是用户，xss 的目标是服务器\n    * xss 是利用合法用户获取其信息，而 csrf 是伪造成合法用户发起请求\n   \n   \n * csrf 防御措施: 来源\n   \n    * 检查 referer 字段\n    * 添加校验 token\n   \n   \n * xss 防御措施: 来源\n   \n    * 过滤特殊字符\n    * 使用 http 头指定类型,使输出的内容避免被作为 html 解析\n   \n   \n\n# cookie、session、token、jwt\n * 原文：cookie、session、token、jwt\n   \n   \n * 什么是认证（authentication）: 验证当前用户的身份 (用户名密码登录/邮箱发送登录链接/手机号接收验证码)\n   \n   \n * 什么是授权（authorization）: 用户授予第三方应用访问该用户某些资源的权限 (cookie、session、token、oauth)\n   \n   \n * 什么是凭证（credentials）: 实现认证和授权的前提是需要一种媒介（证书） 来标记访问者的身份\n   \n   \n\n# cookie\n * http 是无状态的协议\n * cookie 存储在客户端\n * cookie 不可跨域, 设置 domain 属性，一级域名和二级域名之间是允许共享使用\n * 属性\n\nname=value\t键值对，设置 cookie 的名称及相对应的值，都必须是字符串类型\ndomain      指定 cookie 所属域名，默认是当前域名\npath        指定 cookie 在哪个路径下生效，默认是 '/'\nmaxage      cookie 失效的时间，单位秒. 值为0，表示删除，默认为 -1\nexpires     过期时间，在设置的某个时间点后该 cookie 就会失效\nsecure      该 cookie 是否仅被使用安全协议传输，默认为false\nhttponly    设置了 httponly 属性，则无法通过js读取到该cookie信息\n\n\n1\n2\n3\n4\n5\n6\n7\n * 注意事项\n\n不要存储敏感数据\n使用 httponly 在一定程度上提高安全性\n尽量减少 cookie 的体积，能存储的数据量不能超过 4kb\n设置正确的 domain 和 path，减少数据传输\ncookie 无法跨域, 设置domain属性，一级域名和二级域名之间是允许共享使用\n\n\n1\n2\n3\n4\n5\n# session\n * session 是另一种记录服务器和客户端会话状态的机制\n * session 是基于 cookie 实现的，session 存储在服务器端，sessionid 会被存储到客户端的 cookie 中\n\n\n\n * 浏览器禁止 cookie 或不支持 cookie 怎么办？\n\n一般会把 sessionid 跟在 url 参数后面即重写 url\n移动端对 cookie 的支持不是很好，移动端常用的是 token\n\n\n1\n2\n# cookie 和 session 的区别\n * 安全性： session 比 cookie 安全，session 是存储在服务器端的，cookie 是存储在客户端的\n * 存取值的类型不同：cookie 只支持存字符串数据，想要设置其他类型的数据，需要将其转换成字符串，session 可以存任意数据类型\n * 有效期不同： cookie 可设置为长时间保持，session 一般失效时间较短，客户端关闭（默认情况下）或者 session 超时都会失效\n * 存储大小不同： 单个 cookie 保存的数据不能超过 4k，session 可存储数据远高于 cookie，但是当访问量过多，会占用过多的服务器资源\n\n# token\n# acesss token\n * 访问资源接口（api）时所需要的资源凭证\n * 简单 token 的组成： uid(用户唯一的身份标识)、time(时间戳)、sign（签名）\n * 特点: 服务端无状态化、可扩展性好 / 支持移动端设备 / 支持跨程序调用\n\n\n\n# refresh token\n * refresh token 是用于刷新 access token 的 token\n\n\n\n# token 和 session 的区别\n * session 是一种记录服务器和客户端会话状态的机制，使服务端有状态化，可以记录会话信息\n * token 是令牌，访问资源接口（api）时所需要的资源凭证; 使服务端无状态化，不会存储会话信息\n\n# jwt\n * json web token（jwt）是跨域认证解决方案,是一种认证授权机制\n * jwt | jsonwebtoken\n\n\n\n * http request headers\n\nauthorization: bearer <token>\n\n\n1\n * 注意事项\n\njwt 不加密的情况下，不能将秘密数据写入 jwt\njwt 优势：服务器不再需要存储 session，使得服务器认证鉴权业务可以方便扩展\njwt 缺点：由于服务器不需要存储 session 状态，因此使用过程中无法废弃某个 token 或者更改 token 的权限。\n    也就是说一旦 jwt 签发了，到期之前就会始终有效，除非服务器部署额外的逻辑\njwt 本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限\njwt 不应该使用 http 协议明码传输，要使用 https 协议传输\njwt 适合一次性的命令认证，颁发一个有效期极短的 jwt\n\n\n1\n2\n3\n4\n5\n6\n7\n# token 和 jwt 的区别\n * 相同: * 访问资源的令牌\n    * 记录用户的信息\n    * 使服务端无状态化\n    * 只有验证成功后，客户端才能访问服务端上受保护的资源\n   \n   \n * 区别 * token：服务端验证客户端发送过来的 token 时，还需要查询数据库获取用户信息，然后验证 token 是否有效\n    * jwt：将 token 和 payload 加密后存储于客户端，服务端只需要使用密钥解密进行校验，不需要查询或者减少查询数据库",charsets:{cjk:!0}},{title:"URL到页面加载过程",frontmatter:{title:"URL到页面加载过程",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["html/render"],categories:["faq"],readingShow:"top"},regularPath:"/issues/render-html.html",relativePath:"issues/render-html.md",key:"v-07a67efd",path:"/issues/render-html.html",headers:[{level:2,title:"从输入 URL 到页面加载的过程",slug:"从输入-url-到页面加载的过程",normalizedTitle:"从输入 url 到页面加载的过程",charIndex:21},{level:2,title:"解析页面流程",slug:"解析页面流程",normalizedTitle:"解析页面流程",charIndex:680},{level:2,title:"渲染",slug:"渲染",normalizedTitle:"渲染",charIndex:465},{level:2,title:"Reflow 回流",slug:"reflow-回流",normalizedTitle:"reflow 回流",charIndex:1002},{level:2,title:"重绘（repaint 或 redraw）",slug:"重绘-repaint-或-redraw",normalizedTitle:"重绘（repaint 或 redraw）",charIndex:1377},{level:2,title:"回流一定伴随着重绘，重绘却可以单独出现",slug:"回流一定伴随着重绘-重绘却可以单独出现",normalizedTitle:"回流一定伴随着重绘，重绘却可以单独出现",charIndex:1472},{level:2,title:"回流重绘的优化方案",slug:"回流重绘的优化方案",normalizedTitle:"回流重绘的优化方案",charIndex:1494},{level:2,title:"引擎对 JS 的处理过程",slug:"引擎对-js-的处理过程",normalizedTitle:"引擎对 js 的处理过程",charIndex:1711},{level:2,title:"缓存",slug:"缓存",normalizedTitle:"缓存",charIndex:309}],lastUpdated:"2020/8/2 下午4:27:20",headersStr:"从输入 URL 到页面加载的过程 解析页面流程 渲染 Reflow 回流 重绘（repaint 或 redraw） 回流一定伴随着重绘，重绘却可以单独出现 回流重绘的优化方案 引擎对 JS 的处理过程 缓存",content:"\n\n原文: URL 到页面加载过程\n\n# 从输入 URL 到页面加载的过程\n * 1. 从浏览器接收 url 到开启网络请求线程 (浏览器的机制以及进程与线程之间的关系)\n * 2. 开启网络线程到发出一个完整的 http 请求 (涉及到 dns 查询，tcp/ip 请求，五层因特网协议栈等知识)\n * 3. 从服务器接收到请求到对应后台接收到请求 (涉及到负载均衡，安全拦截以及后台内部的处理等)\n * 4. 后台和前台的 http 交互 （这一部分包括 http 头部、响应码、报文结构、cookie 等知识，可以提下静态资源的 cookie 优化，以及编码解码，如 gzip 压缩等）\n * 5. 单独拎出来的缓存问题，http 的缓存 （这部分包括 http 缓存头部，etag，catch-control 等）\n * 6. 浏览器接收到 http 数据包后的解析流程 （解析 html-词法分析然后解析成 dom 树、解析 css 生成 css 规则树、合并成 render 树，然后 layout、painting 渲染、复合-`图层的合成、GPU 绘制、外链资源的处理、loaded 和 domcontentloaded 等）\n * 7. CSS 的可视化格式模型（元素的渲染规则，如包含块，控制框，BFC，IFC 等概念）\n * 8. JS 引擎解析过程（JS 的解释阶段，预处理阶段，执行阶段生成执行上下文，VO，作用域链、回收机制等等）\n * 9. 其它（可以拓展不同的知识模块，如跨域，web 安全，hybrid 模式等等内容）\n\n# 解析页面流程\n * 1. 解析 HTML，构建 DOM 树\n * 2. 解析 CSS，生成 CSS 规则树\n * 3. 合并 DOM 树和 CSS 规则，生成 render 树\n * 4. 布局 render 树(Layout/reflow), 负责各元素尺寸、位置的计算\n * 5. 绘制 render 树（paint），绘制页面像素信息\n * 6. 浏览器会将各层的信息发送给 GPU，GPU 会将各层合成（composite），显示在屏幕上\n\n# 渲染\n * 计算 CSS 样式\n * 构建渲染树\n * 布局，主要定位坐标和大小，是否换行，各种 position overflow z-index 属性\n * 绘制，将图像绘制出来\n\n# Reflow 回流\n当渲染树中的一部分(或全部)因为元素的规模尺寸，布局，隐藏等改变而需要重新构建, 这就称为回流(reflow)\n\n * 页面渲染初始化\n * DOM 结构改变，比如删除了某个节点\n * render 树变化，比如减少了 padding\n * 窗口 resize\n * 获取某些属性，引发回流 * offset(Top/Left/Width/Height)\n    * scroll(Top/Left/Width/Height)\n    * cilent(Top/Left/Width/Height)\n    * width, height\n    * 调用了getComputedStyle()或者 IE 的currentStyle\n   \n   \n * 改变字体大小会引发回流\n * 元素尺寸的改变——大小，外边距，边框\n\n# 重绘（repaint 或 redraw）\n重绘发生在元素的可见的外观被改变，但并没有影响到布局的时候。 例，仅修改 DOM 元素的字体颜色（只有 Repaint，因为不需要调整布局）\n\n# 回流一定伴随着重绘，重绘却可以单独出现\n# 回流重绘的优化方案\n * 减少逐项更改样式，最好一次性更改 style，或者将样式定义为 class 并一次性更新\n * 避免循环操作 dom，创建一个 documentFragment 或 div，在它上面应用所有 DOM 操作，最后再把它添加到 window.document\n * 避免多次读取 offset 等属性。无法避免则将它们缓存到变量\n * 将复杂的元素绝对定位或固定定位，使得它脱离文档流，否则回流代价会很高\n\n# 引擎对 JS 的处理过程\n * 1. 读取代码，进行词法分析（Lexical analysis），然后将代码分解成词元（token）\n * 2. 对词元进行语法分析（parsing），然后将代码整理成语法树（syntax tree）\n * 3. 使用翻译器（translator），将代码转为字节码（bytecode）\n * 4. 使用字节码解释器（bytecode interpreter），将字节码转为机器码\n\n# 缓存\njuejin/浅谈 HTTP 缓存\n\n * 强缓存\n\nExpires: 值是服务器告诉浏览器的缓存过期时间\ncache-control: 值是相对时间内直接使用浏览器缓存\n\n\n1\n2\n * 协商缓存\n\nLast-Modified 和 If-Modified-Since : 文件在服务器上最近的修改时间\nEtag 和 If-None-Match : 只有当文件内容改变时，ETag才改变\n\n\n1\n2\n * 缓存的优先级\n\nCache-Control > Expires > ETag > Last-Modified\n\n\n1",normalizedContent:"\n\n原文: url 到页面加载过程\n\n# 从输入 url 到页面加载的过程\n * 1. 从浏览器接收 url 到开启网络请求线程 (浏览器的机制以及进程与线程之间的关系)\n * 2. 开启网络线程到发出一个完整的 http 请求 (涉及到 dns 查询，tcp/ip 请求，五层因特网协议栈等知识)\n * 3. 从服务器接收到请求到对应后台接收到请求 (涉及到负载均衡，安全拦截以及后台内部的处理等)\n * 4. 后台和前台的 http 交互 （这一部分包括 http 头部、响应码、报文结构、cookie 等知识，可以提下静态资源的 cookie 优化，以及编码解码，如 gzip 压缩等）\n * 5. 单独拎出来的缓存问题，http 的缓存 （这部分包括 http 缓存头部，etag，catch-control 等）\n * 6. 浏览器接收到 http 数据包后的解析流程 （解析 html-词法分析然后解析成 dom 树、解析 css 生成 css 规则树、合并成 render 树，然后 layout、painting 渲染、复合-`图层的合成、gpu 绘制、外链资源的处理、loaded 和 domcontentloaded 等）\n * 7. css 的可视化格式模型（元素的渲染规则，如包含块，控制框，bfc，ifc 等概念）\n * 8. js 引擎解析过程（js 的解释阶段，预处理阶段，执行阶段生成执行上下文，vo，作用域链、回收机制等等）\n * 9. 其它（可以拓展不同的知识模块，如跨域，web 安全，hybrid 模式等等内容）\n\n# 解析页面流程\n * 1. 解析 html，构建 dom 树\n * 2. 解析 css，生成 css 规则树\n * 3. 合并 dom 树和 css 规则，生成 render 树\n * 4. 布局 render 树(layout/reflow), 负责各元素尺寸、位置的计算\n * 5. 绘制 render 树（paint），绘制页面像素信息\n * 6. 浏览器会将各层的信息发送给 gpu，gpu 会将各层合成（composite），显示在屏幕上\n\n# 渲染\n * 计算 css 样式\n * 构建渲染树\n * 布局，主要定位坐标和大小，是否换行，各种 position overflow z-index 属性\n * 绘制，将图像绘制出来\n\n# reflow 回流\n当渲染树中的一部分(或全部)因为元素的规模尺寸，布局，隐藏等改变而需要重新构建, 这就称为回流(reflow)\n\n * 页面渲染初始化\n * dom 结构改变，比如删除了某个节点\n * render 树变化，比如减少了 padding\n * 窗口 resize\n * 获取某些属性，引发回流 * offset(top/left/width/height)\n    * scroll(top/left/width/height)\n    * cilent(top/left/width/height)\n    * width, height\n    * 调用了getcomputedstyle()或者 ie 的currentstyle\n   \n   \n * 改变字体大小会引发回流\n * 元素尺寸的改变——大小，外边距，边框\n\n# 重绘（repaint 或 redraw）\n重绘发生在元素的可见的外观被改变，但并没有影响到布局的时候。 例，仅修改 dom 元素的字体颜色（只有 repaint，因为不需要调整布局）\n\n# 回流一定伴随着重绘，重绘却可以单独出现\n# 回流重绘的优化方案\n * 减少逐项更改样式，最好一次性更改 style，或者将样式定义为 class 并一次性更新\n * 避免循环操作 dom，创建一个 documentfragment 或 div，在它上面应用所有 dom 操作，最后再把它添加到 window.document\n * 避免多次读取 offset 等属性。无法避免则将它们缓存到变量\n * 将复杂的元素绝对定位或固定定位，使得它脱离文档流，否则回流代价会很高\n\n# 引擎对 js 的处理过程\n * 1. 读取代码，进行词法分析（lexical analysis），然后将代码分解成词元（token）\n * 2. 对词元进行语法分析（parsing），然后将代码整理成语法树（syntax tree）\n * 3. 使用翻译器（translator），将代码转为字节码（bytecode）\n * 4. 使用字节码解释器（bytecode interpreter），将字节码转为机器码\n\n# 缓存\njuejin/浅谈 http 缓存\n\n * 强缓存\n\nexpires: 值是服务器告诉浏览器的缓存过期时间\ncache-control: 值是相对时间内直接使用浏览器缓存\n\n\n1\n2\n * 协商缓存\n\nlast-modified 和 if-modified-since : 文件在服务器上最近的修改时间\netag 和 if-none-match : 只有当文件内容改变时，etag才改变\n\n\n1\n2\n * 缓存的优先级\n\ncache-control > expires > etag > last-modified\n\n\n1",charsets:{cjk:!0}},{title:"ajax和cors",frontmatter:{title:"ajax和cors",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["cors","XMLHttpRequest"],categories:["faq"],readingShow:"top"},regularPath:"/issues/request.html",relativePath:"issues/request.md",key:"v-2d684fe3",path:"/issues/request.html",headers:[{level:2,title:"API 详解",slug:"api-详解",normalizedTitle:"api 详解",charIndex:3416},{level:2,title:"GET 请求",slug:"get-请求",normalizedTitle:"get 请求",charIndex:4274},{level:2,title:"POST 请求",slug:"post-请求",normalizedTitle:"post 请求",charIndex:4006},{level:2,title:"XML",slug:"xml",normalizedTitle:"xml",charIndex:33},{level:2,title:"XMLHttpRequest 兼容性",slug:"xmlhttprequest-兼容性",normalizedTitle:"xmlhttprequest 兼容性",charIndex:5285},{level:2,title:"同源",slug:"同源",normalizedTitle:"同源",charIndex:5489},{level:2,title:"跨域场景",slug:"跨域场景",normalizedTitle:"跨域场景",charIndex:5535},{level:2,title:"跨域方案",slug:"跨域方案",normalizedTitle:"跨域方案",charIndex:5977},{level:2,title:"fetch 发送 2 次请求的原因",slug:"fetch-发送-2-次请求的原因",normalizedTitle:"fetch 发送 2 次请求的原因",charIndex:6168},{level:2,title:"jsonp",slug:"jsonp",normalizedTitle:"jsonp",charIndex:5988},{level:2,title:"cors",slug:"cors",normalizedTitle:"cors",charIndex:7048},{level:3,title:"withCredentials 属性",slug:"withcredentials-属性",normalizedTitle:"withcredentials 属性",charIndex:8282},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:8851}],lastUpdated:"2020/8/2 下午4:27:20",headersStr:"API 详解 GET 请求 POST 请求 XML XMLHttpRequest 兼容性 同源 跨域场景 跨域方案 fetch 发送 2 次请求的原因 jsonp cors withCredentials 属性 相关链接",content:" * 简易版 1\n\n// 1.实例化\nvar xhr = new XMLHttpRequest();\n// 2.请求行\n//第三个参数：true 为 异步 ; false 为同步\n// GET传参\nxhr.open('get', 'index.php?name=xiaoming&&age=10', true);\n//POST\nxhr.open('post', 'index.php', true);\n// 3.请求头:\n//GET方式可以不设请求头\nxhr.setRequestHeader('Content-Type', 'text/html');\n// POST方式必须要设置请求头\nxhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n// 4.请求主体\n// GET方式\nxhr.send(null);\n// POST参数放到请求主体里\nxhr.send('name=xiaoming&age=10');\n// 5.响应状态 ：request.responseText或者request.responseXML\n// 事件的监听，来监听状态的变化\nxhr.onreadystatechange = function () {\n  // console.log(xhr.readyState);\n  // console.log(xhr.status);\n\n  // 此状态则为响应结果完成\n  if (xhr.readyState == 4 && xhr.status == 200) {\n    // 通过DOM操作将内容放到页面上\n    document.getElementById('result').innerHTML = xhr.responseText;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n * 简易版 2\n\nvar Ajax = {\n  params: function (params) {\n    var data = '';\n    // 拼凑参数\n    for (key in params) {\n      data += key + '=' + params[key] + '&';\n    }\n\n    // 将最后一个&字符截掉\n    return data.slice(0, -1);\n  },\n  // 兼容\n  createXHR: function () {\n    if (typeof XMLHttpRequest != \"undefined\") {\n      return new XMLHttpRequest();\n    } else if (typeof ActiveXObject != \"undefined\") {\n      if (typeof arguments.callee.activeXString != \"string\") {\n        var versions = [\"MSXML2.XMLHttp.6.0\", \"MSXML2.XMLHttp.3.0\",\n          \"MSXML2.XMLHttp\"\n        ],\n          i, len;\n\n        for (i = 0, len = versions.length; i < len; i++) {\n          try {\n            new ActiveXObject(versions[i]);\n            arguments.callee.activeXString = versions[i];\n            break;\n          } catch (ex) {\n            //skip\n          }\n        }\n      }\n      return new ActiveXObject(arguments.callee.activeXString);\n    } else {\n      throw new Error(\"No XHR object available.\");\n    }\n  },\n  // 字符串转json\n  strToJson: function (str) {\n    var json = (new Function(\"return \" + str))();\n    return json;\n  },\n  // Ajax实例\n  ajax: function (options) {\n    // 实例化XMLHttpRequest\n    // var xhr = new XMLHttpRequest,\n    var _this = this,\n      xhr = _this.createXHR(),\n\n      // 默认为get方式\n      type = options.type || 'GET',\n      // 默认请求路径\n      url = options.url || location.pathname,\n      // 格式化数据key1=value1&key2=value2\n      data = _this.params(options.data);\n\n    // get 方式将参数拼接到URL上并将data设置成null\n    if (type == 'get') {\n      url = url + '?' + data;\n      data = null;\n    }\n\n    xhr.open(type, url);\n\n    // post 方式设置请求头\n    if (type == 'post') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    // 发送请求主体\n    xhr.send(data);\n\n    // 监听响应\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        // 获取响应类型\n        var contentType = xhr.getResponseHeader('Content-Type');\n\n        var data = xhr.responseText;\n\n        // 解析JSON\n        if (contentType.indexOf('json') != -1 && typeof JSON != \"undefined\") {\n          data = JSON.parse(data);\n        }\n\n        // 调用success\n        options.success(data);\n      } else {\n        options.error('请求失败!');\n      }\n    }\n\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n# API 详解\n * xhr.open() 发起请求，可以是 get、post 方式\n * xhr.setRequestHeader() 设置请求头\n * xhr.send() 发送请求主体 get 方式使用xhr.send(null)\n * xhr.onreadystatechange = function () {} 监听响应状态\n * xhr.readyState * xhr.readyState = 0时，UNSENT open 尚未调用\n    * xhr.readyState = 1时，OPENED open 已调用\n    * xhr.readyState = 2时，HEADERS_RECEIVED 接收到头信息\n    * xhr.readyState = 3时，LOADING 接收到响应主体\n    * xhr.readyState = 4时，DONE 响应完成\n   \n   \n * xhr.status表示响应码，如 200\n * xhr.statusText表示响应信息，如 OK\n * xhr.getAllResponseHeaders() 获取全部响应头信息\n * xhr.getResponseHeader('key') 获取指定头信息\n * xhr.responseText、xhr.responseXML都表示响应主体\n * GET 和 POST 请求方式的差异 * GET 没有请求主体，使用xhr.send(null)\n    * GET 可以通过在请求 URL 上添加请求参数\n    * POST 可以通过xhr.send('name=xiaoming&age=10')\n    * POST 需要设置 xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    * GET 效率更好\n    * GET 大小限制约 4K，POST 则没有限制\n   \n   \n\n# GET 请求\nvar xhr = new XMLHttpRequest();\n// 请求行\nxhr.open(\"get\", \"/get\");\n// 请求头\nxhr.setRequestHeader(\"Content-Type\", \"text/html\");\n// 请求主体\nxhr.send(null);\n// 事件的监听，来监听状态的变化\nxhr.onreadystatechange = function() {\n  //console.log(xhr.status);\n  if (xhr.readyState == 4 && xhr.status === 200) {\n    console.log(xhr.responseText);\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# POST 请求\nvar xhr = new XMLHttpRequest();\n// 请求行\nxhr.open(\"post\", \"/post\");\n// 请求头  POST\nxhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n// 请求主体\nxhr.send(\"name=xiaowang&age=30\");\n\n// 事件的监听，来监听状态的变化\nxhr.onreadystatechange = function() {\n  if (xhr.readyState == 4 && xhr.status === 200) {\n    console.log(xhr.responseText);\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# XML\n * XML 是一种标记语言，很类似 HTML，其宗旨是用来传输数据，具有自我描述性（固定的格式的数据）\n * 语法规则 * 必须有一个根元素\n    * 不可有空格、不可以数字或.开头、大小写敏感\n    * 不可交叉嵌套\n    * 属性双引号（浏览器自动修正成双引号了）\n    * 特殊符号要使用实体 ps:&lt; &gt;\n    * 注释和 HTML 一样\n    * <?xml version=\"1.0\" encoding=\"UTF-8\"?> 文档最开始\n   \n   \n\n# XMLHttpRequest 兼容性\n * IE5、IE6 中使用 ActiveObject(\"Microsoft.XMLHTTP\")\n\nvar xhr;\nif (XMLHttpRequest) {\n  xhr = new XMLHttpRequest();\n} else {\n  xhr = new ActiveObject(\"Microsoft.XMLHTTP\");\n}\n\n\n1\n2\n3\n4\n5\n6\n# 同源\n * 同源策略是浏览器的一种安全策略，所谓同源是指，域名，协议，端口完全相同。\n\n# 跨域场景\n主域名： http://www.example.com/\n\nhttp://api.example.com/index.html    不同源  域名不同\n\nhttps//www.example.com/index.htm    不同源  协议不同\n\nhttp://www.example.com:8080/index.html  不同源  端口不同\n\nhttp://api.example.com:8080/index.html  不同源  域名、端口不同\n\nhttps://api.example.com/index.html  不同源  协议、域名不同\n\nhttps://www.example.com:8080/index.html   不同源    端口、协议不同\n\nhttp://www.example.com/detail/index.html    同  源    只是目录不同\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 跨域方案\n * 通过 jsonp 跨域\n * document.domain + iframe 跨域\n * location.hash + iframe\n * window.name + iframe 跨域\n * postMessage 跨域\n * 跨域资源共享（CORS）\n * nginx 代理跨域\n * nodejs 中间件代理跨域\n * WebSocket 协议跨域\n\n# fetch 发送 2 次请求的原因\nfetch 的 post 请求的时候，导致 fetch 第一次发送了一个 Options 请求，询问服务器是否支持修改的请求头， 如果服务器支持，则在第二次中发送真正的请求\n\n# jsonp\n * JSONP 的优点是：它不像 XMLHttpRequest 对象实现的 Ajax 请求那样受到同源策略的限制；它的兼容性更好， 在更加古老的浏览器中都可以运行，不需要 XMLHttpRequest 或 ActiveX 的支持； 并且在请求完毕后可以通过调用 callback 的方式回传结果\n   \n   \n * JSONP 的缺点则是：它只支持 GET 请求而不支持 POST 等其它类型的 HTTP 请求；它只支持跨域 HTTP 请求这种情况， 不能解决不同域的两个页面之间如何进行 JavaScript 调用的问题\n   \n   \n\nfunction jsonp({ url, params, cb }) {\n  return new Promise((resolve, reject) => {\n    let script = document.createElement('script')\n    window[cb] = function (data) {\n      resolve(data);\n      document.body.removeChild(script)\n    }\n    params = { ...params, cb }\n    let arrs = [];\n    for (let key in params) {\n      arrs.push(`${key}=${params[key]}`)\n    }\n    script.src = `${url}?${arrs.join('&')}`\n    document.body.appendChild(script)\n  })\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# cors\n * 对比cors， JSONP 只能实现 GET 请求，而 CORS 支持所有类型的 HTTP 请求\n   \n   \n * 对于简单请求，浏览器直接发出 CORS 请求。具体来说，就是在头信息之中，增加一个 Origin 字段\n   \n   Origin: http://api.bob.com\n   \n   Origin 字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求\n   \n   如果 Origin 指定的源，不在许可范围内，服务器会返回一个正常的 HTTP 回应。浏览器发现，这个回应的头信息没有包含Access-Control-Allow-Origin字段，就知道出错了，从而抛出一个错误，被 XMLHttpRequest 的 onerror 回调函数捕获。注意，这种错误无法通过状态码识别，因为 HTTP 回应的状态码有可能是 200\n   \n   \n * 如果 Origin 指定的域名在许可范围内，服务器返回的响应，会多出几个头信息字段\n   \n   \n\nAccess-Control-Allow-Origin: http://api.bob.com\nAccess-Control-Allow-Credentials: true\nAccess-Control-Expose-Headers: FooBar\nContent-Type: text/html; charset=utf-8\n\n\n1\n2\n3\n4\n上面的头信息之中，有三个与 CORS 请求相关的字段，都以 Access-Control-开头\n\n * Access-Control-Allow-Origin\n   \n    * 该字段是必须的。它的值要么是请求时 Origin 字段的值，要么是一个*，表示接受任意域名的请求\n   \n   \n * Access-Control-Allow-Credentials\n   \n    * 该字段可选。它的值是一个布尔值，表示是否允许发送 Cookie。默认情况下，Cookie 不包括在 CORS 请求之中。 设为 true，即表示服务器明确许可，Cookie 可以包含在请求中，一起发给服务器。这个值也只能设为 true， 如果服务器不要浏览器发送 Cookie，删除该字段即可\n   \n   \n * Access-Control-Expose-Headers\n   \n    * 该字段可选。CORS 请求时，XMLHttpRequest对象的getResponseHeader()方法 只能拿到 6 个基本字段：Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma。 如果想拿到其他字段，就必须在Access-Control-Expose-Headers里面指定\n   \n   \n\n# withCredentials 属性\n * CORS 请求默认不发送 Cookie 和 HTTP 认证信息。如果要把 Cookie 发到服务器， 一方面要服务器同意，指定Access-Control-Allow-Credentials字段\n   \n   Access-Control-Allow-Credentials: true\n   \n   \n * 另一方面，开发者必须在 AJAX 请求中打开withCredentials属性\n   \n   \n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\n\n1\n2\n * 否则，即使服务器同意发送 Cookie，浏览器也不会发送。或者，服务器要求设置 Cookie，浏览器也不会处理\n   \n   \n * 需要注意的是，如果要发送 Cookie，Access-Control-Allow-Origin就不能设为星号，必须指定明确的、与请求网页一致的域名\n   \n   \n * 同时，Cookie 依然遵循同源政策，只有用服务器域名设置的 Cookie 才会上传，其他域名的 Cookie 并不会上传，且（跨源）原网页代码中的 document.cookie 也无法读取服务器域名下的 Cookie\n   \n   \n\n# 相关链接\n * Ajax 知识体系大梳理\n * Nginx 通过 CORS 实现跨域\n * Fetch 进阶指南\n * XMLHttpRequest2 新技巧\n * 浏览器跨域方法与基于 Fetch 的 Web 请求最佳实践\n * fetch-jsonp\n * 前端常见跨域解决方案（全）\n * navigator.sendBeacon\n * Web sendBeacon 刷新/关闭页面之前发送请求",normalizedContent:" * 简易版 1\n\n// 1.实例化\nvar xhr = new xmlhttprequest();\n// 2.请求行\n//第三个参数：true 为 异步 ; false 为同步\n// get传参\nxhr.open('get', 'index.php?name=xiaoming&&age=10', true);\n//post\nxhr.open('post', 'index.php', true);\n// 3.请求头:\n//get方式可以不设请求头\nxhr.setrequestheader('content-type', 'text/html');\n// post方式必须要设置请求头\nxhr.setrequestheader('content-type', 'application/x-www-form-urlencoded');\n// 4.请求主体\n// get方式\nxhr.send(null);\n// post参数放到请求主体里\nxhr.send('name=xiaoming&age=10');\n// 5.响应状态 ：request.responsetext或者request.responsexml\n// 事件的监听，来监听状态的变化\nxhr.onreadystatechange = function () {\n  // console.log(xhr.readystate);\n  // console.log(xhr.status);\n\n  // 此状态则为响应结果完成\n  if (xhr.readystate == 4 && xhr.status == 200) {\n    // 通过dom操作将内容放到页面上\n    document.getelementbyid('result').innerhtml = xhr.responsetext;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n * 简易版 2\n\nvar ajax = {\n  params: function (params) {\n    var data = '';\n    // 拼凑参数\n    for (key in params) {\n      data += key + '=' + params[key] + '&';\n    }\n\n    // 将最后一个&字符截掉\n    return data.slice(0, -1);\n  },\n  // 兼容\n  createxhr: function () {\n    if (typeof xmlhttprequest != \"undefined\") {\n      return new xmlhttprequest();\n    } else if (typeof activexobject != \"undefined\") {\n      if (typeof arguments.callee.activexstring != \"string\") {\n        var versions = [\"msxml2.xmlhttp.6.0\", \"msxml2.xmlhttp.3.0\",\n          \"msxml2.xmlhttp\"\n        ],\n          i, len;\n\n        for (i = 0, len = versions.length; i < len; i++) {\n          try {\n            new activexobject(versions[i]);\n            arguments.callee.activexstring = versions[i];\n            break;\n          } catch (ex) {\n            //skip\n          }\n        }\n      }\n      return new activexobject(arguments.callee.activexstring);\n    } else {\n      throw new error(\"no xhr object available.\");\n    }\n  },\n  // 字符串转json\n  strtojson: function (str) {\n    var json = (new function(\"return \" + str))();\n    return json;\n  },\n  // ajax实例\n  ajax: function (options) {\n    // 实例化xmlhttprequest\n    // var xhr = new xmlhttprequest,\n    var _this = this,\n      xhr = _this.createxhr(),\n\n      // 默认为get方式\n      type = options.type || 'get',\n      // 默认请求路径\n      url = options.url || location.pathname,\n      // 格式化数据key1=value1&key2=value2\n      data = _this.params(options.data);\n\n    // get 方式将参数拼接到url上并将data设置成null\n    if (type == 'get') {\n      url = url + '?' + data;\n      data = null;\n    }\n\n    xhr.open(type, url);\n\n    // post 方式设置请求头\n    if (type == 'post') {\n      xhr.setrequestheader('content-type', 'application/x-www-form-urlencoded');\n    }\n\n    // 发送请求主体\n    xhr.send(data);\n\n    // 监听响应\n    xhr.onreadystatechange = function () {\n      if (xhr.readystate == 4 && xhr.status == 200) {\n        // 获取响应类型\n        var contenttype = xhr.getresponseheader('content-type');\n\n        var data = xhr.responsetext;\n\n        // 解析json\n        if (contenttype.indexof('json') != -1 && typeof json != \"undefined\") {\n          data = json.parse(data);\n        }\n\n        // 调用success\n        options.success(data);\n      } else {\n        options.error('请求失败!');\n      }\n    }\n\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n# api 详解\n * xhr.open() 发起请求，可以是 get、post 方式\n * xhr.setrequestheader() 设置请求头\n * xhr.send() 发送请求主体 get 方式使用xhr.send(null)\n * xhr.onreadystatechange = function () {} 监听响应状态\n * xhr.readystate * xhr.readystate = 0时，unsent open 尚未调用\n    * xhr.readystate = 1时，opened open 已调用\n    * xhr.readystate = 2时，headers_received 接收到头信息\n    * xhr.readystate = 3时，loading 接收到响应主体\n    * xhr.readystate = 4时，done 响应完成\n   \n   \n * xhr.status表示响应码，如 200\n * xhr.statustext表示响应信息，如 ok\n * xhr.getallresponseheaders() 获取全部响应头信息\n * xhr.getresponseheader('key') 获取指定头信息\n * xhr.responsetext、xhr.responsexml都表示响应主体\n * get 和 post 请求方式的差异 * get 没有请求主体，使用xhr.send(null)\n    * get 可以通过在请求 url 上添加请求参数\n    * post 可以通过xhr.send('name=xiaoming&age=10')\n    * post 需要设置 xhr.setrequestheader('content-type', 'application/x-www-form-urlencoded');\n    * get 效率更好\n    * get 大小限制约 4k，post 则没有限制\n   \n   \n\n# get 请求\nvar xhr = new xmlhttprequest();\n// 请求行\nxhr.open(\"get\", \"/get\");\n// 请求头\nxhr.setrequestheader(\"content-type\", \"text/html\");\n// 请求主体\nxhr.send(null);\n// 事件的监听，来监听状态的变化\nxhr.onreadystatechange = function() {\n  //console.log(xhr.status);\n  if (xhr.readystate == 4 && xhr.status === 200) {\n    console.log(xhr.responsetext);\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# post 请求\nvar xhr = new xmlhttprequest();\n// 请求行\nxhr.open(\"post\", \"/post\");\n// 请求头  post\nxhr.setrequestheader(\"content-type\", \"application/x-www-form-urlencoded\");\n// 请求主体\nxhr.send(\"name=xiaowang&age=30\");\n\n// 事件的监听，来监听状态的变化\nxhr.onreadystatechange = function() {\n  if (xhr.readystate == 4 && xhr.status === 200) {\n    console.log(xhr.responsetext);\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# xml\n * xml 是一种标记语言，很类似 html，其宗旨是用来传输数据，具有自我描述性（固定的格式的数据）\n * 语法规则 * 必须有一个根元素\n    * 不可有空格、不可以数字或.开头、大小写敏感\n    * 不可交叉嵌套\n    * 属性双引号（浏览器自动修正成双引号了）\n    * 特殊符号要使用实体 ps:&lt; &gt;\n    * 注释和 html 一样\n    * <?xml version=\"1.0\" encoding=\"utf-8\"?> 文档最开始\n   \n   \n\n# xmlhttprequest 兼容性\n * ie5、ie6 中使用 activeobject(\"microsoft.xmlhttp\")\n\nvar xhr;\nif (xmlhttprequest) {\n  xhr = new xmlhttprequest();\n} else {\n  xhr = new activeobject(\"microsoft.xmlhttp\");\n}\n\n\n1\n2\n3\n4\n5\n6\n# 同源\n * 同源策略是浏览器的一种安全策略，所谓同源是指，域名，协议，端口完全相同。\n\n# 跨域场景\n主域名： http://www.example.com/\n\nhttp://api.example.com/index.html    不同源  域名不同\n\nhttps//www.example.com/index.htm    不同源  协议不同\n\nhttp://www.example.com:8080/index.html  不同源  端口不同\n\nhttp://api.example.com:8080/index.html  不同源  域名、端口不同\n\nhttps://api.example.com/index.html  不同源  协议、域名不同\n\nhttps://www.example.com:8080/index.html   不同源    端口、协议不同\n\nhttp://www.example.com/detail/index.html    同  源    只是目录不同\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 跨域方案\n * 通过 jsonp 跨域\n * document.domain + iframe 跨域\n * location.hash + iframe\n * window.name + iframe 跨域\n * postmessage 跨域\n * 跨域资源共享（cors）\n * nginx 代理跨域\n * nodejs 中间件代理跨域\n * websocket 协议跨域\n\n# fetch 发送 2 次请求的原因\nfetch 的 post 请求的时候，导致 fetch 第一次发送了一个 options 请求，询问服务器是否支持修改的请求头， 如果服务器支持，则在第二次中发送真正的请求\n\n# jsonp\n * jsonp 的优点是：它不像 xmlhttprequest 对象实现的 ajax 请求那样受到同源策略的限制；它的兼容性更好， 在更加古老的浏览器中都可以运行，不需要 xmlhttprequest 或 activex 的支持； 并且在请求完毕后可以通过调用 callback 的方式回传结果\n   \n   \n * jsonp 的缺点则是：它只支持 get 请求而不支持 post 等其它类型的 http 请求；它只支持跨域 http 请求这种情况， 不能解决不同域的两个页面之间如何进行 javascript 调用的问题\n   \n   \n\nfunction jsonp({ url, params, cb }) {\n  return new promise((resolve, reject) => {\n    let script = document.createelement('script')\n    window[cb] = function (data) {\n      resolve(data);\n      document.body.removechild(script)\n    }\n    params = { ...params, cb }\n    let arrs = [];\n    for (let key in params) {\n      arrs.push(`${key}=${params[key]}`)\n    }\n    script.src = `${url}?${arrs.join('&')}`\n    document.body.appendchild(script)\n  })\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# cors\n * 对比cors， jsonp 只能实现 get 请求，而 cors 支持所有类型的 http 请求\n   \n   \n * 对于简单请求，浏览器直接发出 cors 请求。具体来说，就是在头信息之中，增加一个 origin 字段\n   \n   origin: http://api.bob.com\n   \n   origin 字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求\n   \n   如果 origin 指定的源，不在许可范围内，服务器会返回一个正常的 http 回应。浏览器发现，这个回应的头信息没有包含access-control-allow-origin字段，就知道出错了，从而抛出一个错误，被 xmlhttprequest 的 onerror 回调函数捕获。注意，这种错误无法通过状态码识别，因为 http 回应的状态码有可能是 200\n   \n   \n * 如果 origin 指定的域名在许可范围内，服务器返回的响应，会多出几个头信息字段\n   \n   \n\naccess-control-allow-origin: http://api.bob.com\naccess-control-allow-credentials: true\naccess-control-expose-headers: foobar\ncontent-type: text/html; charset=utf-8\n\n\n1\n2\n3\n4\n上面的头信息之中，有三个与 cors 请求相关的字段，都以 access-control-开头\n\n * access-control-allow-origin\n   \n    * 该字段是必须的。它的值要么是请求时 origin 字段的值，要么是一个*，表示接受任意域名的请求\n   \n   \n * access-control-allow-credentials\n   \n    * 该字段可选。它的值是一个布尔值，表示是否允许发送 cookie。默认情况下，cookie 不包括在 cors 请求之中。 设为 true，即表示服务器明确许可，cookie 可以包含在请求中，一起发给服务器。这个值也只能设为 true， 如果服务器不要浏览器发送 cookie，删除该字段即可\n   \n   \n * access-control-expose-headers\n   \n    * 该字段可选。cors 请求时，xmlhttprequest对象的getresponseheader()方法 只能拿到 6 个基本字段：cache-control、content-language、content-type、expires、last-modified、pragma。 如果想拿到其他字段，就必须在access-control-expose-headers里面指定\n   \n   \n\n# withcredentials 属性\n * cors 请求默认不发送 cookie 和 http 认证信息。如果要把 cookie 发到服务器， 一方面要服务器同意，指定access-control-allow-credentials字段\n   \n   access-control-allow-credentials: true\n   \n   \n * 另一方面，开发者必须在 ajax 请求中打开withcredentials属性\n   \n   \n\nvar xhr = new xmlhttprequest();\nxhr.withcredentials = true;\n\n\n1\n2\n * 否则，即使服务器同意发送 cookie，浏览器也不会发送。或者，服务器要求设置 cookie，浏览器也不会处理\n   \n   \n * 需要注意的是，如果要发送 cookie，access-control-allow-origin就不能设为星号，必须指定明确的、与请求网页一致的域名\n   \n   \n * 同时，cookie 依然遵循同源政策，只有用服务器域名设置的 cookie 才会上传，其他域名的 cookie 并不会上传，且（跨源）原网页代码中的 document.cookie 也无法读取服务器域名下的 cookie\n   \n   \n\n# 相关链接\n * ajax 知识体系大梳理\n * nginx 通过 cors 实现跨域\n * fetch 进阶指南\n * xmlhttprequest2 新技巧\n * 浏览器跨域方法与基于 fetch 的 web 请求最佳实践\n * fetch-jsonp\n * 前端常见跨域解决方案（全）\n * navigator.sendbeacon\n * web sendbeacon 刷新/关闭页面之前发送请求",charsets:{cjk:!0}},{title:"web资源列表",frontmatter:{title:"web资源列表",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",readingShow:"top"},regularPath:"/js/",relativePath:"js/README.md",key:"v-17d3d140",path:"/js/",lastUpdated:"2020/7/30 上午10:49:06",headersStr:null,content:" * developer mozilla cn\n * javascript.fun\n * Web 前端导航\n * wangdoc/javascript-tutorial\n * 印记中文\n * 30-seconds-of-code 中文版\n * 前端 awesomes-trend\n * stephentian/33-js-concepts\n * javascriptweekly\n * react.statuscode\n * medium\n * css-tricks\n * freecodecamp\n * socketio\n * World Wide Web\n * electronjs\n * webcomponents\n * leetcode 算法\n * BRENDAN EICH Blog\n * webcomponents\n * hellogithub\n * 30-seconds-of-code 中文版\n * usejsdoc\n\n\n\n\n * zhaotoday/esdoc\n * jsdoc\n * 自定义滚动条的实现思路与关键算法\n * You-Dont-Need-jQuery\n * babel\n * es6.ruanyifeng\n * 原生 JS 实现最简单的图片懒加载\n * better-scroll 移动端滚动插件\n * select2\n * fullpage.js\n * instant.page\n * quicklink\n * 如何使用 Tween.js 各类原生动画运动缓动算法\n * canvas 中文文档\n * 前端必备自定义滚动库——iScroll\n * 分享 8 个有趣且实用的 API\n * live2D 看板娘\n * 你不知道的 Web Workers （上）[7.8K 字 | 多图预警]\n\n\n\n\ngithub 登录授权\n\n * AnDongCai@back-login\n * linwalker@node-login\n * 第三方登入例子-GitHub 授权登入（node-koa）\n * GitHub OAuth 第三方登录示例教程\n * 基于 Github API 的图床 Chrome 插件开发全纪录\n\n\n\n\n * 你不知道的 Blob\n * 前端图片 canvas，file，blob，DataURL 等格式转换\n * 为什么视频网站的视频链接地址是 blob？\n * [1.3 万字] 玩转前端二进制\n * 彻底弄懂文件和二进制数据的操作\n * FileSaver.js\n * 这应该是你见过的最全前端下载总结\n * js 如何下载图片、pdf、mp3 等各类多媒体文件\n\n\n\n\n * 1.2W 字 | 了不起的 TypeScript 入门教程\n * （三万字长文）类型即正义：TypeScript 从入门到实践系列，正式完结！\n * TypeScript 基本知识点整理（看完绝对入门---真的！！）\n * typescript@bootcss\n * typescriptlang\n\n\n\n\n * 前端常用插件、工具类库汇总，不要重复造轮子啦！！！\n * 34 个今年 11 月最受欢迎的 JavaScript 库\n * 1.5 万字概括 ES6 全部特性(已更新 ES2020)\n * [源码解读]一文彻底搞懂 Events 模块",normalizedContent:" * developer mozilla cn\n * javascript.fun\n * web 前端导航\n * wangdoc/javascript-tutorial\n * 印记中文\n * 30-seconds-of-code 中文版\n * 前端 awesomes-trend\n * stephentian/33-js-concepts\n * javascriptweekly\n * react.statuscode\n * medium\n * css-tricks\n * freecodecamp\n * socketio\n * world wide web\n * electronjs\n * webcomponents\n * leetcode 算法\n * brendan eich blog\n * webcomponents\n * hellogithub\n * 30-seconds-of-code 中文版\n * usejsdoc\n\n\n\n\n * zhaotoday/esdoc\n * jsdoc\n * 自定义滚动条的实现思路与关键算法\n * you-dont-need-jquery\n * babel\n * es6.ruanyifeng\n * 原生 js 实现最简单的图片懒加载\n * better-scroll 移动端滚动插件\n * select2\n * fullpage.js\n * instant.page\n * quicklink\n * 如何使用 tween.js 各类原生动画运动缓动算法\n * canvas 中文文档\n * 前端必备自定义滚动库——iscroll\n * 分享 8 个有趣且实用的 api\n * live2d 看板娘\n * 你不知道的 web workers （上）[7.8k 字 | 多图预警]\n\n\n\n\ngithub 登录授权\n\n * andongcai@back-login\n * linwalker@node-login\n * 第三方登入例子-github 授权登入（node-koa）\n * github oauth 第三方登录示例教程\n * 基于 github api 的图床 chrome 插件开发全纪录\n\n\n\n\n * 你不知道的 blob\n * 前端图片 canvas，file，blob，dataurl 等格式转换\n * 为什么视频网站的视频链接地址是 blob？\n * [1.3 万字] 玩转前端二进制\n * 彻底弄懂文件和二进制数据的操作\n * filesaver.js\n * 这应该是你见过的最全前端下载总结\n * js 如何下载图片、pdf、mp3 等各类多媒体文件\n\n\n\n\n * 1.2w 字 | 了不起的 typescript 入门教程\n * （三万字长文）类型即正义：typescript 从入门到实践系列，正式完结！\n * typescript 基本知识点整理（看完绝对入门---真的！！）\n * typescript@bootcss\n * typescriptlang\n\n\n\n\n * 前端常用插件、工具类库汇总，不要重复造轮子啦！！！\n * 34 个今年 11 月最受欢迎的 javascript 库\n * 1.5 万字概括 es6 全部特性(已更新 es2020)\n * [源码解读]一文彻底搞懂 events 模块",charsets:{cjk:!0}},{title:"Array数组",frontmatter:{title:"Array数组",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["array"],readingShow:"top"},regularPath:"/js/array.html",relativePath:"js/array.md",key:"v-759141f1",path:"/js/array.html",headers:[{level:2,title:"in 运算符",slug:"in-运算符",normalizedTitle:"in 运算符",charIndex:15},{level:2,title:"isArray",slug:"isarray",normalizedTitle:"isarray",charIndex:412},{level:2,title:"Array.of",slug:"array-of",normalizedTitle:"array.of",charIndex:617},{level:2,title:"includes",slug:"includes",normalizedTitle:"includes",charIndex:840},{level:2,title:"Array.from",slug:"array-from",normalizedTitle:"array.from",charIndex:1125},{level:3,title:"类数组转数组",slug:"类数组转数组",normalizedTitle:"类数组转数组",charIndex:1139},{level:2,title:"会改变原数组",slug:"会改变原数组",normalizedTitle:"会改变原数组",charIndex:1884},{level:3,title:"pop",slug:"pop",normalizedTitle:"pop",charIndex:1893},{level:3,title:"push",slug:"push",normalizedTitle:"push",charIndex:2025},{level:3,title:"shift",slug:"shift",normalizedTitle:"shift",charIndex:2174},{level:3,title:"unshift",slug:"unshift",normalizedTitle:"unshift",charIndex:2310},{level:3,title:"reverse",slug:"reverse",normalizedTitle:"reverse",charIndex:2463},{level:3,title:"splice",slug:"splice",normalizedTitle:"splice",charIndex:2625},{level:3,title:"sort",slug:"sort",normalizedTitle:"sort",charIndex:3058},{level:3,title:"fill",slug:"fill",normalizedTitle:"fill",charIndex:3568},{level:2,title:"原数组不变",slug:"原数组不变",normalizedTitle:"原数组不变",charIndex:3942},{level:3,title:"concat",slug:"concat",normalizedTitle:"concat",charIndex:1453},{level:3,title:"slice",slug:"slice",normalizedTitle:"slice",charIndex:1161},{level:3,title:"join",slug:"join",normalizedTitle:"join",charIndex:5573},{level:3,title:"flat",slug:"flat",normalizedTitle:"flat",charIndex:6154},{level:3,title:"flatMap",slug:"flatmap",normalizedTitle:"flatmap",charIndex:6465},{level:2,title:"reduce",slug:"reduce",normalizedTitle:"reduce",charIndex:6944},{level:2,title:"valueOf 与 toString",slug:"valueof-与-tostring",normalizedTitle:"valueof 与 tostring",charIndex:7911},{level:2,title:"map",slug:"map",normalizedTitle:"map",charIndex:6567},{level:2,title:"indexOf 与 lastIndexOf",slug:"indexof-与-lastindexof",normalizedTitle:"indexof 与 lastindexof",charIndex:8785},{level:2,title:"filter",slug:"filter",normalizedTitle:"filter",charIndex:9353},{level:2,title:"forEach",slug:"foreach",normalizedTitle:"foreach",charIndex:9989},{level:2,title:"every",slug:"every",normalizedTitle:"every",charIndex:10207},{level:2,title:"some",slug:"some",normalizedTitle:"some",charIndex:10413},{level:2,title:"[Symbol.iterator]()",slug:"symbol-iterator",normalizedTitle:'<a href="">symbol.iterator</a>',charIndex:null},{level:2,title:"创建数组",slug:"创建数组",normalizedTitle:"创建数组",charIndex:11038},{level:3,title:"添加成员",slug:"添加成员",normalizedTitle:"添加成员",charIndex:11224},{level:3,title:"访问成员",slug:"访问成员",normalizedTitle:"访问成员",charIndex:11270},{level:3,title:"属性绑定",slug:"属性绑定",normalizedTitle:"属性绑定",charIndex:11429},{level:3,title:"for 循环数组",slug:"for-循环数组",normalizedTitle:"for 循环数组",charIndex:11512},{level:3,title:"while",slug:"while",normalizedTitle:"while",charIndex:11710},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:11985}],lastUpdated:"2020/8/3 上午10:17:07",headersStr:"in 运算符 isArray Array.of includes Array.from 类数组转数组 会改变原数组 pop push shift unshift reverse splice sort fill 原数组不变 concat slice join flat flatMap reduce valueOf 与 toString map indexOf 与 lastIndexOf filter forEach every some [Symbol.iterator]() 创建数组 添加成员 访问成员 属性绑定 for 循环数组 while 相关链接",content:'\n\nMDN/Array\n\n# in 运算符\n * in运算符用于检查对象是否包含某个属性(注意:检查的是键名,不是键值),\n * 如果包含就返回true,否则返回false\n\nvar o = { p: 1 };\n"p" in o; // true\n\n// 假设变量x未定义\n// 写法一：报错\nif (x) {\n  return 1;\n}\n// 写法二：不正确\nif (window.x) {\n  return 1;\n}\n// 写法三：正确\nif ("x" in window) {\n  return 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * in它不能识别对象继承的属性\n\nvar o = new Object();\no.hasOwnProperty("toString"); // false\n"toString" in o; // true\n\n\n1\n2\n3\n# isArray\n * Array.isArray(option) 返回一个布尔值，表示参数是否为数组\n\nArray.isArray([1, 2, 3]); // true\nArray.isArray({ foo: 123 }); // false\nArray.isArray("foobar"); // false\nArray.isArray(undefined); // false\n\n\n1\n2\n3\n4\n# Array.of\n * 创建一个具有可变数量参数的新数组实例，而不考虑参数的数量或类型\n * Array.of(element0[, element1[, ...[, elementN]]])\n\nArray.of(7); // [7]\nArray.of(1, 2, 3); // [1, 2, 3]\n\nArray(7); // [ , , , , , , ]\nArray(1, 2, 3); // [1, 2, 3]\n\n\n1\n2\n3\n4\n5\n# includes\n * arr.includes(valueToFind[, fromIndex])\n * 用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回 false\n\n[1, 2, 3].includes(2); // true\n[1, 2, 3].includes(4); // false\n[1, 2, 3].includes(3, 3); // false\n[1, 2, 3].includes(3, -1); // true\n[1, 2, NaN].includes(NaN); // true\n\n\n1\n2\n3\n4\n5\n# Array.from\n * 类数组转数组Array.prototype.slice.call(arguments)\n * 类数组转数组Array.from(arguments)\n\nArray.prototype.slice.apply({ 0: 1, length: 1 });\nArray.prototype.slice.apply({ 0: 1 });\nArray.prototype.slice.apply({ 0: 1, length: 2 });\nArray.prototype.slice.apply({ length: 1 });\nArray.prototype.slice.call(arguments);\nArray.prototype.concat.apply([], arguments);\n\nArray.from("foo"); // ["f", "o", "o"]\nArray.from([1, 2, 3], x => x + x); // [2, 4, 6]\n\nvar s = new Set(["foo", window]);\nArray.from(s); // ["foo", Window]\n\nvar m = new Map([\n  [1, 2],\n  [2, 4],\n  [4, 8]\n]);\nArray.from(m); // [[1, 2], [2, 4], [4, 8]]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 类数组转数组\nArray.prototype.slice.call(arguments);\nArray.prototype.concat.apply([], arguments);\n\n\n1\n2\n# 会改变原数组\n# pop\n删除数组的最后一个元素, 并返回该元素\n\nvar arr = ["a", "b", "c", "d"];\nvar newArr = arr.pop();\nnewArr; // "d"\narr; // ["a", "b", "c"]\n\n\n1\n2\n3\n4\n# push\n向数组最后添加一个或多个元素，返回新数组的长度\n\nvar arr = ["a", "b", "c", "d"];\nvar newArr = arr.push("e");\nnewArr; // 5\narr; // ["a", "b", "c", "d", "e"]\n\n\n1\n2\n3\n4\n# shift\n用于删除数组的第一个元素，并返回该元素\n\nvar arr = ["a", "b", "c", "d"];\nvar newArr = arr.shift();\nnewArr; // "a"\narr; // ["b", "c", "d"]\n\n\n1\n2\n3\n4\n# unshift\n在数组第一个位置添加元素，返回新数组的长度\n\nvar arr = ["a", "b", "c", "d"];\nvar newArr = arr.unshift("e");\nnewArr; // 5\narr; // ["e", "a", "b", "c", "d"]\n\n\n1\n2\n3\n4\n# reverse\n用于颠倒排列数组元素，返回改变后的数组\n\nvar arr = ["a", "b", "c", "d"];\nvar newArr = arr.reverse();\nnewArr; // ["d", "c", "b", "a"]\narr; // ["d", "c", "b", "a"]\n\n\n1\n2\n3\n4\n# splice\n删除原数组部分成员, 并可以在删除的位置添加新成员,返回被删除的元素\n\n// start 起始位置\n// count 被删除的元素个数\n// addEle1 被插入数组的新元素\narr.splice(start, count, addEle1, ...);\n\nvar arr = [\'a\', \'b\', \'c\', \'d\'];\nvar newArr = arr.splice(1, 2, \'e\');\nnewArr // ["b", "c"]\narr // ["a", "e", "d"]\n\n// 如果插入元素，则splice的第二个参数设为0即可\nvar arr = [\'a\', \'b\', \'c\', \'d\'];\nvar newArr = arr.splice(1, 0, \'e\');\nnewArr // []\narr // ["a", "e", "b", "c", "d"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# sort\n对数组成员进行排序 (默认是按照字典顺序排序)\n\n// 可以传入一个函数作为参数\n//小-大：\nfunction (a, b) {return a - b;}\n\nvar arr = [\'4\', \'2\', \'1\', \'3\'];\nvar newArr = arr.sort(function(a,b){return a-b;});\nnewArr // ["1", "2", "3", "4"]\narr // ["1", "2", "3", "4"]\n\n// 大-小：\nfunction (a, b) {return b - a;}\n\nvar arr = [{id: 4}, {id: 2}, {id: 1}, {id: 3}];\nvar newArr = arr.sort(function(a,b){return b.id-a.id;});\nnewArr // [{id: 4}, {id: 3}, {id: 2}, {id: 1}]\narr // [[{id: 4}, {id: 3}, {id: 2}, {id: 1}]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# fill\n * arr.fill(value[, start[, end]])\n * 方法用一个固定值填充一个数组中从起始索引到终止索引内的全部元素\n * 不包括终止索引\n\nvar arr = ["a", "b", 1, 2];\nvar newArr = arr.fill(2);\nnewArr; // [2, 2, 2, 2]\narr; // [2, 2, 2, 2]\n\nvar arr = ["a", "b", 1, 2];\nvar newArr = arr.fill("m", 0, 2);\nnewArr; // ["m", "m", 1, 2]\narr; // ["m", "m", 1, 2]\n\nArray(3).fill("Ab"); // ["Ab", "Ab", "Ab"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 原数组不变\n# concat\n * 用于多个数组的合并,返回一个新数组\n * 如果数组成员包括对象，concat方法返回当前数组的一个浅拷贝\n * “浅拷贝”，指的是新数组拷贝的是对象的引用\n\nvar arr1 = ["a", 2],\n  arr2 = [2, "c"],\n  arr3 = [{ name: "a" }, { name: "d" }];\n\nvar newArr = arr1.concat(arr2, arr3);\nnewArr; //  ["a", 2, 2, "c", {"name": "a"}, {"name": "d"}]\narr1; // ["a", 2]\n\n// 浅拷贝\nvar newArr2 = arr3;\nnewArr2[0].name = "Hello";\nnewArr2; // [{"name": "hello"}, {"name": "d"}];\narr3; // [{"name": "hello"}, {"name": "d"}];\n\n// 浅拷贝\nvar arr = [{ name: "a" }, { name: "d" }];\nvar copy = [].concat(arr);\ncopy[0].name = "world";\ncopy; // [{"name": "word"}, {"name": "d"}]\narr; // [{"name": "word"}, {"name": "d"}]\n\n// concat 深拷贝\nvar arr1 = ["1", "2", "3"];\nvar arr2 = arr1.concat();\narr2[1] = "9";\narr1; // ["1", "2", "3"]\narr2; // ["1", "9", "3"]\n\n// slice 深拷贝\nvar arr1 = ["1", "2", "3"];\nvar arr2 = arr1.slice();\narr2[1] = "9";\narr1; // ["1", "2", "3"]\narr2; // ["1", "9", "3"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# slice\n * slice(start, end)用于提取目标数组的一部分，返回一个新数组\n\nvar arr = ["a", "b", "c", "d"];\nvar newArr = arr.slice(1, 12);\nnewArr; // ["b"]\narr; // ["a", "b", "c", "d"]\n\nvar arr = ["a", "b", "c", "d"];\nvar newArr = arr.slice(1, 12);\nnewArr; // ["b", "c", "d"]\narr; // ["a", "b", "c", "d"]\n\nvar arr = ["a", "b", "c", "d"];\nvar newArr = arr.slice(-1, 4);\nnewArr; // ["d"]\narr; // ["a", "b", "c", "d"]\n\nvar arr = ["a", "b", "c", "d"];\nvar newArr = arr.slice(-2, 3);\nnewArr; // ["c"]\narr; // ["a", "b", "c", "d"]\n\n// 使用 Array.slice(0) 实现数组浅拷贝\nvar arr = [1, 2, 3, 4];\nvar arr2 = arr.slice(0);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# join\n * 以指定参数作为分隔符，连接所有数组成员, 返回字符串\n\nvar arr = ["a", "b", "c", "d"];\nvar newArr = arr.join("#");\nnewArr; // "a#b#c#d"\narr; // ["a", "b", "c", "d"]\n\n\n1\n2\n3\n4\n * 如果不提供参数，默认用逗号分隔\n\nvar arr = ["a", "b", "c", "d"];\nvar newArr = arr.join();\nnewArr; // "a,b,c,d"\narr; // ["a", "b", "c", "d"]\n\n\n1\n2\n3\n4\n * 如果数组成员是 undefined 或 null 或空位，会被转成空字符串\n\nvar arr = ["a", "b", null, "c", undefined, "d", , "e"];\nvar newArr = arr.join("@");\nnewArr; // "a@b@@c@@d@@e"\narr; // ["a", "b", "c", "d"]\n\n\n1\n2\n3\n4\n * 通过 call 方法，该方法可用于分隔字符串或类似数组的对象\n\nArray.prototype.join.call("hello", "-"); // "h-e-l-l-o"\n\n\n1\n# flat\n * arr.flat(depth)\n * 会递归到指定深度将所有子数组连接，并返回一个新数组\n * 方法会移除数组中的空项\n\nvar arr = [1, 2, [3, 4]];\nvar newArr = arr.flat();\nnewArr; // [1, 2, 3, 4]\narr; // [1, 2, [3, 4]]\n\nvar arr = [1, 2, [3, 4, [5, 6]]];\nvar newArr = arr.flat(2);\nnewArr; // [1, 2, 3, 4, 5, 6]\narr; // [1, 2, [3, 4, [5, 6]]]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# flatMap\n * arr.flatMap(function callback(currentValue[, index[, array]])\n\nvar arr = [1, 2, 3, 4];\narr.map(x => [x * 2]); // [[2], [4], [6], [8]]\n\nvar arr = [1, 2, 3, 4];\narr.flatMap(x => [x * 2]); // [2, 4, 6, 8]\n\nvar arr = ["今天天气不错", "", "早上好"];\narr.map(s => s.split(""));\n// [["今", "天", "天", "气", "不", "错"],[""],["早", "上", "好"]]\n\nvar arr = ["今天天气不错", "", "早上好"];\narr.flatMap(s => s.split(""));\n// ["今", "天", "天", "气", "不", "错", "早", "上", "好"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# reduce\n * reduce(callback(options)[, initialValue]) * options * accumulator 累加器累加回调的返回值\n       * currentValue 数组中正在处理的元素\n       * currentIndex 数组中正在处理的当前元素的索引(可选参数)\n       * array 调用reduce()的数组(可选参数)\n      \n      \n    * initialValue * 用作第一次调用 callback 函数时的第一个参数的值\n       * 如果没有提供初始值，则将使用数组中的第一个元素\n      \n      \n   \n   \n\nvar arr = [1, 2, 3, 4];\nvar newArr = arr.reduce(function(pre, cur) {\n  return pre + cur;\n}, 10);\nnewArr; // 20\n\n\n1\n2\n3\n4\n5\n * 实现\n\nfunction reduce(arr, reduceCallback, initialValue) {\n  if (!Array.isArray(arr) || !arr.length || typeof reduceCallback !== \'function\')\n  {\n    return [];\n  } else {\n    let hasInitialValue = initialValue !== undefined;\n    let value = hasInitialValue ? initialValue : arr[0];\n    // 如果有传递 initialValue，则索引从 1 开始，否则从 0 开始\n    for (let i = hasInitialValue ? 0 : 1, len = arr.length; i < len; i++) {\n      value = reduceCallback(value, arr[i], i, arr);\n    }\n    return value;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# valueOf 与 toString\n * toString()方法返回数组的字符串形式\n * valueOf()方法返回数组本身\n\nvar arr = ["a", "b", 3, 4];\narr.toString(); // "a,b,3,4"\narr.valueOf(); // [\'a\', \'b\', 3, 4]\n\n\n1\n2\n3\n# map\n * map(callback(options)[,thisArg]) 返回新数组\n * options: (elem, index)\n\nvar arr = ["a", "b", 3, 4];\narr.map(function(item, index) {\n  console.log(item, index);\n});\n\n// a 0\n// b 1\n// 3 2\n// 4 3\n\nvar arr = [1, 2, 3, 4];\nvar newArr = arr.map(function(item, index) {\n  return item + 1;\n});\nnewArr; // [2, 3, 4, 5]\narr; // [1, 2, 3, 4]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * 实现map\n\nfunction map(arr, mapCallback) {\n  if (!Array.isArray(arr) || !arr.length || typeof mapCallback !== \'function\') {\n    return [];\n  } else {\n    let result = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n      result.push(mapCallback(arr[i], i, arr));\n    }\n    return result;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# indexOf 与 lastIndexOf\n * indexOf()返回元素第一次出现的位置，没有则返回-1\n\nvar arr = ["a", "b", 3, 4];\narr.indexOf("b"); // 1\narr.indexOf("c"); // -1\n\n\n1\n2\n3\n * indexOf()方法接受第二个参数，表示搜索的开始位置\n\nvar arr = ["a", "b", 3, 4];\narr.indexOf("b", 1); // 1\narr.indexOf("b", 2); // -1\n\n\n1\n2\n3\n * lastIndexOf()返回元素最后一次出现的位置，没有则返回-1\n\nvar arr = ["a", 3, "b", 3, 4];\narr.lastIndexOf(3); // 3\narr.lastIndexOf(3, 1); // 1\n\n\n1\n2\n3\n * 两个方法不能用来搜索 NaN 的位置\n\nvar arr = ["a", NaN, "b", null, "c", undefined, "d"];\narr.indexOf(NaN); // -1 不能正确搜索到结果\narr.indexOf(null); // 3\narr.indexOf(undefined); // 5\n\n\n1\n2\n3\n4\n# filter\n * filter(callback(element[, index[, array]])[, thisArg])\n * 过滤数组成员，满足条件的成员组成一个新数组返回\n\nvar arr = [1, 3, 9, 4, 2, 6];\nvar newArr = arr.filter((element, index) => {\n  return element > 4;\n});\nnewArr; // [9, 6]\narr; // [1, 3, 9, 4, 2, 6]\n\n\n1\n2\n3\n4\n5\n6\n * 实现\n\nfunction filter(arr, filterCallback) {\n  if (!Array.isArray(arr) || !arr.length || typeof filterCallback !== \'function\')\n  {\n    return [];\n  } else {\n    let result = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n      if (filterCallback(arr[i], i, arr)) {\n        result.push(arr[i]);\n      }\n    }\n    return result;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# forEach\n * forEach(callback(elem, index)[,thisArg]) 不返回值，只用来操作数据\n\nvar array1 = ["a", "b", "c"];\n\narray1.forEach(function(element, index) {\n  console.log(element, index);\n});\n\n// a 0\n// b 1\n// c 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# every\n * every(callback[, thisArg])\n * 所有成员的返回值都是true，整个every方法才返回true，否则返回false\n\nvar arr = [1, 30, 39, 29, 10, 13];\nvar res = arr.every(function(ele) {\n  return ele < 40;\n});\n\nres; // true\n\n\n1\n2\n3\n4\n5\n6\n# some\n * some(callback[, thisArg])\n * 只要一个成员的返回值是true，则整个 some 方法的返回值就是true，否则返回false\n\nvar array = [1, 2, 3, 4, 5];\nvar res = array.some(function(ele) {\n  return ele % 2 === 0;\n});\n\nres; // true\n\n\n1\n2\n3\n4\n5\n6\n# [Symbol.iterator]()\nvar arr = ["w", "y", "k"];\nvar eArr = arr[Symbol.iterator]();\nfor (let letter of eArr) {\n  console.log(letter); // w , y , k\n}\n\nvar arr = ["w", "y", "k"];\nvar eArr = arr[Symbol.iterator]();\neArr.next(); // {value: "w", done: false}\neArr.next(); // {value: "y", done: false}\neArr.next(); // {value: "k", done: false}\neArr.next(); // {value: undefined, done: false}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 创建数组\nvar arr = new Array(); //创建好了一个数组\nvar arr = [];\n//(1)\nvar arr = new Array([1, 2, 3]);\n//(2)\nvar arr = [1, 2, 3];\n//(3)\nvar arr = new Array();\narr = [1, 2, 3];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 添加成员\nvar arr = [1, 2, 3];\narr[3] = 4;\n\n\n1\n2\n# 访问成员\n * arr[index] index 从0开始计算\n\nvar arr = [1, 2, 3];\narr[0]; //1\n\nvar arr = new Array([1, 2, 3]);\narr[0][3] = 4; //添加成员\narr[0][1]; //2   访问成员\n\n\n1\n2\n3\n4\n5\n6\n# 属性绑定\nvar arr = [1, 2, 3];\narr.aaa = "hello world";\nconsole.log(arr.aaa);\n\n\n1\n2\n3\n# for 循环数组\nvar arr = [1,2,3];\n// 不推荐\nfor(var i = 0 ;i < arr.length ; i++){\n  console.log(arr[i]);\n}\n// 推荐\nfor(var i = 0 arrL=arr.length;i < arrL ; i++){\n  console.log(arr[i]);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# while\n// func1\nvar arr = ["a", "b", "c", "d"];\nvar i = 0;\nwhile (i < arr.length) {\n  console.log(arr[i]); // a,b,c,d\n  i++;\n}\n\n// func2\nvar arr = ["a", "b", "c", "d"];\nvar l = arr.length;\nwhile (l--) {\n  console.log(arr[l]); // d,c,b,a\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 相关链接\n * JavaScript 专题之深浅拷贝',normalizedContent:'\n\nmdn/array\n\n# in 运算符\n * in运算符用于检查对象是否包含某个属性(注意:检查的是键名,不是键值),\n * 如果包含就返回true,否则返回false\n\nvar o = { p: 1 };\n"p" in o; // true\n\n// 假设变量x未定义\n// 写法一：报错\nif (x) {\n  return 1;\n}\n// 写法二：不正确\nif (window.x) {\n  return 1;\n}\n// 写法三：正确\nif ("x" in window) {\n  return 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * in它不能识别对象继承的属性\n\nvar o = new object();\no.hasownproperty("tostring"); // false\n"tostring" in o; // true\n\n\n1\n2\n3\n# isarray\n * array.isarray(option) 返回一个布尔值，表示参数是否为数组\n\narray.isarray([1, 2, 3]); // true\narray.isarray({ foo: 123 }); // false\narray.isarray("foobar"); // false\narray.isarray(undefined); // false\n\n\n1\n2\n3\n4\n# array.of\n * 创建一个具有可变数量参数的新数组实例，而不考虑参数的数量或类型\n * array.of(element0[, element1[, ...[, elementn]]])\n\narray.of(7); // [7]\narray.of(1, 2, 3); // [1, 2, 3]\n\narray(7); // [ , , , , , , ]\narray(1, 2, 3); // [1, 2, 3]\n\n\n1\n2\n3\n4\n5\n# includes\n * arr.includes(valuetofind[, fromindex])\n * 用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回 false\n\n[1, 2, 3].includes(2); // true\n[1, 2, 3].includes(4); // false\n[1, 2, 3].includes(3, 3); // false\n[1, 2, 3].includes(3, -1); // true\n[1, 2, nan].includes(nan); // true\n\n\n1\n2\n3\n4\n5\n# array.from\n * 类数组转数组array.prototype.slice.call(arguments)\n * 类数组转数组array.from(arguments)\n\narray.prototype.slice.apply({ 0: 1, length: 1 });\narray.prototype.slice.apply({ 0: 1 });\narray.prototype.slice.apply({ 0: 1, length: 2 });\narray.prototype.slice.apply({ length: 1 });\narray.prototype.slice.call(arguments);\narray.prototype.concat.apply([], arguments);\n\narray.from("foo"); // ["f", "o", "o"]\narray.from([1, 2, 3], x => x + x); // [2, 4, 6]\n\nvar s = new set(["foo", window]);\narray.from(s); // ["foo", window]\n\nvar m = new map([\n  [1, 2],\n  [2, 4],\n  [4, 8]\n]);\narray.from(m); // [[1, 2], [2, 4], [4, 8]]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 类数组转数组\narray.prototype.slice.call(arguments);\narray.prototype.concat.apply([], arguments);\n\n\n1\n2\n# 会改变原数组\n# pop\n删除数组的最后一个元素, 并返回该元素\n\nvar arr = ["a", "b", "c", "d"];\nvar newarr = arr.pop();\nnewarr; // "d"\narr; // ["a", "b", "c"]\n\n\n1\n2\n3\n4\n# push\n向数组最后添加一个或多个元素，返回新数组的长度\n\nvar arr = ["a", "b", "c", "d"];\nvar newarr = arr.push("e");\nnewarr; // 5\narr; // ["a", "b", "c", "d", "e"]\n\n\n1\n2\n3\n4\n# shift\n用于删除数组的第一个元素，并返回该元素\n\nvar arr = ["a", "b", "c", "d"];\nvar newarr = arr.shift();\nnewarr; // "a"\narr; // ["b", "c", "d"]\n\n\n1\n2\n3\n4\n# unshift\n在数组第一个位置添加元素，返回新数组的长度\n\nvar arr = ["a", "b", "c", "d"];\nvar newarr = arr.unshift("e");\nnewarr; // 5\narr; // ["e", "a", "b", "c", "d"]\n\n\n1\n2\n3\n4\n# reverse\n用于颠倒排列数组元素，返回改变后的数组\n\nvar arr = ["a", "b", "c", "d"];\nvar newarr = arr.reverse();\nnewarr; // ["d", "c", "b", "a"]\narr; // ["d", "c", "b", "a"]\n\n\n1\n2\n3\n4\n# splice\n删除原数组部分成员, 并可以在删除的位置添加新成员,返回被删除的元素\n\n// start 起始位置\n// count 被删除的元素个数\n// addele1 被插入数组的新元素\narr.splice(start, count, addele1, ...);\n\nvar arr = [\'a\', \'b\', \'c\', \'d\'];\nvar newarr = arr.splice(1, 2, \'e\');\nnewarr // ["b", "c"]\narr // ["a", "e", "d"]\n\n// 如果插入元素，则splice的第二个参数设为0即可\nvar arr = [\'a\', \'b\', \'c\', \'d\'];\nvar newarr = arr.splice(1, 0, \'e\');\nnewarr // []\narr // ["a", "e", "b", "c", "d"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# sort\n对数组成员进行排序 (默认是按照字典顺序排序)\n\n// 可以传入一个函数作为参数\n//小-大：\nfunction (a, b) {return a - b;}\n\nvar arr = [\'4\', \'2\', \'1\', \'3\'];\nvar newarr = arr.sort(function(a,b){return a-b;});\nnewarr // ["1", "2", "3", "4"]\narr // ["1", "2", "3", "4"]\n\n// 大-小：\nfunction (a, b) {return b - a;}\n\nvar arr = [{id: 4}, {id: 2}, {id: 1}, {id: 3}];\nvar newarr = arr.sort(function(a,b){return b.id-a.id;});\nnewarr // [{id: 4}, {id: 3}, {id: 2}, {id: 1}]\narr // [[{id: 4}, {id: 3}, {id: 2}, {id: 1}]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# fill\n * arr.fill(value[, start[, end]])\n * 方法用一个固定值填充一个数组中从起始索引到终止索引内的全部元素\n * 不包括终止索引\n\nvar arr = ["a", "b", 1, 2];\nvar newarr = arr.fill(2);\nnewarr; // [2, 2, 2, 2]\narr; // [2, 2, 2, 2]\n\nvar arr = ["a", "b", 1, 2];\nvar newarr = arr.fill("m", 0, 2);\nnewarr; // ["m", "m", 1, 2]\narr; // ["m", "m", 1, 2]\n\narray(3).fill("ab"); // ["ab", "ab", "ab"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 原数组不变\n# concat\n * 用于多个数组的合并,返回一个新数组\n * 如果数组成员包括对象，concat方法返回当前数组的一个浅拷贝\n * “浅拷贝”，指的是新数组拷贝的是对象的引用\n\nvar arr1 = ["a", 2],\n  arr2 = [2, "c"],\n  arr3 = [{ name: "a" }, { name: "d" }];\n\nvar newarr = arr1.concat(arr2, arr3);\nnewarr; //  ["a", 2, 2, "c", {"name": "a"}, {"name": "d"}]\narr1; // ["a", 2]\n\n// 浅拷贝\nvar newarr2 = arr3;\nnewarr2[0].name = "hello";\nnewarr2; // [{"name": "hello"}, {"name": "d"}];\narr3; // [{"name": "hello"}, {"name": "d"}];\n\n// 浅拷贝\nvar arr = [{ name: "a" }, { name: "d" }];\nvar copy = [].concat(arr);\ncopy[0].name = "world";\ncopy; // [{"name": "word"}, {"name": "d"}]\narr; // [{"name": "word"}, {"name": "d"}]\n\n// concat 深拷贝\nvar arr1 = ["1", "2", "3"];\nvar arr2 = arr1.concat();\narr2[1] = "9";\narr1; // ["1", "2", "3"]\narr2; // ["1", "9", "3"]\n\n// slice 深拷贝\nvar arr1 = ["1", "2", "3"];\nvar arr2 = arr1.slice();\narr2[1] = "9";\narr1; // ["1", "2", "3"]\narr2; // ["1", "9", "3"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# slice\n * slice(start, end)用于提取目标数组的一部分，返回一个新数组\n\nvar arr = ["a", "b", "c", "d"];\nvar newarr = arr.slice(1, 12);\nnewarr; // ["b"]\narr; // ["a", "b", "c", "d"]\n\nvar arr = ["a", "b", "c", "d"];\nvar newarr = arr.slice(1, 12);\nnewarr; // ["b", "c", "d"]\narr; // ["a", "b", "c", "d"]\n\nvar arr = ["a", "b", "c", "d"];\nvar newarr = arr.slice(-1, 4);\nnewarr; // ["d"]\narr; // ["a", "b", "c", "d"]\n\nvar arr = ["a", "b", "c", "d"];\nvar newarr = arr.slice(-2, 3);\nnewarr; // ["c"]\narr; // ["a", "b", "c", "d"]\n\n// 使用 array.slice(0) 实现数组浅拷贝\nvar arr = [1, 2, 3, 4];\nvar arr2 = arr.slice(0);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# join\n * 以指定参数作为分隔符，连接所有数组成员, 返回字符串\n\nvar arr = ["a", "b", "c", "d"];\nvar newarr = arr.join("#");\nnewarr; // "a#b#c#d"\narr; // ["a", "b", "c", "d"]\n\n\n1\n2\n3\n4\n * 如果不提供参数，默认用逗号分隔\n\nvar arr = ["a", "b", "c", "d"];\nvar newarr = arr.join();\nnewarr; // "a,b,c,d"\narr; // ["a", "b", "c", "d"]\n\n\n1\n2\n3\n4\n * 如果数组成员是 undefined 或 null 或空位，会被转成空字符串\n\nvar arr = ["a", "b", null, "c", undefined, "d", , "e"];\nvar newarr = arr.join("@");\nnewarr; // "a@b@@c@@d@@e"\narr; // ["a", "b", "c", "d"]\n\n\n1\n2\n3\n4\n * 通过 call 方法，该方法可用于分隔字符串或类似数组的对象\n\narray.prototype.join.call("hello", "-"); // "h-e-l-l-o"\n\n\n1\n# flat\n * arr.flat(depth)\n * 会递归到指定深度将所有子数组连接，并返回一个新数组\n * 方法会移除数组中的空项\n\nvar arr = [1, 2, [3, 4]];\nvar newarr = arr.flat();\nnewarr; // [1, 2, 3, 4]\narr; // [1, 2, [3, 4]]\n\nvar arr = [1, 2, [3, 4, [5, 6]]];\nvar newarr = arr.flat(2);\nnewarr; // [1, 2, 3, 4, 5, 6]\narr; // [1, 2, [3, 4, [5, 6]]]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# flatmap\n * arr.flatmap(function callback(currentvalue[, index[, array]])\n\nvar arr = [1, 2, 3, 4];\narr.map(x => [x * 2]); // [[2], [4], [6], [8]]\n\nvar arr = [1, 2, 3, 4];\narr.flatmap(x => [x * 2]); // [2, 4, 6, 8]\n\nvar arr = ["今天天气不错", "", "早上好"];\narr.map(s => s.split(""));\n// [["今", "天", "天", "气", "不", "错"],[""],["早", "上", "好"]]\n\nvar arr = ["今天天气不错", "", "早上好"];\narr.flatmap(s => s.split(""));\n// ["今", "天", "天", "气", "不", "错", "早", "上", "好"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# reduce\n * reduce(callback(options)[, initialvalue]) * options * accumulator 累加器累加回调的返回值\n       * currentvalue 数组中正在处理的元素\n       * currentindex 数组中正在处理的当前元素的索引(可选参数)\n       * array 调用reduce()的数组(可选参数)\n      \n      \n    * initialvalue * 用作第一次调用 callback 函数时的第一个参数的值\n       * 如果没有提供初始值，则将使用数组中的第一个元素\n      \n      \n   \n   \n\nvar arr = [1, 2, 3, 4];\nvar newarr = arr.reduce(function(pre, cur) {\n  return pre + cur;\n}, 10);\nnewarr; // 20\n\n\n1\n2\n3\n4\n5\n * 实现\n\nfunction reduce(arr, reducecallback, initialvalue) {\n  if (!array.isarray(arr) || !arr.length || typeof reducecallback !== \'function\')\n  {\n    return [];\n  } else {\n    let hasinitialvalue = initialvalue !== undefined;\n    let value = hasinitialvalue ? initialvalue : arr[0];\n    // 如果有传递 initialvalue，则索引从 1 开始，否则从 0 开始\n    for (let i = hasinitialvalue ? 0 : 1, len = arr.length; i < len; i++) {\n      value = reducecallback(value, arr[i], i, arr);\n    }\n    return value;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# valueof 与 tostring\n * tostring()方法返回数组的字符串形式\n * valueof()方法返回数组本身\n\nvar arr = ["a", "b", 3, 4];\narr.tostring(); // "a,b,3,4"\narr.valueof(); // [\'a\', \'b\', 3, 4]\n\n\n1\n2\n3\n# map\n * map(callback(options)[,thisarg]) 返回新数组\n * options: (elem, index)\n\nvar arr = ["a", "b", 3, 4];\narr.map(function(item, index) {\n  console.log(item, index);\n});\n\n// a 0\n// b 1\n// 3 2\n// 4 3\n\nvar arr = [1, 2, 3, 4];\nvar newarr = arr.map(function(item, index) {\n  return item + 1;\n});\nnewarr; // [2, 3, 4, 5]\narr; // [1, 2, 3, 4]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * 实现map\n\nfunction map(arr, mapcallback) {\n  if (!array.isarray(arr) || !arr.length || typeof mapcallback !== \'function\') {\n    return [];\n  } else {\n    let result = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n      result.push(mapcallback(arr[i], i, arr));\n    }\n    return result;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# indexof 与 lastindexof\n * indexof()返回元素第一次出现的位置，没有则返回-1\n\nvar arr = ["a", "b", 3, 4];\narr.indexof("b"); // 1\narr.indexof("c"); // -1\n\n\n1\n2\n3\n * indexof()方法接受第二个参数，表示搜索的开始位置\n\nvar arr = ["a", "b", 3, 4];\narr.indexof("b", 1); // 1\narr.indexof("b", 2); // -1\n\n\n1\n2\n3\n * lastindexof()返回元素最后一次出现的位置，没有则返回-1\n\nvar arr = ["a", 3, "b", 3, 4];\narr.lastindexof(3); // 3\narr.lastindexof(3, 1); // 1\n\n\n1\n2\n3\n * 两个方法不能用来搜索 nan 的位置\n\nvar arr = ["a", nan, "b", null, "c", undefined, "d"];\narr.indexof(nan); // -1 不能正确搜索到结果\narr.indexof(null); // 3\narr.indexof(undefined); // 5\n\n\n1\n2\n3\n4\n# filter\n * filter(callback(element[, index[, array]])[, thisarg])\n * 过滤数组成员，满足条件的成员组成一个新数组返回\n\nvar arr = [1, 3, 9, 4, 2, 6];\nvar newarr = arr.filter((element, index) => {\n  return element > 4;\n});\nnewarr; // [9, 6]\narr; // [1, 3, 9, 4, 2, 6]\n\n\n1\n2\n3\n4\n5\n6\n * 实现\n\nfunction filter(arr, filtercallback) {\n  if (!array.isarray(arr) || !arr.length || typeof filtercallback !== \'function\')\n  {\n    return [];\n  } else {\n    let result = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n      if (filtercallback(arr[i], i, arr)) {\n        result.push(arr[i]);\n      }\n    }\n    return result;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# foreach\n * foreach(callback(elem, index)[,thisarg]) 不返回值，只用来操作数据\n\nvar array1 = ["a", "b", "c"];\n\narray1.foreach(function(element, index) {\n  console.log(element, index);\n});\n\n// a 0\n// b 1\n// c 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# every\n * every(callback[, thisarg])\n * 所有成员的返回值都是true，整个every方法才返回true，否则返回false\n\nvar arr = [1, 30, 39, 29, 10, 13];\nvar res = arr.every(function(ele) {\n  return ele < 40;\n});\n\nres; // true\n\n\n1\n2\n3\n4\n5\n6\n# some\n * some(callback[, thisarg])\n * 只要一个成员的返回值是true，则整个 some 方法的返回值就是true，否则返回false\n\nvar array = [1, 2, 3, 4, 5];\nvar res = array.some(function(ele) {\n  return ele % 2 === 0;\n});\n\nres; // true\n\n\n1\n2\n3\n4\n5\n6\n# [symbol.iterator]()\nvar arr = ["w", "y", "k"];\nvar earr = arr[symbol.iterator]();\nfor (let letter of earr) {\n  console.log(letter); // w , y , k\n}\n\nvar arr = ["w", "y", "k"];\nvar earr = arr[symbol.iterator]();\nearr.next(); // {value: "w", done: false}\nearr.next(); // {value: "y", done: false}\nearr.next(); // {value: "k", done: false}\nearr.next(); // {value: undefined, done: false}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 创建数组\nvar arr = new array(); //创建好了一个数组\nvar arr = [];\n//(1)\nvar arr = new array([1, 2, 3]);\n//(2)\nvar arr = [1, 2, 3];\n//(3)\nvar arr = new array();\narr = [1, 2, 3];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 添加成员\nvar arr = [1, 2, 3];\narr[3] = 4;\n\n\n1\n2\n# 访问成员\n * arr[index] index 从0开始计算\n\nvar arr = [1, 2, 3];\narr[0]; //1\n\nvar arr = new array([1, 2, 3]);\narr[0][3] = 4; //添加成员\narr[0][1]; //2   访问成员\n\n\n1\n2\n3\n4\n5\n6\n# 属性绑定\nvar arr = [1, 2, 3];\narr.aaa = "hello world";\nconsole.log(arr.aaa);\n\n\n1\n2\n3\n# for 循环数组\nvar arr = [1,2,3];\n// 不推荐\nfor(var i = 0 ;i < arr.length ; i++){\n  console.log(arr[i]);\n}\n// 推荐\nfor(var i = 0 arrl=arr.length;i < arrl ; i++){\n  console.log(arr[i]);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# while\n// func1\nvar arr = ["a", "b", "c", "d"];\nvar i = 0;\nwhile (i < arr.length) {\n  console.log(arr[i]); // a,b,c,d\n  i++;\n}\n\n// func2\nvar arr = ["a", "b", "c", "d"];\nvar l = arr.length;\nwhile (l--) {\n  console.log(arr[l]); // d,c,b,a\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 相关链接\n * javascript 专题之深浅拷贝',charsets:{cjk:!0}},{title:"基本数据类型",frontmatter:{title:"基本数据类型",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",readingShow:"top"},regularPath:"/js/basic.html",relativePath:"js/basic.md",key:"v-c8bebff2",path:"/js/basic.html",headers:[{level:2,title:"基本数据类型",slug:"基本数据类型",normalizedTitle:"基本数据类型",charIndex:2},{level:2,title:"引用类型",slug:"引用类型",normalizedTitle:"引用类型",charIndex:112},{level:2,title:"Boolean 布尔",slug:"boolean-布尔",normalizedTitle:"boolean 布尔",charIndex:173},{level:2,title:"BigInt",slug:"bigint",normalizedTitle:"bigint",charIndex:87},{level:2,title:"文档基本结构",slug:"文档基本结构",normalizedTitle:"文档基本结构",charIndex:1856},{level:2,title:"文档兼容模式",slug:"文档兼容模式",normalizedTitle:"文档兼容模式",charIndex:2326},{level:2,title:"document",slug:"document",normalizedTitle:"document",charIndex:1863},{level:3,title:"节点获取",slug:"节点获取",normalizedTitle:"节点获取",charIndex:2494},{level:3,title:"节点集合属性",slug:"节点集合属性",normalizedTitle:"节点集合属性",charIndex:2643},{level:3,title:"文档信息属性",slug:"文档信息属性",normalizedTitle:"文档信息属性",charIndex:2842},{level:2,title:"Number",slug:"number",normalizedTitle:"number",charIndex:1205},{level:3,title:"toString()",slug:"tostring",normalizedTitle:"tostring()",charIndex:3938},{level:3,title:"toFixed()",slug:"tofixed",normalizedTitle:"tofixed()",charIndex:3999},{level:3,title:"toExponential()",slug:"toexponential",normalizedTitle:"toexponential()",charIndex:4066},{level:3,title:"toPrecision()",slug:"toprecision",normalizedTitle:"toprecision()",charIndex:4138},{level:3,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:2239},{level:3,title:"进制转换",slug:"进制转换",normalizedTitle:"进制转换",charIndex:4549},{level:2,title:"Math",slug:"math",normalizedTitle:"math",charIndex:151},{level:3,title:"Math.abs()",slug:"math-abs",normalizedTitle:"math.abs()",charIndex:4836},{level:3,title:"比较大小",slug:"比较大小",normalizedTitle:"比较大小",charIndex:4863},{level:3,title:"取整",slug:"取整",normalizedTitle:"取整",charIndex:5058},{level:3,title:"Math.random()",slug:"math-random",normalizedTitle:"math.random()",charIndex:5530},{level:3,title:"Math.round()",slug:"math-round",normalizedTitle:"math.round()",charIndex:6069},{level:3,title:"Math.sqrt()",slug:"math-sqrt",normalizedTitle:"math.sqrt()",charIndex:6414},{level:3,title:"三角函数方法",slug:"三角函数方法",normalizedTitle:"三角函数方法",charIndex:6459},{level:3,title:"其他",slug:"其他",normalizedTitle:"其他",charIndex:6675},{level:2,title:"JSON",slug:"json",normalizedTitle:"json",charIndex:165},{level:3,title:"JSON.stringify",slug:"json-stringify",normalizedTitle:"json.stringify",charIndex:6775},{level:3,title:"JSON.parse",slug:"json-parse",normalizedTitle:"json.parse",charIndex:7772},{level:2,title:"栈和队列(LIFO/FIFO)",slug:"栈和队列-lifo-fifo",normalizedTitle:"栈和队列(lifo/fifo)",charIndex:9084},{level:2,title:"javscript 标签的 async & defer",slug:"javscript-标签的-async-defer",normalizedTitle:"javscript 标签的 async &amp; defer",charIndex:null},{level:2,title:'javscript 标签 type="module"',slug:"javscript-标签-type-module",normalizedTitle:"javscript 标签 type=&quot;module&quot;",charIndex:null}],lastUpdated:"2020/8/3 上午10:17:07",headersStr:'基本数据类型 引用类型 Boolean 布尔 BigInt 文档基本结构 文档兼容模式 document 节点获取 节点集合属性 文档信息属性 Number toString() toFixed() toExponential() toPrecision() 属性 进制转换 Math Math.abs() 比较大小 取整 Math.random() Math.round() Math.sqrt() 三角函数方法 其他 JSON JSON.stringify JSON.parse 栈和队列(LIFO/FIFO) javscript 标签的 async & defer javscript 标签 type="module"',content:'# 基本数据类型\n * number: 最大数字是 225-1\n * string\n * boolean\n * null\n * undefined\n * Symbol\n * BigInt: 大于等于 225的所有数字\n\n# 引用类型\n * Object 、Array 、Function 、Date 、Math 、Regexp 、JSON\n\n# Boolean 布尔\n * 类型转换：!!undefined --\x3e false\n * 布尔转换\n\nundefined,null,false,0,NaN,""  // 返回 false\n\n// 过滤数组中的这些值\n[ (undefined, null, false, 0, NaN, "", "", "hello")].filter(item => item); // [\'hello\']\n\ntypeof null; // 返回 object\ntype undefined // 返回 undefined\n\n\n1\n2\n3\n4\n5\n6\n7\n * null是一个表示“空”的对象，转为数值时为 0\n * undefined是一个表示”此处无定义”的原始值，转为数值时为NaN\n * void 0\n\n# BigInt\n * bigint@caniuse\n * jsbi@github\n * 使用\n\nBigInt(10); // 10n\n\n\n1\n * typeof\n\nconsole.log(10n === 10); // → false\nconsole.log(10n == 10); // → true\n\nconsole.log(typeof 10n); // → bigint\nconsole.log(typeof 10); // → number\n\n\n1\n2\n3\n4\n5\n * 运算\n\n10n + 20n; // → 30n\n10n - 20n; // → -10n\n+10n; // → TypeError: Cannot convert a BigInt value to a number\n-10n; // → -10n\n10n * 20n; // → 200n\n20n / 10n; // → 2n\n23n % 10n; // → 3n\n10n ** 3n; // → 1000n\n\nconst x = 10n;\n++x; // → 11n\n--x; // → 9n\n\n// 注意区别：\n25 / 10; // → 2.5\n25n / 10n; // → 2n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * 隐式类型转换\n\n10 + 10n; // → TypeError\nMath.max(2n, 4n, 6n); // → TypeError\n\nBigInt(10) + 10n; // → 20n\n10 + Number(10n); // → 20\n\n// 请注意，关系运算符不遵循此规则\n10n > 5; // → true\n\n!0n; // true\n!1n; // false\n\n// 排序BigInts和Numbers数组时，不会发生隐式类型转换\nconst arr = [3n, 4, 2, 1n, 0, -1n, 2n];\narr.sort(); // → [-1n, 0, 1n, 2, 2n, 3n, 4]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 位操作符\n\n// |、&、<<、>>和^对Bigint的操作方式与Number类似\n90 | 115; // → 123\n90n | 115n; // → 123n\n90n | 115; // → TypeError\n\n\n1\n2\n3\n4\n * BigInt 构造函数\n\nBigInt("10"); // → 10n\nBigInt(10); // → 10n\nBigInt(true); // → 1n\n\nBigInt(10) * 10n; // → 100n\nBigInt(true) === 1n; // → true\n\n// 无法转换的数据类型和值会引发异常:\nBigInt(10.2); // → RangeError\nBigInt(null); // → TypeError\nBigInt("abc"); // → SyntaxError\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 文档基本结构\ndocument.head; // 文档的头标签\ntypeof document.head; // object\n\ndocument.title; // 文档标题\ntypeof document.title; // string\n\ndocument.body; // 文档的body标签\ntypeof document.body; // object\n\ndocument.documentElement; // 文档的根节点 注意：没有document.html这个东西\ntypeof document.documentElement; // object\n\ndocument.html; // 这个是错的!!!\n\ndocument.defaultView === window; // true\ndocument.activeElement; // 属性返回当前文档中获得焦点的那个元素\ndocument.defaultView;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 文档兼容模式\n * document type声明文档类型 DTD：<!DOCTYPE html>\n * BackCompat 未声明 DTD(怪异模式)firefox\n * CSS1Compat 已经声明 DTD(标准模式)chrome ,ie\n * document.compatMode 获取文档类型\n\n# document\n# 节点获取\n * 对于正常的网页,直接使用document或window.document\n * 对于 iframe 载入的网页,使用 iframe 节点的contentDocument属性\n * 对 Ajax 操作返回的文档,使用XMLHttpRequest对象的responseXML属性\n\n# 节点集合属性\n * document.links属性返回当前文档所有设定了 href 属性的 a 及 area 元素\n * document.images属性返回页面所有图片元素(即 img 标签)\n * document.scripts属性返回当前文档的所有脚本(即 script 标签)\n * document.styleSheets属性返回一个类似数组的对象,代表当前网页的所有样式表\n\n# 文档信息属性\n * document.documentURI属性和document.URL属性都返回一个字符串,表示当前文档的网址\n   \n   \n * documentURI属性可用于所有文档(包括 XML 文档),URL 属性只能用于 HTML 文档\n   \n   \n * document.domain属性返回当前文档的域名\n   \n   \n * document.lastModified属性返回当前文档最后修改的时间戳,格式为字符串\n   \n   \n * document.title属性返回当前文档的标题,该属性是可写的\n   \n   \n * document.referrer\n   \n   \n * document.characterSet属性返回渲染当前文档的字符集 //UTF-8\n   \n   \n * document.readyState属性返回当前文档的状态\n   \n   \n * 三种可能的值:\n   \n    * loading：加载 HTML 代码阶段(尚未完成解析)\n    * interactive：加载外部资源阶段时\n    * complete：加载完成时\n   \n   \n * document.designMode属性控制当前文档是否可编辑\n   \n   \n * document.implementation属性返回一个对象,用来甄别当前环境部署了哪些 DOM 相关接口\n   \n   \n * implementation属性的hasFeature方法,可以判断当前环境是否部署了特定版本的特定接口\n   \n   \n\ndocument.implementation.hasFeature("HTML", "2.0"); // true\n\ndocument.implementation.hasFeature("MutationEvents", "2.0"); // true\n\n\n1\n2\n3\n * document.cookie属性用来操作浏览器 Cookie\n\n# Number\nNumber("123"); // 123\nNumber("12.3"); // 12.3\nNumber("12.00"); // 12\nNumber("123e-1"); // 12.3\nNumber(""); // 0\nNumber(null); // 0\nNumber("foo"); // NaN\nNumber("100a"); // NaN\nNumber("-Infinity"); //-Infinity\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# toString()\n * Number.prototype.toString()\n * 将一个数值转为字符串形式\n\n# toFixed()\n * Number.prototype.toFixed()\n * 先将一个数转为指定位数的小数，返回字符串\n\n# toExponential()\n * Number.prototype.toExponential()\n * 将一个数转为科学计数法形式\n\n# toPrecision()\n * Number.prototype.toPrecision()\n * 将一个数转为指定位数的有效数字\n\n# 属性\n * Number.POSITIVE_INFINITY 正的无限，指向Infinity\n * Number.NEGATIVE_INFINITY 负的无限，指向-Infinity\n * Number.NaN 表示非数值，指向NaN\n * Number.MAX_VALUE 最大的正数, 最小的负数为-Number.MAX_VALUE\n * Number.MIN_VALUE 最小的正数,最接近 0 的负数为-Number.MIN_VALUE\n * Number.MAX_SAFE_INTEGER 能够精确表示的最大整数，即9007199254740991\n * Number.MIN_SAFE_INTEGER 能够精确表示的最小整数，即-9007199254740991\n\n# 进制转换\n * toString(radix)\n\n(15).toString(2).padStart(8, "0"); // 00001111\n(15).toString(8).padStart(8, "0"); // 00000017\n(15).toString(16).padStart(8, "0"); // 0000000f\n\n\n1\n2\n3\n * Number()\n\nNumber("0x11"); // 17  十六进制\nNumber("0b11"); // 3   二进制\nNumber("0o11"); // 9   八进制\n\n\n1\n2\n3\n# Math\n# Math.abs()\n * 返回参数值的绝对值\n\n# 比较大小\n * Math.max() 返回最大值\n\nMath.max(1, 3, "12ab"); //NaN\nMath.max(1, 2, NaN); //NaN\nMath.max(1, 2, undefined); //NaN\nMath.max(1, 3, "12");\nMath.max(1, 3, null);\n\n\n1\n2\n3\n4\n5\n * Math.min() 返回最小值\n\n# 取整\n * Math.floor() 返回小于参数值的最大整数 (向下取整)\n   \n   Math.floor(1.9); // 1\n   Math.floor(1.1); // 1\n   Math.floor(-1.9); // -2\n   Math.floor(-1.1); // -2\n   \n   \n   1\n   2\n   3\n   4\n   \n * 使用~、>>、<<、|来取整\n   \n   \n\nconsole.log(~~11.71); // 11\nconsole.log(11.71 >> 0); // 11\nconsole.log(11.71 << 0); // 11\nconsole.log(11.71 | 0); // 11\n\n\n1\n2\n3\n4\n * Math.ceil() 返回大于参数值的最小整数 (向上取整)\n\nMath.ceil(1.1); // 2\nMath.ceil(1.9); // 2\nMath.ceil(-1.1); // -1\nMath.ceil(-1.9); // -1\n\n\n1\n2\n3\n4\n# Math.random()\n * 返回[0,1)之间的一个伪随机数\n\nfunction randomColor() {\n  return (\n    "#" + ("00000" + ((Math.random() * 0x1000000) << 0).toString(16)).substr(-6)\n  );\n}\nfunction randomRbga(a) {\n  var r = Math.floor(Math.random() * 255);\n  var g = Math.floor(Math.random() * 255);\n  var b = Math.floor(Math.random() * 255);\n  return "rgba(" + r + "," + g + "," + b + "," + a + ")";\n}\nfunction randomHsla() {\n  var colorAngle = Math.floor(Math.random() * 360);\n  return "hsla(" + colorAngle + ",100%,50%,1)";\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# Math.round()\n * 四舍五入\n\nMath.round(21.7); // 22\nMath.round(21.1); // 21\nMath.round(-21.7); // -22\nMath.round(-21.1); // -21\n\n\n1\n2\n3\n4\n * 使用 A +/- 0.5 | 0 来替代 Math.round()\n\nvar a = 21.7;\n(a + 0.5) | 0; // 22\n\nvar a = 21.1;\n(a + 0.5) | 0; // 21\n\nvar a = -21.7;\n(a - 0.5) | 0; // -22\n\nvar a = -21.1;\n(a - 0.5) | 0; // -21\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# Math.sqrt()\n * 返回参数值的平方根。如果参数是一个负值，则返回NaN\n\n# 三角函数方法\n * Math.PI 返回圆周率（约等于3.14159）\n * Math.sin() 返回参数的正弦（参数为弧度值）\n * Math.cos() 返回参数的余弦（参数为弧度值）\n * Math.tan() 返回参数的正切（参数为弧度值）\n * Math.asin() 返回参数的反正弦（弧度值）\n * Math.acos() 返回参数的反余弦（弧度值）\n * Math.atan() 返回参数的反正切（弧度值）\n\n# 其他\n * Math.pow() 第一个参数为底数、第二个参数为幂的指数值\n * Math.log() 返回以e为底的自然对数值\n * Math.exp() 返回常数e的参数次方\n\n# JSON\n# JSON.stringify\n * 用于将一个值转为字符串\n * 一个成员的值是undefined、函数或 XML 对象，这个成员会被过滤\n\nvar obj = {\n  a: undefined,\n  b: function() {}\n};\n\nJSON.stringify(obj); // "{}"\n\n\n1\n2\n3\n4\n5\n6\n * 数组的成员是undefined、函数或 XML 对象,则这些值被转成null\n * JSON.stringify方法会忽略对象的不可遍历属性\n * 第二个参数\n\n// 接受一个数组,作为第二个参数,指定需要转成字符串的属性\nvar obj = {\n  prop1: "value1",\n  prop2: "value2",\n  prop3: "value3"\n};\n\nvar selectedProperties = ["prop1", "prop2"];\nJSON.stringify(obj, selectedProperties);\n// "{"prop1":"value1","prop2":"value2"}"\n\n// 只对对象的属性有效,对数组无效\nJSON.stringify(["a", "b"], ["0"]);\n// "["a","b"]"\n\nJSON.stringify({ 0: "a", 1: "b" }, ["0"]);\n// "{"0":"a"}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n// 接受一个函数,用来更改JSON.stringify的默认行为\nfunction f(key, value) {\n  if (typeof value === "number") {\n    value = 2 * value;\n  }\n  return value;\n}\n\nJSON.stringify({ a: 1, b: 2 }, f);\n// \'{"a": 2,"b": 4}\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 第三个参数,用于增加返回的JSON字符串的可读性\n\nJSON.stringify({ p1: 1, p2: 2 }, null, 2);\nJSON.stringify({ p1: 1, p2: 2 }, null, "|-");\n\n\n1\n2\n# JSON.parse\n * 用于将JSON字符串转化成对象\n\nJSON.parse("{}"); // {}\nJSON.parse("true"); // true\nJSON.parse(\'"foo"\'); // "foo"\nJSON.parse(\'[1, 5, "false"]\'); // [1, 5, "false"]\nJSON.parse("null"); // null\n\nvar o = JSON.parse(\'{"name": "张三"}\');\no.name; // 张三\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 实现一个 JSON.stringify\n\nfunction jsonStringify(obj) {\n  let type = typeof obj;\n  if (type !== "object") {\n    if (/string|undefined|function/.test(type)) {\n      obj = \'"\' + obj + \'"\';\n    }\n    return String(obj);\n  } else {\n    let json = [];\n    let arr = Array.isArray(obj);\n    for (let k in obj) {\n      let v = obj[k];\n      let type = typeof v;\n      if (/string|undefined|function/.test(type)) {\n        v = \'"\' + v + \'"\';\n      } else if (type === "object") {\n        v = jsonStringify(v);\n      }\n      json.push((arr ? "" : \'"\' + k + \'":\') + String(v));\n    }\n    return (arr ? "[" : "{") + String(json) + (arr ? "]" : "}");\n  }\n}\nconsole.log(jsonStringify({ x: 5 })); // "{"x":5}"\nconsole.log(jsonStringify([1, "false", false])); // "[1,"false",false]"\nconsole.log(jsonStringify({ b: undefined })); // "{"b":"undefined"}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * 实现一个 JSON.parse\n\nvar jsonStr = \'{ "age": 20, "name": "jack" }\';\nvar json = new Function("return " + jsonStr)();\nconsole.log(json);\n\n\n1\n2\n3\n# 栈和队列(LIFO/FIFO)\n * 栈数据结构的访问规则是LIFO(Last-in-First-Out,后进先出)\n * 队列数据结构的访问规则是FIFO(First-In-First-Out, 先进先出)\n\n# javscript 标签的 async & defer\n * 原文：彻底搞懂 async & defer\n * 两者都不会阻止 document 的解析\n * defer 会在 DOMContentLoaded 前依次执行\n * async 则是 onload 下载完立即执行，不一定是在 DOMContentLoaded 前\n\n# javscript 标签 type="module"\n * 原文\n * 标签使用<script type="module"><\/script>\n * 模块路径\n\n\x3c!-- hd.js --\x3e\nexport let hd = { name: "后盾人" };\n\x3c!-- html --\x3e\n<script type="module">\n  import { hd } from "./hd.js";\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n * 延迟解析\n\n<body>\n  <script type="module">\n    console.log(document.querySelector("button")); //Button\n  <\/script>\n  <script>\n    console.log(document.querySelector("button")); //undefined\n  <\/script>\n  <button>后盾人</button>\n</body>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 严格模式\n\n\x3c!-- 模块默认运行在严格模式，以下代码没有使用声明语句将报错 --\x3e\n<script type="module">\n  hd = "houdunren"; // Error\n<\/script>\n\n<script>\n  console.log(this); //Window\n<\/script>\n<script type="module">\n  console.log(this); //undefiend\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 作用域\n\n\x3c!-- 模块都有独立的顶级作用域，下面的模块不能互相访问 --\x3e\n<script type="module">\n  let hd = "houdunren.com";\n<\/script>\n\n<script type="module">\n  alert(hd); // Error\n<\/script>\n\n\x3c!-- 单独文件作用域也是独立的 --\x3e\n<script type="module" src="1.1.js"><\/script>\n<script type="module" src="1.2.js"><\/script>\n\n\x3c!-- # 1.1.js --\x3e\nlet hd = "houdunren";\n\n\x3c!-- # 1.2.js --\x3e\nconsole.log(hd)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 预解析\n\n\x3c!-- 引入多入hd.js 脚本时只执行一次 --\x3e\n<script type="module" src="hd.js"><\/script>\n<script type="module" src="hd.js"><\/script>\n\n\x3c!-- #hd.js内容如下 --\x3e\nconsole.log("houdunren.com");\n\n\x3c!-- 导入多次 hd.js 时只解析一次 --\x3e\n<script type="module">\n  import "./hd.js";\n  import "./hd.js";\n<\/script>\n\n\x3c!-- # hd.js内容如下 --\x3e\nconsole.log("houdunren.com");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15',normalizedContent:'# 基本数据类型\n * number: 最大数字是 225-1\n * string\n * boolean\n * null\n * undefined\n * symbol\n * bigint: 大于等于 225的所有数字\n\n# 引用类型\n * object 、array 、function 、date 、math 、regexp 、json\n\n# boolean 布尔\n * 类型转换：!!undefined --\x3e false\n * 布尔转换\n\nundefined,null,false,0,nan,""  // 返回 false\n\n// 过滤数组中的这些值\n[ (undefined, null, false, 0, nan, "", "", "hello")].filter(item => item); // [\'hello\']\n\ntypeof null; // 返回 object\ntype undefined // 返回 undefined\n\n\n1\n2\n3\n4\n5\n6\n7\n * null是一个表示“空”的对象，转为数值时为 0\n * undefined是一个表示”此处无定义”的原始值，转为数值时为nan\n * void 0\n\n# bigint\n * bigint@caniuse\n * jsbi@github\n * 使用\n\nbigint(10); // 10n\n\n\n1\n * typeof\n\nconsole.log(10n === 10); // → false\nconsole.log(10n == 10); // → true\n\nconsole.log(typeof 10n); // → bigint\nconsole.log(typeof 10); // → number\n\n\n1\n2\n3\n4\n5\n * 运算\n\n10n + 20n; // → 30n\n10n - 20n; // → -10n\n+10n; // → typeerror: cannot convert a bigint value to a number\n-10n; // → -10n\n10n * 20n; // → 200n\n20n / 10n; // → 2n\n23n % 10n; // → 3n\n10n ** 3n; // → 1000n\n\nconst x = 10n;\n++x; // → 11n\n--x; // → 9n\n\n// 注意区别：\n25 / 10; // → 2.5\n25n / 10n; // → 2n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * 隐式类型转换\n\n10 + 10n; // → typeerror\nmath.max(2n, 4n, 6n); // → typeerror\n\nbigint(10) + 10n; // → 20n\n10 + number(10n); // → 20\n\n// 请注意，关系运算符不遵循此规则\n10n > 5; // → true\n\n!0n; // true\n!1n; // false\n\n// 排序bigints和numbers数组时，不会发生隐式类型转换\nconst arr = [3n, 4, 2, 1n, 0, -1n, 2n];\narr.sort(); // → [-1n, 0, 1n, 2, 2n, 3n, 4]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 位操作符\n\n// |、&、<<、>>和^对bigint的操作方式与number类似\n90 | 115; // → 123\n90n | 115n; // → 123n\n90n | 115; // → typeerror\n\n\n1\n2\n3\n4\n * bigint 构造函数\n\nbigint("10"); // → 10n\nbigint(10); // → 10n\nbigint(true); // → 1n\n\nbigint(10) * 10n; // → 100n\nbigint(true) === 1n; // → true\n\n// 无法转换的数据类型和值会引发异常:\nbigint(10.2); // → rangeerror\nbigint(null); // → typeerror\nbigint("abc"); // → syntaxerror\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 文档基本结构\ndocument.head; // 文档的头标签\ntypeof document.head; // object\n\ndocument.title; // 文档标题\ntypeof document.title; // string\n\ndocument.body; // 文档的body标签\ntypeof document.body; // object\n\ndocument.documentelement; // 文档的根节点 注意：没有document.html这个东西\ntypeof document.documentelement; // object\n\ndocument.html; // 这个是错的!!!\n\ndocument.defaultview === window; // true\ndocument.activeelement; // 属性返回当前文档中获得焦点的那个元素\ndocument.defaultview;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 文档兼容模式\n * document type声明文档类型 dtd：<!doctype html>\n * backcompat 未声明 dtd(怪异模式)firefox\n * css1compat 已经声明 dtd(标准模式)chrome ,ie\n * document.compatmode 获取文档类型\n\n# document\n# 节点获取\n * 对于正常的网页,直接使用document或window.document\n * 对于 iframe 载入的网页,使用 iframe 节点的contentdocument属性\n * 对 ajax 操作返回的文档,使用xmlhttprequest对象的responsexml属性\n\n# 节点集合属性\n * document.links属性返回当前文档所有设定了 href 属性的 a 及 area 元素\n * document.images属性返回页面所有图片元素(即 img 标签)\n * document.scripts属性返回当前文档的所有脚本(即 script 标签)\n * document.stylesheets属性返回一个类似数组的对象,代表当前网页的所有样式表\n\n# 文档信息属性\n * document.documenturi属性和document.url属性都返回一个字符串,表示当前文档的网址\n   \n   \n * documenturi属性可用于所有文档(包括 xml 文档),url 属性只能用于 html 文档\n   \n   \n * document.domain属性返回当前文档的域名\n   \n   \n * document.lastmodified属性返回当前文档最后修改的时间戳,格式为字符串\n   \n   \n * document.title属性返回当前文档的标题,该属性是可写的\n   \n   \n * document.referrer\n   \n   \n * document.characterset属性返回渲染当前文档的字符集 //utf-8\n   \n   \n * document.readystate属性返回当前文档的状态\n   \n   \n * 三种可能的值:\n   \n    * loading：加载 html 代码阶段(尚未完成解析)\n    * interactive：加载外部资源阶段时\n    * complete：加载完成时\n   \n   \n * document.designmode属性控制当前文档是否可编辑\n   \n   \n * document.implementation属性返回一个对象,用来甄别当前环境部署了哪些 dom 相关接口\n   \n   \n * implementation属性的hasfeature方法,可以判断当前环境是否部署了特定版本的特定接口\n   \n   \n\ndocument.implementation.hasfeature("html", "2.0"); // true\n\ndocument.implementation.hasfeature("mutationevents", "2.0"); // true\n\n\n1\n2\n3\n * document.cookie属性用来操作浏览器 cookie\n\n# number\nnumber("123"); // 123\nnumber("12.3"); // 12.3\nnumber("12.00"); // 12\nnumber("123e-1"); // 12.3\nnumber(""); // 0\nnumber(null); // 0\nnumber("foo"); // nan\nnumber("100a"); // nan\nnumber("-infinity"); //-infinity\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# tostring()\n * number.prototype.tostring()\n * 将一个数值转为字符串形式\n\n# tofixed()\n * number.prototype.tofixed()\n * 先将一个数转为指定位数的小数，返回字符串\n\n# toexponential()\n * number.prototype.toexponential()\n * 将一个数转为科学计数法形式\n\n# toprecision()\n * number.prototype.toprecision()\n * 将一个数转为指定位数的有效数字\n\n# 属性\n * number.positive_infinity 正的无限，指向infinity\n * number.negative_infinity 负的无限，指向-infinity\n * number.nan 表示非数值，指向nan\n * number.max_value 最大的正数, 最小的负数为-number.max_value\n * number.min_value 最小的正数,最接近 0 的负数为-number.min_value\n * number.max_safe_integer 能够精确表示的最大整数，即9007199254740991\n * number.min_safe_integer 能够精确表示的最小整数，即-9007199254740991\n\n# 进制转换\n * tostring(radix)\n\n(15).tostring(2).padstart(8, "0"); // 00001111\n(15).tostring(8).padstart(8, "0"); // 00000017\n(15).tostring(16).padstart(8, "0"); // 0000000f\n\n\n1\n2\n3\n * number()\n\nnumber("0x11"); // 17  十六进制\nnumber("0b11"); // 3   二进制\nnumber("0o11"); // 9   八进制\n\n\n1\n2\n3\n# math\n# math.abs()\n * 返回参数值的绝对值\n\n# 比较大小\n * math.max() 返回最大值\n\nmath.max(1, 3, "12ab"); //nan\nmath.max(1, 2, nan); //nan\nmath.max(1, 2, undefined); //nan\nmath.max(1, 3, "12");\nmath.max(1, 3, null);\n\n\n1\n2\n3\n4\n5\n * math.min() 返回最小值\n\n# 取整\n * math.floor() 返回小于参数值的最大整数 (向下取整)\n   \n   math.floor(1.9); // 1\n   math.floor(1.1); // 1\n   math.floor(-1.9); // -2\n   math.floor(-1.1); // -2\n   \n   \n   1\n   2\n   3\n   4\n   \n * 使用~、>>、<<、|来取整\n   \n   \n\nconsole.log(~~11.71); // 11\nconsole.log(11.71 >> 0); // 11\nconsole.log(11.71 << 0); // 11\nconsole.log(11.71 | 0); // 11\n\n\n1\n2\n3\n4\n * math.ceil() 返回大于参数值的最小整数 (向上取整)\n\nmath.ceil(1.1); // 2\nmath.ceil(1.9); // 2\nmath.ceil(-1.1); // -1\nmath.ceil(-1.9); // -1\n\n\n1\n2\n3\n4\n# math.random()\n * 返回[0,1)之间的一个伪随机数\n\nfunction randomcolor() {\n  return (\n    "#" + ("00000" + ((math.random() * 0x1000000) << 0).tostring(16)).substr(-6)\n  );\n}\nfunction randomrbga(a) {\n  var r = math.floor(math.random() * 255);\n  var g = math.floor(math.random() * 255);\n  var b = math.floor(math.random() * 255);\n  return "rgba(" + r + "," + g + "," + b + "," + a + ")";\n}\nfunction randomhsla() {\n  var colorangle = math.floor(math.random() * 360);\n  return "hsla(" + colorangle + ",100%,50%,1)";\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# math.round()\n * 四舍五入\n\nmath.round(21.7); // 22\nmath.round(21.1); // 21\nmath.round(-21.7); // -22\nmath.round(-21.1); // -21\n\n\n1\n2\n3\n4\n * 使用 a +/- 0.5 | 0 来替代 math.round()\n\nvar a = 21.7;\n(a + 0.5) | 0; // 22\n\nvar a = 21.1;\n(a + 0.5) | 0; // 21\n\nvar a = -21.7;\n(a - 0.5) | 0; // -22\n\nvar a = -21.1;\n(a - 0.5) | 0; // -21\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# math.sqrt()\n * 返回参数值的平方根。如果参数是一个负值，则返回nan\n\n# 三角函数方法\n * math.pi 返回圆周率（约等于3.14159）\n * math.sin() 返回参数的正弦（参数为弧度值）\n * math.cos() 返回参数的余弦（参数为弧度值）\n * math.tan() 返回参数的正切（参数为弧度值）\n * math.asin() 返回参数的反正弦（弧度值）\n * math.acos() 返回参数的反余弦（弧度值）\n * math.atan() 返回参数的反正切（弧度值）\n\n# 其他\n * math.pow() 第一个参数为底数、第二个参数为幂的指数值\n * math.log() 返回以e为底的自然对数值\n * math.exp() 返回常数e的参数次方\n\n# json\n# json.stringify\n * 用于将一个值转为字符串\n * 一个成员的值是undefined、函数或 xml 对象，这个成员会被过滤\n\nvar obj = {\n  a: undefined,\n  b: function() {}\n};\n\njson.stringify(obj); // "{}"\n\n\n1\n2\n3\n4\n5\n6\n * 数组的成员是undefined、函数或 xml 对象,则这些值被转成null\n * json.stringify方法会忽略对象的不可遍历属性\n * 第二个参数\n\n// 接受一个数组,作为第二个参数,指定需要转成字符串的属性\nvar obj = {\n  prop1: "value1",\n  prop2: "value2",\n  prop3: "value3"\n};\n\nvar selectedproperties = ["prop1", "prop2"];\njson.stringify(obj, selectedproperties);\n// "{"prop1":"value1","prop2":"value2"}"\n\n// 只对对象的属性有效,对数组无效\njson.stringify(["a", "b"], ["0"]);\n// "["a","b"]"\n\njson.stringify({ 0: "a", 1: "b" }, ["0"]);\n// "{"0":"a"}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n// 接受一个函数,用来更改json.stringify的默认行为\nfunction f(key, value) {\n  if (typeof value === "number") {\n    value = 2 * value;\n  }\n  return value;\n}\n\njson.stringify({ a: 1, b: 2 }, f);\n// \'{"a": 2,"b": 4}\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 第三个参数,用于增加返回的json字符串的可读性\n\njson.stringify({ p1: 1, p2: 2 }, null, 2);\njson.stringify({ p1: 1, p2: 2 }, null, "|-");\n\n\n1\n2\n# json.parse\n * 用于将json字符串转化成对象\n\njson.parse("{}"); // {}\njson.parse("true"); // true\njson.parse(\'"foo"\'); // "foo"\njson.parse(\'[1, 5, "false"]\'); // [1, 5, "false"]\njson.parse("null"); // null\n\nvar o = json.parse(\'{"name": "张三"}\');\no.name; // 张三\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 实现一个 json.stringify\n\nfunction jsonstringify(obj) {\n  let type = typeof obj;\n  if (type !== "object") {\n    if (/string|undefined|function/.test(type)) {\n      obj = \'"\' + obj + \'"\';\n    }\n    return string(obj);\n  } else {\n    let json = [];\n    let arr = array.isarray(obj);\n    for (let k in obj) {\n      let v = obj[k];\n      let type = typeof v;\n      if (/string|undefined|function/.test(type)) {\n        v = \'"\' + v + \'"\';\n      } else if (type === "object") {\n        v = jsonstringify(v);\n      }\n      json.push((arr ? "" : \'"\' + k + \'":\') + string(v));\n    }\n    return (arr ? "[" : "{") + string(json) + (arr ? "]" : "}");\n  }\n}\nconsole.log(jsonstringify({ x: 5 })); // "{"x":5}"\nconsole.log(jsonstringify([1, "false", false])); // "[1,"false",false]"\nconsole.log(jsonstringify({ b: undefined })); // "{"b":"undefined"}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * 实现一个 json.parse\n\nvar jsonstr = \'{ "age": 20, "name": "jack" }\';\nvar json = new function("return " + jsonstr)();\nconsole.log(json);\n\n\n1\n2\n3\n# 栈和队列(lifo/fifo)\n * 栈数据结构的访问规则是lifo(last-in-first-out,后进先出)\n * 队列数据结构的访问规则是fifo(first-in-first-out, 先进先出)\n\n# javscript 标签的 async & defer\n * 原文：彻底搞懂 async & defer\n * 两者都不会阻止 document 的解析\n * defer 会在 domcontentloaded 前依次执行\n * async 则是 onload 下载完立即执行，不一定是在 domcontentloaded 前\n\n# javscript 标签 type="module"\n * 原文\n * 标签使用<script type="module"><\/script>\n * 模块路径\n\n\x3c!-- hd.js --\x3e\nexport let hd = { name: "后盾人" };\n\x3c!-- html --\x3e\n<script type="module">\n  import { hd } from "./hd.js";\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n * 延迟解析\n\n<body>\n  <script type="module">\n    console.log(document.queryselector("button")); //button\n  <\/script>\n  <script>\n    console.log(document.queryselector("button")); //undefined\n  <\/script>\n  <button>后盾人</button>\n</body>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 严格模式\n\n\x3c!-- 模块默认运行在严格模式，以下代码没有使用声明语句将报错 --\x3e\n<script type="module">\n  hd = "houdunren"; // error\n<\/script>\n\n<script>\n  console.log(this); //window\n<\/script>\n<script type="module">\n  console.log(this); //undefiend\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 作用域\n\n\x3c!-- 模块都有独立的顶级作用域，下面的模块不能互相访问 --\x3e\n<script type="module">\n  let hd = "houdunren.com";\n<\/script>\n\n<script type="module">\n  alert(hd); // error\n<\/script>\n\n\x3c!-- 单独文件作用域也是独立的 --\x3e\n<script type="module" src="1.1.js"><\/script>\n<script type="module" src="1.2.js"><\/script>\n\n\x3c!-- # 1.1.js --\x3e\nlet hd = "houdunren";\n\n\x3c!-- # 1.2.js --\x3e\nconsole.log(hd)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 预解析\n\n\x3c!-- 引入多入hd.js 脚本时只执行一次 --\x3e\n<script type="module" src="hd.js"><\/script>\n<script type="module" src="hd.js"><\/script>\n\n\x3c!-- #hd.js内容如下 --\x3e\nconsole.log("houdunren.com");\n\n\x3c!-- 导入多次 hd.js 时只解析一次 --\x3e\n<script type="module">\n  import "./hd.js";\n  import "./hd.js";\n<\/script>\n\n\x3c!-- # hd.js内容如下 --\x3e\nconsole.log("houdunren.com");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15',charsets:{cjk:!0}},{title:"浏览器端client/offset/scroll",frontmatter:{title:"浏览器端client/offset/scroll",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["client","offset","scroll"],readingShow:"top"},regularPath:"/js/client-offset.html",relativePath:"js/client-offset.md",key:"v-237eb20e",path:"/js/client-offset.html",headers:[{level:2,title:"clientHeight/clientWidth",slug:"clientheight-clientwidth",normalizedTitle:"clientheight/clientwidth",charIndex:2},{level:2,title:"offsetHeight/offsetWidth",slug:"offsetheight-offsetwidth",normalizedTitle:"offsetheight/offsetwidth",charIndex:1633},{level:2,title:"offsetLeft/offsetTop",slug:"offsetleft-offsettop",normalizedTitle:"offsetleft/offsettop",charIndex:3172},{level:2,title:"scrollHeight/scrollWidth",slug:"scrollheight-scrollwidth",normalizedTitle:"scrollheight/scrollwidth",charIndex:4264},{level:2,title:"scrollTop/scrollLeft",slug:"scrolltop-scrollleft",normalizedTitle:"scrolltop/scrollleft",charIndex:5622},{level:2,title:"getComputedStyle",slug:"getcomputedstyle",normalizedTitle:"getcomputedstyle",charIndex:7569},{level:2,title:"pageX/pageY",slug:"pagex-pagey",normalizedTitle:"pagex/pagey",charIndex:8271},{level:2,title:"screenX/screenY",slug:"screenx-screeny",normalizedTitle:"screenx/screeny",charIndex:8804},{level:2,title:"screen",slug:"screen",normalizedTitle:"screen",charIndex:8804},{level:2,title:"IntersectionObserver",slug:"intersectionobserver",normalizedTitle:"intersectionobserver",charIndex:9052},{level:2,title:"getBoundingClientRect",slug:"getboundingclientrect",normalizedTitle:"getboundingclientrect",charIndex:9415}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"clientHeight/clientWidth offsetHeight/offsetWidth offsetLeft/offsetTop scrollHeight/scrollWidth scrollTop/scrollLeft getComputedStyle pageX/pageY screenX/screenY screen IntersectionObserver getBoundingClientRect",content:'# clientHeight/clientWidth\n * clientHeight：表示的是可视区域的高度，不包含border和滚动条\n * clientTop：表示边框 border 的厚度，在未指定的情况下一般为 0\n\n\n\n * element example\n\n\x3c!-- css --\x3e\n.client{ width: 200px; height: 150px; border: 10px solid #cccccc; margin: 50px;\npadding: 30px; background-color: aqua; }\n\x3c!-- dom --\x3e\n<div class="client"></div>\n\x3c!-- js --\x3e\nlet dom = document.querySelector(".client"); let {clientHeight, clientWidth,\nclientLeft, clientTop} = dom;\nconsole.table({clientHeight,clientWidth,clientLeft,clientTop});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\ndom client     value   expr                  \nclientWidth    260     width + 2* padding    \nclientHeight   210     height + 2* padding   \nclientLeft     10      border                \nclientTop      10      boder                 \n\n * document 兼容写法\n\n// 正常浏览器（包括IE9+）\nwindow.innerWidth\n// 标准模式\ndocument.documentElement.clientWidth\n// 怪异模式\ndocument.body.clientWidth\n\n// client 兼容写法\nfunction client() {\n  if (window.innerWidth != null) {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight\n    }\n    // document.compatMode 用来判断当前浏览器采用的渲染方式\n  } else if (document.compatMode == "CSS1Compat") {\n    return {\n      width: document.documentElement.clientWidth,\n      height: document.documentElement.clientHeight\n    }\n  } else {\n    return {\n      width: document.body.clientWidth,\n      height: document.body.clientHeight\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n * document example\n\nlet doc = document.documentElement || document.body;\nlet { clientHeight, clientWidth } = doc;\nconsole.table({ clientHeight, clientWidth, clientLeft, clientTop });\n\n\n1\n2\n3\n# offsetHeight/offsetWidth\n * offsetHeight 和 style.height 的区别: style.height是字符串,offsetHeight是数值\n * demo.style.height是用来获取和设置行内样式的,offsetHeight是只读属性\n * demo.style.height只能获取和设置行内样式,如果样式写到了其他地方,甚至根本就没写,便无法获取.因此,工作中一般用demo.offsetHeight来获取某元素的真实宽度/高度,用style.height来设置宽度/高度\n * offsetHeight的构成offsetHeight = height+padding+border,包括 自身高度 内边距 边框 不包括 外边距\n * element example\n\n\x3c!-- css --\x3e\nhtml,body{padding:0;margin:0} .client{ width: 200px; height: 150px; border: 10px\nsolid #cccccc; margin: 50px; padding: 30px; background-color: aqua; }\n\x3c!-- dom --\x3e\n<div class="client"></div>\n\x3c!-- js --\x3e\nlet dom = document.querySelector(".client"); let {offsetWidth, offsetHeight,\noffsetLeft, offsetTop} = dom; console.table({offsetWidth, offsetHeight,\noffsetLeft, offsetTop});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\noffset         value   expr                              \noffsetWidth    280     width + 2* padding + 2* border    \noffsetHeight   230     height + 2* padding + 2* border   \noffsetLeft     50      margin                            \noffsetTop      50      margin                            \n\n * 兼容写法\n\n// 网页内容实际宽高 (不包括工具栏和滚动条等边线）\nvar offsetWidth = document.documentElement.offsetWidth || document.body.offsetWidth;\nvar offsetHeight = document.documentElement.offsetHeight || document.body.offsetHeight;\n\n\n1\n2\n3\n * document example\n\n// css\nhtml{height: 500px;width: 1000px;border: 1px solid red;}\n// js\nlet doc = document.documentElement || document.body\nlet {offsetWidth , offsetHeight} = doc;\nconsole.table({offsetWidth, offsetHeight}); // 1002 502\n\n\n1\n2\n3\n4\n5\n6\n# offsetLeft/offsetTop\n * offsetLeft和style.left的区别:\n   \n    * 最大区别在于offsetLeft可以计算没有定位的盒子到左侧的距离,而style.left可能会出问题\n    * 如果没有给 HTML 元素指定 left 样式,则style.left返回的是空字符串.\n    * offsetLeft只读,而style.left可读写.\n    * offsetLeft返回的是数字,而style.left返回的是字符串,除了数字外还带有单位：px.\n   \n   \n * offsetLeft的构成:\n   \n    * 到最近的（带有定位的）父元素的 左侧/顶部 的距离\n    * 如果所有父级都没有定位则以 body 为准\n    * offsetLeft 是到父亲的padding左侧的距离（不是border更不是margin）\n   \n   \n * example\n   \n   \n\n\x3c!-- css --\x3e\nhtml,body{padding:0;margin:0} .client { width: 200px; height: 150px; margin:\n100px; background-color: pink; /* position: relative; */ } .box{\nbackground-color: red; width: 100px; height: 100px; }\n\x3c!-- html --\x3e\n<div class="client">\n  <div class="box"></div>\n</div>\n\x3c!-- js --\x3e\nlet dom = document.querySelector(".box"); let {offsetLeft, offsetTop} = dom;\nconsole.table({ offsetLeft, offsetTop });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 父级无定位\n\noffset       value   expr     \noffsetLeft   100     margin   \noffsetTop    100     margin   \n\n\n\n * 父级有定位\n\noffset       value   expr     \noffsetLeft   100     margin   \noffsetTop    100     margin   \n\n\n\n * offset img\n\n\n\n# scrollHeight/scrollWidth\n * event window.onscroll = function () { //code }\n   \n   \n * dom 对象内部实际内容的高度/宽度\n   \n   \n\n<style>\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n  }\n  .client {\n    width: 200px;\n    height: 150px;\n    margin: 100px;\n    background-color: pink;\n    overflow: auto;\n    padding: 10px;\n  }\n  .box {\n    background-color: red;\n    width: 300px;\n    height: 1000px;\n    padding: 50px;\n    border: 40px;\n  }\n</style>\n\x3c!-- html --\x3e\n<div class="client">\n  <div class="box"></div>\n</div>\n\x3c!-- js --\x3e\n<script>\n  let dom = document.querySelector(".box");\n  let { scrollWidth, scrollHeight } = dom;\n  console.table({ scrollWidth, scrollHeight });\n  // => 400 , 1100\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\nscroll         value   expr                  \nscrollWidth    400     width + padding * 2   \nscrollHeight   1100    width + padding *2    \n\n * document\n\n// 网页内容实际宽高（包括工具栏和滚动条等边线）\nvar scrollWidth = document.documentElement.scrollWidth || document.body.scrollWidth;\nvar scrollHeight = document.documentElement.scrollHeight || document.body.scrollHeight;\n\n\n1\n2\n3\n// css\nhtml{height: 5000px;width: 2000px;}\n// js\nlet doc = document.documentElement || document.body\nlet {scrollHeight, scrollWidth} = doc;\nconsole.table({scrollHeight, scrollWidth});\n// 5000 , 2000\n\n\n1\n2\n3\n4\n5\n6\n7\n# scrollTop/scrollLeft\n * scrollTop和scrollLeft 被卷去部分的 顶部/左侧 到可视区域 顶部/左侧 的距离\n\n// 正常浏览器（除了ie678之外的浏览器）\nwindow.pageYOffset\n// 已经声明DTD（标准模式）\ndocument.documentElement.scrollTop\n// 未声明 DTD（怪异模式）\ndocument.body.scrollTop\n\n//页面滚动座标onscroll\n//scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\nfunction scroll() {\n  if (window.pageYOffset != null) {\n    //正常浏览器\n    return {\n      top: window.pageYOffset,\n      left: window.pageXOffset\n    }\n  } else if (document.compatMode == "CSS1Compat") {\n    //有DTD的网页\n    return {\n      top: document.documentElement.scrollTop,\n      left: document.documentElement.scrollLeft\n    }\n  } else {\n    //没有DTD的\n    return {\n      top: document.body.scrollTop,\n      left: document.body.scrollLeft\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n * document example\n\nlet doc = document.documentElement || document.body;\nwindow.addEventListener("scroll", function() {\n  let { scrollTop, scrollLeft } = doc;\n  console.table({ scrollTop, scrollLeft });\n});\n\n\n1\n2\n3\n4\n5\n * dom example\n\n<style>\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n  }\n  .client {\n    width: 200px;\n    height: 150px;\n    margin: 100px;\n    background-color: pink;\n    overflow: auto;\n    padding: 10px;\n  }\n  .box {\n    background-color: red;\n    width: 300px;\n    height: 1000px;\n    padding: 50px;\n    border: 40px;\n  }\n</style>\n<div class="client">\n  <div class="box"></div>\n</div>\n<script>\n  let client = document.querySelector(".client");\n  client.addEventListener("scroll", function() {\n    let { scrollWidth, scrollHeight, scrollTop, scrollLeft } = client;\n    console.table({\n      scrollWidth,\n      scrollHeight,\n      scrollTop,\n      scrollLeft\n    });\n  });\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n * 页面滚动座标: window.scrollTo(xpos,ypos)窗体（左上角）滚动到页面这个座标position\n\n# getComputedStyle\n * 访问属性的两种方式: div.style.width, 只能得到行内样式\n * 另外一种写法: div.style["width"] 引号内写属性的名字\n * 计算后样式的获取:\n\n// IE678:\n// element.currentStyle.属性名 或 element.currentStyle["属性名"]\ndemo.currentStyle.left;\ndemo.currentStyle["left"];\n\n\n1\n2\n3\n4\n * 兼容写法\n\n//window.getComputedStyle(element,伪元素)["属性名"]\n// 第二个参数：\n//    表示指定节点的伪元素（比如:before、:after、:first-line、:first-letter等）\nvar result = window.getComputedStyle(div, \':before\');\n// 一般情况下没有伪元素,我们用 null 来替代.\nwindow.getComputedStyle(demo, null)["left"]\n\nfunction getStyle(obj, attr) {\n  if (obj.currentStyle) {\n    return obj.currentStyle[attr]; //ie678\n  } else {\n    return getComputedStyle(obj, null)[attr]; //正常浏览器\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# pageX/pageY\n * 以当前文档的左上角为基准点\n\nvar pageY = event.pageY || event.clientY + document.documentElement.scrollTop;\n\nvar pageX = event.pageX || event.clientX + document.documentElement.scrollLeft;\n\n\n1\n2\n3\n * example\n\nlet doc = document.documentElement || document.body;\ndoc.addEventListener("click", function(event) {\n  var pageY = event.pageY || event.clientY + document.documentElement.scrollTop;\n  var pageX =\n    event.pageX || event.clientX + document.documentElement.scrollLeft;\n  console.log({ pageX, pageY });\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n# screenX/screenY\n * 当前屏幕的左上角为基准点\n\nlet doc = document.documentElement || document.body;\ndoc.addEventListener("click", function(event) {\n  console.log(event.screenX, event.screenY);\n});\n\n\n1\n2\n3\n4\n# screen\n// screen object\nconsole.log(screen);\n\n\n1\n2\n# IntersectionObserver\n * IntersectionObserver\n\nconst options = {\n  threshold: 1.0\n};\nconst target = document.querySelector(".target");\nconst callback = function(entries, observer) {\n  entries.forEach(entry => {\n    console.log(entry);\n  });\n};\n\nconst observer = new IntersectionObserver(callback, options);\nobserver.observe(target);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# getBoundingClientRect\n * example\n\n<style>\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n  }\n  .client {\n    width: 200px;\n    height: 150px;\n    margin: 100px;\n    background-color: pink;\n    padding: 10px;\n  }\n</style>\n<div class="client"></div>\n<script>\n  let client = document.querySelector(".client");\n  console.dir(JSON.stringify(client.getBoundingClientRect(), null, 2));\n  /*\n    {\n      "x": 100,\n      "y": 100,\n      "width": 220,\n      "height": 170,\n      "top": 100,\n      "right": 320,\n      "bottom": 270,\n      "left": 100\n    }\n  */\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n// 网页元素左上角的视口横坐标\nElement.getBoundingClientRect().left\n// Element.offsetLeft\n\n// 网页元素左上角的视口纵坐标\nElement.getBoundingClientRect().top\n// Element.offsetTop\n\n// 网页元素左上角的网页横坐标\nElement.getBoundingClientRect().left + document.documentElement.scrollLeft\n// Element.offsetLeft + document.documentElement.scrollLeft\n\n// 网页元素左上角的网页纵坐标\nElement.getBoundingClientRect().top + document.documentElement.scrollTop\n// Element.offsetTop + document.documentElement.scrollTop\n\n// 视口高度\nwindow.innerHeight // 包括滚动条\ndocument.documentElement.clientHeight // 不包括滚动条\n\n// 视口宽度\nwindow.innerWidth // 包括滚动条\ndocument.documentElement.clientWidth // 不包括滚动条\n\nwindow.outerHeight\nwindow.outerWidth\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26',normalizedContent:'# clientheight/clientwidth\n * clientheight：表示的是可视区域的高度，不包含border和滚动条\n * clienttop：表示边框 border 的厚度，在未指定的情况下一般为 0\n\n\n\n * element example\n\n\x3c!-- css --\x3e\n.client{ width: 200px; height: 150px; border: 10px solid #cccccc; margin: 50px;\npadding: 30px; background-color: aqua; }\n\x3c!-- dom --\x3e\n<div class="client"></div>\n\x3c!-- js --\x3e\nlet dom = document.queryselector(".client"); let {clientheight, clientwidth,\nclientleft, clienttop} = dom;\nconsole.table({clientheight,clientwidth,clientleft,clienttop});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\ndom client     value   expr                  \nclientwidth    260     width + 2* padding    \nclientheight   210     height + 2* padding   \nclientleft     10      border                \nclienttop      10      boder                 \n\n * document 兼容写法\n\n// 正常浏览器（包括ie9+）\nwindow.innerwidth\n// 标准模式\ndocument.documentelement.clientwidth\n// 怪异模式\ndocument.body.clientwidth\n\n// client 兼容写法\nfunction client() {\n  if (window.innerwidth != null) {\n    return {\n      width: window.innerwidth,\n      height: window.innerheight\n    }\n    // document.compatmode 用来判断当前浏览器采用的渲染方式\n  } else if (document.compatmode == "css1compat") {\n    return {\n      width: document.documentelement.clientwidth,\n      height: document.documentelement.clientheight\n    }\n  } else {\n    return {\n      width: document.body.clientwidth,\n      height: document.body.clientheight\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n * document example\n\nlet doc = document.documentelement || document.body;\nlet { clientheight, clientwidth } = doc;\nconsole.table({ clientheight, clientwidth, clientleft, clienttop });\n\n\n1\n2\n3\n# offsetheight/offsetwidth\n * offsetheight 和 style.height 的区别: style.height是字符串,offsetheight是数值\n * demo.style.height是用来获取和设置行内样式的,offsetheight是只读属性\n * demo.style.height只能获取和设置行内样式,如果样式写到了其他地方,甚至根本就没写,便无法获取.因此,工作中一般用demo.offsetheight来获取某元素的真实宽度/高度,用style.height来设置宽度/高度\n * offsetheight的构成offsetheight = height+padding+border,包括 自身高度 内边距 边框 不包括 外边距\n * element example\n\n\x3c!-- css --\x3e\nhtml,body{padding:0;margin:0} .client{ width: 200px; height: 150px; border: 10px\nsolid #cccccc; margin: 50px; padding: 30px; background-color: aqua; }\n\x3c!-- dom --\x3e\n<div class="client"></div>\n\x3c!-- js --\x3e\nlet dom = document.queryselector(".client"); let {offsetwidth, offsetheight,\noffsetleft, offsettop} = dom; console.table({offsetwidth, offsetheight,\noffsetleft, offsettop});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\noffset         value   expr                              \noffsetwidth    280     width + 2* padding + 2* border    \noffsetheight   230     height + 2* padding + 2* border   \noffsetleft     50      margin                            \noffsettop      50      margin                            \n\n * 兼容写法\n\n// 网页内容实际宽高 (不包括工具栏和滚动条等边线）\nvar offsetwidth = document.documentelement.offsetwidth || document.body.offsetwidth;\nvar offsetheight = document.documentelement.offsetheight || document.body.offsetheight;\n\n\n1\n2\n3\n * document example\n\n// css\nhtml{height: 500px;width: 1000px;border: 1px solid red;}\n// js\nlet doc = document.documentelement || document.body\nlet {offsetwidth , offsetheight} = doc;\nconsole.table({offsetwidth, offsetheight}); // 1002 502\n\n\n1\n2\n3\n4\n5\n6\n# offsetleft/offsettop\n * offsetleft和style.left的区别:\n   \n    * 最大区别在于offsetleft可以计算没有定位的盒子到左侧的距离,而style.left可能会出问题\n    * 如果没有给 html 元素指定 left 样式,则style.left返回的是空字符串.\n    * offsetleft只读,而style.left可读写.\n    * offsetleft返回的是数字,而style.left返回的是字符串,除了数字外还带有单位：px.\n   \n   \n * offsetleft的构成:\n   \n    * 到最近的（带有定位的）父元素的 左侧/顶部 的距离\n    * 如果所有父级都没有定位则以 body 为准\n    * offsetleft 是到父亲的padding左侧的距离（不是border更不是margin）\n   \n   \n * example\n   \n   \n\n\x3c!-- css --\x3e\nhtml,body{padding:0;margin:0} .client { width: 200px; height: 150px; margin:\n100px; background-color: pink; /* position: relative; */ } .box{\nbackground-color: red; width: 100px; height: 100px; }\n\x3c!-- html --\x3e\n<div class="client">\n  <div class="box"></div>\n</div>\n\x3c!-- js --\x3e\nlet dom = document.queryselector(".box"); let {offsetleft, offsettop} = dom;\nconsole.table({ offsetleft, offsettop });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 父级无定位\n\noffset       value   expr     \noffsetleft   100     margin   \noffsettop    100     margin   \n\n\n\n * 父级有定位\n\noffset       value   expr     \noffsetleft   100     margin   \noffsettop    100     margin   \n\n\n\n * offset img\n\n\n\n# scrollheight/scrollwidth\n * event window.onscroll = function () { //code }\n   \n   \n * dom 对象内部实际内容的高度/宽度\n   \n   \n\n<style>\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n  }\n  .client {\n    width: 200px;\n    height: 150px;\n    margin: 100px;\n    background-color: pink;\n    overflow: auto;\n    padding: 10px;\n  }\n  .box {\n    background-color: red;\n    width: 300px;\n    height: 1000px;\n    padding: 50px;\n    border: 40px;\n  }\n</style>\n\x3c!-- html --\x3e\n<div class="client">\n  <div class="box"></div>\n</div>\n\x3c!-- js --\x3e\n<script>\n  let dom = document.queryselector(".box");\n  let { scrollwidth, scrollheight } = dom;\n  console.table({ scrollwidth, scrollheight });\n  // => 400 , 1100\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\nscroll         value   expr                  \nscrollwidth    400     width + padding * 2   \nscrollheight   1100    width + padding *2    \n\n * document\n\n// 网页内容实际宽高（包括工具栏和滚动条等边线）\nvar scrollwidth = document.documentelement.scrollwidth || document.body.scrollwidth;\nvar scrollheight = document.documentelement.scrollheight || document.body.scrollheight;\n\n\n1\n2\n3\n// css\nhtml{height: 5000px;width: 2000px;}\n// js\nlet doc = document.documentelement || document.body\nlet {scrollheight, scrollwidth} = doc;\nconsole.table({scrollheight, scrollwidth});\n// 5000 , 2000\n\n\n1\n2\n3\n4\n5\n6\n7\n# scrolltop/scrollleft\n * scrolltop和scrollleft 被卷去部分的 顶部/左侧 到可视区域 顶部/左侧 的距离\n\n// 正常浏览器（除了ie678之外的浏览器）\nwindow.pageyoffset\n// 已经声明dtd（标准模式）\ndocument.documentelement.scrolltop\n// 未声明 dtd（怪异模式）\ndocument.body.scrolltop\n\n//页面滚动座标onscroll\n//scrolltop = window.pageyoffset || document.documentelement.scrolltop || document.body.scrolltop || 0;\nfunction scroll() {\n  if (window.pageyoffset != null) {\n    //正常浏览器\n    return {\n      top: window.pageyoffset,\n      left: window.pagexoffset\n    }\n  } else if (document.compatmode == "css1compat") {\n    //有dtd的网页\n    return {\n      top: document.documentelement.scrolltop,\n      left: document.documentelement.scrollleft\n    }\n  } else {\n    //没有dtd的\n    return {\n      top: document.body.scrolltop,\n      left: document.body.scrollleft\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n * document example\n\nlet doc = document.documentelement || document.body;\nwindow.addeventlistener("scroll", function() {\n  let { scrolltop, scrollleft } = doc;\n  console.table({ scrolltop, scrollleft });\n});\n\n\n1\n2\n3\n4\n5\n * dom example\n\n<style>\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n  }\n  .client {\n    width: 200px;\n    height: 150px;\n    margin: 100px;\n    background-color: pink;\n    overflow: auto;\n    padding: 10px;\n  }\n  .box {\n    background-color: red;\n    width: 300px;\n    height: 1000px;\n    padding: 50px;\n    border: 40px;\n  }\n</style>\n<div class="client">\n  <div class="box"></div>\n</div>\n<script>\n  let client = document.queryselector(".client");\n  client.addeventlistener("scroll", function() {\n    let { scrollwidth, scrollheight, scrolltop, scrollleft } = client;\n    console.table({\n      scrollwidth,\n      scrollheight,\n      scrolltop,\n      scrollleft\n    });\n  });\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n * 页面滚动座标: window.scrollto(xpos,ypos)窗体（左上角）滚动到页面这个座标position\n\n# getcomputedstyle\n * 访问属性的两种方式: div.style.width, 只能得到行内样式\n * 另外一种写法: div.style["width"] 引号内写属性的名字\n * 计算后样式的获取:\n\n// ie678:\n// element.currentstyle.属性名 或 element.currentstyle["属性名"]\ndemo.currentstyle.left;\ndemo.currentstyle["left"];\n\n\n1\n2\n3\n4\n * 兼容写法\n\n//window.getcomputedstyle(element,伪元素)["属性名"]\n// 第二个参数：\n//    表示指定节点的伪元素（比如:before、:after、:first-line、:first-letter等）\nvar result = window.getcomputedstyle(div, \':before\');\n// 一般情况下没有伪元素,我们用 null 来替代.\nwindow.getcomputedstyle(demo, null)["left"]\n\nfunction getstyle(obj, attr) {\n  if (obj.currentstyle) {\n    return obj.currentstyle[attr]; //ie678\n  } else {\n    return getcomputedstyle(obj, null)[attr]; //正常浏览器\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# pagex/pagey\n * 以当前文档的左上角为基准点\n\nvar pagey = event.pagey || event.clienty + document.documentelement.scrolltop;\n\nvar pagex = event.pagex || event.clientx + document.documentelement.scrollleft;\n\n\n1\n2\n3\n * example\n\nlet doc = document.documentelement || document.body;\ndoc.addeventlistener("click", function(event) {\n  var pagey = event.pagey || event.clienty + document.documentelement.scrolltop;\n  var pagex =\n    event.pagex || event.clientx + document.documentelement.scrollleft;\n  console.log({ pagex, pagey });\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n# screenx/screeny\n * 当前屏幕的左上角为基准点\n\nlet doc = document.documentelement || document.body;\ndoc.addeventlistener("click", function(event) {\n  console.log(event.screenx, event.screeny);\n});\n\n\n1\n2\n3\n4\n# screen\n// screen object\nconsole.log(screen);\n\n\n1\n2\n# intersectionobserver\n * intersectionobserver\n\nconst options = {\n  threshold: 1.0\n};\nconst target = document.queryselector(".target");\nconst callback = function(entries, observer) {\n  entries.foreach(entry => {\n    console.log(entry);\n  });\n};\n\nconst observer = new intersectionobserver(callback, options);\nobserver.observe(target);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# getboundingclientrect\n * example\n\n<style>\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n  }\n  .client {\n    width: 200px;\n    height: 150px;\n    margin: 100px;\n    background-color: pink;\n    padding: 10px;\n  }\n</style>\n<div class="client"></div>\n<script>\n  let client = document.queryselector(".client");\n  console.dir(json.stringify(client.getboundingclientrect(), null, 2));\n  /*\n    {\n      "x": 100,\n      "y": 100,\n      "width": 220,\n      "height": 170,\n      "top": 100,\n      "right": 320,\n      "bottom": 270,\n      "left": 100\n    }\n  */\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n// 网页元素左上角的视口横坐标\nelement.getboundingclientrect().left\n// element.offsetleft\n\n// 网页元素左上角的视口纵坐标\nelement.getboundingclientrect().top\n// element.offsettop\n\n// 网页元素左上角的网页横坐标\nelement.getboundingclientrect().left + document.documentelement.scrollleft\n// element.offsetleft + document.documentelement.scrollleft\n\n// 网页元素左上角的网页纵坐标\nelement.getboundingclientrect().top + document.documentelement.scrolltop\n// element.offsettop + document.documentelement.scrolltop\n\n// 视口高度\nwindow.innerheight // 包括滚动条\ndocument.documentelement.clientheight // 不包括滚动条\n\n// 视口宽度\nwindow.innerwidth // 包括滚动条\ndocument.documentelement.clientwidth // 不包括滚动条\n\nwindow.outerheight\nwindow.outerwidth\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26',charsets:{cjk:!0}},{title:"console的使用方法",frontmatter:{title:"console的使用方法",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["console"],readingShow:"top"},regularPath:"/js/console.html",relativePath:"js/console.md",key:"v-10abb235",path:"/js/console.html",headers:[{level:2,title:"log",slug:"log",normalizedTitle:"log",charIndex:2},{level:2,title:"dir",slug:"dir",normalizedTitle:"dir",charIndex:366},{level:2,title:"warn",slug:"warn",normalizedTitle:"warn",charIndex:437},{level:2,title:"table",slug:"table",normalizedTitle:"table",charIndex:451},{level:2,title:"assert",slug:"assert",normalizedTitle:"assert",charIndex:470},{level:2,title:"count()",slug:"count",normalizedTitle:"count()",charIndex:584},{level:2,title:"countReset()",slug:"countreset",normalizedTitle:"countreset()",charIndex:693},{level:2,title:"time()",slug:"time",normalizedTitle:"time()",charIndex:718},{level:2,title:"timeEnd()",slug:"timeend",normalizedTitle:"timeend()",charIndex:727},{level:2,title:"group",slug:"group",normalizedTitle:"group",charIndex:739},{level:2,title:"开发控制台选择 DOM 元素",slug:"开发控制台选择-dom-元素",normalizedTitle:"开发控制台选择 dom 元素",charIndex:747},{level:2,title:"将浏览器转换为编辑器",slug:"将浏览器转换为编辑器",normalizedTitle:"将浏览器转换为编辑器",charIndex:778},{level:2,title:"查找与 DOM 中的元素关联的事件",slug:"查找与-dom-中的元素关联的事件",normalizedTitle:"查找与 dom 中的元素关联的事件",charIndex:830},{level:2,title:"监控事件",slug:"监控事件",normalizedTitle:"监控事件",charIndex:1032},{level:2,title:"检查 DOM 中的一个元素",slug:"检查-dom-中的一个元素",normalizedTitle:"检查 dom 中的一个元素",charIndex:1597},{level:2,title:"检索最后一个结果的值",slug:"检索最后一个结果的值",normalizedTitle:"检索最后一个结果的值",charIndex:1876},{level:2,title:"清除控制台和内存",slug:"清除控制台和内存",normalizedTitle:"清除控制台和内存",charIndex:1896},{level:2,title:"console",slug:"console",normalizedTitle:"console",charIndex:171}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"log dir warn table assert count() countReset() time() timeEnd() group 开发控制台选择 DOM 元素 将浏览器转换为编辑器 查找与 DOM 中的元素关联的事件 监控事件 检查 DOM 中的一个元素 检索最后一个结果的值 清除控制台和内存 console",content:'# log\n * 占位符\n   \n    * %s 接受字符串\n    * %d 表示小数或整数\n    * %i 整数\n    * %f 浮点数\n    * %o (这是字母 o，不是 0)，它接受对象\n    * %c CSS 格式字符串\n   \n   \n\nvar number = 11 * 9;\nvar color = \'red\';\nconsole.log(\'%d %s balloons\', number, color);\n// 99 red balloons\n\nconsole.log(\'I like %s but I do not like %s.\', \'Skittles\', \'pus\');\n\n> I like Skittles but I do not like pus.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# dir\n * 查看 DOM 结构对象\n\nlet ele = document.body;\nconsole.dir(ele);\n\n\n1\n2\n# warn\n * 警告\n\n# table\n * 显示表格数据\n\n# assert\n * 对输入的表达式进行断言，只有表达式为 false 时，才输出相应的信息到控制台\n\nvar arr = [1, 2, 3];\nconsole.assert(arr.length === 4);\n\n\n1\n2\n# count()\n * 计数器\n\nfor (let i = 0; i < 10; i++) {\n  if (i % 2) {\n    console.count("odds");\n  }\n}\n\n\n1\n2\n3\n4\n5\n# countReset()\n * 重置计数器\n\n# time()\n# timeEnd()\n# group\n# 开发控制台选择 DOM 元素\n * $(\'body\')\n\n# 将浏览器转换为编辑器\n * document.body.contentEditable=true\n\n# 查找与 DOM 中的元素关联的事件\n * 需要查找 DOM 中某个元素的事件侦听器感时，谷歌控制台了 getEventListeners使找到这些事件更加容易且直观\n\ngetEventListeners($(".selector"));\n\n// 找到特定事件的侦听器\ngetEventListeners($("selector")).eventName[0].listener;\n\n\n1\n2\n3\n4\n# 监控事件\n * monitorEvents($(‘selector’)) 将监视与选择器的元素关联的所有事件，然后在它们被触发时将它们打印到控制台。例如，monitore($(#firstName)) 将打印 ID 为 firstName元素的所有事件\n   \n   \n * monitorEvents($(‘selector’),’eventName’) 将打印与元素绑定的特定事件。 你可以将事件名称作为参数传递给函数。 这将仅记录绑定到特定元素的特定事件。 例如，monitorEvents($(‘#firstName’),’click’) 将打印绑定到 ID 为firstName的元素的所有 click 事件\n   \n   \n * monitore($(selector)，[eventName1, eventName3\'， .])将根据您自己的需求记录多个事件。与其传递单个事件名作为参数，不如传递包含所有事件的字符串数组。例如monitore($(#firstName)，[click, focus])将记录与 ID firstName元素绑定的 click事件和focus事件\n   \n   \n * unmonitorevent ($(selector)):这将停止监视和打印控制台中的事件\n   \n   \n\n# 检查 DOM 中的一个元素\n * inspect($(‘selector’)) 将检查与选择器匹配的元素，并转到 Chrome Developer Tools 中的 Elements 选项卡。 例如， inspect($(‘#firstName’)) 将检查 ID 为\'firstName\' 的元素，spect($(\'a\')[3]) 将检查 DOM 中的第 4 个 a 元素\n   \n   \n * $0, $1, $2 等可以帮助你获取最近检查过的元素。 例如，``表示最后检查的 DOM 元素，而$1 倒数第二个检查的 DOM 元素\n   \n   \n\n# 检索最后一个结果的值\n * $_\n\n# 清除控制台和内存\n * clear()\n\n# console\nconsole.log()\nconsole.info()\nconsole.debug()\n\nconsole.warn()\nconsole.error()\n\nconsole.time() //用于计时开始\nconsole.timeEnd() //用于计时结束\n\nconsole.table() //某些复合类型的数据,可以将其转为表格显示\nconsole.count() //用于计数,输出它被调用了多少次\n\nconsole.trace() //显示当前执行的代码在堆栈中的调用路径\nconsole.clear() //清除当前控制台的所有输出\n\nconsole.dir()，console.dirxml()\nconsole.group()，console.groupEnd()，console.groupCollapsed()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\ndebugger;\n// table\nvar languages = [\n  { name: "JavaScript", fileExtension: ".js" },\n  { name: "TypeScript", fileExtension: ".ts" },\n  { name: "CoffeeScript", fileExtension: ".coffee" }\n];\nconsole.table(languages);\n// count\nfunction greet(user) {\n  console.count();\n  return "hi " + user;\n}\ngreet("bob");\n//  : 1\n// "hi bob"\n\ngreet("alice");\n//  : 2\n// "hi alice"\n\nconsole.count; //可以接受一个字符串作为参数,作为标签,对执行次数进行分类\ngreet("bob");\n// bob: 1\n// "hi bob"\ngreet("alice");\n// alice: 1\n// "hi alice"\ngreet("bob");\n// bob: 2\n// "hi bob"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31',normalizedContent:'# log\n * 占位符\n   \n    * %s 接受字符串\n    * %d 表示小数或整数\n    * %i 整数\n    * %f 浮点数\n    * %o (这是字母 o，不是 0)，它接受对象\n    * %c css 格式字符串\n   \n   \n\nvar number = 11 * 9;\nvar color = \'red\';\nconsole.log(\'%d %s balloons\', number, color);\n// 99 red balloons\n\nconsole.log(\'i like %s but i do not like %s.\', \'skittles\', \'pus\');\n\n> i like skittles but i do not like pus.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# dir\n * 查看 dom 结构对象\n\nlet ele = document.body;\nconsole.dir(ele);\n\n\n1\n2\n# warn\n * 警告\n\n# table\n * 显示表格数据\n\n# assert\n * 对输入的表达式进行断言，只有表达式为 false 时，才输出相应的信息到控制台\n\nvar arr = [1, 2, 3];\nconsole.assert(arr.length === 4);\n\n\n1\n2\n# count()\n * 计数器\n\nfor (let i = 0; i < 10; i++) {\n  if (i % 2) {\n    console.count("odds");\n  }\n}\n\n\n1\n2\n3\n4\n5\n# countreset()\n * 重置计数器\n\n# time()\n# timeend()\n# group\n# 开发控制台选择 dom 元素\n * $(\'body\')\n\n# 将浏览器转换为编辑器\n * document.body.contenteditable=true\n\n# 查找与 dom 中的元素关联的事件\n * 需要查找 dom 中某个元素的事件侦听器感时，谷歌控制台了 geteventlisteners使找到这些事件更加容易且直观\n\ngeteventlisteners($(".selector"));\n\n// 找到特定事件的侦听器\ngeteventlisteners($("selector")).eventname[0].listener;\n\n\n1\n2\n3\n4\n# 监控事件\n * monitorevents($(‘selector’)) 将监视与选择器的元素关联的所有事件，然后在它们被触发时将它们打印到控制台。例如，monitore($(#firstname)) 将打印 id 为 firstname元素的所有事件\n   \n   \n * monitorevents($(‘selector’),’eventname’) 将打印与元素绑定的特定事件。 你可以将事件名称作为参数传递给函数。 这将仅记录绑定到特定元素的特定事件。 例如，monitorevents($(‘#firstname’),’click’) 将打印绑定到 id 为firstname的元素的所有 click 事件\n   \n   \n * monitore($(selector)，[eventname1, eventname3\'， .])将根据您自己的需求记录多个事件。与其传递单个事件名作为参数，不如传递包含所有事件的字符串数组。例如monitore($(#firstname)，[click, focus])将记录与 id firstname元素绑定的 click事件和focus事件\n   \n   \n * unmonitorevent ($(selector)):这将停止监视和打印控制台中的事件\n   \n   \n\n# 检查 dom 中的一个元素\n * inspect($(‘selector’)) 将检查与选择器匹配的元素，并转到 chrome developer tools 中的 elements 选项卡。 例如， inspect($(‘#firstname’)) 将检查 id 为\'firstname\' 的元素，spect($(\'a\')[3]) 将检查 dom 中的第 4 个 a 元素\n   \n   \n * $0, $1, $2 等可以帮助你获取最近检查过的元素。 例如，``表示最后检查的 dom 元素，而$1 倒数第二个检查的 dom 元素\n   \n   \n\n# 检索最后一个结果的值\n * $_\n\n# 清除控制台和内存\n * clear()\n\n# console\nconsole.log()\nconsole.info()\nconsole.debug()\n\nconsole.warn()\nconsole.error()\n\nconsole.time() //用于计时开始\nconsole.timeend() //用于计时结束\n\nconsole.table() //某些复合类型的数据,可以将其转为表格显示\nconsole.count() //用于计数,输出它被调用了多少次\n\nconsole.trace() //显示当前执行的代码在堆栈中的调用路径\nconsole.clear() //清除当前控制台的所有输出\n\nconsole.dir()，console.dirxml()\nconsole.group()，console.groupend()，console.groupcollapsed()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\ndebugger;\n// table\nvar languages = [\n  { name: "javascript", fileextension: ".js" },\n  { name: "typescript", fileextension: ".ts" },\n  { name: "coffeescript", fileextension: ".coffee" }\n];\nconsole.table(languages);\n// count\nfunction greet(user) {\n  console.count();\n  return "hi " + user;\n}\ngreet("bob");\n//  : 1\n// "hi bob"\n\ngreet("alice");\n//  : 2\n// "hi alice"\n\nconsole.count; //可以接受一个字符串作为参数,作为标签,对执行次数进行分类\ngreet("bob");\n// bob: 1\n// "hi bob"\ngreet("alice");\n// alice: 1\n// "hi alice"\ngreet("bob");\n// bob: 2\n// "hi bob"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31',charsets:{cjk:!0}},{title:"Date日期",frontmatter:{title:"Date日期",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["Date"],readingShow:"top"},regularPath:"/js/date.html",relativePath:"js/date.md",key:"v-73b9822b",path:"/js/date.html",headers:[{level:2,title:"静态方法",slug:"静态方法",normalizedTitle:"静态方法",charIndex:14},{level:3,title:"Date.now()",slug:"date-now",normalizedTitle:"date.now()",charIndex:53},{level:3,title:"Date.parse(string)",slug:"date-parse-string",normalizedTitle:"date.parse(string)",charIndex:108},{level:3,title:"Date.UTC()",slug:"date-utc",normalizedTitle:"date.utc()",charIndex:213},{level:2,title:"get 类方法",slug:"get-类方法",normalizedTitle:"get 类方法",charIndex:311},{level:3,title:"getTime()",slug:"gettime",normalizedTitle:"gettime()",charIndex:321},{level:3,title:"getDay()",slug:"getday",normalizedTitle:"getday()",charIndex:373},{level:3,title:"getFullYear()",slug:"getfullyear",normalizedTitle:"getfullyear()",charIndex:408},{level:3,title:"getMonth()",slug:"getmonth",normalizedTitle:"getmonth()",charIndex:436},{level:3,title:"getDate()",slug:"getdate",normalizedTitle:"getdate()",charIndex:479},{level:3,title:"getHours()",slug:"gethours",normalizedTitle:"gethours()",charIndex:518},{level:3,title:"getMilliseconds()",slug:"getmilliseconds",normalizedTitle:"getmilliseconds()",charIndex:546},{level:3,title:"getMinutes()",slug:"getminutes",normalizedTitle:"getminutes()",charIndex:582},{level:3,title:"getSeconds()",slug:"getseconds",normalizedTitle:"getseconds()",charIndex:612},{level:2,title:"set 类方法",slug:"set-类方法",normalizedTitle:"set 类方法",charIndex:641},{level:3,title:"setFullYear(year [, month, date])",slug:"setfullyear-year-month-date",normalizedTitle:"setfullyear(year [, month, date])",charIndex:651},{level:3,title:"setMonth(month [, date])",slug:"setmonth-month-date",normalizedTitle:"setmonth(month [, date])",charIndex:698},{level:3,title:"setDate(date)",slug:"setdate-date",normalizedTitle:"setdate(date)",charIndex:740},{level:3,title:"setHours(hour [, min, sec, ms])",slug:"sethours-hour-min-sec-ms",normalizedTitle:"sethours(hour [, min, sec, ms])",charIndex:787},{level:3,title:"setMinutes(min [, sec, ms])",slug:"setminutes-min-sec-ms",normalizedTitle:"setminutes(min [, sec, ms])",charIndex:836},{level:3,title:"setSeconds(sec [, ms])",slug:"setseconds-sec-ms",normalizedTitle:"setseconds(sec [, ms])",charIndex:881},{level:3,title:"setYear(year)",slug:"setyear-year",normalizedTitle:"setyear(year)",charIndex:920},{level:3,title:"setTime(milliseconds)",slug:"settime-milliseconds",normalizedTitle:"settime(milliseconds)",charIndex:955},{level:3,title:"setMilliseconds()",slug:"setmilliseconds",normalizedTitle:"setmilliseconds()",charIndex:991},{level:2,title:"to 类方法",slug:"to-类方法",normalizedTitle:"to 类方法",charIndex:1027},{level:3,title:"Date.prototype.valueOf()",slug:"date-prototype-valueof",normalizedTitle:"date.prototype.valueof()",charIndex:1036},{level:3,title:"Date.prototype.toString()",slug:"date-prototype-tostring",normalizedTitle:"date.prototype.tostring()",charIndex:1105},{level:3,title:"Date.prototype.toUTCString()",slug:"date-prototype-toutcstring",normalizedTitle:"date.prototype.toutcstring()",charIndex:1150},{level:3,title:"Date.prototype.toLocaleDateString()",slug:"date-prototype-tolocaledatestring",normalizedTitle:"date.prototype.tolocaledatestring()",charIndex:1214},{level:3,title:"Date.prototype.toLocaleTimeString()",slug:"date-prototype-tolocaletimestring",normalizedTitle:"date.prototype.tolocaletimestring()",charIndex:1284},{level:2,title:"setInterval",slug:"setinterval",normalizedTitle:"setinterval",charIndex:1351},{level:2,title:"setTimeout",slug:"settimeout",normalizedTitle:"settimeout",charIndex:1946},{level:3,title:"设置定时器名称",slug:"设置定时器名称",normalizedTitle:"设置定时器名称",charIndex:1959},{level:3,title:"清除定时器",slug:"清除定时器",normalizedTitle:"清除定时器",charIndex:2044},{level:3,title:"用 setTimeout 来实现 setInterval",slug:"用-settimeout-来实现-setinterval",normalizedTitle:"用 settimeout 来实现 setinterval",charIndex:2153},{level:3,title:"递归与 arguments.callee",slug:"递归与-arguments-callee",normalizedTitle:"递归与 arguments.callee",charIndex:2292},{level:2,title:"formateTime",slug:"formatetime",normalizedTitle:"formatetime",charIndex:3028},{level:2,title:"formateDate",slug:"formatedate",normalizedTitle:"formatedate",charIndex:3724}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"静态方法 Date.now() Date.parse(string) Date.UTC() get 类方法 getTime() getDay() getFullYear() getMonth() getDate() getHours() getMilliseconds() getMinutes() getSeconds() set 类方法 setFullYear(year [, month, date]) setMonth(month [, date]) setDate(date) setHours(hour [, min, sec, ms]) setMinutes(min [, sec, ms]) setSeconds(sec [, ms]) setYear(year) setTime(milliseconds) setMilliseconds() to 类方法 Date.prototype.valueOf() Date.prototype.toString() Date.prototype.toUTCString() Date.prototype.toLocaleDateString() Date.prototype.toLocaleTimeString() setInterval setTimeout 设置定时器名称 清除定时器 用 setTimeout 来实现 setInterval 递归与 arguments.callee formateTime formateDate",content:'\n\nMDN/Date\n\n# 静态方法\n * 零点 (1970年1月1日 00:00:00 UTC）\n\n# Date.now()\n * 返回当前时间距离时间零点的毫秒数\n * 相当于Unix 时间戳乘以1000\n\n# Date.parse(string)\n * string: YYYY-MM-DDTHH:mm:ss.sssZ\n * Z表示时区\n * 解析日期字符串，返回该时间距离时间零点\n * 果解析失败，返回NaN\n\n# Date.UTC()\n * Date.UTC(year, month[, date[, hrs[, min[, sec[, ms]]]]])\n * 接受参数，返回该时间距离时间零点的毫秒数\n\n# get 类方法\n# getTime()\n * 返回实例距离 1970 年 1 月 1 日 00:00:00 的毫秒数\n\n# getDay()\n * 返回星期几，星期日为 0，星期一为 1\n\n# getFullYear()\n * 返回四位的年份\n\n# getMonth()\n * 返回月份（0 表示 1 月，11 表示 12 月）\n\n# getDate()\n * 返回实例对象对应每个月的几号（从 1 开始）\n\n# getHours()\n * 返回小时（0-23）\n\n# getMilliseconds()\n * 返回毫秒（0-999）\n\n# getMinutes()\n * 返回分钟（0-59）\n\n# getSeconds()\n * 返回秒（0-59）\n\n# set 类方法\n# setFullYear(year [, month, date])\n * 设置四位年份\n\n# setMonth(month [, date])\n * 设置月份（0-11）\n\n# setDate(date)\n * 设置每个月的几号(1-31), 返回改变后毫秒时间戳\n\n# setHours(hour [, min, sec, ms])\n * 设置小时（0-23）\n\n# setMinutes(min [, sec, ms])\n * 设置分钟（0-59）\n\n# setSeconds(sec [, ms])\n * 设置秒（0-59）\n\n# setYear(year)\n * 设置距离 1900 年的年数\n\n# setTime(milliseconds)\n * 设置毫秒时间戳\n\n# setMilliseconds()\n * 设置毫秒（0-999）\n\n# to 类方法\n# Date.prototype.valueOf()\n * 返回实例对象距离时间零点的毫秒数\n * 该方法等同于 getTime 方法\n\n# Date.prototype.toString()\n * 返回一个完整的日期字符串\n\n# Date.prototype.toUTCString()\n * 返回对应的 UTC 时间，也就是比北京时间晚 8 个小时\n\n# Date.prototype.toLocaleDateString()\n * 返回一个字符串，代表日期的当地写法（不含小时、分和秒）\n\n# Date.prototype.toLocaleTimeString()\n * 返回一个字符串，代表时间的当地写法（不含年月日）\n\n# setInterval\n * window.setInterval( 函数名,毫秒值 )(通常省略window)\n\nsetInterval(fn,1000);\nsetInterval("fn()",1000);\nself.setInterval();  //兼容性强一些.\nsetInterval(functong fn(){},1000);\n\nvar num = 1;\nfunction fn(){\n   console.log("setInterval"+num);\n   num++;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n//第一种\nwindow.setInterval(fn, 1000);\n\n//第二种\nsetInterval("fn()", 1000); //兼容问题. self.setInterval("fn()",1000)\nsetInterval(fn, 1000); // 错误：setInterval(fn(),1000); //兼容问题. self.setInterval("fn()",1000)\n\n//第三种\nwindow.setInterval(function() {\n  console.log("setInterval" + num);\n  num++;\n}, 1000);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# setTimeout\n# 设置定时器名称\nvar timer = setInterval(fn, 1000);\nvar timer = setTimeout(fn, 1000);\n\n\n1\n2\n# 清除定时器\n * clearTimeout()\n * clearInterval()\n * 要用定时器,先清定时器！\n\nclearInterval(定时器名);\nclearTimeout(定时器名);\n\n\n1\n2\n# 用 setTimeout 来实现 setInterval\nfunction callback() {\n  //doSomething\n  setTimeout(callback, 200);\n}\nsetTimeout(callback, 200);\n\n\n1\n2\n3\n4\n5\n# 递归与 arguments.callee\n * 递归 : 函数自己调用自己.\n * 要设置跳出循环的条件,如果不设置,容易发生死循环.\n\nvar num = 0;\nfn1();\nfunction fn1() {\n  num++;\n  console.log(num);\n  //递归：函数自己调用自己.\n  if (num < 5) {\n    setTimeout(fn1, 1000);\n    //setTimeout(arguments.callee,1000);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 返回正被执行的Function对调用时推荐使用函数递归arguments.callee代替函数名本身.\n * this: 触动或调用函数的调用者.\n * arguments:callee : 所在的函数体(等于直接调用函数名)\n\nfunction User(login) {\n  this.login = login;\n  this.sayHi = function() {\n    console.log(this.login);\n  };\n}\n\nvar user = new User("John");\nsetTimeout(user.sayHi, 1000); //undefined\n\n// 1.0\nsetTimeout(function() {\n  user.sayHi(); // John\n}, 1000);\n\n//1.1\nsetTimeout(user.sayHi.bind(user), 1000); // John\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# formateTime\nmodule.exports = {\n  formatDateTime(time, fmt) {\n    var date = new Date(time)\n    var o = {\n      \'Y+\': date.getFullYear(), // 年\n      \'M+\': date.getMonth() + 1, // 月份\n      \'D+\': date.getDate(), // 日\n      \'h+\': date.getHours(), // 小时\n      \'m+\': date.getMinutes(), // 分\n      \'s+\': date.getSeconds(), // 秒\n      \'q+\': Math.floor((date.getMonth() + 3) / 3), // 季度\n      S: date.getMilliseconds(), // 毫秒\n    }\n    for (var k in o) {\n      if (new RegExp(\'(\' + k + \')\').test(fmt)) {\n        fmt = fmt.replace(\n          RegExp.$1,\n          o[k] < 10 ? \'0\' + o[k] : o[k],\n        )\n      }\n    }\n    return fmt\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# formateDate\nconst formatTime = date => {\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const hour = date.getHours();\n  const minute = date.getMinutes();\n  const second = date.getSeconds();\n\n  return (\n    [year, month, day].map(formatNumber).join("/") +\n    " " +\n    [hour, minute, second].map(formatNumber).join(":")\n  );\n};\n\nconst formatNumber = n => {\n  n = n.toString();\n  return n[1] ? n : "0" + n;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19',normalizedContent:'\n\nmdn/date\n\n# 静态方法\n * 零点 (1970年1月1日 00:00:00 utc）\n\n# date.now()\n * 返回当前时间距离时间零点的毫秒数\n * 相当于unix 时间戳乘以1000\n\n# date.parse(string)\n * string: yyyy-mm-ddthh:mm:ss.sssz\n * z表示时区\n * 解析日期字符串，返回该时间距离时间零点\n * 果解析失败，返回nan\n\n# date.utc()\n * date.utc(year, month[, date[, hrs[, min[, sec[, ms]]]]])\n * 接受参数，返回该时间距离时间零点的毫秒数\n\n# get 类方法\n# gettime()\n * 返回实例距离 1970 年 1 月 1 日 00:00:00 的毫秒数\n\n# getday()\n * 返回星期几，星期日为 0，星期一为 1\n\n# getfullyear()\n * 返回四位的年份\n\n# getmonth()\n * 返回月份（0 表示 1 月，11 表示 12 月）\n\n# getdate()\n * 返回实例对象对应每个月的几号（从 1 开始）\n\n# gethours()\n * 返回小时（0-23）\n\n# getmilliseconds()\n * 返回毫秒（0-999）\n\n# getminutes()\n * 返回分钟（0-59）\n\n# getseconds()\n * 返回秒（0-59）\n\n# set 类方法\n# setfullyear(year [, month, date])\n * 设置四位年份\n\n# setmonth(month [, date])\n * 设置月份（0-11）\n\n# setdate(date)\n * 设置每个月的几号(1-31), 返回改变后毫秒时间戳\n\n# sethours(hour [, min, sec, ms])\n * 设置小时（0-23）\n\n# setminutes(min [, sec, ms])\n * 设置分钟（0-59）\n\n# setseconds(sec [, ms])\n * 设置秒（0-59）\n\n# setyear(year)\n * 设置距离 1900 年的年数\n\n# settime(milliseconds)\n * 设置毫秒时间戳\n\n# setmilliseconds()\n * 设置毫秒（0-999）\n\n# to 类方法\n# date.prototype.valueof()\n * 返回实例对象距离时间零点的毫秒数\n * 该方法等同于 gettime 方法\n\n# date.prototype.tostring()\n * 返回一个完整的日期字符串\n\n# date.prototype.toutcstring()\n * 返回对应的 utc 时间，也就是比北京时间晚 8 个小时\n\n# date.prototype.tolocaledatestring()\n * 返回一个字符串，代表日期的当地写法（不含小时、分和秒）\n\n# date.prototype.tolocaletimestring()\n * 返回一个字符串，代表时间的当地写法（不含年月日）\n\n# setinterval\n * window.setinterval( 函数名,毫秒值 )(通常省略window)\n\nsetinterval(fn,1000);\nsetinterval("fn()",1000);\nself.setinterval();  //兼容性强一些.\nsetinterval(functong fn(){},1000);\n\nvar num = 1;\nfunction fn(){\n   console.log("setinterval"+num);\n   num++;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n//第一种\nwindow.setinterval(fn, 1000);\n\n//第二种\nsetinterval("fn()", 1000); //兼容问题. self.setinterval("fn()",1000)\nsetinterval(fn, 1000); // 错误：setinterval(fn(),1000); //兼容问题. self.setinterval("fn()",1000)\n\n//第三种\nwindow.setinterval(function() {\n  console.log("setinterval" + num);\n  num++;\n}, 1000);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# settimeout\n# 设置定时器名称\nvar timer = setinterval(fn, 1000);\nvar timer = settimeout(fn, 1000);\n\n\n1\n2\n# 清除定时器\n * cleartimeout()\n * clearinterval()\n * 要用定时器,先清定时器！\n\nclearinterval(定时器名);\ncleartimeout(定时器名);\n\n\n1\n2\n# 用 settimeout 来实现 setinterval\nfunction callback() {\n  //dosomething\n  settimeout(callback, 200);\n}\nsettimeout(callback, 200);\n\n\n1\n2\n3\n4\n5\n# 递归与 arguments.callee\n * 递归 : 函数自己调用自己.\n * 要设置跳出循环的条件,如果不设置,容易发生死循环.\n\nvar num = 0;\nfn1();\nfunction fn1() {\n  num++;\n  console.log(num);\n  //递归：函数自己调用自己.\n  if (num < 5) {\n    settimeout(fn1, 1000);\n    //settimeout(arguments.callee,1000);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 返回正被执行的function对调用时推荐使用函数递归arguments.callee代替函数名本身.\n * this: 触动或调用函数的调用者.\n * arguments:callee : 所在的函数体(等于直接调用函数名)\n\nfunction user(login) {\n  this.login = login;\n  this.sayhi = function() {\n    console.log(this.login);\n  };\n}\n\nvar user = new user("john");\nsettimeout(user.sayhi, 1000); //undefined\n\n// 1.0\nsettimeout(function() {\n  user.sayhi(); // john\n}, 1000);\n\n//1.1\nsettimeout(user.sayhi.bind(user), 1000); // john\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# formatetime\nmodule.exports = {\n  formatdatetime(time, fmt) {\n    var date = new date(time)\n    var o = {\n      \'y+\': date.getfullyear(), // 年\n      \'m+\': date.getmonth() + 1, // 月份\n      \'d+\': date.getdate(), // 日\n      \'h+\': date.gethours(), // 小时\n      \'m+\': date.getminutes(), // 分\n      \'s+\': date.getseconds(), // 秒\n      \'q+\': math.floor((date.getmonth() + 3) / 3), // 季度\n      s: date.getmilliseconds(), // 毫秒\n    }\n    for (var k in o) {\n      if (new regexp(\'(\' + k + \')\').test(fmt)) {\n        fmt = fmt.replace(\n          regexp.$1,\n          o[k] < 10 ? \'0\' + o[k] : o[k],\n        )\n      }\n    }\n    return fmt\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# formatedate\nconst formattime = date => {\n  const year = date.getfullyear();\n  const month = date.getmonth() + 1;\n  const day = date.getdate();\n  const hour = date.gethours();\n  const minute = date.getminutes();\n  const second = date.getseconds();\n\n  return (\n    [year, month, day].map(formatnumber).join("/") +\n    " " +\n    [hour, minute, second].map(formatnumber).join(":")\n  );\n};\n\nconst formatnumber = n => {\n  n = n.tostring();\n  return n[1] ? n : "0" + n;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19',charsets:{cjk:!0}},{title:"浏览器Element标签",frontmatter:{title:"浏览器Element标签",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["element"],readingShow:"top"},regularPath:"/js/dom.html",relativePath:"js/dom.md",key:"v-3dfb9b42",path:"/js/dom.html",headers:[{level:2,title:"类型",slug:"类型",normalizedTitle:"类型",charIndex:17},{level:2,title:"获取 DOM 元素",slug:"获取-dom-元素",normalizedTitle:"获取 dom 元素",charIndex:231},{level:2,title:"DOM常用属性",slug:"dom常用属性",normalizedTitle:"dom常用属性",charIndex:1359},{level:2,title:"节点对象属性",slug:"节点对象属性",normalizedTitle:"节点对象属性",charIndex:2637},{level:3,title:"Node.nodeValue",slug:"node-nodevalue",normalizedTitle:"node.nodevalue",charIndex:2646},{level:3,title:"Node.textContent",slug:"node-textcontent",normalizedTitle:"node.textcontent",charIndex:2695},{level:3,title:"Node.sibling 与 Node.previousSibling",slug:"node-sibling-与-node-previoussibling",normalizedTitle:"node.sibling 与 node.previoussibling",charIndex:2769},{level:3,title:"Node.parentNode",slug:"node-parentnode",normalizedTitle:"node.parentnode",charIndex:3911},{level:3,title:"Node.parentElement",slug:"node-parentelement",normalizedTitle:"node.parentelement",charIndex:4076},{level:3,title:"Node.childNodes",slug:"node-childnodes",normalizedTitle:"node.childnodes",charIndex:4271},{level:3,title:"Node.firstChild 与 Node.lastChild",slug:"node-firstchild-与-node-lastchild",normalizedTitle:"node.firstchild 与 node.lastchild",charIndex:5038},{level:3,title:"children",slug:"children",normalizedTitle:"children",charIndex:3734},{level:2,title:"DOM 节点对象的方法",slug:"dom-节点对象的方法",normalizedTitle:"dom 节点对象的方法",charIndex:6353},{level:3,title:"createElement",slug:"createelement",normalizedTitle:"createelement",charIndex:838},{level:2,title:"节点的添加",slug:"节点的添加",normalizedTitle:"节点的添加",charIndex:6863},{level:3,title:"appendChild",slug:"appendchild",normalizedTitle:"appendchild",charIndex:1034},{level:3,title:"hasChildNodes",slug:"haschildnodes",normalizedTitle:"haschildnodes",charIndex:7099},{level:3,title:"insertBefore",slug:"insertbefore",normalizedTitle:"insertbefore",charIndex:1103},{level:3,title:"insertAdjacentHTML",slug:"insertadjacenthtml",normalizedTitle:"insertadjacenthtml",charIndex:1143},{level:3,title:"cloneNode",slug:"clonenode",normalizedTitle:"clonenode",charIndex:9040},{level:3,title:"removeChild",slug:"removechild",normalizedTitle:"removechild",charIndex:1330},{level:3,title:"replaceChild",slug:"replacechild",normalizedTitle:"replacechild",charIndex:9976},{level:3,title:"Node.contains",slug:"node-contains",normalizedTitle:"node.contains",charIndex:10082},{level:3,title:"isEqualNode",slug:"isequalnode",normalizedTitle:"isequalnode",charIndex:10305},{level:3,title:"Node.normalize",slug:"node-normalize",normalizedTitle:"node.normalize",charIndex:10407},{level:3,title:"节点的属性",slug:"节点的属性",normalizedTitle:"节点的属性",charIndex:10494},{level:3,title:"属性的操作",slug:"属性的操作",normalizedTitle:"属性的操作",charIndex:10949},{level:3,title:"dataset 属性",slug:"dataset-属性",normalizedTitle:"dataset 属性",charIndex:11057},{level:3,title:"ParentNode",slug:"parentnode",normalizedTitle:"parentnode",charIndex:11572},{level:3,title:"ChildNode",slug:"childnode",normalizedTitle:"childnode",charIndex:7102},{level:2,title:"DOM 事件",slug:"dom-事件",normalizedTitle:"dom 事件",charIndex:12001},{level:2,title:"DocumentFragment",slug:"documentfragment",normalizedTitle:"documentfragment",charIndex:205},{level:2,title:"兼容节点",slug:"兼容节点",normalizedTitle:"兼容节点",charIndex:12638}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"类型 获取 DOM 元素 DOM常用属性 节点对象属性 Node.nodeValue Node.textContent Node.sibling 与 Node.previousSibling Node.parentNode Node.parentElement Node.childNodes Node.firstChild 与 Node.lastChild children DOM 节点对象的方法 createElement 节点的添加 appendChild hasChildNodes insertBefore insertAdjacentHTML cloneNode removeChild replaceChild Node.contains isEqualNode Node.normalize 节点的属性 属性的操作 dataset 属性 ParentNode ChildNode DOM 事件 DocumentFragment 兼容节点",content:'\n\nMDN/Element\n\n# 类型\n * Document：整个文档树的顶层节点\n * DocumentType：doctype 标签(比如<!DOCTYPE html>)\n * Element：网页的各种 HTML 标签(比如<body>、<a>等)\n * Attribute：网页元素的属性(比如class="right")\n * Text：标签之间或标签包含的文本\n * Comment：注释\n * DocumentFragment：文档的片段\n\n# 获取 DOM 元素\n * 获取节点\n\ndocument.querySelector("#demo"); //只返回匹配的第一个元素dom  html5\n\ndocument.querySelectorAll(".test"); // html5\n\n// 通过id号来获取元素，返回一个元素对象\ndocument.getElementById(idName)\n\n// 通过name属性获取id号，返回元素对象数组\ndocument.getElementsByName(name)\n\n// 通过class来获取元素，返回元素对象数组\ndocument.getElementsByClassName(className)\n\n// 通过标签名获取元素，返回元素对象数组\ndocument.getElementsByTagName(tagName)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 获取/设置元素的属性值\n\n// 括号传入属性名，返回对应属性的属性值\nelement.getAttribute(attributeName)\n\n// 传入属性名及设置的值\nelement.setAttribute(attributeName,attributeValue)\n\n\n1\n2\n3\n4\n5\n * 创建节点Node\n\n// 创建一个html元素，这里以创建h3元素为例\ndocument.createElement("h3")\n\n// 创建一个文本节点；\ndocument.createTextNode(String);\n\n// 创建一个属性节点，这里以创建class属性为例\ndocument.createAttribute("class");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 增添节点\n\n// 往element内部最后面添加一个节点，参数是节点类型\nelement.appendChild(Node);\n\n// 在element内部的中在existingNode前面插入newNode\nelelment.insertBefore(newNode,existingNode);\n\n// insertAdjacentHTML: (beforebegin | afterbegin | beforeend | afterend)\nelement.insertAdjacentHTML(position, text)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 删除节点\n\n//删除当前节点下指定的子节点，删除成功返回该被删除的节点，否则返回null\nelement.removeChild(Node)\n\n\n\n1\n2\n3\n# DOM常用属性\n * 获取当前元素的父节点\n\n// 返回当前元素的父节点对象\nelement.parentNode\n\n\n1\n2\n * 获取当前元素的子节点\n\n// 返回当前元素所有子元素节点对象，只返回HTML节点\nelement.chlidren\n\n// 返回当前元素多有子节点，包括文本，HTML，属性节点。（回车也会当做一个节点）\nelement.chilidNodes\n\n// 返回当前元素的第一个子节点对象\nelement.firstChild\n\n// 返回当前元素的最后一个子节点对象\nelement.lastChild\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 获取当前元素的同级元素\n\n// 返回当前元素的下一个同级元素 没有就返回null\nelement.nextSibling\n\n// 返回当前元素上一个同级元素 没有就返回 null\nelement.previousSibling\n\n\n1\n2\n3\n4\n5\n * 获取当前元素的文本\n\n// 返回元素的所有文本，包括html代码\nelement.innerHTML\n\n// 返回当前元素的自身及子代所有文本值，只是文本内容，不包括html代码\nelement.innerText\n\n\n1\n2\n3\n4\n5\n * 获取当前节点的节点类型\n\n类型                       nodeName             nodeType   \nELEMENT_NODE             大写的 HTML 元素名         1          \nATTRIBUTE_NODE           Attr.name            2          \nTEXT_NODE                #text                3          \nCOMMENT_NODE             #comment             8          \nDOCUMENT_NODE            #document            9          \nDOCUMENT_TYPE_NODE       DocumentType.name    10         \nDOCUMENT_FRAGMENT_NODE   #document-fragment   11         \n\ndocument.nodeName; // "#document"\ndocument.nodeType; // 9\ndocument.querySelector("a").nodeType === 1; // true\ndocument.querySelector("a").nodeType === Node.ELEMENT_NODE; // true\n\n\n1\n2\n3\n4\n * 设置样式\n\n// 设置元素的样式时使用style\nelement.style.color="#eea";\n\n\n1\n2\n# 节点对象属性\n# Node.nodeValue\n * 返回一个字符串,表示当前节点本身的文本值,该属性可读写\n\n# Node.textContent\n * 返回当前节点和它的所有后代节点的文本内容\n * 自动忽略当前节点内部的HTML标签,返回所有文本内容\n\n# Node.sibling 与 Node.previousSibling\n * Node.nextSibling属性返回紧跟在当前节点后面的第一个同级节点\n * Node.previousSibling属性返回当前节点前面的、距离最近的一个同级节点\n * nextSibling ：IE678 (下一个兄弟节点)\n * 在谷歌火狐中也有这个方法,只不过是得到换行.\n * nextElementSibling ：火狐谷歌 IE9-11 (下一个兄弟节点)\n * 兼容写法：b.nextElementSibling || b.nextSibling\n\n<div class="box"></div>\n<div class="box" id="box"></div>\n<div class="box"></div>\n//1.获取id名为box的盒子.\nvar b = document.getElementById("box");\n//2.通过兄弟节点的方式获得下盒子\nvar n = b.nextElementSibling || b.nextSibling;\n//3.更改背景色\nn.style.backgroundColor = "purple";\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * previousSibling ：IE678 (上一个兄弟节点)\n * 在谷歌火狐中也有这个方法,只不过是得到换行.\n * previousElementSibling ：火狐谷歌 IE9-11 (上一个兄弟节点)\n * 兼容写法：b.previousElementSibling || b.previousSibling\n\n//1.获取id名为box的盒子.\nvar b = document.getElementById("box");\n//2.兄弟节点的方式获得上盒子\nvar m = b.previousElementSibling || b.previousSibling;\n//3.更改背景色\nm.style.backgroundColor = "purple";\n\n// 获取所有的兄弟节点\nfunction siblings(elm) {\n  var a = [];\n  var p = elm.parentNode.children;\n  for (var i = 0, pl = p.length; i < pl; i++) {\n    if (p[i] !== elm) {\n      a.push(p[i]);\n    }\n    return a;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# Node.parentNode\n * 返回当前节点的父节点\n * 只可能是三种类型：element、 document和documentfragment\n\n//从父节点移除指定节点\nif (node.parentNode) {\n  node.parentNode.removeChild(node);\n}\n\n\n1\n2\n3\n4\n# Node.parentElement\n * 返回当前节点的父 Element 节点\n * 如果当前节点没有父节点,或者父节点类型不是 Element 节点,则返回null\n\n//设置指定节点的父Element节点的CSS属性\nif (node.parentElement) {\n  node.parentElement.style.color = "red";\n}\n\n\n1\n2\n3\n4\n# Node.childNodes\n * 火狐谷歌 IE9-11 (所有子节点)\n * nodeType 每一个标签都一个这个属性(有个三个值)\n * nodeType == 1 表示的是元素节点\n * nodeType == 2 表示是属性节点\n * nodeType == 3 是文本节点\n\n<div id="box">\n  <div class="box"></div>\n  <div class="box"></div>\n  <div class="box"></div>\n</div>\n<script>\n  //1.获取父盒子\n  var b = document.getElementById("box");\n  //2.通过父盒子获取所有子盒子\n  var bcArr = b.childNodes;\n  var arr = [];\n  //for循环遍历得到的所有自盒子数组\n  for (var i = 0; i < bcArr.length; i++) {\n    //如果自盒子的nodeType的值 == 1 ,说明他的是元素节点(标签)\n    if (bcArr[i].nodeType == 1) {\n      //把这个标签放入arr 这个数组.\n      arr.push(bcArr[i]);\n    }\n  }\n  //3.打印长度.()\n  console.log(bcArr);\n  console.log(bcArr.length);\n  console.log(arr);\n  console.log(arr.length);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# Node.firstChild 与 Node.lastChild\n * firstChild属性返回当前节点的第一个子节点,如果当前节点没有子节点,则返回null\n * Node.lastChild属性返回当前节点的最后一个子节点,如果当前节点没有子节点,则返回null\n * firstChild ：IE678 (第一个子节点)\n * 在谷歌火狐中也有这个方法,只不过是得到第一个换行.\n * firstElementChild ：火狐谷歌 IE9-11 (第一个子节点)\n * 兼容写法：b.firstElementChild || b.firstChild\n\n<div id="box">\n  <div class="box"></div>\n  <div class="box"></div>\n  <div class="box"></div>\n</div>\n<script>\n  //1.获取父盒子\n  var b = document.getElementById("box");\n  //2.通过父盒子获取第一个子盒子\n  var fc = b.firstElementChild || b.firstChild;\n  //3.更改背景色.\n  fc.style.backgroundColor = "purple";\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * lastChild ：IE678 (最后一个子节点)\n * 在谷歌火狐中也有这个方法,只不过是得到最后一个换行.\n * lastElementChild ：火狐谷歌 IE9-11 (最后一个子节点)\n * 兼容写法：b.lastElementChild || b.lastChild\n\n//1.获取父盒子\nvar b = document.getElementById("box");\n//2.通过父盒子获取最后一个子盒子\nvar lc = b.lastElementChild || b.lastChild;\n//3.更改背景色.\nlc.style.backgroundColor = "purple";\n\n\n1\n2\n3\n4\n5\n6\n# children\n * 在 IE678 中注释会被当做节点.解决方法：注释写到父节点外部\n\n<div id="box">\n  <div class="box"></div>\n  <div class="box"></div>\n  \x3c!--这个是第三个盒子--\x3e\n  <div class="box"></div>\n</div>\n<script>\n  //1.获取父盒子\n  var b = document.getElementById("box");\n  //2.通过父盒子获取所有子盒子\n  var bcArr = b.children;\n  //3.打印长度\n  console.log(bcArr);\n  console.log(bcArr.length);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# DOM 节点对象的方法\n# createElement\n * newNode = document.createElement(“标签名”)\n\n// 创建一个html元素，这里以创建h3元素为例\ndocument.createElement("h3")\n\n// 创建一个文本节点；\ndocument.createTextNode(String);\n\n// 创建一个属性节点，这里以创建class属性为例\ndocument.createAttribute("class");\n\n//demo\nnewel = document.createElement("h1");\nnewel.innerHTML = "<p>hello</p>"; //innerText不能转换HTML标签\ndocument.body.appendChild(newel);\n//demo2\nnewtext = document.createTextNode("hello world");\ndocument.body.appendChild(newtext);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 节点的添加\n# appendChild\n * Node.appendChild():接受一个节点对象作为参数,将其作为最后一个子节点,插入当前节点\n\n// 往element内部最后面添加一个节点，参数是节点类型\nelement.appendChild(Node);\n\n// 在element内部的中在existingNode前面插入newNode\nelelment.insertBefore(newNode,existingNode);\n\n\n\n1\n2\n3\n4\n5\n6\n# hasChildNodes\n * Node.hasChildNodes():返回一个布尔值,表示当前节点是否有子节点\n\nfunction DOMComb(parent, callback) {\n  if (parent.hasChildNodes()) {\n    for (var node = parent.firstChild; node; node = node.nextSibling) {\n      DOMComb(node, callback);\n    }\n  }\n  callback.call(parent);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# insertBefore\n * insertBefore(a,b)用于将某个节点插入当前节点的指定位置\n * 该方法接受 2 个参数,第一个是要插入的节点,第二个是参照节点\n * parentNode.insertBefore(newNode,targetNode)；\n\n// 往element内部最后面添加一个节点，参数是节点类型\nelement.appendChild(Node);\n\n// 在element内部的中在existingNode前面插入newNode\nelelment.insertBefore(newNode,existingNode);\n\n\n\n1\n2\n3\n4\n5\n6\n# insertAdjacentHTML\n * Element.insertAdjacentHTML方法解析HTML字符串;然后将生成的节点插入DOM树的指定位置\n   \n    * element.insertAdjacentHTML(position, text);第一个是指定位置;第二个是待解析的字符串\n    * beforebegin：插入到指定元素前面\n   \n   // <div id="parent"></div>\n   let parent = document.getElementById(\'parent\');\n   let node = document.createElement(\'span\');\n   // 等价于 $(parent).after(node);\n   parent.insertAdjacentElement(\'beforebegin\', node);\n   \n   \n   1\n   2\n   3\n   4\n   5\n    * afterbegin：插入到指定元素内部的头部\n   \n   // <div id="parent"></div>\n   let parent = document.getElementById(\'parent\');\n   let node = document.createElement(\'span\');\n   // 等价于 $(parent).prepend(node);\n   parent.insertAdjacentElement(\'afterbegin\', node);\n   \n   \n   1\n   2\n   3\n   4\n   5\n    * beforeend：插入到指定元素内部的尾部\n   \n   // <div id="parent"></div>\n   let parent = document.getElementById(\'parent\');\n   let node = document.createElement(\'span\');\n   // 等价于 $(parent).append(node);\n   parent.insertAdjacentElement(\'beforeend\', node);\n   \n   \n   1\n   2\n   3\n   4\n   5\n    * afterend：插入到指定元素后面\n   \n   // <div id="parent"></div>\n   let parent = document.getElementById(\'parent\');\n   let node = document.createElement(\'span\');\n   // 等价于 $(parent).after(node);\n   parent.insertAdjacentElement(\'afterend\', node);\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n * Element.remove方法用于将当前元素节点从DOM树删除\n   \n   \n * Element.focus方法用于将当前页面的焦点\n   \n   \n\n# cloneNode\n * cloneNode(参数) ；booblean类型的参数.\n * newNode = oldNode.cloneNode(boolean) ;用于复制节点, 接受一个布尔值参数 * true 表示深复制(复制节点及其所有子节点),\n    * false 表示浅复制(复制节点本身,不复制子节点\n   \n   \n\n<div id="box">\n  <div id="box1">\n    <div>1</div>\n    <div>2</div>\n  </div>\n</div>\n<script>\n  var box = document.getElementById("box");\n  var box1 = document.getElementById("box1");\n  var newBox = box1.cloneNode(true);\n  // var newBox = box1.cloneNode(false);\n  box.appendChild(newBox);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# removeChild\n * parentNode.removeChild(childNode)\n * currentNode.parentNode.removeChild(currentNode) 不知道父级的情况下移除自身 Node\n\n<div id="box">\n  <div id="box1"></div>\n  <div id="box2"></div>\n</div>\n<script>\n  var box = document.getElementById("box");\n  var box1 = document.getElementById("box1");\n  var box2 = document.getElementById("box2");\n  box.removeChild(box2);\n  box1.parentNode.removeChild(box1);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# replaceChild\n * 用于将一个新的节点(替换当前节点的某一个子节点\n * replacedNode = parentNode.replaceChild(newChild, oldChild);\n\n# Node.contains\n * 一个节点作为参数(返回一个布尔值(表示参数节点是否为当前节点的后代节点\n * nodeA.contains(nodeB)\n\n// 判断元素是否body元素且是否是body的子孙元素.\nfunction isInPage(node) {\n  return (node === document.body) ? false : document.body.contains(node);\n}\n\n\n1\n2\n3\n4\n# isEqualNode\n * 返回一个布尔值,用于检查两个节点是否相等\n * 所谓相等的节点,指的是两个节点的类型相同、属性相同、子节点相同\n * nodeA.isEqualNode(nodeB)\n\n# Node.normalize\n * Node.normalize()用于清理当前节点内部的所有Text节点\n * 它会去除空的文本节点(并且将毗邻的文本节点合并成一个\n\n# 节点的属性\n * Element.getAttribute 返回当前元素节点的指定属性.如果指定属性不存在;则返回null\n * Element.setAttribute 用于为当前元素节点新增属性.如果同名属性已存在;则相当于编辑已存在的属性\n * Element.hasAttribute 返回一个布尔值;表示当前元素节点是否包含指定属性\n * Element.removeAttribute 用于从当前元素节点移除属性\n\n<img id="pic" width="100px" height="100px" />;\n//1.获取节点.\nvar pic = document.getElementById("pic");\n//2.修改属性.\npic.setAttribute("width", "500px");\nvar a = pic.getAttribute("height");\n//3.删除属性\npic.removeAttribute("height");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 属性的操作\n * Element.attributes 返回一个类似数组的动态对象\n * 属性节点对象有name和value属性;对应该属性的属性名和属性值;等同于nodeName属性和nodeValue属性\n\n# dataset 属性\n * data-后面的属性名有限制;只能包含字母、数字、连词线(-)、点(.)、冒号(:)和下划线(_)\n * 属性名不应该使用 A 到 Z 的大写字母;比如不能有data-helloWorld这样的属性名;而要写成data-hello-world\n\n// html\n<div id="mydiv" foo="bar"></div>\n// js\nvar n = document.getElementById(\'mydiv\');\nn.getAttribute(\'foo\') // bar\nn.setAttribute(\'foo\', \'baz\')\nn.removeAttribute(\'baz\')\n\n// html\n<div id="mydiv2" data-foo="bar"></div>\n// js\nvar n2 = document.getElementById(\'mydiv2\');\nn2.dataset.foo // bar\nn2.dataset.foo = \'baz\'\ndelete n2.dataset.foo;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# ParentNode\n * HTMLCollection节点的集合(返回一个类似数组的对象\n * children属性返回一个动态的HTMLCollection集合,由当前节点的所有 Element 子节点组成\n * firstElementChild属性返回当前节点的第一个 Element 子节点,如果不存在任何 Element 子节点,则返回null\n * lastElementChild属性返回当前节点的最后一个 Element 子节点,如果不存在任何 Element 子节点,则返回null\n * childElementCount属性返回当前节点的所有 Element 子节点的数目\n\n# ChildNode\n * remove方法用于移除当前节点\n * before方法用于在当前节点的前面,插入一个同级节点\n * after方法用于在当前节点的后面,插入一个同级节点\n * replaceWith方法使用参数指定的节点,替换当前节点\n\n# DOM 事件\n * Element.addEventListener()：添加事件的回调函数\n * Element.removeEventListener()：移除事件监听函数\n * Element.dispatchEvent()：触发事件\n\n# DocumentFragment\nDocumentFragment 节点代表一个文档的片段，本身就是一个完整的 DOM 树形结构。 它没有父节点，parentNode 返回 null，但是可以插入任意数量的子节点。 它不属于当前文档，操作 DocumentFragment 节点，要比直接操作 DOM 树快得多\n\n//var docFrag = document.createDocumentFragment();\n// or\nvar docFrag = new DocumentFragment();\n\nvar li = document.createElement("li");\nli.textContent = "Hello World";\ndocFrag.appendChild(li);\nconsole.log(docFrag.textContent); //Hello World\ndocument.querySelector("ul").appendChild(docFrag);\nconsole.log(docFrag.textContent); // \'\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 兼容节点\n// 获取下一个紧邻的兄弟元素\nfunction getNextElement(element) {\n  var ele = element;\n  if (ele.nextElementSibling) return ele.nextElementSibling;\n  do {\n    ele = ele.nextSibling;\n  } while (ele && ele.nodeType !== 1);\n  return ele;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n// 获取上一个紧邻的兄弟元素\nfunction getPreviousElement(element) {\n  var ele = element;\n  if (ele.perviousElementSibling) return ele.perviousElementSibling;\n  do {\n    ele = ele.perviousSibling;\n  } while (ele && ele.nodeType !== 1);\n  return ele;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n// 获取第一个子元素\nfunction getFirstElement(parent) {\n  if (parent.firstElementChild) return parent.firstElementChild;\n  var ele = parent.firstChild;\n  while (ele && ele.nodeType !== 1) ele = ele.nextSibling;\n  return ele;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n// 获取最后一个子元素\nfunction getLastElement(parent) {\n  if (parent.LastElementChild) return parent.LastElementChild;\n  var ele = parent.lastChild;\n  while (ele && ele.nodeType !== 1) ele = ele.perviousSibling;\n  return ele;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n// 获取所有兄弟元素\nfunction getAllSibling(ele) {\n  if (!ele) return null;\n  var elements = [];\n  var el = ele.previousSibling;\n  while (el) {\n    if (el.nodeType === 1)\n      elements.push(el);\n    el = el.previousSibling;\n  }\n  el = element.nextSibling;\n  while (el) {\n    if (el.nodeType === 1)\n      elements.push(el);\n    el = el.nextSibling;\n  }\n  return elements;\n}\n\n// 查找所有兄弟节点\nfunction siblings(elm) {\n  var a = [];\n  var p = elm.parentNode.children;\n  for (var i = 0, pl = p.length; i < pl; i++) {\n    if (p[i] !== elm) {\n      a.push(p[i]);\n    }\n    return a;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30',normalizedContent:'\n\nmdn/element\n\n# 类型\n * document：整个文档树的顶层节点\n * documenttype：doctype 标签(比如<!doctype html>)\n * element：网页的各种 html 标签(比如<body>、<a>等)\n * attribute：网页元素的属性(比如class="right")\n * text：标签之间或标签包含的文本\n * comment：注释\n * documentfragment：文档的片段\n\n# 获取 dom 元素\n * 获取节点\n\ndocument.queryselector("#demo"); //只返回匹配的第一个元素dom  html5\n\ndocument.queryselectorall(".test"); // html5\n\n// 通过id号来获取元素，返回一个元素对象\ndocument.getelementbyid(idname)\n\n// 通过name属性获取id号，返回元素对象数组\ndocument.getelementsbyname(name)\n\n// 通过class来获取元素，返回元素对象数组\ndocument.getelementsbyclassname(classname)\n\n// 通过标签名获取元素，返回元素对象数组\ndocument.getelementsbytagname(tagname)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 获取/设置元素的属性值\n\n// 括号传入属性名，返回对应属性的属性值\nelement.getattribute(attributename)\n\n// 传入属性名及设置的值\nelement.setattribute(attributename,attributevalue)\n\n\n1\n2\n3\n4\n5\n * 创建节点node\n\n// 创建一个html元素，这里以创建h3元素为例\ndocument.createelement("h3")\n\n// 创建一个文本节点；\ndocument.createtextnode(string);\n\n// 创建一个属性节点，这里以创建class属性为例\ndocument.createattribute("class");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 增添节点\n\n// 往element内部最后面添加一个节点，参数是节点类型\nelement.appendchild(node);\n\n// 在element内部的中在existingnode前面插入newnode\nelelment.insertbefore(newnode,existingnode);\n\n// insertadjacenthtml: (beforebegin | afterbegin | beforeend | afterend)\nelement.insertadjacenthtml(position, text)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 删除节点\n\n//删除当前节点下指定的子节点，删除成功返回该被删除的节点，否则返回null\nelement.removechild(node)\n\n\n\n1\n2\n3\n# dom常用属性\n * 获取当前元素的父节点\n\n// 返回当前元素的父节点对象\nelement.parentnode\n\n\n1\n2\n * 获取当前元素的子节点\n\n// 返回当前元素所有子元素节点对象，只返回html节点\nelement.chlidren\n\n// 返回当前元素多有子节点，包括文本，html，属性节点。（回车也会当做一个节点）\nelement.chilidnodes\n\n// 返回当前元素的第一个子节点对象\nelement.firstchild\n\n// 返回当前元素的最后一个子节点对象\nelement.lastchild\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 获取当前元素的同级元素\n\n// 返回当前元素的下一个同级元素 没有就返回null\nelement.nextsibling\n\n// 返回当前元素上一个同级元素 没有就返回 null\nelement.previoussibling\n\n\n1\n2\n3\n4\n5\n * 获取当前元素的文本\n\n// 返回元素的所有文本，包括html代码\nelement.innerhtml\n\n// 返回当前元素的自身及子代所有文本值，只是文本内容，不包括html代码\nelement.innertext\n\n\n1\n2\n3\n4\n5\n * 获取当前节点的节点类型\n\n类型                       nodename             nodetype   \nelement_node             大写的 html 元素名         1          \nattribute_node           attr.name            2          \ntext_node                #text                3          \ncomment_node             #comment             8          \ndocument_node            #document            9          \ndocument_type_node       documenttype.name    10         \ndocument_fragment_node   #document-fragment   11         \n\ndocument.nodename; // "#document"\ndocument.nodetype; // 9\ndocument.queryselector("a").nodetype === 1; // true\ndocument.queryselector("a").nodetype === node.element_node; // true\n\n\n1\n2\n3\n4\n * 设置样式\n\n// 设置元素的样式时使用style\nelement.style.color="#eea";\n\n\n1\n2\n# 节点对象属性\n# node.nodevalue\n * 返回一个字符串,表示当前节点本身的文本值,该属性可读写\n\n# node.textcontent\n * 返回当前节点和它的所有后代节点的文本内容\n * 自动忽略当前节点内部的html标签,返回所有文本内容\n\n# node.sibling 与 node.previoussibling\n * node.nextsibling属性返回紧跟在当前节点后面的第一个同级节点\n * node.previoussibling属性返回当前节点前面的、距离最近的一个同级节点\n * nextsibling ：ie678 (下一个兄弟节点)\n * 在谷歌火狐中也有这个方法,只不过是得到换行.\n * nextelementsibling ：火狐谷歌 ie9-11 (下一个兄弟节点)\n * 兼容写法：b.nextelementsibling || b.nextsibling\n\n<div class="box"></div>\n<div class="box" id="box"></div>\n<div class="box"></div>\n//1.获取id名为box的盒子.\nvar b = document.getelementbyid("box");\n//2.通过兄弟节点的方式获得下盒子\nvar n = b.nextelementsibling || b.nextsibling;\n//3.更改背景色\nn.style.backgroundcolor = "purple";\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * previoussibling ：ie678 (上一个兄弟节点)\n * 在谷歌火狐中也有这个方法,只不过是得到换行.\n * previouselementsibling ：火狐谷歌 ie9-11 (上一个兄弟节点)\n * 兼容写法：b.previouselementsibling || b.previoussibling\n\n//1.获取id名为box的盒子.\nvar b = document.getelementbyid("box");\n//2.兄弟节点的方式获得上盒子\nvar m = b.previouselementsibling || b.previoussibling;\n//3.更改背景色\nm.style.backgroundcolor = "purple";\n\n// 获取所有的兄弟节点\nfunction siblings(elm) {\n  var a = [];\n  var p = elm.parentnode.children;\n  for (var i = 0, pl = p.length; i < pl; i++) {\n    if (p[i] !== elm) {\n      a.push(p[i]);\n    }\n    return a;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# node.parentnode\n * 返回当前节点的父节点\n * 只可能是三种类型：element、 document和documentfragment\n\n//从父节点移除指定节点\nif (node.parentnode) {\n  node.parentnode.removechild(node);\n}\n\n\n1\n2\n3\n4\n# node.parentelement\n * 返回当前节点的父 element 节点\n * 如果当前节点没有父节点,或者父节点类型不是 element 节点,则返回null\n\n//设置指定节点的父element节点的css属性\nif (node.parentelement) {\n  node.parentelement.style.color = "red";\n}\n\n\n1\n2\n3\n4\n# node.childnodes\n * 火狐谷歌 ie9-11 (所有子节点)\n * nodetype 每一个标签都一个这个属性(有个三个值)\n * nodetype == 1 表示的是元素节点\n * nodetype == 2 表示是属性节点\n * nodetype == 3 是文本节点\n\n<div id="box">\n  <div class="box"></div>\n  <div class="box"></div>\n  <div class="box"></div>\n</div>\n<script>\n  //1.获取父盒子\n  var b = document.getelementbyid("box");\n  //2.通过父盒子获取所有子盒子\n  var bcarr = b.childnodes;\n  var arr = [];\n  //for循环遍历得到的所有自盒子数组\n  for (var i = 0; i < bcarr.length; i++) {\n    //如果自盒子的nodetype的值 == 1 ,说明他的是元素节点(标签)\n    if (bcarr[i].nodetype == 1) {\n      //把这个标签放入arr 这个数组.\n      arr.push(bcarr[i]);\n    }\n  }\n  //3.打印长度.()\n  console.log(bcarr);\n  console.log(bcarr.length);\n  console.log(arr);\n  console.log(arr.length);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# node.firstchild 与 node.lastchild\n * firstchild属性返回当前节点的第一个子节点,如果当前节点没有子节点,则返回null\n * node.lastchild属性返回当前节点的最后一个子节点,如果当前节点没有子节点,则返回null\n * firstchild ：ie678 (第一个子节点)\n * 在谷歌火狐中也有这个方法,只不过是得到第一个换行.\n * firstelementchild ：火狐谷歌 ie9-11 (第一个子节点)\n * 兼容写法：b.firstelementchild || b.firstchild\n\n<div id="box">\n  <div class="box"></div>\n  <div class="box"></div>\n  <div class="box"></div>\n</div>\n<script>\n  //1.获取父盒子\n  var b = document.getelementbyid("box");\n  //2.通过父盒子获取第一个子盒子\n  var fc = b.firstelementchild || b.firstchild;\n  //3.更改背景色.\n  fc.style.backgroundcolor = "purple";\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * lastchild ：ie678 (最后一个子节点)\n * 在谷歌火狐中也有这个方法,只不过是得到最后一个换行.\n * lastelementchild ：火狐谷歌 ie9-11 (最后一个子节点)\n * 兼容写法：b.lastelementchild || b.lastchild\n\n//1.获取父盒子\nvar b = document.getelementbyid("box");\n//2.通过父盒子获取最后一个子盒子\nvar lc = b.lastelementchild || b.lastchild;\n//3.更改背景色.\nlc.style.backgroundcolor = "purple";\n\n\n1\n2\n3\n4\n5\n6\n# children\n * 在 ie678 中注释会被当做节点.解决方法：注释写到父节点外部\n\n<div id="box">\n  <div class="box"></div>\n  <div class="box"></div>\n  \x3c!--这个是第三个盒子--\x3e\n  <div class="box"></div>\n</div>\n<script>\n  //1.获取父盒子\n  var b = document.getelementbyid("box");\n  //2.通过父盒子获取所有子盒子\n  var bcarr = b.children;\n  //3.打印长度\n  console.log(bcarr);\n  console.log(bcarr.length);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# dom 节点对象的方法\n# createelement\n * newnode = document.createelement(“标签名”)\n\n// 创建一个html元素，这里以创建h3元素为例\ndocument.createelement("h3")\n\n// 创建一个文本节点；\ndocument.createtextnode(string);\n\n// 创建一个属性节点，这里以创建class属性为例\ndocument.createattribute("class");\n\n//demo\nnewel = document.createelement("h1");\nnewel.innerhtml = "<p>hello</p>"; //innertext不能转换html标签\ndocument.body.appendchild(newel);\n//demo2\nnewtext = document.createtextnode("hello world");\ndocument.body.appendchild(newtext);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 节点的添加\n# appendchild\n * node.appendchild():接受一个节点对象作为参数,将其作为最后一个子节点,插入当前节点\n\n// 往element内部最后面添加一个节点，参数是节点类型\nelement.appendchild(node);\n\n// 在element内部的中在existingnode前面插入newnode\nelelment.insertbefore(newnode,existingnode);\n\n\n\n1\n2\n3\n4\n5\n6\n# haschildnodes\n * node.haschildnodes():返回一个布尔值,表示当前节点是否有子节点\n\nfunction domcomb(parent, callback) {\n  if (parent.haschildnodes()) {\n    for (var node = parent.firstchild; node; node = node.nextsibling) {\n      domcomb(node, callback);\n    }\n  }\n  callback.call(parent);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# insertbefore\n * insertbefore(a,b)用于将某个节点插入当前节点的指定位置\n * 该方法接受 2 个参数,第一个是要插入的节点,第二个是参照节点\n * parentnode.insertbefore(newnode,targetnode)；\n\n// 往element内部最后面添加一个节点，参数是节点类型\nelement.appendchild(node);\n\n// 在element内部的中在existingnode前面插入newnode\nelelment.insertbefore(newnode,existingnode);\n\n\n\n1\n2\n3\n4\n5\n6\n# insertadjacenthtml\n * element.insertadjacenthtml方法解析html字符串;然后将生成的节点插入dom树的指定位置\n   \n    * element.insertadjacenthtml(position, text);第一个是指定位置;第二个是待解析的字符串\n    * beforebegin：插入到指定元素前面\n   \n   // <div id="parent"></div>\n   let parent = document.getelementbyid(\'parent\');\n   let node = document.createelement(\'span\');\n   // 等价于 $(parent).after(node);\n   parent.insertadjacentelement(\'beforebegin\', node);\n   \n   \n   1\n   2\n   3\n   4\n   5\n    * afterbegin：插入到指定元素内部的头部\n   \n   // <div id="parent"></div>\n   let parent = document.getelementbyid(\'parent\');\n   let node = document.createelement(\'span\');\n   // 等价于 $(parent).prepend(node);\n   parent.insertadjacentelement(\'afterbegin\', node);\n   \n   \n   1\n   2\n   3\n   4\n   5\n    * beforeend：插入到指定元素内部的尾部\n   \n   // <div id="parent"></div>\n   let parent = document.getelementbyid(\'parent\');\n   let node = document.createelement(\'span\');\n   // 等价于 $(parent).append(node);\n   parent.insertadjacentelement(\'beforeend\', node);\n   \n   \n   1\n   2\n   3\n   4\n   5\n    * afterend：插入到指定元素后面\n   \n   // <div id="parent"></div>\n   let parent = document.getelementbyid(\'parent\');\n   let node = document.createelement(\'span\');\n   // 等价于 $(parent).after(node);\n   parent.insertadjacentelement(\'afterend\', node);\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n * element.remove方法用于将当前元素节点从dom树删除\n   \n   \n * element.focus方法用于将当前页面的焦点\n   \n   \n\n# clonenode\n * clonenode(参数) ；booblean类型的参数.\n * newnode = oldnode.clonenode(boolean) ;用于复制节点, 接受一个布尔值参数 * true 表示深复制(复制节点及其所有子节点),\n    * false 表示浅复制(复制节点本身,不复制子节点\n   \n   \n\n<div id="box">\n  <div id="box1">\n    <div>1</div>\n    <div>2</div>\n  </div>\n</div>\n<script>\n  var box = document.getelementbyid("box");\n  var box1 = document.getelementbyid("box1");\n  var newbox = box1.clonenode(true);\n  // var newbox = box1.clonenode(false);\n  box.appendchild(newbox);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# removechild\n * parentnode.removechild(childnode)\n * currentnode.parentnode.removechild(currentnode) 不知道父级的情况下移除自身 node\n\n<div id="box">\n  <div id="box1"></div>\n  <div id="box2"></div>\n</div>\n<script>\n  var box = document.getelementbyid("box");\n  var box1 = document.getelementbyid("box1");\n  var box2 = document.getelementbyid("box2");\n  box.removechild(box2);\n  box1.parentnode.removechild(box1);\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# replacechild\n * 用于将一个新的节点(替换当前节点的某一个子节点\n * replacednode = parentnode.replacechild(newchild, oldchild);\n\n# node.contains\n * 一个节点作为参数(返回一个布尔值(表示参数节点是否为当前节点的后代节点\n * nodea.contains(nodeb)\n\n// 判断元素是否body元素且是否是body的子孙元素.\nfunction isinpage(node) {\n  return (node === document.body) ? false : document.body.contains(node);\n}\n\n\n1\n2\n3\n4\n# isequalnode\n * 返回一个布尔值,用于检查两个节点是否相等\n * 所谓相等的节点,指的是两个节点的类型相同、属性相同、子节点相同\n * nodea.isequalnode(nodeb)\n\n# node.normalize\n * node.normalize()用于清理当前节点内部的所有text节点\n * 它会去除空的文本节点(并且将毗邻的文本节点合并成一个\n\n# 节点的属性\n * element.getattribute 返回当前元素节点的指定属性.如果指定属性不存在;则返回null\n * element.setattribute 用于为当前元素节点新增属性.如果同名属性已存在;则相当于编辑已存在的属性\n * element.hasattribute 返回一个布尔值;表示当前元素节点是否包含指定属性\n * element.removeattribute 用于从当前元素节点移除属性\n\n<img id="pic" width="100px" height="100px" />;\n//1.获取节点.\nvar pic = document.getelementbyid("pic");\n//2.修改属性.\npic.setattribute("width", "500px");\nvar a = pic.getattribute("height");\n//3.删除属性\npic.removeattribute("height");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 属性的操作\n * element.attributes 返回一个类似数组的动态对象\n * 属性节点对象有name和value属性;对应该属性的属性名和属性值;等同于nodename属性和nodevalue属性\n\n# dataset 属性\n * data-后面的属性名有限制;只能包含字母、数字、连词线(-)、点(.)、冒号(:)和下划线(_)\n * 属性名不应该使用 a 到 z 的大写字母;比如不能有data-helloworld这样的属性名;而要写成data-hello-world\n\n// html\n<div id="mydiv" foo="bar"></div>\n// js\nvar n = document.getelementbyid(\'mydiv\');\nn.getattribute(\'foo\') // bar\nn.setattribute(\'foo\', \'baz\')\nn.removeattribute(\'baz\')\n\n// html\n<div id="mydiv2" data-foo="bar"></div>\n// js\nvar n2 = document.getelementbyid(\'mydiv2\');\nn2.dataset.foo // bar\nn2.dataset.foo = \'baz\'\ndelete n2.dataset.foo;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# parentnode\n * htmlcollection节点的集合(返回一个类似数组的对象\n * children属性返回一个动态的htmlcollection集合,由当前节点的所有 element 子节点组成\n * firstelementchild属性返回当前节点的第一个 element 子节点,如果不存在任何 element 子节点,则返回null\n * lastelementchild属性返回当前节点的最后一个 element 子节点,如果不存在任何 element 子节点,则返回null\n * childelementcount属性返回当前节点的所有 element 子节点的数目\n\n# childnode\n * remove方法用于移除当前节点\n * before方法用于在当前节点的前面,插入一个同级节点\n * after方法用于在当前节点的后面,插入一个同级节点\n * replacewith方法使用参数指定的节点,替换当前节点\n\n# dom 事件\n * element.addeventlistener()：添加事件的回调函数\n * element.removeeventlistener()：移除事件监听函数\n * element.dispatchevent()：触发事件\n\n# documentfragment\ndocumentfragment 节点代表一个文档的片段，本身就是一个完整的 dom 树形结构。 它没有父节点，parentnode 返回 null，但是可以插入任意数量的子节点。 它不属于当前文档，操作 documentfragment 节点，要比直接操作 dom 树快得多\n\n//var docfrag = document.createdocumentfragment();\n// or\nvar docfrag = new documentfragment();\n\nvar li = document.createelement("li");\nli.textcontent = "hello world";\ndocfrag.appendchild(li);\nconsole.log(docfrag.textcontent); //hello world\ndocument.queryselector("ul").appendchild(docfrag);\nconsole.log(docfrag.textcontent); // \'\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 兼容节点\n// 获取下一个紧邻的兄弟元素\nfunction getnextelement(element) {\n  var ele = element;\n  if (ele.nextelementsibling) return ele.nextelementsibling;\n  do {\n    ele = ele.nextsibling;\n  } while (ele && ele.nodetype !== 1);\n  return ele;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n// 获取上一个紧邻的兄弟元素\nfunction getpreviouselement(element) {\n  var ele = element;\n  if (ele.perviouselementsibling) return ele.perviouselementsibling;\n  do {\n    ele = ele.pervioussibling;\n  } while (ele && ele.nodetype !== 1);\n  return ele;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n// 获取第一个子元素\nfunction getfirstelement(parent) {\n  if (parent.firstelementchild) return parent.firstelementchild;\n  var ele = parent.firstchild;\n  while (ele && ele.nodetype !== 1) ele = ele.nextsibling;\n  return ele;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n// 获取最后一个子元素\nfunction getlastelement(parent) {\n  if (parent.lastelementchild) return parent.lastelementchild;\n  var ele = parent.lastchild;\n  while (ele && ele.nodetype !== 1) ele = ele.pervioussibling;\n  return ele;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n// 获取所有兄弟元素\nfunction getallsibling(ele) {\n  if (!ele) return null;\n  var elements = [];\n  var el = ele.previoussibling;\n  while (el) {\n    if (el.nodetype === 1)\n      elements.push(el);\n    el = el.previoussibling;\n  }\n  el = element.nextsibling;\n  while (el) {\n    if (el.nodetype === 1)\n      elements.push(el);\n    el = el.nextsibling;\n  }\n  return elements;\n}\n\n// 查找所有兄弟节点\nfunction siblings(elm) {\n  var a = [];\n  var p = elm.parentnode.children;\n  for (var i = 0, pl = p.length; i < pl; i++) {\n    if (p[i] !== elm) {\n      a.push(p[i]);\n    }\n    return a;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30',charsets:{cjk:!0}},{title:"浏览器事件event",frontmatter:{title:"浏览器事件event",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["event"],readingShow:"top"},regularPath:"/js/event.html",relativePath:"js/event.md",key:"v-1c92ac2f",path:"/js/event.html",headers:[{level:2,title:"addEventListener",slug:"addeventlistener",normalizedTitle:"addeventlistener",charIndex:2},{level:2,title:"removeEventListener",slug:"removeeventlistener",normalizedTitle:"removeeventlistener",charIndex:320},{level:2,title:"事件兼容",slug:"事件兼容",normalizedTitle:"事件兼容",charIndex:404},{level:2,title:"事件循环(Event Loop)",slug:"事件循环-event-loop",normalizedTitle:"事件循环(event loop)",charIndex:1779},{level:2,title:"事件的传播(事件流)",slug:"事件的传播-事件流",normalizedTitle:"事件的传播(事件流)",charIndex:4388},{level:2,title:"事件委托",slug:"事件委托",normalizedTitle:"事件委托",charIndex:4611},{level:2,title:"哪些事件不支持冒泡事件",slug:"哪些事件不支持冒泡事件",normalizedTitle:"哪些事件不支持冒泡事件",charIndex:5374},{level:2,title:"什么是作用域",slug:"什么是作用域",normalizedTitle:"什么是作用域",charIndex:5462},{level:3,title:"Event 对象",slug:"event-对象",normalizedTitle:"event 对象",charIndex:5541},{level:3,title:"自定义事件",slug:"自定义事件",normalizedTitle:"自定义事件",charIndex:6154},{level:2,title:"事件对象 Event",slug:"事件对象-event",normalizedTitle:"事件对象 event",charIndex:6330},{level:2,title:"事件目标 target",slug:"事件目标-target",normalizedTitle:"事件目标 target",charIndex:6513},{level:2,title:"EventEmitter",slug:"eventemitter",normalizedTitle:"eventemitter",charIndex:6606}],lastUpdated:"2020/8/3 上午10:17:07",headersStr:"addEventListener removeEventListener 事件兼容 事件循环(Event Loop) 事件的传播(事件流) 事件委托 哪些事件不支持冒泡事件 什么是作用域 Event 对象 自定义事件 事件对象 Event 事件目标 target EventEmitter",content:"# addEventListener\n * target.addEventListener(type, listener[, useCapture]);\n\n// type：事件名称，大小写敏感。\n// listener：监听函数。事件发生时，会调用该监听函数。\n// useCapture：布尔值，表示监听函数是否在捕获阶段，默认为false\n\nwindow.addEventListener('load', function () {...}, false);\nrequest.addEventListener('readystatechange', function () {...}, false);\n\n\n1\n2\n3\n4\n5\n6\n# removeEventListener\n * target.removeEventListener(type, listener[, useCapture]);\n\n# 事件兼容\n/**\n * 事件的监听与移除\n *\n  var textbox = document.getElementById('input');\n  EventUtil.addHandler(textbox, 'textInput', function (e) {\n    e.target.value = e.target.value.replace(/[^0-9\\.]/g, '')\n  })\n */\nvar EventUtil = {\n  addHandler: function (element, type, handler) {\n    if (element.addEventListener) { //DOM2级\n      element.addEventListener(type, handler, false);\n    } else if (element.attachEvent) { //DOM1级\n      element.attachEvent(\"on\" + type, handler);\n    } else {\n      element[\"on\" + type] = handler; //DOM0级\n    }\n  },\n  removeHandler: function (element, type, handler) { //类似addHandler\n    if (element.removeEventListener) {\n      element.removeEventListener(type, handler, false);\n    } else if (element.detachEvent) {\n      element.detachEvent(\"on\" + type, handler);\n    } else {\n      element[\"on\" + type] = null;\n    }\n  }\n}\n// carry\nvar addEvent = (function () {\n  if (window.addEventListener) {\n    return function (el, sType, fn, capture) {\n      el.addEventListener(sType, function (e) {\n        fn.call(el, e);\n      }, (capture));\n    };\n  } else if (window.attachEvent) {\n    return function (el, sType, fn, capture) {\n      el.attachEvent(\"on\" + sType, function (e) {\n        fn.call(el, e);\n      });\n    };\n  }\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# 事件循环(Event Loop)\n * 最后一次搞懂 Event Loop\n * 原地址：从 promise、process.nextTick、setTimeout 出发，谈谈 Event Loop 中的 Job queue #5\n * 执行顺序同步代码—>microTask—>macroTask :\n * macrotask 宏任务： * script(主程序代码),setTimeout, setInterval, setImmediate(Node.js 环境), I/O, UI rendering\n   \n   \n * microtask 微任务： * process.nextTick(Node.js 环境), Promises, Object.observe, MutationObserver\n   \n   \n * 执行顺序应该为： * script(主程序代码)—>process.nextTick—>Promises...——>setTimeout——>setInterval——>setImmediate——> I/O——>UI rendering\n   \n   \n * 在 ES6 中macro-task队列又称为ScriptJobs，而micro-task又称PromiseJobs\n\n假设：\nmacro-task队列包含任务: a1, a2 , a3\nmicro-task队列包含任务: b1, b2 , b3\n\n执行顺序为，首先执行marco-task队列开头的任务，也就是 a1 任务，执行完毕后，在执行micro-task队列里的所有任务，也就是依次执行***b1, b2 , b3***，执行完后清空micro-task中的任务，接着执行marco-task中的第二个任务，依次循环。\n\n\n1\n2\n3\n4\n5\n * 示例\n\nasync function async1() {\n  console.log('async1 start') // 2\n  await async2();\n  console.log('async1 end'); // 6\n}\n/* async/await 等同于\nfunction async1() {\n  console.log('async1 start'); // 2\n  Promise.resolve(async2()).then(() => {\n    console.log('async1 end'); // 7\n  });\n}\n*/\n\nasync function async2() {\n  console.log('async2'); // 3\n}\n\nconsole.log('script start'); // 1\n\nsetTimeout(function () {\n  console.log('setTimeout'); // 8\n}, 0)\n\nasync1()\n\nnew Promise(function (resolve) {\n  console.log('promise1'); // 4\n  resolve()\n}).then(function () {\n  console.log('promise2'); // 7\n})\n\nconsole.log('script end'); // 5\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * 示例 2\n\nconst p1 = new Promise((resolve, reject) => {\n  console.log('1'); // 1\n  resolve();\n})\n  .then(() => {\n    console.log('2'); // 3\n    new Promise((resolve, reject) => {\n      console.log('3'); // 4\n      resolve();\n    })\n      .then(() => {\n        console.log('4'); // 6\n      })\n      .then(() => {\n        console.log('5'); // 8\n      });\n  })\n  .then(() => {\n    console.log('6'); // 7\n  });\n\nconst p2 = new Promise((resolve, reject) => {\n  console.log('7'); // 2\n  resolve();\n}).then(() => {\n  console.log('8'); // 5\n});\n// 1 7 2 3 8 4 6 5\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n * 示例 2\n\nconst p1 = new Promise((resolve, reject) => {\n  console.log('1'); // 1\n  resolve();\n})\n  .then(() => {\n    console.log('2'); // 2\n    return new Promise((resolve, reject) => {\n      console.log('3'); // 3\n      resolve();\n    })\n      .then(() => {\n        console.log('4'); // 4\n      })\n      .then(() => {\n        console.log('5'); // 5\n      });\n  })\n  .then(() => {\n    console.log('6'); //6\n  });\n// 1 2 3 4 5 6\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# 事件的传播(事件流)\n * 什么是事件流：事件流描述的是从页面中接收事件的顺序,DOM2 级事件流包括下面几个阶段的三个阶段:\n * 第一阶段：从 window 对象传导到目标节点,称为\"捕获阶段\"(capture phase)\n * 第二阶段：在目标节点上触发,称为\"目标阶段\"(target phase)\n * 第三阶段：从目标节点传导回 window 对象,称为\"冒泡阶段\"(bubbling phase)\n * IE只支持事件冒泡\n\n# 事件委托\n * 利用事件冒泡的原理,将事件绑定在父容器中,让父容器代为触发\n * 事件委托指的是，不在事件的发生地（直接 dom）上设置监听函数，而是在其父元素上设置监听函数，通过事件冒泡，父元素可以监听到子元素上事件的触发，通过判断事件发生元素 DOM 的类型，来做出不同的响应\n * 好处：比较合适动态元素的绑定，新添加的子元素也会有监听函数，也可以有事件触发机制\n\nvar ul = document.querySelector(\"ul\");\nul.addEventListener(\"click\", function(event) {\n  if (event.target.tagName.toLowerCase() === \"li\") {\n    // some code\n  }\n});\n\n// 阻止当前监听函数的传播\n//stopPropagation方法只会阻止当前监听函数的传播，\n//不会阻止<p>节点上的其他click事件的监听函数\np.addEventListener(\"click\", function(event) {\n  event.stopPropagation();\n});\n\n//如果想要不再触发那些监听函数，可以使用stopImmediatePropagation方法\np.addEventListener(\"click\", function(event) {\n  event.stopImmediatePropagation();\n});\n\np.addEventListener(\"click\", function(event) {\n  // 不会被触发\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# 哪些事件不支持冒泡事件\n * 鼠标事件：mouserleave mouseenter\n * 焦点事件：blur focus\n * UI 事件：scroll resize\n\n# 什么是作用域\nJavaScript 中的作用域是我们可以有效访问变量或函数的区域。JS 有三种类型的作用域：全局作用域、函数作用域和块作用域(ES6)\n\n# Event 对象\n * event = new Event(typeArg, eventInit);\n * 第一个参数是字符串，表示事件的名称\n * 第二个参数是一个对象，表示事件对象的配置\n * bubbles：布尔值，可选，默认为 false，表示事件对象是否冒泡\n * cancelable：布尔值，可选，默认为 false，表示事件是否可以被取消\n\nvar ev = new Event(\"look\", {\n  bubbles: true,\n  cancelable: false\n});\ndocument.dispatchEvent(ev);\n\n// 兼容写法\nfunction myEventHandler(event) {\n  var actualEvent = event || window.event;\n  var actualTarget = actualEvent.target || actualEvent.srcElement;\n  // ...\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * bubbles属性返回一个布尔值，表示当前事件是否会冒泡\n\nfunction goInput(e) {\n  if (!e.bubbles) {\n    passItOn(e);\n  } else {\n    doOutput(e);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# 自定义事件\n// 新建事件实例\nvar event = new Event('build');\n\n// 添加监听函数\nelem.addEventListener('build', function (e) { ... }, false);\n\n// 触发事件\nelem.dispatchEvent(event);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 事件对象 Event\n * 兼容性写法\n\nevent = event || window.event;\n//demo\ndocument.onclick = function(event) {\n  event = event || window.event;\n  console.log(event); //event 事件对象\n};\n\n\n1\n2\n3\n4\n5\n6\n# 事件目标 target\n * 兼容性写法\n\ntargetId = event.target ? event.target.id : event.srcElement.id;\n\n\n1\n# EventEmitter\nclass EventEmitter {\n    constructor() {\n          this.events = Object.create(null);\n      }\n      on(name, fn) {\n        if (!this.events[name]) {\n            this.events[name] = []\n          }\n          this.events[name].push(fn);\n          return this;\n      }\n      emit(name, ...args) {\n        if (!this.events[name]) {\n            return this;\n        }\n        const fns = this.events[name]\n        fns.forEach(fn => fn.call(this, ...args))\n        return this;\n      }\n      off(name,fn) {\n        if (!this.events[name]) {\n            return this;\n        }\n          if (!fn) {\n            this.events[name] = null\n            return this\n          }\n          const index = this.events[name].indexOf(fn);\n          this.events[name].splice(index, 1);\n        return this;\n      }\n      once(name,fn) {\n        const only = () => {\n          fn.apply(this, arguments);\n          this.off(name, only);\n        };\n        this.on(name, only);\n        return this;\n      }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40",normalizedContent:"# addeventlistener\n * target.addeventlistener(type, listener[, usecapture]);\n\n// type：事件名称，大小写敏感。\n// listener：监听函数。事件发生时，会调用该监听函数。\n// usecapture：布尔值，表示监听函数是否在捕获阶段，默认为false\n\nwindow.addeventlistener('load', function () {...}, false);\nrequest.addeventlistener('readystatechange', function () {...}, false);\n\n\n1\n2\n3\n4\n5\n6\n# removeeventlistener\n * target.removeeventlistener(type, listener[, usecapture]);\n\n# 事件兼容\n/**\n * 事件的监听与移除\n *\n  var textbox = document.getelementbyid('input');\n  eventutil.addhandler(textbox, 'textinput', function (e) {\n    e.target.value = e.target.value.replace(/[^0-9\\.]/g, '')\n  })\n */\nvar eventutil = {\n  addhandler: function (element, type, handler) {\n    if (element.addeventlistener) { //dom2级\n      element.addeventlistener(type, handler, false);\n    } else if (element.attachevent) { //dom1级\n      element.attachevent(\"on\" + type, handler);\n    } else {\n      element[\"on\" + type] = handler; //dom0级\n    }\n  },\n  removehandler: function (element, type, handler) { //类似addhandler\n    if (element.removeeventlistener) {\n      element.removeeventlistener(type, handler, false);\n    } else if (element.detachevent) {\n      element.detachevent(\"on\" + type, handler);\n    } else {\n      element[\"on\" + type] = null;\n    }\n  }\n}\n// carry\nvar addevent = (function () {\n  if (window.addeventlistener) {\n    return function (el, stype, fn, capture) {\n      el.addeventlistener(stype, function (e) {\n        fn.call(el, e);\n      }, (capture));\n    };\n  } else if (window.attachevent) {\n    return function (el, stype, fn, capture) {\n      el.attachevent(\"on\" + stype, function (e) {\n        fn.call(el, e);\n      });\n    };\n  }\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# 事件循环(event loop)\n * 最后一次搞懂 event loop\n * 原地址：从 promise、process.nexttick、settimeout 出发，谈谈 event loop 中的 job queue #5\n * 执行顺序同步代码—>microtask—>macrotask :\n * macrotask 宏任务： * script(主程序代码),settimeout, setinterval, setimmediate(node.js 环境), i/o, ui rendering\n   \n   \n * microtask 微任务： * process.nexttick(node.js 环境), promises, object.observe, mutationobserver\n   \n   \n * 执行顺序应该为： * script(主程序代码)—>process.nexttick—>promises...——>settimeout——>setinterval——>setimmediate——> i/o——>ui rendering\n   \n   \n * 在 es6 中macro-task队列又称为scriptjobs，而micro-task又称promisejobs\n\n假设：\nmacro-task队列包含任务: a1, a2 , a3\nmicro-task队列包含任务: b1, b2 , b3\n\n执行顺序为，首先执行marco-task队列开头的任务，也就是 a1 任务，执行完毕后，在执行micro-task队列里的所有任务，也就是依次执行***b1, b2 , b3***，执行完后清空micro-task中的任务，接着执行marco-task中的第二个任务，依次循环。\n\n\n1\n2\n3\n4\n5\n * 示例\n\nasync function async1() {\n  console.log('async1 start') // 2\n  await async2();\n  console.log('async1 end'); // 6\n}\n/* async/await 等同于\nfunction async1() {\n  console.log('async1 start'); // 2\n  promise.resolve(async2()).then(() => {\n    console.log('async1 end'); // 7\n  });\n}\n*/\n\nasync function async2() {\n  console.log('async2'); // 3\n}\n\nconsole.log('script start'); // 1\n\nsettimeout(function () {\n  console.log('settimeout'); // 8\n}, 0)\n\nasync1()\n\nnew promise(function (resolve) {\n  console.log('promise1'); // 4\n  resolve()\n}).then(function () {\n  console.log('promise2'); // 7\n})\n\nconsole.log('script end'); // 5\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * 示例 2\n\nconst p1 = new promise((resolve, reject) => {\n  console.log('1'); // 1\n  resolve();\n})\n  .then(() => {\n    console.log('2'); // 3\n    new promise((resolve, reject) => {\n      console.log('3'); // 4\n      resolve();\n    })\n      .then(() => {\n        console.log('4'); // 6\n      })\n      .then(() => {\n        console.log('5'); // 8\n      });\n  })\n  .then(() => {\n    console.log('6'); // 7\n  });\n\nconst p2 = new promise((resolve, reject) => {\n  console.log('7'); // 2\n  resolve();\n}).then(() => {\n  console.log('8'); // 5\n});\n// 1 7 2 3 8 4 6 5\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n * 示例 2\n\nconst p1 = new promise((resolve, reject) => {\n  console.log('1'); // 1\n  resolve();\n})\n  .then(() => {\n    console.log('2'); // 2\n    return new promise((resolve, reject) => {\n      console.log('3'); // 3\n      resolve();\n    })\n      .then(() => {\n        console.log('4'); // 4\n      })\n      .then(() => {\n        console.log('5'); // 5\n      });\n  })\n  .then(() => {\n    console.log('6'); //6\n  });\n// 1 2 3 4 5 6\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# 事件的传播(事件流)\n * 什么是事件流：事件流描述的是从页面中接收事件的顺序,dom2 级事件流包括下面几个阶段的三个阶段:\n * 第一阶段：从 window 对象传导到目标节点,称为\"捕获阶段\"(capture phase)\n * 第二阶段：在目标节点上触发,称为\"目标阶段\"(target phase)\n * 第三阶段：从目标节点传导回 window 对象,称为\"冒泡阶段\"(bubbling phase)\n * ie只支持事件冒泡\n\n# 事件委托\n * 利用事件冒泡的原理,将事件绑定在父容器中,让父容器代为触发\n * 事件委托指的是，不在事件的发生地（直接 dom）上设置监听函数，而是在其父元素上设置监听函数，通过事件冒泡，父元素可以监听到子元素上事件的触发，通过判断事件发生元素 dom 的类型，来做出不同的响应\n * 好处：比较合适动态元素的绑定，新添加的子元素也会有监听函数，也可以有事件触发机制\n\nvar ul = document.queryselector(\"ul\");\nul.addeventlistener(\"click\", function(event) {\n  if (event.target.tagname.tolowercase() === \"li\") {\n    // some code\n  }\n});\n\n// 阻止当前监听函数的传播\n//stoppropagation方法只会阻止当前监听函数的传播，\n//不会阻止<p>节点上的其他click事件的监听函数\np.addeventlistener(\"click\", function(event) {\n  event.stoppropagation();\n});\n\n//如果想要不再触发那些监听函数，可以使用stopimmediatepropagation方法\np.addeventlistener(\"click\", function(event) {\n  event.stopimmediatepropagation();\n});\n\np.addeventlistener(\"click\", function(event) {\n  // 不会被触发\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# 哪些事件不支持冒泡事件\n * 鼠标事件：mouserleave mouseenter\n * 焦点事件：blur focus\n * ui 事件：scroll resize\n\n# 什么是作用域\njavascript 中的作用域是我们可以有效访问变量或函数的区域。js 有三种类型的作用域：全局作用域、函数作用域和块作用域(es6)\n\n# event 对象\n * event = new event(typearg, eventinit);\n * 第一个参数是字符串，表示事件的名称\n * 第二个参数是一个对象，表示事件对象的配置\n * bubbles：布尔值，可选，默认为 false，表示事件对象是否冒泡\n * cancelable：布尔值，可选，默认为 false，表示事件是否可以被取消\n\nvar ev = new event(\"look\", {\n  bubbles: true,\n  cancelable: false\n});\ndocument.dispatchevent(ev);\n\n// 兼容写法\nfunction myeventhandler(event) {\n  var actualevent = event || window.event;\n  var actualtarget = actualevent.target || actualevent.srcelement;\n  // ...\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * bubbles属性返回一个布尔值，表示当前事件是否会冒泡\n\nfunction goinput(e) {\n  if (!e.bubbles) {\n    passiton(e);\n  } else {\n    dooutput(e);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# 自定义事件\n// 新建事件实例\nvar event = new event('build');\n\n// 添加监听函数\nelem.addeventlistener('build', function (e) { ... }, false);\n\n// 触发事件\nelem.dispatchevent(event);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 事件对象 event\n * 兼容性写法\n\nevent = event || window.event;\n//demo\ndocument.onclick = function(event) {\n  event = event || window.event;\n  console.log(event); //event 事件对象\n};\n\n\n1\n2\n3\n4\n5\n6\n# 事件目标 target\n * 兼容性写法\n\ntargetid = event.target ? event.target.id : event.srcelement.id;\n\n\n1\n# eventemitter\nclass eventemitter {\n    constructor() {\n          this.events = object.create(null);\n      }\n      on(name, fn) {\n        if (!this.events[name]) {\n            this.events[name] = []\n          }\n          this.events[name].push(fn);\n          return this;\n      }\n      emit(name, ...args) {\n        if (!this.events[name]) {\n            return this;\n        }\n        const fns = this.events[name]\n        fns.foreach(fn => fn.call(this, ...args))\n        return this;\n      }\n      off(name,fn) {\n        if (!this.events[name]) {\n            return this;\n        }\n          if (!fn) {\n            this.events[name] = null\n            return this\n          }\n          const index = this.events[name].indexof(fn);\n          this.events[name].splice(index, 1);\n        return this;\n      }\n      once(name,fn) {\n        const only = () => {\n          fn.apply(this, arguments);\n          this.off(name, only);\n        };\n        this.on(name, only);\n        return this;\n      }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40",charsets:{cjk:!0}},{title:"function方法函数",frontmatter:{title:"function方法函数",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["function"],readingShow:"top"},regularPath:"/js/func.html",relativePath:"js/func.md",key:"v-1cdf13eb",path:"/js/func.html",headers:[{level:2,title:"定义函数的方法",slug:"定义函数的方法",normalizedTitle:"定义函数的方法",charIndex:18},{level:2,title:"函数的重复声明",slug:"函数的重复声明",normalizedTitle:"函数的重复声明",charIndex:462},{level:2,title:"函数不调用,不执行",slug:"函数不调用-不执行",normalizedTitle:"函数不调用,不执行",charIndex:616},{level:2,title:"作用域与变量声明提升",slug:"作用域与变量声明提升",normalizedTitle:"作用域与变量声明提升",charIndex:663},{level:2,title:"arguments",slug:"arguments",normalizedTitle:"arguments",charIndex:1157},{level:2,title:"return",slug:"return",normalizedTitle:"return",charIndex:380},{level:2,title:"函数自调用",slug:"函数自调用",normalizedTitle:"函数自调用",charIndex:1614},{level:2,title:"函数的属性和方法",slug:"函数的属性和方法",normalizedTitle:"函数的属性和方法",charIndex:1791},{level:2,title:"callee 属性",slug:"callee-属性",normalizedTitle:"callee 属性",charIndex:2626},{level:2,title:"双引号和单引号",slug:"双引号和单引号",normalizedTitle:"双引号和单引号",charIndex:2766},{level:2,title:"fn 与fn()的区别",slug:"fn-与fn-的区别",normalizedTitle:"fn 与fn()的区别",charIndex:2973},{level:2,title:"传递方式",slug:"传递方式",normalizedTitle:"传递方式",charIndex:3158},{level:2,title:"闭包",slug:"闭包",normalizedTitle:"闭包",charIndex:3720},{level:2,title:"立即调用的函数表达式(IIFE)",slug:"立即调用的函数表达式-iife",normalizedTitle:"立即调用的函数表达式(iife)",charIndex:4294},{level:2,title:"new Function",slug:"new-function",normalizedTitle:"new function",charIndex:356},{level:2,title:"eval",slug:"eval",normalizedTitle:"eval",charIndex:5086}],lastUpdated:"2021/1/5 上午9:57:32",headersStr:"定义函数的方法 函数的重复声明 函数不调用,不执行 作用域与变量声明提升 arguments return 函数自调用 函数的属性和方法 callee 属性 双引号和单引号 fn 与fn()的区别 传递方式 闭包 立即调用的函数表达式(IIFE) new Function eval",content:'\n\nMDN/Function\n\n# 定义函数的方法\n * 函数声明\n\n//ES5\nfunction getSum(){}\n(function (){})()//匿名函数\n//ES6\n()=>{}\n\n// notes\n(() => {}).length // => 0\n({}).toString() // => [object Object]\n([]+[]).toString() // => \'\'\n([]+[]).length // => 0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 函数表达式\n\n//ES5\nvar getSum = function() {};\n//ES6\nlet getSum = () => {};\n\n\n1\n2\n3\n4\n * 构造函数\n\nconst getSum = new Function("a", "b", "return a + b");\n// 等同于es5\nfunction getSum(a, b) {\n  return a + b;\n}\n\n\n1\n2\n3\n4\n5\n# 函数的重复声明\n//如果同一个函数被多次声明,后面的声明就会覆盖前面的声明\nfunction f() {\n  console.log(1);\n}\nf(); // 2\n\nfunction f() {\n  console.log(2);\n}\nf(); // 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 函数不调用,不执行\nfunction fn() {}\nfn(); // 调用\n\n\n1\n2\n# 作用域与变量声明提升\nfunction fn() {\n  console.log(b); //b is not defined\n  console.log(a); //undefined\n  var a = 10;\n}\nfn();\n\n// 注：函数声明优先于变量声明\nvar a;\nfunction a() {}\ntypeof a; // function\n\nfunction a() {}\nvar a;\ntypeof a; // function\n\nfunction a() {}\nvar a = "xyf";\nconsole.log(typeof a); //string\n\n// -----------------\nvar a, b;\nfunction fn(a) {\n  a = 123;\n  b = 555;\n}\nfn("aaa", 666);\nconsole.log(a, b); // undefined, 555\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# arguments\n * 函数名.length: 他代表的是形参的个数.\n * Arguments: 伪数组.而且必须在函数内部使用.\n * 伪转换为真数组\n\nArray.prototype.slice.call(arguments);\nArray.prototype.concat.apply([], arguments);\n// ------------------------------------------\nfunction fn(x, y) {\n  return x + y;\n}\nfn.length; //2\nfn(1, 2); //3\nfn(1); //NaN\nfn(1, 2, 3); //3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# return\n在函数内部用 return 来设置返回值,一个函数只能有一个返回值. 同时,终止代码的执行.\n\n所有的自定义函数默认没有返回值\n\nreturn 语句不是必需的,如果没有的话; 该函数就不返回任何值,或者说返回 undefined\n\n# 函数自调用\n-函数可以调用自身,这就是递归(recursion)\n\nfunction fib(num) {\n  if (num === 0) return 0;\n  if (num === 1) return 1;\n  return fib(num - 2) + fib(num - 1);\n}\nfib(6); // 8\n\n\n1\n2\n3\n4\n5\n6\n# 函数的属性和方法\n * name属性属性返回紧跟在function关键字之后的那个函数名\n\nfunction f1() {}\nf1.name; // \'f1\'\n\nvar f2 = function() {};\nf2.name; // \'\'\n\nvar f3 = function myName() {};\nf3.name; // \'myName\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * length属性返回函数预期传入的参数个数,即函数定义之中的参数个数\n\nfunction f(a, b) {}\nf.length; // 2\n\n\n1\n2\n * toString()方法返回函数的源码\n\nfunction f() {\n  a();\n  b();\n  c();\n}\nf.toString();\n\n\n1\n2\n3\n4\n5\n6\n * 函数内部的注释也可以返回\n\nfunction f() {\n  /*\n  这是一个\n  多行注释\n*/\n}\nf.toString();\n// "function f(){/*\n//   这是一个\n//   多行注释\n// */}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 函数本身的作用域\n\n函数本身也是一个值,也有自己的作用域. 它的作用域与变量一样,就是其声明时所在的作用域, 与其运行时所在的作用域无关.\n\nvar a = 1;\nvar x = function() {\n  console.log(a);\n};\n\nfunction f() {\n  var a = 2;\n  x();\n}\n\nf(); // 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 参数的省略\n\nfunction f(a, b) {\n  return a;\n}\n\nf(1, 2, 3); // 1\nf(1); // 1\nf(); // undefined\n\nf.length; // 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# callee 属性\n * arguments对象带有一个callee属性,返回它所对应的原函数\n\nvar f = function() {\n  console.log(arguments.callee === f);\n};\n\nf(); // true\n\n\n1\n2\n3\n4\n5\n# 双引号和单引号\n * 在字符串中使用字符串:用外双内单(单引号)的方法.\n * 在字符串中使用变量：用外双内双外加+变量名+(单引号)的方法.\n\nvar str = "this is +\'hello\'+demo"; //this is +\'hello\'+demo\nvar num = 2;\nvar str2 = "my age is " + num + "."; //my age is 2.\n\n\n1\n2\n3\n# fn 与fn()的区别\n<div id="demo">点击</div>;\nvar demo = document.getElementById("demo");\nfunction fn() {\n  alert(1);\n}\ndemo.onclick = fn; // 点击执行\ndemo.onclick = fn(); // 直接执行\n\n\n1\n2\n3\n4\n5\n6\n7\n# 传递方式\n * 传值传递(passes by value)\n\nvar p = 2;\n\nfunction f(p) {\n  p = 3;\n}\nf(p);\n\np; // 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 传址传递(pass by reference)\n\nvar obj = { p: 1 };\n\nfunction f(o) {\n  o.p = 2;\n}\nf(obj);\n\nobj.p; // 2\n\n//如果函数内部修改的,不是参数对象的某个属性,\n//而是替换掉整个参数,这时不会影响到原始值.\nvar obj = [1, 2, 3];\n\nfunction f(o) {\n  o = [2, 3, 4];\n}\nf(obj);\n\nobj; // [1, 2, 3]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * 如果需要对某个原始类型的变量,获取传址传递的效果\n\nvar a = 1;\n\nfunction f(p) {\n  window[p] = 2;\n}\nf("a");\n\na; // 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 如果有同名的参数,则取最后出现的那个值\n * 函数内部可以直接读取全局变量\n * 函数外部无法读取函数内部声明的变量\n\n# 闭包\n * 闭包的最大用处有两个,\n * 一个是可以读取函数内部的变量\n * 另一个就是让这些变量始终保持在内存中,即闭包可以使得它诞生环境一直存在\n\nfunction createIncrementor(start) {\n  return function() {\n    return start++;\n  };\n}\nvar inc = createIncrementor(5);\ninc(); // 5\ninc(); // 6\ninc(); // 7\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 闭包的另一个用处,是封装对象的私有属性和私有方法\n\nfunction Person(name) {\n  var _age;\n  function setAge(n) {\n    _age = n;\n  }\n  function getAge() {\n    return _age;\n  }\n  return {\n    name: name,\n    getAge: getAge,\n    setAge: setAge\n  };\n}\nvar p1 = Person("张三");\np1.setAge(25);\np1.getAge(); // 25\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 立即调用的函数表达式(IIFE)\n * 在定义函数之后,立即调用该函数\n * 不能在函数的定义之后加上圆括号,会产生语法错误\n\nfunction(){ /* code */ }();  //error\n\n\n1\n * 最后的分号都是必须的.如果省略分号,遇到连着两个IIFE,可能就会报错\n\n(function() {\n  /* code */\n})();\n// 或者\n(function() {\n  /* code */\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n * 任何让解释器以表达式来处理函数定义的方法\n\nvar i = (function() {\n  return 10;\n})();\ntrue &&\n  (function() {\n    /* code */\n  })();\n0,\n  (function() {\n    /* code */\n  })();\n!(function() {\n  /* code */\n})();\n~(function() {\n  /* code */\n})();\n-(function() {\n  /* code */\n})();\n+(function() {\n  /* code */\n})();\n\nnew (function() {\n  /* code */\n})();\n// 只有传递参数时,才需要最后那个圆括号\nnew (function() {\n  /* code */\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# new Function\nvar str = "{\'a\':\'c\'}";\nvar f = new Function("return " + str);\n\n\n1\n2\n# eval\n * eval命令的作用是,将字符串当作语句执行\n\nvar a = 1;\neval("a = 2");\n\na; // 2\n\n\n1\n2\n3\n4\n * 如果使用严格模式,eval内部声明的变量,不会影响到外部作用域\n\n(function f() {\n  "use strict";\n  eval("var foo = 123");\n  console.log(foo); // ReferenceError: foo is not defined\n})();\n\n\n1\n2\n3\n4\n5',normalizedContent:'\n\nmdn/function\n\n# 定义函数的方法\n * 函数声明\n\n//es5\nfunction getsum(){}\n(function (){})()//匿名函数\n//es6\n()=>{}\n\n// notes\n(() => {}).length // => 0\n({}).tostring() // => [object object]\n([]+[]).tostring() // => \'\'\n([]+[]).length // => 0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 函数表达式\n\n//es5\nvar getsum = function() {};\n//es6\nlet getsum = () => {};\n\n\n1\n2\n3\n4\n * 构造函数\n\nconst getsum = new function("a", "b", "return a + b");\n// 等同于es5\nfunction getsum(a, b) {\n  return a + b;\n}\n\n\n1\n2\n3\n4\n5\n# 函数的重复声明\n//如果同一个函数被多次声明,后面的声明就会覆盖前面的声明\nfunction f() {\n  console.log(1);\n}\nf(); // 2\n\nfunction f() {\n  console.log(2);\n}\nf(); // 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 函数不调用,不执行\nfunction fn() {}\nfn(); // 调用\n\n\n1\n2\n# 作用域与变量声明提升\nfunction fn() {\n  console.log(b); //b is not defined\n  console.log(a); //undefined\n  var a = 10;\n}\nfn();\n\n// 注：函数声明优先于变量声明\nvar a;\nfunction a() {}\ntypeof a; // function\n\nfunction a() {}\nvar a;\ntypeof a; // function\n\nfunction a() {}\nvar a = "xyf";\nconsole.log(typeof a); //string\n\n// -----------------\nvar a, b;\nfunction fn(a) {\n  a = 123;\n  b = 555;\n}\nfn("aaa", 666);\nconsole.log(a, b); // undefined, 555\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# arguments\n * 函数名.length: 他代表的是形参的个数.\n * arguments: 伪数组.而且必须在函数内部使用.\n * 伪转换为真数组\n\narray.prototype.slice.call(arguments);\narray.prototype.concat.apply([], arguments);\n// ------------------------------------------\nfunction fn(x, y) {\n  return x + y;\n}\nfn.length; //2\nfn(1, 2); //3\nfn(1); //nan\nfn(1, 2, 3); //3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# return\n在函数内部用 return 来设置返回值,一个函数只能有一个返回值. 同时,终止代码的执行.\n\n所有的自定义函数默认没有返回值\n\nreturn 语句不是必需的,如果没有的话; 该函数就不返回任何值,或者说返回 undefined\n\n# 函数自调用\n-函数可以调用自身,这就是递归(recursion)\n\nfunction fib(num) {\n  if (num === 0) return 0;\n  if (num === 1) return 1;\n  return fib(num - 2) + fib(num - 1);\n}\nfib(6); // 8\n\n\n1\n2\n3\n4\n5\n6\n# 函数的属性和方法\n * name属性属性返回紧跟在function关键字之后的那个函数名\n\nfunction f1() {}\nf1.name; // \'f1\'\n\nvar f2 = function() {};\nf2.name; // \'\'\n\nvar f3 = function myname() {};\nf3.name; // \'myname\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * length属性返回函数预期传入的参数个数,即函数定义之中的参数个数\n\nfunction f(a, b) {}\nf.length; // 2\n\n\n1\n2\n * tostring()方法返回函数的源码\n\nfunction f() {\n  a();\n  b();\n  c();\n}\nf.tostring();\n\n\n1\n2\n3\n4\n5\n6\n * 函数内部的注释也可以返回\n\nfunction f() {\n  /*\n  这是一个\n  多行注释\n*/\n}\nf.tostring();\n// "function f(){/*\n//   这是一个\n//   多行注释\n// */}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 函数本身的作用域\n\n函数本身也是一个值,也有自己的作用域. 它的作用域与变量一样,就是其声明时所在的作用域, 与其运行时所在的作用域无关.\n\nvar a = 1;\nvar x = function() {\n  console.log(a);\n};\n\nfunction f() {\n  var a = 2;\n  x();\n}\n\nf(); // 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 参数的省略\n\nfunction f(a, b) {\n  return a;\n}\n\nf(1, 2, 3); // 1\nf(1); // 1\nf(); // undefined\n\nf.length; // 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# callee 属性\n * arguments对象带有一个callee属性,返回它所对应的原函数\n\nvar f = function() {\n  console.log(arguments.callee === f);\n};\n\nf(); // true\n\n\n1\n2\n3\n4\n5\n# 双引号和单引号\n * 在字符串中使用字符串:用外双内单(单引号)的方法.\n * 在字符串中使用变量：用外双内双外加+变量名+(单引号)的方法.\n\nvar str = "this is +\'hello\'+demo"; //this is +\'hello\'+demo\nvar num = 2;\nvar str2 = "my age is " + num + "."; //my age is 2.\n\n\n1\n2\n3\n# fn 与fn()的区别\n<div id="demo">点击</div>;\nvar demo = document.getelementbyid("demo");\nfunction fn() {\n  alert(1);\n}\ndemo.onclick = fn; // 点击执行\ndemo.onclick = fn(); // 直接执行\n\n\n1\n2\n3\n4\n5\n6\n7\n# 传递方式\n * 传值传递(passes by value)\n\nvar p = 2;\n\nfunction f(p) {\n  p = 3;\n}\nf(p);\n\np; // 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 传址传递(pass by reference)\n\nvar obj = { p: 1 };\n\nfunction f(o) {\n  o.p = 2;\n}\nf(obj);\n\nobj.p; // 2\n\n//如果函数内部修改的,不是参数对象的某个属性,\n//而是替换掉整个参数,这时不会影响到原始值.\nvar obj = [1, 2, 3];\n\nfunction f(o) {\n  o = [2, 3, 4];\n}\nf(obj);\n\nobj; // [1, 2, 3]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * 如果需要对某个原始类型的变量,获取传址传递的效果\n\nvar a = 1;\n\nfunction f(p) {\n  window[p] = 2;\n}\nf("a");\n\na; // 2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 如果有同名的参数,则取最后出现的那个值\n * 函数内部可以直接读取全局变量\n * 函数外部无法读取函数内部声明的变量\n\n# 闭包\n * 闭包的最大用处有两个,\n * 一个是可以读取函数内部的变量\n * 另一个就是让这些变量始终保持在内存中,即闭包可以使得它诞生环境一直存在\n\nfunction createincrementor(start) {\n  return function() {\n    return start++;\n  };\n}\nvar inc = createincrementor(5);\ninc(); // 5\ninc(); // 6\ninc(); // 7\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 闭包的另一个用处,是封装对象的私有属性和私有方法\n\nfunction person(name) {\n  var _age;\n  function setage(n) {\n    _age = n;\n  }\n  function getage() {\n    return _age;\n  }\n  return {\n    name: name,\n    getage: getage,\n    setage: setage\n  };\n}\nvar p1 = person("张三");\np1.setage(25);\np1.getage(); // 25\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 立即调用的函数表达式(iife)\n * 在定义函数之后,立即调用该函数\n * 不能在函数的定义之后加上圆括号,会产生语法错误\n\nfunction(){ /* code */ }();  //error\n\n\n1\n * 最后的分号都是必须的.如果省略分号,遇到连着两个iife,可能就会报错\n\n(function() {\n  /* code */\n})();\n// 或者\n(function() {\n  /* code */\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n * 任何让解释器以表达式来处理函数定义的方法\n\nvar i = (function() {\n  return 10;\n})();\ntrue &&\n  (function() {\n    /* code */\n  })();\n0,\n  (function() {\n    /* code */\n  })();\n!(function() {\n  /* code */\n})();\n~(function() {\n  /* code */\n})();\n-(function() {\n  /* code */\n})();\n+(function() {\n  /* code */\n})();\n\nnew (function() {\n  /* code */\n})();\n// 只有传递参数时,才需要最后那个圆括号\nnew (function() {\n  /* code */\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# new function\nvar str = "{\'a\':\'c\'}";\nvar f = new function("return " + str);\n\n\n1\n2\n# eval\n * eval命令的作用是,将字符串当作语句执行\n\nvar a = 1;\neval("a = 2");\n\na; // 2\n\n\n1\n2\n3\n4\n * 如果使用严格模式,eval内部声明的变量,不会影响到外部作用域\n\n(function f() {\n  "use strict";\n  eval("var foo = 123");\n  console.log(foo); // referenceerror: foo is not defined\n})();\n\n\n1\n2\n3\n4\n5',charsets:{cjk:!0}},{title:"object对象",frontmatter:{title:"object对象",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["object"],readingShow:"top"},regularPath:"/js/object.html",relativePath:"js/object.md",key:"v-44ff270b",path:"/js/object.html",headers:[{level:2,title:"Object.create",slug:"object-create",normalizedTitle:"object.create",charIndex:16},{level:2,title:"Object.assign",slug:"object-assign",normalizedTitle:"object.assign",charIndex:1294},{level:2,title:"Object.prototype.valueOf",slug:"object-prototype-valueof",normalizedTitle:"object.prototype.valueof",charIndex:2743},{level:2,title:"Object.prototype.toString",slug:"object-prototype-tostring",normalizedTitle:"object.prototype.tostring",charIndex:4514},{level:2,title:"Object.prototype.hasOwnProperty",slug:"object-prototype-hasownproperty",normalizedTitle:"object.prototype.hasownproperty",charIndex:4613},{level:2,title:"Object.prototype.isPrototypeOf",slug:"object-prototype-isprototypeof",normalizedTitle:"object.prototype.isprototypeof",charIndex:4937},{level:2,title:"Object.prototype.propertyIsEnumerable",slug:"object-prototype-propertyisenumerable",normalizedTitle:"object.prototype.propertyisenumerable",charIndex:5603},{level:2,title:"Object.prototype.proto",slug:"object-prototype-proto",normalizedTitle:"object.prototype.proto",charIndex:6160},{level:2,title:"Object.preventExtensions",slug:"object-preventextensions",normalizedTitle:"object.preventextensions",charIndex:6612},{level:2,title:"Object.seal",slug:"object-seal",normalizedTitle:"object.seal",charIndex:6927},{level:2,title:"Object.freeze",slug:"object-freeze",normalizedTitle:"object.freeze",charIndex:7162},{level:2,title:"Object.getOwnPropertyNames",slug:"object-getownpropertynames",normalizedTitle:"object.getownpropertynames",charIndex:7304},{level:2,title:"Object.keys",slug:"object-keys",normalizedTitle:"object.keys",charIndex:8138},{level:2,title:"Object.fromEntries",slug:"object-fromentries",normalizedTitle:"object.fromentries",charIndex:8865},{level:2,title:"Object.entries",slug:"object-entries",normalizedTitle:"object.entries",charIndex:9169},{level:2,title:"Object.values",slug:"object-values",normalizedTitle:"object.values",charIndex:9403},{level:2,title:"Object.is",slug:"object-is",normalizedTitle:"object.is",charIndex:6863},{level:2,title:"Object.getOwnPropertyDescriptor",slug:"object-getownpropertydescriptor",normalizedTitle:"object.getownpropertydescriptor",charIndex:10755},{level:2,title:"Object.defineProperty",slug:"object-defineproperty",normalizedTitle:"object.defineproperty",charIndex:11268},{level:3,title:"attributesObject",slug:"attributesobject",normalizedTitle:"attributesobject",charIndex:11737},{level:2,title:"in运算符和for in循环",slug:"in运算符和for-in循环",normalizedTitle:"in运算符和for in循环",charIndex:15818},{level:3,title:"in",slug:"in",normalizedTitle:"in",charIndex:558},{level:3,title:"for..in",slug:"for-in",normalizedTitle:"for..in",charIndex:16775},{level:3,title:"for...of",slug:"for-of",normalizedTitle:"for...of",charIndex:17006}],lastUpdated:"2021/1/5 上午9:57:32",headersStr:"Object.create Object.assign Object.prototype.valueOf Object.prototype.toString Object.prototype.hasOwnProperty Object.prototype.isPrototypeOf Object.prototype.propertyIsEnumerable Object.prototype.proto Object.preventExtensions Object.seal Object.freeze Object.getOwnPropertyNames Object.keys Object.fromEntries Object.entries Object.values Object.is Object.getOwnPropertyDescriptor Object.defineProperty attributesObject in运算符和for in循环 in for..in for...of",content:'\n\nMDN/Object\n\n# Object.create\n * Object.create(proto[, propertiesObject])\n * 该方法可以指定原型对象和属性，返回一个新的对象\n\n// 创建一个原型为null的空对象\nvar o1 = Object.create(null);\n\n// 创建一个可写的,可枚举的,可配置的属性p\nvar o2 = Object.create(\n  {},\n  {\n    p: {\n      value: 42,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  }\n);\n\nconsole.log(o1); // {p: 42}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * 单体继承\n\n//父类(superclass)\nfunction Shape() {\n  this.x = 0;\n  this.y = 0;\n}\n\n// 父类的方法\nShape.prototype.move = function(x, y) {\n  this.x += x;\n  this.y += y;\n  console.info("Shape moved.");\n};\n\n// 子类(subclass)\nfunction Rectangle() {\n  Shape.call(this); // call super constructor.\n}\n\n// 子类续承父类\nRectangle.prototype = Object.create(Shape.prototype);\nRectangle.prototype.constructor = Rectangle;\n\nvar rect = new Rectangle();\n\nconsole.log(rect instanceof Rectangle); // true\nconsole.log(rect instanceof Shape); // true\nconsole.log(Shape.prototype.isPrototypeOf(rect)); // true\nrect.move(1, 1); // \'Shape moved.\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n * 继承多个对象\n\nfunction SuperClass() {}\nfunction OtherSuperClass() {}\n\nfunction MyClass() {\n  SuperClass.call(this);\n  OtherSuperClass.call(this);\n}\n\n// 继承一个类\nMyClass.prototype = Object.create(SuperClass.prototype);\n// 混合其它\nObject.assign(MyClass.prototype, OtherSuperClass.prototype);\n// 重新指定constructor\nMyClass.prototype.constructor = MyClass;\n\nMyClass.prototype.myMethod = function() {\n  // do a thing\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * MDN: Object.create Polyfill\n\nif (typeof Object.create !== "function") {\n  Object.create = function(proto, propertiesObject) {\n    if (typeof proto !== "object" && typeof proto !== "function") {\n      throw new TypeError("Object prototype may only be an Object: " + proto);\n    } else if (proto === null) {\n      throw new Error(\n        "This browser\'s implementation of Object.create is a shim and doesn\'t support \'null\' as the first argument."\n      );\n    }\n\n    if (typeof propertiesObject != "undefined")\n      throw new Error(\n        "This browser\'s implementation of Object.create is a shim and doesn\'t support a second argument."\n      );\n\n    function F() {}\n    F.prototype = proto;\n\n    return new F();\n  };\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# Object.assign\n * Object.assign(target, ...sources)\n * 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象\n * 不会跳过那些值为 null 或 undefined 的源对象\n\nconst target = { a: 1, b: 2, m: null };\nconst source = { b: 4, c: 5, e: undefined };\n\nconst returnedTarget = Object.assign(target, source);\n\nconsole.log(target);\n// {a: 1, b: 4, m: null, c: 5, e: undefined}\n\nconsole.log(returnedTarget);\n// {a: 1, b: 4, m: null, c: 5, e: undefined}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# Object.prototype.valueOf\n * 返回当前对象对应的值\n\n对象         返回值                                \nArray      返回数组对象本身                           \nBoolean    布尔值                                \nDate       时间是从 1970 年 1 月 1 日午夜开始计的毫秒数 UTC   \nFunction   函数本身                               \nNumber     数字值                                \nObject     对象本身                               \nString     字符串值                               \n           Math 和 Error 对象没有 valueOf 方法       \n\n * 代码\n\n// Array：返回数组对象本身\nvar array = ["ABC", true, 12, -5];\nconsole.log(array.valueOf() === array); // true\n\n// Date：当前时间距1970年1月1日午夜的毫秒数\nvar date = new Date(2013, 7, 18, 23, 11, 59, 230);\nconsole.log(date.valueOf()); // 1376838719230\n\n// Number：返回数字值\nvar num = 15.2654;\nconsole.log(num.valueOf()); // 15.2654\n\n// 布尔：返回布尔值true或false\nvar bool = true;\nconsole.log(bool.valueOf() === bool); // true\n\n// new一个Boolean对象\nvar newBool = new Boolean(true);\n// valueOf()返回的是true，两者的值相等\nconsole.log(newBool.valueOf() == newBool); // true\n// 但是不全等，两者类型不相等，前者是boolean类型，后者是object类型\nconsole.log(newBool.valueOf() === newBool); // false\n\n// Function：返回函数本身\nfunction foo() {}\nconsole.log(foo.valueOf() === foo); // true\nvar foo2 = new Function("x", "y", "return x + y;");\nconsole.log(foo2.valueOf());\n/*\nƒ anonymous(x,y\n) {\nreturn x + y;\n}\n*/\n\n// Object：返回对象本身\nvar obj = { name: "张三", age: 18 };\nconsole.log(obj.valueOf() === obj); // true\n\n// String：返回字符串值\nvar str = "http://www.xyz.com";\nconsole.log(str.valueOf() === str); // true\n\n// new一个字符串对象\nvar str2 = new String("http://www.xyz.com");\n// 两者的值相等，但不全等，因为类型不同，前者为string类型，后者为object类型\nconsole.log(str2.valueOf() === str2); // false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n# Object.prototype.toString\n * 返回对象的类型字符串，因此可以用来判断一个值的类型\n\nObject.prototype.toString.call(arg);\n\n\n1\n# Object.prototype.hasOwnProperty\n * 判断某个属性是否为当前对象自身的属性,true为自身属性，false为继承属性\n\nconst object1 = new Object();\nobject1.property1 = 42;\n\nconsole.log(object1.hasOwnProperty("property1")); //true\nconsole.log(object1.hasOwnProperty("toString")); //false\nconsole.log(object1.hasOwnProperty("hasOwnProperty")); //false\n\n\n1\n2\n3\n4\n5\n6\n# Object.prototype.isPrototypeOf\n * 判断当前对象是否为另一个对象的原型\n   \n   \n * 代码 1\n   \n   \n\nfunction Foo() {}\nfunction Bar() {}\nfunction Baz() {}\n\nBar.prototype = Object.create(Foo.prototype);\nBaz.prototype = Object.create(Bar.prototype);\n\nvar baz = new Baz();\n\nconsole.log(Baz.prototype.isPrototypeOf(baz)); // true\nconsole.log(Bar.prototype.isPrototypeOf(baz)); // true\nconsole.log(Foo.prototype.isPrototypeOf(baz)); // true\nconsole.log(Object.prototype.isPrototypeOf(baz)); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * 代码 2\n\nvar human = { mortal: true };\nvar socrates = Object.create(human);\nhuman.isPrototypeOf(socrates); //=> true\nsocrates instanceof human; //=> ER\n\n\n1\n2\n3\n4\n# Object.prototype.propertyIsEnumerable\n * Object.prototype.propertyIsEnumerable()\n * 判断某个属性是否可枚举, 此方法可以确定对象中指定的属性是否可以被 for...in 循环枚举\n * 基本用法\n\nvar o = {};\nvar a = [];\no.prop = "is enumerable";\na[0] = "is enumerable";\n\no.propertyIsEnumerable("prop"); // 返回 true\na.propertyIsEnumerable(0); // 返回 true\n\n\n1\n2\n3\n4\n5\n6\n7\n * 用户自定义对象和内置对象\n\nvar a = ["is enumerable"];\n\na.propertyIsEnumerable(0); // 返回 true\na.propertyIsEnumerable("length"); // 返回 false\n\nMath.propertyIsEnumerable("random"); // 返回 false\nthis.propertyIsEnumerable("Math"); // 返回 false\n\n\n1\n2\n3\n4\n5\n6\n7\n# Object.prototype.proto\n * Object.prototype.__proto__\n * 返回该对象的原型。该属性可读写\n * __proto__兼容\n\n// __proto__ 兼容\nfunction getProto(attr) {\n  if (attr.__proto__) {\n    return attr.__proto__;\n  } else {\n    return attr.constructor.prototype;\n  }\n}\n\n/*example:\n    function Hello(){}\n    var hello = new Hello();\n    getProto(hello).sayHello=function(){\n      console.log(\'hello\');\n    }\n    hello.sayHello();\n\n */\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# Object.preventExtensions\n * 防止对象扩展\n\n// Object.preventExtensions将原对象变的不可扩展,并且返回原对象.\nvar obj = {};\nvar obj2 = Object.preventExtensions(obj);\nobj === obj2; // true\nobj2.name = "js";\nconsole.log(obj2, obj); // {} {}\n\n// 字面量方式定义的对象默认是可扩展的.\nvar empty = {};\nObject.isExtensible(empty); //=== true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# Object.seal\n * 禁止对象配置\n\nconst object1 = {\n  property1: 42\n};\n\nObject.seal(object1);\nobject1.property1 = 33;\nconsole.log(object1.property1); // 33\n\ndelete object1.property1;\nconsole.log(object1.property1); // 33\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# Object.freeze\n * 冻结一个对象\n\nconst obj = {\n  prop: 42\n};\n\nObject.freeze(obj);\n\nobj.prop = 33;\n\nconsole.log(obj.prop); // 42\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# Object.getOwnPropertyNames\n * 返回一个由指定对象的所有自身属性的属性名（包括不可枚举属性但不包括 Symbol 值作为名称的属性）组成的数组\n\nvar arr = ["a", "b", "c"];\nconsole.log(Object.getOwnPropertyNames(arr).sort()); // ["0", "1", "2", "length"]\n\n// 类数组对象\nvar obj = { 0: "a", 1: "b", 2: "c" };\nconsole.log(Object.getOwnPropertyNames(obj).sort()); // ["0", "1", "2"]\n\n// 使用Array.forEach输出属性名和属性值\nObject.getOwnPropertyNames(obj).forEach(function(val, idx, array) {\n  console.log(val + " -> " + obj[val]);\n});\n// 输出\n// 0 -> a\n// 1 -> b\n// 2 -> c\n\n//不可枚举属性\nvar my_obj = Object.create(\n  {},\n  {\n    getFoo: {\n      value: function() {\n        return this.foo;\n      },\n      enumerable: false\n    }\n  }\n);\nmy_obj.foo = 1;\n\nconsole.log(Object.getOwnPropertyNames(my_obj).sort()); // ["foo", "getFoo"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# Object.keys\n * 参数是一个对象，返回一个数组;\n * 只返回可枚举的属性\n\n// simple array\nvar arr = ["a", "b", "c"];\nconsole.log(Object.keys(arr)); // console: [\'0\', \'1\', \'2\']\n\n// array like object\nvar obj = { 0: "a", 1: "b", 2: "c" };\nconsole.log(Object.keys(obj)); // console: [\'0\', \'1\', \'2\']\n\n// array like object with random key ordering\nvar anObj = { 100: "a", 2: "b", 7: "c" };\nconsole.log(Object.keys(anObj)); // console: [\'2\', \'7\', \'100\']\n\n// getFoo is a property which isn\'t enumerable\nvar myObj = Object.create(\n  {},\n  {\n    getFoo: {\n      value: function() {\n        return this.foo;\n      }\n    }\n  }\n);\nmyObj.foo = 1;\nconsole.log(Object.keys(myObj)); // console: [\'foo\']\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# Object.fromEntries\n * 把键值对列表转换为一个对象\n * Object.fromEntries(iterable) 可迭代对象，类似 Array 、 Map 或者其它实现了可迭代协议的对象\n * 返回一个由该迭代对象条目提供对应属性的新对象\n\nconst entries = new Map([\n  ["foo", "bar"],\n  ["baz", 42]\n]);\n\nconst obj = Object.fromEntries(entries);\n\nconsole.log(obj);\n// { foo: "bar", baz: 42 }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# Object.entries\n * 返回一个给定对象自身可枚举属性的键值对数组\n * 其排列与使用 for...in 循环遍历该对象时返回的顺序一致\n\nconst object1 = {\n  a: "somestring",\n  b: 42\n};\n\nfor (let [key, value] of Object.entries(object1)) {\n  console.log(`${key}: ${value}`);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# Object.values\n * 返回一个给定对象自身的所有可枚举属性值的数组\n\nvar obj = { foo: "bar", baz: 42 };\nconsole.log(Object.values(obj)); // [\'bar\', 42]\n\n// array like object\nvar obj = { 0: "a", 1: "b", 2: "c" };\nconsole.log(Object.values(obj)); // [\'a\', \'b\', \'c\']\n\n// array like object with random key ordering\n// when we use numeric keys, the value returned in a numerical order according to the keys\nvar an_obj = { 100: "a", 2: "b", 7: "c" };\nconsole.log(Object.values(an_obj)); // [\'b\', \'c\', \'a\']\n\n// getFoo is property which isn\'t enumerable\nvar my_obj = Object.create(\n  {},\n  {\n    getFoo: {\n      value: function() {\n        return this.foo;\n      }\n    }\n  }\n);\nmy_obj.foo = "bar";\nconsole.log(Object.values(my_obj)); // [\'bar\']\n\n// non-object argument will be coerced to an object\nconsole.log(Object.values("foo")); // [\'f\', \'o\', \'o\']\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# Object.is\n * 判断两个值是否是相同的值\n\nObject.is("foo", "foo"); // true\nObject.is(window, window); // true\n\nObject.is("foo", "bar"); // false\nObject.is([], []); // false\n\nvar foo = { a: 1 };\nvar bar = { a: 1 };\nObject.is(foo, foo); // true\nObject.is(foo, bar); // false\n\nObject.is(null, null); // true\n\n// 特例\nObject.is(0, -0); // false\nObject.is(0, +0); // true\nObject.is(-0, -0); // true\nObject.is(NaN, 0 / 0); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# Object.getOwnPropertyDescriptor\n * Object.getOwnPropertyDescriptor(obj, prop)返回指定对象上一个自有属性对应的属性描述符\n\nvar o, d;\n\no = {\n  get foo() {\n    return 17;\n  }\n};\nd = Object.getOwnPropertyDescriptor(o, "foo");\nconsole.log(d);\n// {\n//   configurable: true,\n//   enumerable: true,\n//   get: /*the getter function*/,\n//   set: undefined\n// }\n\no = { bar: 42 };\nd = Object.getOwnPropertyDescriptor(o, "bar");\nconsole.log(d);\n// {\n//   configurable: true,\n//   enumerable: true,\n//   value: 42,\n//   writable: true\n// }\n\no = {};\nObject.defineProperty(o, "baz", {\n  value: 8675309,\n  writable: false,\n  enumerable: false\n});\nd = Object.getOwnPropertyDescriptor(o, "baz");\nconsole.log(d);\n// {\n//   value: 8675309,\n//   writable: false,\n//   enumerable: false,\n//   configurable: false\n// }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# Object.defineProperty\n * 通过描述对象，定义某个属性\n   \n   \n * Object.defineProperty(object, propertyName, attributesObject)\n   \n   \n * object: 属性所在的对象\n   \n   \n * propertyName: 属性名（它应该是一个字符串）\n   \n   \n * attributesObject: 属性描述对象\n   \n   \n * 注意，一旦定义了取值函数get（或存值函数set），就不能将writable属性设为true，或者同时定义value属性，否则会报错\n   \n   \n * 描述符可同时具有的键值\n   \n   \n\n        configurable   enumerable   value   writable   get   set   \n数据描述符   Yes            Yes          Yes     Yes        No    No    \n存取描述符   Yes            Yes          No      No         Yes   Yes   \n\n * 添加多个属性和默认值\n\nvar o = {};\n\no.a = 1;\n// 等同于 :\nObject.defineProperty(o, "a", {\n  value: 1,\n  writable: true,\n  configurable: true,\n  enumerable: true\n});\n\n// 另一方面，\nObject.defineProperty(o, "a", { value: 1 });\n// 等同于 :\nObject.defineProperty(o, "a", {\n  value: 1,\n  writable: false,\n  configurable: false,\n  enumerable: false\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * 思考扩展\n\n// 1.0\nif(a == 1 && a ==2 && a == 3){\n  console.log(\'1.0 如何打印我！\')\n}\n\nvar s = 0;\nvar a = {\n    toString(){\n          console.log(\'其次：toString.\')\n          return s+=1\n    },\n    valueOf(){\n        console.log(\'优先：valueOf.\')\n        return ++s\n    }\n}\n\n// 2.0\nif(a === 1 && a ===2 && a === 3){\n  console.log(\'2.0 如何打印我！\')\n}\n\n// 不建议使用\nObject.definePrototype(window, \'a\', {\n  get(){\n    return ++s;\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# attributesObject\n# value\n * 该属性的属性值，默认为undefined\n\nvar o = {}; // 创建一个新对象\n\n// 在对象中添加一个属性与数据描述符的示例\nObject.defineProperty(o, "a", {\n  value: 37,\n  writable: true,\n  enumerable: true,\n  configurable: true\n});\nconsole.log(o);\n// 对象o拥有了属性a，值为37\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# writable\n * 布尔值，表示属性值（value）是否可改变（即是否可写）. 默认为true\n\nvar o = {}; // Creates a new object\n\nObject.defineProperty(o, "a", {\n  value: 37,\n  writable: false\n});\n\nconsole.log(o.a); // 37\no.a = 25; // No error thrown\nconsole.log(o.a); // 37\n\n// strict mode\n(function() {\n  "use strict";\n  var o = {};\n  Object.defineProperty(o, "b", {\n    value: 2,\n    writable: false\n  });\n  o.b = 3; // throws TypeError\n  console.log(o);\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# enumerable\n * 布尔值，表示该属性是否可遍历\n * 默认为true\n * 设为false，for...in循环、Object.keys()会跳过该属性\n\nvar o = {};\nObject.defineProperty(o, "a", { value: 1, enumerable: true });\nObject.defineProperty(o, "b", { value: 2, enumerable: false });\nObject.defineProperty(o, "c", { value: 3 }); // enumerable defaults to false\no.d = 4; // 如果使用直接赋值的方式创建对象的属性，则这个属性的enumerable为true\n\nfor (var i in o) {\n  console.log(i);\n}\n// 打印 \'a\' 和 \'d\' (in undefined order)\n\nObject.keys(o); // ["a", "d"]\n\no.propertyIsEnumerable("a"); // true\no.propertyIsEnumerable("b"); // false\no.propertyIsEnumerable("c"); // false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# configurable\n * 布尔值，表示可配置性\n * 默认为true\n * 设为false,无法删除该属性，不能改变该描述对象（value属性除外）\n\nvar o = {};\nObject.defineProperty(o, "a", {\n  get: function() {\n    return 1;\n  },\n  configurable: false\n});\n\n// throws a TypeError\nObject.defineProperty(o, "a", { configurable: true });\n// throws a TypeError\nObject.defineProperty(o, "a", { enumerable: true });\n// throws a TypeError\nObject.defineProperty(o, "a", { set: function() {} });\n// throws a TypeError\nObject.defineProperty(o, "a", {\n  get: function() {\n    return 1;\n  }\n});\n// throws a TypeError\nObject.defineProperty(o, "a", { value: 12 });\n\nconsole.log(o.a); //1\ndelete o.a; // Nothing happens\nconsole.log(o.a); // 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# set/get\n * get 函数，表示该属性的取值函数（getter），默认为undefined\n * set 函数，表示该属性的存值函数（setter），默认为undefined\n\nfunction Archiver() {\n  var temperature = null;\n  var archive = [];\n\n  Object.defineProperty(this, "temperature", {\n    get: function() {\n      console.log("get!");\n      return temperature;\n    },\n    set: function(value) {\n      temperature = value;\n      archive.push({ val: temperature });\n    }\n  });\n\n  this.getArchive = function() {\n    return archive;\n  };\n}\n\nvar arc = new Archiver();\narc.temperature; // \'get!\'\narc.temperature = 11;\narc.temperature = 13;\narc.getArchive(); // [{ val: 11 }, { val: 13 }]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# in运算符和for in循环\n# in\n * prop in object运算符常用于检查一个属性是否存在\n * in 右操作数必须是一个对象值\n\n// 数组\nvar trees = new Array("redwood", "bay", "cedar", "oak", "maple");\nconsole.log(0 in trees); // 返回true\nconsole.log(3 in trees); // 返回true\nconsole.log(6 in trees); // 返回false\nconsole.log("bay" in trees); // 返回false (必须使用索引号,而不是数组元素的值)\n\nconsole.log("length" in trees); // 返回true (length是一个数组属性)\n\nconsole.log(Symbol.iterator in trees); // 返回true\n\n// 内置对象\nconsole.log("PI" in Math); // 返回true\n\n// 自定义对象\nvar mycar = { make: "Honda", model: "Accord", year: 1998 };\nconsole.log("make" in mycar); // 返回true\nconsole.log("model" in mycar); // 返回true\n\nvar mycar = { make: "Honda", model: "Accord", year: 1998 };\ndelete mycar.make;\nconsole.log("make" in mycar); // 返回false\n\n// 值赋值为undefined\nvar mycar = { make: "Honda", model: "Accord", year: 1998 };\nmycar.make = undefined;\nconsole.log("make" in mycar); // 返回true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# for..in\n * 以任意顺序遍历一个对象的除Symbol以外的可枚举属性\n\nvar obj = { a: 1, b: 2, c: 3 };\n\nfor (var prop in obj) {\n  console.log("obj." + prop + " = " + obj[prop]);\n}\n\n// Output:\n// "obj.a = 1"\n// "obj.b = 2"\n// "obj.c = 3"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# for...of\n * 遍历可迭代对象定义要迭代的数据\n * 在可迭代对象（包括 Array，Map，Set，String，TypedArray，arguments 对象等等）上创建一个迭代循环，调用自定义迭代钩子，并为每个不同属性的值执行语句\n\nObject.prototype.objCustom = function() {};\nArray.prototype.arrCustom = function() {};\n\nlet iterable = [3, 5, 7];\niterable.foo = "hello";\n\nfor (let i in iterable) {\n  console.log(i); // logs 0, 1, 2, "foo", "arrCustom", "objCustom"\n}\n\nfor (let i in iterable) {\n  if (iterable.hasOwnProperty(i)) {\n    console.log(i); // logs 0, 1, 2, "foo"\n  }\n}\n\nfor (let i of iterable) {\n  console.log(i); // logs 3, 5, 7\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19',normalizedContent:'\n\nmdn/object\n\n# object.create\n * object.create(proto[, propertiesobject])\n * 该方法可以指定原型对象和属性，返回一个新的对象\n\n// 创建一个原型为null的空对象\nvar o1 = object.create(null);\n\n// 创建一个可写的,可枚举的,可配置的属性p\nvar o2 = object.create(\n  {},\n  {\n    p: {\n      value: 42,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  }\n);\n\nconsole.log(o1); // {p: 42}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * 单体继承\n\n//父类(superclass)\nfunction shape() {\n  this.x = 0;\n  this.y = 0;\n}\n\n// 父类的方法\nshape.prototype.move = function(x, y) {\n  this.x += x;\n  this.y += y;\n  console.info("shape moved.");\n};\n\n// 子类(subclass)\nfunction rectangle() {\n  shape.call(this); // call super constructor.\n}\n\n// 子类续承父类\nrectangle.prototype = object.create(shape.prototype);\nrectangle.prototype.constructor = rectangle;\n\nvar rect = new rectangle();\n\nconsole.log(rect instanceof rectangle); // true\nconsole.log(rect instanceof shape); // true\nconsole.log(shape.prototype.isprototypeof(rect)); // true\nrect.move(1, 1); // \'shape moved.\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n * 继承多个对象\n\nfunction superclass() {}\nfunction othersuperclass() {}\n\nfunction myclass() {\n  superclass.call(this);\n  othersuperclass.call(this);\n}\n\n// 继承一个类\nmyclass.prototype = object.create(superclass.prototype);\n// 混合其它\nobject.assign(myclass.prototype, othersuperclass.prototype);\n// 重新指定constructor\nmyclass.prototype.constructor = myclass;\n\nmyclass.prototype.mymethod = function() {\n  // do a thing\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * mdn: object.create polyfill\n\nif (typeof object.create !== "function") {\n  object.create = function(proto, propertiesobject) {\n    if (typeof proto !== "object" && typeof proto !== "function") {\n      throw new typeerror("object prototype may only be an object: " + proto);\n    } else if (proto === null) {\n      throw new error(\n        "this browser\'s implementation of object.create is a shim and doesn\'t support \'null\' as the first argument."\n      );\n    }\n\n    if (typeof propertiesobject != "undefined")\n      throw new error(\n        "this browser\'s implementation of object.create is a shim and doesn\'t support a second argument."\n      );\n\n    function f() {}\n    f.prototype = proto;\n\n    return new f();\n  };\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# object.assign\n * object.assign(target, ...sources)\n * 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象\n * 不会跳过那些值为 null 或 undefined 的源对象\n\nconst target = { a: 1, b: 2, m: null };\nconst source = { b: 4, c: 5, e: undefined };\n\nconst returnedtarget = object.assign(target, source);\n\nconsole.log(target);\n// {a: 1, b: 4, m: null, c: 5, e: undefined}\n\nconsole.log(returnedtarget);\n// {a: 1, b: 4, m: null, c: 5, e: undefined}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# object.prototype.valueof\n * 返回当前对象对应的值\n\n对象         返回值                                \narray      返回数组对象本身                           \nboolean    布尔值                                \ndate       时间是从 1970 年 1 月 1 日午夜开始计的毫秒数 utc   \nfunction   函数本身                               \nnumber     数字值                                \nobject     对象本身                               \nstring     字符串值                               \n           math 和 error 对象没有 valueof 方法       \n\n * 代码\n\n// array：返回数组对象本身\nvar array = ["abc", true, 12, -5];\nconsole.log(array.valueof() === array); // true\n\n// date：当前时间距1970年1月1日午夜的毫秒数\nvar date = new date(2013, 7, 18, 23, 11, 59, 230);\nconsole.log(date.valueof()); // 1376838719230\n\n// number：返回数字值\nvar num = 15.2654;\nconsole.log(num.valueof()); // 15.2654\n\n// 布尔：返回布尔值true或false\nvar bool = true;\nconsole.log(bool.valueof() === bool); // true\n\n// new一个boolean对象\nvar newbool = new boolean(true);\n// valueof()返回的是true，两者的值相等\nconsole.log(newbool.valueof() == newbool); // true\n// 但是不全等，两者类型不相等，前者是boolean类型，后者是object类型\nconsole.log(newbool.valueof() === newbool); // false\n\n// function：返回函数本身\nfunction foo() {}\nconsole.log(foo.valueof() === foo); // true\nvar foo2 = new function("x", "y", "return x + y;");\nconsole.log(foo2.valueof());\n/*\nƒ anonymous(x,y\n) {\nreturn x + y;\n}\n*/\n\n// object：返回对象本身\nvar obj = { name: "张三", age: 18 };\nconsole.log(obj.valueof() === obj); // true\n\n// string：返回字符串值\nvar str = "http://www.xyz.com";\nconsole.log(str.valueof() === str); // true\n\n// new一个字符串对象\nvar str2 = new string("http://www.xyz.com");\n// 两者的值相等，但不全等，因为类型不同，前者为string类型，后者为object类型\nconsole.log(str2.valueof() === str2); // false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n# object.prototype.tostring\n * 返回对象的类型字符串，因此可以用来判断一个值的类型\n\nobject.prototype.tostring.call(arg);\n\n\n1\n# object.prototype.hasownproperty\n * 判断某个属性是否为当前对象自身的属性,true为自身属性，false为继承属性\n\nconst object1 = new object();\nobject1.property1 = 42;\n\nconsole.log(object1.hasownproperty("property1")); //true\nconsole.log(object1.hasownproperty("tostring")); //false\nconsole.log(object1.hasownproperty("hasownproperty")); //false\n\n\n1\n2\n3\n4\n5\n6\n# object.prototype.isprototypeof\n * 判断当前对象是否为另一个对象的原型\n   \n   \n * 代码 1\n   \n   \n\nfunction foo() {}\nfunction bar() {}\nfunction baz() {}\n\nbar.prototype = object.create(foo.prototype);\nbaz.prototype = object.create(bar.prototype);\n\nvar baz = new baz();\n\nconsole.log(baz.prototype.isprototypeof(baz)); // true\nconsole.log(bar.prototype.isprototypeof(baz)); // true\nconsole.log(foo.prototype.isprototypeof(baz)); // true\nconsole.log(object.prototype.isprototypeof(baz)); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * 代码 2\n\nvar human = { mortal: true };\nvar socrates = object.create(human);\nhuman.isprototypeof(socrates); //=> true\nsocrates instanceof human; //=> er\n\n\n1\n2\n3\n4\n# object.prototype.propertyisenumerable\n * object.prototype.propertyisenumerable()\n * 判断某个属性是否可枚举, 此方法可以确定对象中指定的属性是否可以被 for...in 循环枚举\n * 基本用法\n\nvar o = {};\nvar a = [];\no.prop = "is enumerable";\na[0] = "is enumerable";\n\no.propertyisenumerable("prop"); // 返回 true\na.propertyisenumerable(0); // 返回 true\n\n\n1\n2\n3\n4\n5\n6\n7\n * 用户自定义对象和内置对象\n\nvar a = ["is enumerable"];\n\na.propertyisenumerable(0); // 返回 true\na.propertyisenumerable("length"); // 返回 false\n\nmath.propertyisenumerable("random"); // 返回 false\nthis.propertyisenumerable("math"); // 返回 false\n\n\n1\n2\n3\n4\n5\n6\n7\n# object.prototype.proto\n * object.prototype.__proto__\n * 返回该对象的原型。该属性可读写\n * __proto__兼容\n\n// __proto__ 兼容\nfunction getproto(attr) {\n  if (attr.__proto__) {\n    return attr.__proto__;\n  } else {\n    return attr.constructor.prototype;\n  }\n}\n\n/*example:\n    function hello(){}\n    var hello = new hello();\n    getproto(hello).sayhello=function(){\n      console.log(\'hello\');\n    }\n    hello.sayhello();\n\n */\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# object.preventextensions\n * 防止对象扩展\n\n// object.preventextensions将原对象变的不可扩展,并且返回原对象.\nvar obj = {};\nvar obj2 = object.preventextensions(obj);\nobj === obj2; // true\nobj2.name = "js";\nconsole.log(obj2, obj); // {} {}\n\n// 字面量方式定义的对象默认是可扩展的.\nvar empty = {};\nobject.isextensible(empty); //=== true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# object.seal\n * 禁止对象配置\n\nconst object1 = {\n  property1: 42\n};\n\nobject.seal(object1);\nobject1.property1 = 33;\nconsole.log(object1.property1); // 33\n\ndelete object1.property1;\nconsole.log(object1.property1); // 33\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# object.freeze\n * 冻结一个对象\n\nconst obj = {\n  prop: 42\n};\n\nobject.freeze(obj);\n\nobj.prop = 33;\n\nconsole.log(obj.prop); // 42\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# object.getownpropertynames\n * 返回一个由指定对象的所有自身属性的属性名（包括不可枚举属性但不包括 symbol 值作为名称的属性）组成的数组\n\nvar arr = ["a", "b", "c"];\nconsole.log(object.getownpropertynames(arr).sort()); // ["0", "1", "2", "length"]\n\n// 类数组对象\nvar obj = { 0: "a", 1: "b", 2: "c" };\nconsole.log(object.getownpropertynames(obj).sort()); // ["0", "1", "2"]\n\n// 使用array.foreach输出属性名和属性值\nobject.getownpropertynames(obj).foreach(function(val, idx, array) {\n  console.log(val + " -> " + obj[val]);\n});\n// 输出\n// 0 -> a\n// 1 -> b\n// 2 -> c\n\n//不可枚举属性\nvar my_obj = object.create(\n  {},\n  {\n    getfoo: {\n      value: function() {\n        return this.foo;\n      },\n      enumerable: false\n    }\n  }\n);\nmy_obj.foo = 1;\n\nconsole.log(object.getownpropertynames(my_obj).sort()); // ["foo", "getfoo"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# object.keys\n * 参数是一个对象，返回一个数组;\n * 只返回可枚举的属性\n\n// simple array\nvar arr = ["a", "b", "c"];\nconsole.log(object.keys(arr)); // console: [\'0\', \'1\', \'2\']\n\n// array like object\nvar obj = { 0: "a", 1: "b", 2: "c" };\nconsole.log(object.keys(obj)); // console: [\'0\', \'1\', \'2\']\n\n// array like object with random key ordering\nvar anobj = { 100: "a", 2: "b", 7: "c" };\nconsole.log(object.keys(anobj)); // console: [\'2\', \'7\', \'100\']\n\n// getfoo is a property which isn\'t enumerable\nvar myobj = object.create(\n  {},\n  {\n    getfoo: {\n      value: function() {\n        return this.foo;\n      }\n    }\n  }\n);\nmyobj.foo = 1;\nconsole.log(object.keys(myobj)); // console: [\'foo\']\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# object.fromentries\n * 把键值对列表转换为一个对象\n * object.fromentries(iterable) 可迭代对象，类似 array 、 map 或者其它实现了可迭代协议的对象\n * 返回一个由该迭代对象条目提供对应属性的新对象\n\nconst entries = new map([\n  ["foo", "bar"],\n  ["baz", 42]\n]);\n\nconst obj = object.fromentries(entries);\n\nconsole.log(obj);\n// { foo: "bar", baz: 42 }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# object.entries\n * 返回一个给定对象自身可枚举属性的键值对数组\n * 其排列与使用 for...in 循环遍历该对象时返回的顺序一致\n\nconst object1 = {\n  a: "somestring",\n  b: 42\n};\n\nfor (let [key, value] of object.entries(object1)) {\n  console.log(`${key}: ${value}`);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# object.values\n * 返回一个给定对象自身的所有可枚举属性值的数组\n\nvar obj = { foo: "bar", baz: 42 };\nconsole.log(object.values(obj)); // [\'bar\', 42]\n\n// array like object\nvar obj = { 0: "a", 1: "b", 2: "c" };\nconsole.log(object.values(obj)); // [\'a\', \'b\', \'c\']\n\n// array like object with random key ordering\n// when we use numeric keys, the value returned in a numerical order according to the keys\nvar an_obj = { 100: "a", 2: "b", 7: "c" };\nconsole.log(object.values(an_obj)); // [\'b\', \'c\', \'a\']\n\n// getfoo is property which isn\'t enumerable\nvar my_obj = object.create(\n  {},\n  {\n    getfoo: {\n      value: function() {\n        return this.foo;\n      }\n    }\n  }\n);\nmy_obj.foo = "bar";\nconsole.log(object.values(my_obj)); // [\'bar\']\n\n// non-object argument will be coerced to an object\nconsole.log(object.values("foo")); // [\'f\', \'o\', \'o\']\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# object.is\n * 判断两个值是否是相同的值\n\nobject.is("foo", "foo"); // true\nobject.is(window, window); // true\n\nobject.is("foo", "bar"); // false\nobject.is([], []); // false\n\nvar foo = { a: 1 };\nvar bar = { a: 1 };\nobject.is(foo, foo); // true\nobject.is(foo, bar); // false\n\nobject.is(null, null); // true\n\n// 特例\nobject.is(0, -0); // false\nobject.is(0, +0); // true\nobject.is(-0, -0); // true\nobject.is(nan, 0 / 0); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# object.getownpropertydescriptor\n * object.getownpropertydescriptor(obj, prop)返回指定对象上一个自有属性对应的属性描述符\n\nvar o, d;\n\no = {\n  get foo() {\n    return 17;\n  }\n};\nd = object.getownpropertydescriptor(o, "foo");\nconsole.log(d);\n// {\n//   configurable: true,\n//   enumerable: true,\n//   get: /*the getter function*/,\n//   set: undefined\n// }\n\no = { bar: 42 };\nd = object.getownpropertydescriptor(o, "bar");\nconsole.log(d);\n// {\n//   configurable: true,\n//   enumerable: true,\n//   value: 42,\n//   writable: true\n// }\n\no = {};\nobject.defineproperty(o, "baz", {\n  value: 8675309,\n  writable: false,\n  enumerable: false\n});\nd = object.getownpropertydescriptor(o, "baz");\nconsole.log(d);\n// {\n//   value: 8675309,\n//   writable: false,\n//   enumerable: false,\n//   configurable: false\n// }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# object.defineproperty\n * 通过描述对象，定义某个属性\n   \n   \n * object.defineproperty(object, propertyname, attributesobject)\n   \n   \n * object: 属性所在的对象\n   \n   \n * propertyname: 属性名（它应该是一个字符串）\n   \n   \n * attributesobject: 属性描述对象\n   \n   \n * 注意，一旦定义了取值函数get（或存值函数set），就不能将writable属性设为true，或者同时定义value属性，否则会报错\n   \n   \n * 描述符可同时具有的键值\n   \n   \n\n        configurable   enumerable   value   writable   get   set   \n数据描述符   yes            yes          yes     yes        no    no    \n存取描述符   yes            yes          no      no         yes   yes   \n\n * 添加多个属性和默认值\n\nvar o = {};\n\no.a = 1;\n// 等同于 :\nobject.defineproperty(o, "a", {\n  value: 1,\n  writable: true,\n  configurable: true,\n  enumerable: true\n});\n\n// 另一方面，\nobject.defineproperty(o, "a", { value: 1 });\n// 等同于 :\nobject.defineproperty(o, "a", {\n  value: 1,\n  writable: false,\n  configurable: false,\n  enumerable: false\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * 思考扩展\n\n// 1.0\nif(a == 1 && a ==2 && a == 3){\n  console.log(\'1.0 如何打印我！\')\n}\n\nvar s = 0;\nvar a = {\n    tostring(){\n          console.log(\'其次：tostring.\')\n          return s+=1\n    },\n    valueof(){\n        console.log(\'优先：valueof.\')\n        return ++s\n    }\n}\n\n// 2.0\nif(a === 1 && a ===2 && a === 3){\n  console.log(\'2.0 如何打印我！\')\n}\n\n// 不建议使用\nobject.defineprototype(window, \'a\', {\n  get(){\n    return ++s;\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# attributesobject\n# value\n * 该属性的属性值，默认为undefined\n\nvar o = {}; // 创建一个新对象\n\n// 在对象中添加一个属性与数据描述符的示例\nobject.defineproperty(o, "a", {\n  value: 37,\n  writable: true,\n  enumerable: true,\n  configurable: true\n});\nconsole.log(o);\n// 对象o拥有了属性a，值为37\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# writable\n * 布尔值，表示属性值（value）是否可改变（即是否可写）. 默认为true\n\nvar o = {}; // creates a new object\n\nobject.defineproperty(o, "a", {\n  value: 37,\n  writable: false\n});\n\nconsole.log(o.a); // 37\no.a = 25; // no error thrown\nconsole.log(o.a); // 37\n\n// strict mode\n(function() {\n  "use strict";\n  var o = {};\n  object.defineproperty(o, "b", {\n    value: 2,\n    writable: false\n  });\n  o.b = 3; // throws typeerror\n  console.log(o);\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# enumerable\n * 布尔值，表示该属性是否可遍历\n * 默认为true\n * 设为false，for...in循环、object.keys()会跳过该属性\n\nvar o = {};\nobject.defineproperty(o, "a", { value: 1, enumerable: true });\nobject.defineproperty(o, "b", { value: 2, enumerable: false });\nobject.defineproperty(o, "c", { value: 3 }); // enumerable defaults to false\no.d = 4; // 如果使用直接赋值的方式创建对象的属性，则这个属性的enumerable为true\n\nfor (var i in o) {\n  console.log(i);\n}\n// 打印 \'a\' 和 \'d\' (in undefined order)\n\nobject.keys(o); // ["a", "d"]\n\no.propertyisenumerable("a"); // true\no.propertyisenumerable("b"); // false\no.propertyisenumerable("c"); // false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# configurable\n * 布尔值，表示可配置性\n * 默认为true\n * 设为false,无法删除该属性，不能改变该描述对象（value属性除外）\n\nvar o = {};\nobject.defineproperty(o, "a", {\n  get: function() {\n    return 1;\n  },\n  configurable: false\n});\n\n// throws a typeerror\nobject.defineproperty(o, "a", { configurable: true });\n// throws a typeerror\nobject.defineproperty(o, "a", { enumerable: true });\n// throws a typeerror\nobject.defineproperty(o, "a", { set: function() {} });\n// throws a typeerror\nobject.defineproperty(o, "a", {\n  get: function() {\n    return 1;\n  }\n});\n// throws a typeerror\nobject.defineproperty(o, "a", { value: 12 });\n\nconsole.log(o.a); //1\ndelete o.a; // nothing happens\nconsole.log(o.a); // 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# set/get\n * get 函数，表示该属性的取值函数（getter），默认为undefined\n * set 函数，表示该属性的存值函数（setter），默认为undefined\n\nfunction archiver() {\n  var temperature = null;\n  var archive = [];\n\n  object.defineproperty(this, "temperature", {\n    get: function() {\n      console.log("get!");\n      return temperature;\n    },\n    set: function(value) {\n      temperature = value;\n      archive.push({ val: temperature });\n    }\n  });\n\n  this.getarchive = function() {\n    return archive;\n  };\n}\n\nvar arc = new archiver();\narc.temperature; // \'get!\'\narc.temperature = 11;\narc.temperature = 13;\narc.getarchive(); // [{ val: 11 }, { val: 13 }]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# in运算符和for in循环\n# in\n * prop in object运算符常用于检查一个属性是否存在\n * in 右操作数必须是一个对象值\n\n// 数组\nvar trees = new array("redwood", "bay", "cedar", "oak", "maple");\nconsole.log(0 in trees); // 返回true\nconsole.log(3 in trees); // 返回true\nconsole.log(6 in trees); // 返回false\nconsole.log("bay" in trees); // 返回false (必须使用索引号,而不是数组元素的值)\n\nconsole.log("length" in trees); // 返回true (length是一个数组属性)\n\nconsole.log(symbol.iterator in trees); // 返回true\n\n// 内置对象\nconsole.log("pi" in math); // 返回true\n\n// 自定义对象\nvar mycar = { make: "honda", model: "accord", year: 1998 };\nconsole.log("make" in mycar); // 返回true\nconsole.log("model" in mycar); // 返回true\n\nvar mycar = { make: "honda", model: "accord", year: 1998 };\ndelete mycar.make;\nconsole.log("make" in mycar); // 返回false\n\n// 值赋值为undefined\nvar mycar = { make: "honda", model: "accord", year: 1998 };\nmycar.make = undefined;\nconsole.log("make" in mycar); // 返回true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# for..in\n * 以任意顺序遍历一个对象的除symbol以外的可枚举属性\n\nvar obj = { a: 1, b: 2, c: 3 };\n\nfor (var prop in obj) {\n  console.log("obj." + prop + " = " + obj[prop]);\n}\n\n// output:\n// "obj.a = 1"\n// "obj.b = 2"\n// "obj.c = 3"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# for...of\n * 遍历可迭代对象定义要迭代的数据\n * 在可迭代对象（包括 array，map，set，string，typedarray，arguments 对象等等）上创建一个迭代循环，调用自定义迭代钩子，并为每个不同属性的值执行语句\n\nobject.prototype.objcustom = function() {};\narray.prototype.arrcustom = function() {};\n\nlet iterable = [3, 5, 7];\niterable.foo = "hello";\n\nfor (let i in iterable) {\n  console.log(i); // logs 0, 1, 2, "foo", "arrcustom", "objcustom"\n}\n\nfor (let i in iterable) {\n  if (iterable.hasownproperty(i)) {\n    console.log(i); // logs 0, 1, 2, "foo"\n  }\n}\n\nfor (let i of iterable) {\n  console.log(i); // logs 3, 5, 7\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19',charsets:{cjk:!0}},{title:"函数的设计模式/构造函数",frontmatter:{title:"函数的设计模式/构造函数",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",readingShow:"top"},regularPath:"/js/oop.html",relativePath:"js/oop.md",key:"v-73c7fac3",path:"/js/oop.html",headers:[{level:2,title:"工厂模式",slug:"工厂模式",normalizedTitle:"工厂模式",charIndex:2},{level:2,title:"构造函数模式",slug:"构造函数模式",normalizedTitle:"构造函数模式",charIndex:320},{level:2,title:"单例模式",slug:"单例模式",normalizedTitle:"单例模式",charIndex:580},{level:2,title:"适配器模式",slug:"适配器模式",normalizedTitle:"适配器模式",charIndex:1046},{level:2,title:"代理模式",slug:"代理模式",normalizedTitle:"代理模式",charIndex:1335},{level:2,title:"装饰者模式",slug:"装饰者模式",normalizedTitle:"装饰者模式",charIndex:1773},{level:2,title:"观察者模式",slug:"观察者模式",normalizedTitle:"观察者模式",charIndex:2267},{level:2,title:"面向对象",slug:"面向对象",normalizedTitle:"面向对象",charIndex:3139},{level:2,title:"构造函数",slug:"构造函数",normalizedTitle:"构造函数",charIndex:320},{level:2,title:"构造函数 new 命令的原理",slug:"构造函数-new-命令的原理",normalizedTitle:"构造函数 new 命令的原理",charIndex:3460},{level:2,title:"构造函数的继承",slug:"构造函数的继承",normalizedTitle:"构造函数的继承",charIndex:4757},{level:2,title:"define module",slug:"define-module",normalizedTitle:"define module",charIndex:7565},{level:2,title:"amd-requirejs",slug:"amd-requirejs",normalizedTitle:"amd-requirejs",charIndex:8136},{level:2,title:"cmd-seajs",slug:"cmd-seajs",normalizedTitle:"cmd-seajs",charIndex:8493},{level:2,title:"UMD",slug:"umd",normalizedTitle:"umd",charIndex:8895},{level:2,title:"ES6 module",slug:"es6-module",normalizedTitle:"es6 module",charIndex:9388},{level:2,title:"commonJS",slug:"commonjs",normalizedTitle:"commonjs",charIndex:8911},{level:2,title:"原型链示意图",slug:"原型链示意图",normalizedTitle:"原型链示意图",charIndex:9679}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"工厂模式 构造函数模式 单例模式 适配器模式 代理模式 装饰者模式 观察者模式 面向对象 构造函数 构造函数 new 命令的原理 构造函数的继承 define module amd-requirejs cmd-seajs UMD ES6 module commonJS 原型链示意图",content:'# 工厂模式\n\n\n原地址： JavaScript 设计模式 es6\n\nfunction Persion(name) {\n  var obj = {};\n  obj.name = name;\n  obj.say = function() {\n    console.log("Hello,", this.name);\n  };\n  return obj;\n}\n\nvar p1 = Persion("js");\np1.say(); // => Hello, js\n\nvar p2 = Persion("css");\np2.say(); // => Hello, css\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 构造函数模式\nfunction Persion(name, age) {\n  this.name = name;\n  this.age = age;\n  this.say = function() {\n    console.log("hello ", this.name);\n  };\n}\nvar p1 = new Persion("js", 12);\np1.say();\nvar p2 = new Persion("node", 16);\np2.say();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 单例模式\nclass User {\n  constructor(name) {\n    this.name = name;\n    this.getName();\n  }\n  getName() {\n    return this.name;\n  }\n}\n// 代理实现单例模式\nvar ProxyMode = (function() {\n  var instance = null;\n  return function(name) {\n    if (!instance) {\n      instance = new User(name);\n    }\n    return instance;\n  };\n})();\n\nvar a = new ProxyMode("aaa");\nvar b = new ProxyMode("bbb");\nconsole.log(a === b); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 适配器模式\nclass Plug {\n  getName() {\n    return "html";\n  }\n}\n\nclass Target {\n  constructor() {\n    this.plug = new Plug();\n  }\n  getName() {\n    return this.plug.getName() + " css";\n  }\n}\n\nlet target = new Target();\ntarget.getName(); // html css\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 代理模式\nlet M = {\n  send: function(target, gif) {\n    target.receive(gif);\n  }\n};\nlet B = {\n  receive: function(gif) {\n    A.obs(function() {\n      A.receive(gif);\n    });\n  }\n};\nlet A = {\n  receive: function(gif) {\n    console.log("get " + gif);\n  },\n  obs: function(fn) {\n    setTimeout(function() {\n      fn();\n    }, 1000);\n  }\n};\n\nM.send(B, "flower"); // => get flower\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# 装饰者模式\nclass Cellphone {\n  create() {\n    console.log("生成一个手机");\n  }\n}\nclass Decorator {\n  constructor(cellphone) {\n    this.cellphone = cellphone;\n  }\n  create() {\n    this.cellphone.create();\n    this.createShell();\n  }\n  createShell() {\n    console.log("生成手机壳");\n  }\n}\n\nlet cellphone = new Cellphone();\ncellphone.create(); // 生成一个手机\nconsole.log("------------");\nlet dec = new Decorator(cellphone);\ndec.create(); // 生成一个手机 生成手机壳\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 观察者模式\nclass Sub {\n  constructor() {\n    this.state = 0;\n    this.observers = [];\n  }\n  getState() {\n    return this.state;\n  }\n  setState(state) {\n    this.state = state;\n    this.notify();\n  }\n  notify() {\n    this.observers.forEach(observer => {\n      observer.update();\n    });\n  }\n  add(observer) {\n    this.observers.push(observer);\n  }\n}\n\nclass Observer {\n  constructor(name, subject) {\n    this.name = name;\n    this.subject = subject;\n    this.subject.add(this);\n  }\n  update() {\n    console.log(`${this.name} update, state: ${this.subject.getState()}`);\n  }\n}\n// add obs\nlet sub = new Sub();\nlet o1 = new Observer("o1", sub);\nlet o2 = new Observer("02", sub);\n// update state\nsub.setState(12);\n// => o1 update, state: 12\n// => 02 update, state: 12\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# 面向对象\n * 封装 继承 多态 作用：复用\n * 继承：就是修改对象中的原型链的层次结构\n\n# 构造函数\nfunction Func(uName) {\n  this.userName = uName;\n}\nFunc.prototype.showUserName = function() {\n  return this.userName;\n};\nvar obj1 = new Func("hello");\nvar obj2 = new Func("xiao ming");\nconsole.log(obj1.showUserName === obj2.showUserName); //true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 构造函数 new 命令的原理\n 1. 创建一个空对象,作为将要返回的对象实例\n 2. 拷贝构造函数中的方法和属性到这个空对象中\n 3. 生成一个proto指针,指向构造函数的原型对象\n 4. this 指向这个空对象\n\n * 代码 1\n\nfunction Person(name) {\n  var obj = new Object();\n  obj.name = name;\n  obj.__proto__ = Person.prototype;\n  return obj;\n}\nPerson.prototype.getName = function() {\n  console.log(this.name);\n};\nvar person = new Person("hainan");\nperson.getName();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 代码 2\n\nfunction _new() {\n  // 将 arguments 对象转为数组\n  var args = [].slice.call(arguments);\n  // 取出构造函数\n  var constructor = args.shift();\n  // 创建一个空对象,继承构造函数的 prototype 属性\n  var context = Object.create(constructor.prototype);\n  // 执行构造函数\n  var result = constructor.apply(context, args);\n  // 如果返回结果是对象,就直接返回,则返回 context 对象\n  return typeof result === "object" && result != null ? result : context;\n}\nfunction Person(name, age) {\n  this.name = name;\n  this.age = age;\n}\nvar actor = _new(Person, "张三", 28);\nactor; // => {name: "张三", age: 28}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 代码 3\n\nfunction _new(func) {\n  let o = Object.create(func.prototype);\n  let k = func.call(o);\n  return typeof k === "object" ? k : o;\n}\n\nfunction M() {\n  this.name = "liwenli";\n}\n\nlet m = _new(M);\nconsole.log(m instanceof M); // instanceof 检测实例\nconsole.log(m.__proto__.constructor === M);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 构造函数的继承\n * 拷贝继承\n\nfunction extend2(Child, Parent) {\n    var p = Parent.prototype;\n    var c = Child.prototype;\n    for (var i in p) {\n        c[i] = p[i];\n    }\n    c.uber = p;\n}\n\nfunction Animal(){}\nAnimal.prototype.eat = function(){ console.log(\'animal eat\') }\n\nextend2(Cat, Animal);\nvar cat1 = new Cat(\'po\' \'orange\');\nconsole.log(cat1.eat()); // animal eat\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 寄生组合式继承\n\nfunction Father(name) {\n  this.name = name;\n  this.num = ["12"];\n}\nFather.prototype.sayname = function() {\n  console.log(this.name);\n};\n\nfunction Child(age, name) {\n  Father.call(this, name); //继承属性\n  this.age = age;\n}\n\n// 用一个 F 空的构造函数去取代执行了 Parent 这个构造函数\nfunction create(proto) {\n  function F() {}\n  F.prototype = proto;\n  return new F();\n}\n\nChild.prototype = create(Parent.prototype); //继承方法\nChild.prototype.constructor = Child;\n\n// Child原型方法\nChild.prototype.sayage = function() {\n  console.log(this.age);\n};\n\nvar c1 = new Child(16, "小花");\nc1.sayage(); //16\nc1.sayname(); //小花\nc1.num.push(13);\nconsole.log(c1.num); //12,13\n\nvar c2 = new Child(18, "小明");\nc2.sayage(); //18\nc2.sayname(); //小明\nconsole.log(c2.num); //12\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n * 原型式继承Object.create\n\nfunction Super() {\n  this.type = "super";\n  this.colors = ["red", "blue", "black"];\n}\nfunction Child(name) {\n  Super.call(this);\n  this.type = "child";\n  this.name = "name";\n}\nChild.prototype = Object.create(Super.prototype);\n//或 Object.setPrototypeOf(Child.prototype, Super.prototype)\n//或 Child.prototype.__proto__ = Super.prototype\n\nChild.prototype.constructor = Child;\nvar child = new Child("cat");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 继承\n\n// 链接：https://juejin.im/post/5a96d78ef265da4e9311b4d8\n\nfunction fancyShadowMerge(target, source) {\n  for (const key of Reflect.ownKeys(source)) {\n    Reflect.defineProperty(\n      target,\n      key,\n      Reflect.getOwnPropertyDescriptor(source, key)\n    );\n  }\n  return target;\n}\n\n// Core\nfunction inherit(child, parent) {\n  const objectPrototype = Object.prototype;\n  // 继承父类的原型\n  const parentPrototype = Object.create(parent.prototype);\n  let childPrototype = child.prototype;\n  // 若子类没有继承任何类，直接合并子类原型和父类原型上的所有方法\n  // 包含可枚举/不可枚举的方法\n  if (Reflect.getPrototypeOf(childPrototype) === objectPrototype) {\n    child.prototype = fancyShadowMerge(parentPrototype, childPrototype);\n  } else {\n    // 若子类已经继承子某个类\n    // 父类的原型将在子类原型链的尽头补全\n    while (Reflect.getPrototypeOf(childPrototype) !== objectPrototype) {\n      childPrototype = Reflect.getPrototypeOf(childPrototype);\n    }\n    Reflect.setPrototypeOf(childPrototype, parent.prototype);\n  }\n  // 重写被污染的子类的constructor\n  parentPrototype.constructor = child;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# define module\n * 原文\n\nlet module = (function() {\n  //模块列表集合\n  const moduleLists = {};\n  function define(name, modules, action) {\n    modules.map((m, i) => {\n      modules[i] = moduleLists[m];\n    });\n    //执行并保存模块\n    moduleLists[name] = action.apply(null, modules);\n  }\n\n  return { define };\n})();\n\n//声明模块不依赖其它模块\nmodule.define("a", [], function() {\n  return {\n    show() {\n      console.log("A module func");\n    }\n  };\n});\n\n//声明模块时依赖其它模块\nmodule.define("b", ["a"], function(f) {\n  f.show();\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# amd-requirejs\n * 异步加载模块,依赖前置,提前执行\n * define 定义模块define([\'require\',\'foo\'],function(){return foo;});\n * require 加载模块(依赖前置) require([\'foo\',\'bar\'],function(foo,bar){});\n\n// a.js\ndefine(function() {\n  return {\n    a: "hello world"\n  };\n});\n// b.js\nrequire(["./a.js"], function(moduleA) {\n  console.log(moduleA.a); // 打印出：hello world\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# cmd-seajs\n * define 定义 exports 导出 define(function(require,exports,module){});moduel 上存储了当前模块上的一些对象。\n * requre(./a)直接导入。require.async 异步导入。\n * 同步加载,依赖就近,延迟执行。\n\n// a.js\ndefine(function(require, exports, module) {\n  exports.a = "hello world";\n});\n// b.js\ndefine(function(require, exports, module) {\n  var moduleA = require("./a.js");\n  console.log(moduleA.a); // 打印出：hello world\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# UMD\n * 兼容 AMD 和 commonJS 规范的同时\n\n(function(root, factory) {\n  if (typeof define === "function" && define.amd) {\n    //AMD\n    define(["jquery"], factory);\n  } else if (typeof exports === "object") {\n    //Node, CommonJS之类的\n    module.exports = factory(require("jquery"));\n  } else {\n    //浏览器全局变量(root 即 window)\n    root.returnExports = factory(root.jQuery);\n  }\n})(this, function($) {\n  //方法\n  function myFunc() {}\n  //暴露公共方法\n  return myFunc;\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# ES6 module\n// a.js\nexport var m = 1;\nexport {};\nexport { n as m };\nexport default n;\n\n// b.js\nimport "./a.js";\nimport * as m from "./a.js";\nimport { n as v } from "./a.js";\nimport { n } from "./a.js";\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# commonJS\nmodule.export = {};\n\nlet fn = reqiure("");\n\n\n1\n2\n3\n# 原型链示意图',normalizedContent:'# 工厂模式\n\n\n原地址： javascript 设计模式 es6\n\nfunction persion(name) {\n  var obj = {};\n  obj.name = name;\n  obj.say = function() {\n    console.log("hello,", this.name);\n  };\n  return obj;\n}\n\nvar p1 = persion("js");\np1.say(); // => hello, js\n\nvar p2 = persion("css");\np2.say(); // => hello, css\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 构造函数模式\nfunction persion(name, age) {\n  this.name = name;\n  this.age = age;\n  this.say = function() {\n    console.log("hello ", this.name);\n  };\n}\nvar p1 = new persion("js", 12);\np1.say();\nvar p2 = new persion("node", 16);\np2.say();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 单例模式\nclass user {\n  constructor(name) {\n    this.name = name;\n    this.getname();\n  }\n  getname() {\n    return this.name;\n  }\n}\n// 代理实现单例模式\nvar proxymode = (function() {\n  var instance = null;\n  return function(name) {\n    if (!instance) {\n      instance = new user(name);\n    }\n    return instance;\n  };\n})();\n\nvar a = new proxymode("aaa");\nvar b = new proxymode("bbb");\nconsole.log(a === b); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 适配器模式\nclass plug {\n  getname() {\n    return "html";\n  }\n}\n\nclass target {\n  constructor() {\n    this.plug = new plug();\n  }\n  getname() {\n    return this.plug.getname() + " css";\n  }\n}\n\nlet target = new target();\ntarget.getname(); // html css\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 代理模式\nlet m = {\n  send: function(target, gif) {\n    target.receive(gif);\n  }\n};\nlet b = {\n  receive: function(gif) {\n    a.obs(function() {\n      a.receive(gif);\n    });\n  }\n};\nlet a = {\n  receive: function(gif) {\n    console.log("get " + gif);\n  },\n  obs: function(fn) {\n    settimeout(function() {\n      fn();\n    }, 1000);\n  }\n};\n\nm.send(b, "flower"); // => get flower\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# 装饰者模式\nclass cellphone {\n  create() {\n    console.log("生成一个手机");\n  }\n}\nclass decorator {\n  constructor(cellphone) {\n    this.cellphone = cellphone;\n  }\n  create() {\n    this.cellphone.create();\n    this.createshell();\n  }\n  createshell() {\n    console.log("生成手机壳");\n  }\n}\n\nlet cellphone = new cellphone();\ncellphone.create(); // 生成一个手机\nconsole.log("------------");\nlet dec = new decorator(cellphone);\ndec.create(); // 生成一个手机 生成手机壳\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 观察者模式\nclass sub {\n  constructor() {\n    this.state = 0;\n    this.observers = [];\n  }\n  getstate() {\n    return this.state;\n  }\n  setstate(state) {\n    this.state = state;\n    this.notify();\n  }\n  notify() {\n    this.observers.foreach(observer => {\n      observer.update();\n    });\n  }\n  add(observer) {\n    this.observers.push(observer);\n  }\n}\n\nclass observer {\n  constructor(name, subject) {\n    this.name = name;\n    this.subject = subject;\n    this.subject.add(this);\n  }\n  update() {\n    console.log(`${this.name} update, state: ${this.subject.getstate()}`);\n  }\n}\n// add obs\nlet sub = new sub();\nlet o1 = new observer("o1", sub);\nlet o2 = new observer("02", sub);\n// update state\nsub.setstate(12);\n// => o1 update, state: 12\n// => 02 update, state: 12\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# 面向对象\n * 封装 继承 多态 作用：复用\n * 继承：就是修改对象中的原型链的层次结构\n\n# 构造函数\nfunction func(uname) {\n  this.username = uname;\n}\nfunc.prototype.showusername = function() {\n  return this.username;\n};\nvar obj1 = new func("hello");\nvar obj2 = new func("xiao ming");\nconsole.log(obj1.showusername === obj2.showusername); //true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 构造函数 new 命令的原理\n 1. 创建一个空对象,作为将要返回的对象实例\n 2. 拷贝构造函数中的方法和属性到这个空对象中\n 3. 生成一个proto指针,指向构造函数的原型对象\n 4. this 指向这个空对象\n\n * 代码 1\n\nfunction person(name) {\n  var obj = new object();\n  obj.name = name;\n  obj.__proto__ = person.prototype;\n  return obj;\n}\nperson.prototype.getname = function() {\n  console.log(this.name);\n};\nvar person = new person("hainan");\nperson.getname();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 代码 2\n\nfunction _new() {\n  // 将 arguments 对象转为数组\n  var args = [].slice.call(arguments);\n  // 取出构造函数\n  var constructor = args.shift();\n  // 创建一个空对象,继承构造函数的 prototype 属性\n  var context = object.create(constructor.prototype);\n  // 执行构造函数\n  var result = constructor.apply(context, args);\n  // 如果返回结果是对象,就直接返回,则返回 context 对象\n  return typeof result === "object" && result != null ? result : context;\n}\nfunction person(name, age) {\n  this.name = name;\n  this.age = age;\n}\nvar actor = _new(person, "张三", 28);\nactor; // => {name: "张三", age: 28}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 代码 3\n\nfunction _new(func) {\n  let o = object.create(func.prototype);\n  let k = func.call(o);\n  return typeof k === "object" ? k : o;\n}\n\nfunction m() {\n  this.name = "liwenli";\n}\n\nlet m = _new(m);\nconsole.log(m instanceof m); // instanceof 检测实例\nconsole.log(m.__proto__.constructor === m);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 构造函数的继承\n * 拷贝继承\n\nfunction extend2(child, parent) {\n    var p = parent.prototype;\n    var c = child.prototype;\n    for (var i in p) {\n        c[i] = p[i];\n    }\n    c.uber = p;\n}\n\nfunction animal(){}\nanimal.prototype.eat = function(){ console.log(\'animal eat\') }\n\nextend2(cat, animal);\nvar cat1 = new cat(\'po\' \'orange\');\nconsole.log(cat1.eat()); // animal eat\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 寄生组合式继承\n\nfunction father(name) {\n  this.name = name;\n  this.num = ["12"];\n}\nfather.prototype.sayname = function() {\n  console.log(this.name);\n};\n\nfunction child(age, name) {\n  father.call(this, name); //继承属性\n  this.age = age;\n}\n\n// 用一个 f 空的构造函数去取代执行了 parent 这个构造函数\nfunction create(proto) {\n  function f() {}\n  f.prototype = proto;\n  return new f();\n}\n\nchild.prototype = create(parent.prototype); //继承方法\nchild.prototype.constructor = child;\n\n// child原型方法\nchild.prototype.sayage = function() {\n  console.log(this.age);\n};\n\nvar c1 = new child(16, "小花");\nc1.sayage(); //16\nc1.sayname(); //小花\nc1.num.push(13);\nconsole.log(c1.num); //12,13\n\nvar c2 = new child(18, "小明");\nc2.sayage(); //18\nc2.sayname(); //小明\nconsole.log(c2.num); //12\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n * 原型式继承object.create\n\nfunction super() {\n  this.type = "super";\n  this.colors = ["red", "blue", "black"];\n}\nfunction child(name) {\n  super.call(this);\n  this.type = "child";\n  this.name = "name";\n}\nchild.prototype = object.create(super.prototype);\n//或 object.setprototypeof(child.prototype, super.prototype)\n//或 child.prototype.__proto__ = super.prototype\n\nchild.prototype.constructor = child;\nvar child = new child("cat");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 继承\n\n// 链接：https://juejin.im/post/5a96d78ef265da4e9311b4d8\n\nfunction fancyshadowmerge(target, source) {\n  for (const key of reflect.ownkeys(source)) {\n    reflect.defineproperty(\n      target,\n      key,\n      reflect.getownpropertydescriptor(source, key)\n    );\n  }\n  return target;\n}\n\n// core\nfunction inherit(child, parent) {\n  const objectprototype = object.prototype;\n  // 继承父类的原型\n  const parentprototype = object.create(parent.prototype);\n  let childprototype = child.prototype;\n  // 若子类没有继承任何类，直接合并子类原型和父类原型上的所有方法\n  // 包含可枚举/不可枚举的方法\n  if (reflect.getprototypeof(childprototype) === objectprototype) {\n    child.prototype = fancyshadowmerge(parentprototype, childprototype);\n  } else {\n    // 若子类已经继承子某个类\n    // 父类的原型将在子类原型链的尽头补全\n    while (reflect.getprototypeof(childprototype) !== objectprototype) {\n      childprototype = reflect.getprototypeof(childprototype);\n    }\n    reflect.setprototypeof(childprototype, parent.prototype);\n  }\n  // 重写被污染的子类的constructor\n  parentprototype.constructor = child;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# define module\n * 原文\n\nlet module = (function() {\n  //模块列表集合\n  const modulelists = {};\n  function define(name, modules, action) {\n    modules.map((m, i) => {\n      modules[i] = modulelists[m];\n    });\n    //执行并保存模块\n    modulelists[name] = action.apply(null, modules);\n  }\n\n  return { define };\n})();\n\n//声明模块不依赖其它模块\nmodule.define("a", [], function() {\n  return {\n    show() {\n      console.log("a module func");\n    }\n  };\n});\n\n//声明模块时依赖其它模块\nmodule.define("b", ["a"], function(f) {\n  f.show();\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# amd-requirejs\n * 异步加载模块,依赖前置,提前执行\n * define 定义模块define([\'require\',\'foo\'],function(){return foo;});\n * require 加载模块(依赖前置) require([\'foo\',\'bar\'],function(foo,bar){});\n\n// a.js\ndefine(function() {\n  return {\n    a: "hello world"\n  };\n});\n// b.js\nrequire(["./a.js"], function(modulea) {\n  console.log(modulea.a); // 打印出：hello world\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# cmd-seajs\n * define 定义 exports 导出 define(function(require,exports,module){});moduel 上存储了当前模块上的一些对象。\n * requre(./a)直接导入。require.async 异步导入。\n * 同步加载,依赖就近,延迟执行。\n\n// a.js\ndefine(function(require, exports, module) {\n  exports.a = "hello world";\n});\n// b.js\ndefine(function(require, exports, module) {\n  var modulea = require("./a.js");\n  console.log(modulea.a); // 打印出：hello world\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# umd\n * 兼容 amd 和 commonjs 规范的同时\n\n(function(root, factory) {\n  if (typeof define === "function" && define.amd) {\n    //amd\n    define(["jquery"], factory);\n  } else if (typeof exports === "object") {\n    //node, commonjs之类的\n    module.exports = factory(require("jquery"));\n  } else {\n    //浏览器全局变量(root 即 window)\n    root.returnexports = factory(root.jquery);\n  }\n})(this, function($) {\n  //方法\n  function myfunc() {}\n  //暴露公共方法\n  return myfunc;\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# es6 module\n// a.js\nexport var m = 1;\nexport {};\nexport { n as m };\nexport default n;\n\n// b.js\nimport "./a.js";\nimport * as m from "./a.js";\nimport { n as v } from "./a.js";\nimport { n } from "./a.js";\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# commonjs\nmodule.export = {};\n\nlet fn = reqiure("");\n\n\n1\n2\n3\n# 原型链示意图',charsets:{cjk:!0}},{title:"js运算符",frontmatter:{title:"js运算符",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",readingShow:"top"},regularPath:"/js/operation.html",relativePath:"js/operation.md",key:"v-67b761d5",path:"/js/operation.html",headers:[{level:2,title:"位操作符",slug:"位操作符",normalizedTitle:"位操作符",charIndex:743},{level:2,title:"逻辑运算符",slug:"逻辑运算符",normalizedTitle:"逻辑运算符",charIndex:2031},{level:2,title:"比较运算符",slug:"比较运算符",normalizedTitle:"比较运算符",charIndex:2117},{level:2,title:"赋值运算符",slug:"赋值运算符",normalizedTitle:"赋值运算符",charIndex:168},{level:2,title:"逗号操作符",slug:"逗号操作符",normalizedTitle:"逗号操作符",charIndex:2651},{level:2,title:"void",slug:"void",normalizedTitle:"void",charIndex:2782},{level:2,title:"字符串的比较",slug:"字符串的比较",normalizedTitle:"字符串的比较",charIndex:2870},{level:2,title:"escape 与 unescape",slug:"escape-与-unescape",normalizedTitle:"escape 与 unescape",charIndex:3060},{level:2,title:"NaN",slug:"nan",normalizedTitle:"nan",charIndex:3656},{level:2,title:"if else",slug:"if-else",normalizedTitle:"if else",charIndex:4204},{level:2,title:"switch case",slug:"switch-case",normalizedTitle:"switch case",charIndex:4328},{level:2,title:"三元运算符/三目运算符",slug:"三元运算符-三目运算符",normalizedTitle:"三元运算符/三目运算符",charIndex:4490},{level:2,title:"循环语句",slug:"循环语句",normalizedTitle:"循环语句",charIndex:4738},{level:3,title:"while 循环",slug:"while-循环",normalizedTitle:"while 循环",charIndex:4745},{level:3,title:"do while",slug:"do-while",normalizedTitle:"do while",charIndex:5358},{level:3,title:"for 循环",slug:"for-循环",normalizedTitle:"for 循环",charIndex:5635},{level:2,title:"break 与 continue",slug:"break-与-continue",normalizedTitle:"break 与 continue",charIndex:6547},{level:2,title:"使用 & 判断奇偶性",slug:"使用-判断奇偶性",normalizedTitle:"使用 &amp; 判断奇偶性",charIndex:null},{level:2,title:"使用 !! 将数字转为布尔值",slug:"使用-将数字转为布尔值",normalizedTitle:"使用 !! 将数字转为布尔值",charIndex:7059},{level:2,title:"for in和for of的区别",slug:"for-in和for-of的区别",normalizedTitle:"for in和for of的区别",charIndex:7195}],lastUpdated:"2020/8/3 上午10:17:07",headersStr:"位操作符 逻辑运算符 比较运算符 赋值运算符 逗号操作符 void 字符串的比较 escape 与 unescape NaN if else switch case 三元运算符/三目运算符 循环语句 while 循环 do while for 循环 break 与 continue 使用 & 判断奇偶性 使用 !! 将数字转为布尔值 for in和for of的区别",content:' * 一元操作符 ++, -- + -\n   \n   \n * 逻辑操作符 ! && ||\n   \n   \n * 基本运算符 +, -, *, /, %(取余)\n   \n   \n * 关系操作符 >, <, >=, <=, ===, ==, !=, !==\n   \n   \n * 条件操作符 (三元运算符) ? :\n   \n   \n * 赋值运算符 +=, -=, *=, /=, %= ,=\n   \n   \n * 逗号运算符 ,\n   \n   \n * 圆括号运算符 ()\n   \n   \n * % 运算结果的正负号由第一个运算值的正负号决定\n   \n   true +1 //2\n   false +1 //1\n   \n   12%5  //2\n   -1 % 2 // -1\n   1 % -2 // 1\n   6%5； //1\n   3%5;  //3\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n * 注意:a++和++a 与 a--和--a 的区别\n   \n    * ++a; 先自增,后计算 var a=1; ++a // 2\n    * a++; 先运算,后自增 var b=1; b++ // 1\n    * --a; 先自减,后计算 var c=1; --c // 0\n    * a--; 先运算,后自减 var d=1; d-- // 1\n   \n   \n * js 浮点运算0.1\n   \n   \n\nvar x = 0.2 - 0.1; // 0.1\nvar y = 0.3 - 0.2; // 0.09999999999999998不等于0.1\nx == y; // false\n\n\n1\n2\n3\n# 位操作符\n * 按位与（AND）\n\n对于每一个比特位，只有两个操作数相应的比特位都是 1 时，结果才为 1，否则为 0\n\na   b   a & b   \n0   0   0       \n0   1   0       \n1   0   0       \n1   1   1       \n\n1 & 2; // 0  => 0001 & 0010\n\n\n1\n * 按位或（OR）\n\n对于每一个比特位，当两个操作数相应的比特位至少有一个 1 时，结果为 1，否则为 0\n\na   b   a | b   \n0   0   0       \n0   1   1       \n1   0   1       \n1   1   1       \n\n1 | 2; // 3 => 0001 | 0010\n\n\n1\n * 按位异或（XOR）\n\n对于每一个比特位，当两个操作数相应的比特位有且只有一个 1 时，结果为 1，否则为 0\n\na   b   a ^ b   \n0   0   0       \n0   1   1       \n1   0   1       \n1   1   0       \n\n1 ^ 2; // 3 => 0001 ^ 0010\n\n\n1\n * 使用^来完成值交换\n\n// --- before ---\nlet temp = a;\na = b;\nb = temp; // 传统，但需要借助临时变量\nb = [a, (a = b)][0]; // 借助数组\n\n// --- after ---\nlet a = 7;\nlet b = 1;\na ^= b;\nb ^= a;\na ^= b;\nconsole.log(a); // 1\nconsole.log(b)[(a, b)] = [b, a]; // 7 // ES6，解构赋值\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * 按位非（NOT）\n\n反转操作数的比特位，即 0 变成 1，1 变成 0\n\na   ~a   \n0   1    \n1   0    \n\n// 整数： ~x = -(x+1)\n~4; // -5\n~-10; // 9\n\n\n1\n2\n3\n * 左移（<<）\n\na << b 将 a 的二进制形式向左移 b (< 32) 比特位，右边用 0 填充\n\n1 << 2; // 4   => 0001 << 000100\n5 << 2; // 20  => 0101 << 010100\n\n\n1\n2\n * 有符号右移（>>）\n\na >> b 将 a 的二进制表示向右移 b (< 32) 位，丢弃被移出的位\n\n(4 >>\n  (2 - // 1\n    4)) >>\n  2; // -1\n\n\n1\n2\n3\n4\n * 无符号右移（>>>）\n\na >>> b 将 a 的二进制表示向右移 b (< 32) 位，丢弃被移出的位，并使用 0 在左侧填充\n\n(4 >>>\n  (2 - // 1\n    4)) >>>\n  2; // 1073741823\n\n\n1\n2\n3\n4\n# 逻辑运算符\n * && (并且) , || (或者) , ! (取反)\n * 逻辑运算符的优先级\n\n! > && > ||\n\n()>*,/ > +,-\n\n\n1\n2\n3\n# 比较运算符\n * > >= < <= == ===\n * 注意： === 与 == 的区别. * == 值 相等\n    * === 值 和类型都相等\n   \n   \n\nvar a = 1;\nvar b = "1";\na == b; // true\na === b; // false\n\n\n1\n2\n3\n4\n * 在代码中没有这样的形式：110>pj>100; 如果一定要表达这种形式：使用110 > pj && pj> 100\n\n# 赋值运算符\nx += y; // 等同于 x = x + y\nx -= y; // 等同于 x = x - y\nx *= y; // 等同于 x = x * y\nx /= y; // 等同于 x = x / y\nx %= y; // 等同于 x = x % y\nx >>= y; // 等同于 x = x >> y\nx <<= y; // 等同于 x = x << y\nx >>>= y; // 等同于 x = x >>> y\nx &= y; // 等同于 x = x & y\nx |= y; // 等同于 x = x | y\nx ^= y; // 等同于 x = x ^ y\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 逗号操作符\n * 对它的每个操作数求值（从左到右），并返回最后一个操作数的值\n\n"a", "b"; // "b"\n\nvar x = 10;\nvar y = (++x, 20);\nconsole.log(y, x); // 20 11\n\n\n1\n2\n3\n4\n5\n# void\nvoid对给定的表达式进行求值，然后返回 undefined\n\nvar x = 3;\nvoid x++; //undefined\nx; // 4\n\n\n1\n2\n3\n# 字符串的比较\n * 字符串按照字典顺序进行比较\n * 首先比较首字符的 Unicode 码点,如果相等;\n * 再比较第二个字符的 Unicode 码点,以此类推\n\n"cat" > "dog"; // false\n"cat" > "catalog"; // false\n"cat" > "Cat"; // true\n"大" > "小"; // false\n\n\n1\n2\n3\n4\n# escape 与 unescape\nescape("大"); // "%u5927"\nunescape("%u5927"); // "大"\n\nconst escapeHTML = str =>\n  str.replace(\n    /[&<>\'"]/g,\n    tag =>\n      ({\n        "&": "&amp;",\n        "<": "&lt;",\n        ">": "&gt;",\n        "\'": "&#39;",\n        \'"\': "&quot;"\n      }[tag] || tag)\n  );\n\nconst unescapeHTML = str =>\n  str.replace(\n    /&amp;|&lt;|&gt;|&#39;|&quot;/g,\n    tag =>\n      ({\n        "&amp;": "&",\n        "&lt;": "<",\n        "&gt;": ">",\n        "&#39;": "\'",\n        "&quot;": \'"\'\n      }[tag] || tag)\n  );\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# NaN\n * NaN是 JavaScript 的特殊值,表示"非数字"(Not a Number)\n\ntypeof NaN; // \'number\'\nNaN == NaN; // flase\nNaN ===\n  NaN[NaN].indexOf(NaN); //false // -1\nBoolean(NaN); // false\nNumber.isNaN(NaN); // true\n\n\n1\n2\n3\n4\n5\n6\n * NaN与任何数(包括它自己)的运算,得到的都是NaN\n * 判断 NaN 的方法\n\n//isNaN方法可以用来判断一个值是否为NaN\n//isNaN只对数值有效,如果传入其他值,会被先转成数值\nisNaN(NaN); // true\nisNaN(123); // false\nisNaN({}); // true\nisNaN("Hello"); // true\nisNaN(["xzy"]); // true\n\n//对于空数组和只有一个数值成员的数组,isNaN返回false\nisNaN([]); // false\nisNaN([123]); // false\nisNaN(["123"]); // false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# if else\nif (condition) {\n} else {\n}\n\nif (条件 / boolean) {\n  代码块1;\n} else if (条件 / boolean) {\n  代码块2;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# switch case\nswitch (变量){\n\tcase 变量的值1:\n\t\t// 代码块1;\n\t\tbreak;\n\tcase 变量的值2:\n\t\t// 代码块2;\n\t\tbreak;\n\t.....\n\tdefault:\n\t\t// 默认代码块;\n\t\tbreak;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 三元运算符/三目运算符\n * boolean表达式 ? 操作一:操作二;\n * (condition) ? expr1 : expr2\n * 如果 condition 为true,则返回 expr1 的值,否则返回 expr2 的值\n\nvar a = 16;\nvar b = 15;\nvar c = 24;\n//让a和b进行比较,找出大的,再用大的跟c比较\n(a > b ? a : b) > c ? alert(a > b ? a : b) : alert(c);\n\n\n1\n2\n3\n4\n5\n# 循环语句\n# while 循环\n * 当程序运行到 while 的时候,会判断 while 后面括号中的内容,\n * 如果内容为 true,会执行下面的代码,\n * 如果为内容为 false,则不执行这段代码,跳过这段代码执行下面的内容.\n\nwhile(条件语句/boolean)｛\n\t\t//重复执行的代码块\n｝\n\n\n1\n2\n3\n * 如果在写循环的时候一定要有循环的结束条件,如果没有就是死循环,就是一 Bug.\n * 终止循环：break\n * 立即结束本次循环,开始下一次循环：continue\n\nvar a = 1;\nwhile(a <= 100) {\n  console.log(a);\n  a ++;//a = a + 1;\n}\nconsole.log("over");\n\n// el : element dom\nfunction node2Fragment(el) {\n  var fragment = document.createDocumentFragment(),\n      child;\n  // 将原生节点拷贝到fragment\n  while (child = el.firstChild) {\n      fragment.appendChild(child);\n  }\n  return fragment;\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# do while\n代码从上到下执行的过程中如果遇到了 do 就会先执行一次 do 后面的代码,执行之后再 通过while来进行判断,如果判断通过那么再执行一次, 如果判断不通过却结束循环.\n\ndo {\n  //要循环执行的代码块\n} while (条件语句 / boolean);\n\n\n1\n2\n3\n * 区别\n * while先判断再做,\n * do-while先做再判断；\n\nvar k = 0;\ndo {\n  sum += k;\n  k++;\n} while (k < 101);\nconsole.log(sum);\n\n\n1\n2\n3\n4\n5\n6\n# for 循环\nfor (initialize; test; increment) {\n  statement\n}\n\n// 循环数组\nfor( var i=0 ,len=arr.lenth; i<len; i++ ){\n// 执行语句\n}\n\n-------------------------------------\n//从1加到100 计数器思想\nvar sum = 0;\nfor(var i=0; i < 101 ; i++ ){\n    sum += i;\n}\nalert(sum);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * for in循环用来遍历一个对象的全部属性\n * for in它遍历的是对象所有可遍历(enumerable)的属性,会跳过不可遍历的属性\n * for in它不仅遍历对象自身的属性,还遍历继承的属性\n\n// name 是 Person 本身的属性\nfunction Person(name) {\n  this.name = name;\n}\n\n// describe是Person.prototype的属性\nPerson.prototype.describe = function() {\n  return "Name: " + this.name;\n};\n\nvar person = new Person("Jane");\n\n// for...in循环会遍历实例自身的属性(name),\n// 以及继承的属性(describe)\nfor (var key in person) {\n  console.log(key);\n}\n// name\n// describe\n\n//只想遍历对象本身的属性\nfor (var key in person) {\n  if (person.hasOwnProperty(key)) {\n    console.log(key);\n  }\n}\n// name\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# break 与 continue\n * break 终止循环\n * continue 跳出本次循环,进入下一次循环\n\n// break\nvar a = 0;\nwhile (a < 5) {\n  a++; //a = a + 1;\n  if (a == 3) {\n    break; //终止循环\n  }\n  console.log(a);\n}\nconsole.log("break is over");\n// 1 2 break is over\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n// continue\nvar a = 0;\nwhile (a < 5) {\n  a++; //a = a + 1;\n  if (a == 2) {\n    continue; //跳出本次循环,进入下一次循环\n  }\n  console.log(a);\n}\nconsole.log("continue is over");\n// 1 3 4 5 continue is over\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 使用 & 判断奇偶性\n7 & 1; // 1\n8 & 1; // 0\n\n\n1\n2\n# 使用 !! 将数字转为布尔值\nconsole.log(!!7); // true\nconsole.log(!!0); // false\nconsole.log(!!-1); // true\nconsole.log(!!0.71); // true\n\n\n1\n2\n3\n4\n# for in和for of的区别\n * 使用for in会遍历数组所有的可枚举属性，包括原型, 更适合遍历对象\n * for of遍历数组元素值',normalizedContent:' * 一元操作符 ++, -- + -\n   \n   \n * 逻辑操作符 ! && ||\n   \n   \n * 基本运算符 +, -, *, /, %(取余)\n   \n   \n * 关系操作符 >, <, >=, <=, ===, ==, !=, !==\n   \n   \n * 条件操作符 (三元运算符) ? :\n   \n   \n * 赋值运算符 +=, -=, *=, /=, %= ,=\n   \n   \n * 逗号运算符 ,\n   \n   \n * 圆括号运算符 ()\n   \n   \n * % 运算结果的正负号由第一个运算值的正负号决定\n   \n   true +1 //2\n   false +1 //1\n   \n   12%5  //2\n   -1 % 2 // -1\n   1 % -2 // 1\n   6%5； //1\n   3%5;  //3\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n * 注意:a++和++a 与 a--和--a 的区别\n   \n    * ++a; 先自增,后计算 var a=1; ++a // 2\n    * a++; 先运算,后自增 var b=1; b++ // 1\n    * --a; 先自减,后计算 var c=1; --c // 0\n    * a--; 先运算,后自减 var d=1; d-- // 1\n   \n   \n * js 浮点运算0.1\n   \n   \n\nvar x = 0.2 - 0.1; // 0.1\nvar y = 0.3 - 0.2; // 0.09999999999999998不等于0.1\nx == y; // false\n\n\n1\n2\n3\n# 位操作符\n * 按位与（and）\n\n对于每一个比特位，只有两个操作数相应的比特位都是 1 时，结果才为 1，否则为 0\n\na   b   a & b   \n0   0   0       \n0   1   0       \n1   0   0       \n1   1   1       \n\n1 & 2; // 0  => 0001 & 0010\n\n\n1\n * 按位或（or）\n\n对于每一个比特位，当两个操作数相应的比特位至少有一个 1 时，结果为 1，否则为 0\n\na   b   a | b   \n0   0   0       \n0   1   1       \n1   0   1       \n1   1   1       \n\n1 | 2; // 3 => 0001 | 0010\n\n\n1\n * 按位异或（xor）\n\n对于每一个比特位，当两个操作数相应的比特位有且只有一个 1 时，结果为 1，否则为 0\n\na   b   a ^ b   \n0   0   0       \n0   1   1       \n1   0   1       \n1   1   0       \n\n1 ^ 2; // 3 => 0001 ^ 0010\n\n\n1\n * 使用^来完成值交换\n\n// --- before ---\nlet temp = a;\na = b;\nb = temp; // 传统，但需要借助临时变量\nb = [a, (a = b)][0]; // 借助数组\n\n// --- after ---\nlet a = 7;\nlet b = 1;\na ^= b;\nb ^= a;\na ^= b;\nconsole.log(a); // 1\nconsole.log(b)[(a, b)] = [b, a]; // 7 // es6，解构赋值\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * 按位非（not）\n\n反转操作数的比特位，即 0 变成 1，1 变成 0\n\na   ~a   \n0   1    \n1   0    \n\n// 整数： ~x = -(x+1)\n~4; // -5\n~-10; // 9\n\n\n1\n2\n3\n * 左移（<<）\n\na << b 将 a 的二进制形式向左移 b (< 32) 比特位，右边用 0 填充\n\n1 << 2; // 4   => 0001 << 000100\n5 << 2; // 20  => 0101 << 010100\n\n\n1\n2\n * 有符号右移（>>）\n\na >> b 将 a 的二进制表示向右移 b (< 32) 位，丢弃被移出的位\n\n(4 >>\n  (2 - // 1\n    4)) >>\n  2; // -1\n\n\n1\n2\n3\n4\n * 无符号右移（>>>）\n\na >>> b 将 a 的二进制表示向右移 b (< 32) 位，丢弃被移出的位，并使用 0 在左侧填充\n\n(4 >>>\n  (2 - // 1\n    4)) >>>\n  2; // 1073741823\n\n\n1\n2\n3\n4\n# 逻辑运算符\n * && (并且) , || (或者) , ! (取反)\n * 逻辑运算符的优先级\n\n! > && > ||\n\n()>*,/ > +,-\n\n\n1\n2\n3\n# 比较运算符\n * > >= < <= == ===\n * 注意： === 与 == 的区别. * == 值 相等\n    * === 值 和类型都相等\n   \n   \n\nvar a = 1;\nvar b = "1";\na == b; // true\na === b; // false\n\n\n1\n2\n3\n4\n * 在代码中没有这样的形式：110>pj>100; 如果一定要表达这种形式：使用110 > pj && pj> 100\n\n# 赋值运算符\nx += y; // 等同于 x = x + y\nx -= y; // 等同于 x = x - y\nx *= y; // 等同于 x = x * y\nx /= y; // 等同于 x = x / y\nx %= y; // 等同于 x = x % y\nx >>= y; // 等同于 x = x >> y\nx <<= y; // 等同于 x = x << y\nx >>>= y; // 等同于 x = x >>> y\nx &= y; // 等同于 x = x & y\nx |= y; // 等同于 x = x | y\nx ^= y; // 等同于 x = x ^ y\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 逗号操作符\n * 对它的每个操作数求值（从左到右），并返回最后一个操作数的值\n\n"a", "b"; // "b"\n\nvar x = 10;\nvar y = (++x, 20);\nconsole.log(y, x); // 20 11\n\n\n1\n2\n3\n4\n5\n# void\nvoid对给定的表达式进行求值，然后返回 undefined\n\nvar x = 3;\nvoid x++; //undefined\nx; // 4\n\n\n1\n2\n3\n# 字符串的比较\n * 字符串按照字典顺序进行比较\n * 首先比较首字符的 unicode 码点,如果相等;\n * 再比较第二个字符的 unicode 码点,以此类推\n\n"cat" > "dog"; // false\n"cat" > "catalog"; // false\n"cat" > "cat"; // true\n"大" > "小"; // false\n\n\n1\n2\n3\n4\n# escape 与 unescape\nescape("大"); // "%u5927"\nunescape("%u5927"); // "大"\n\nconst escapehtml = str =>\n  str.replace(\n    /[&<>\'"]/g,\n    tag =>\n      ({\n        "&": "&amp;",\n        "<": "&lt;",\n        ">": "&gt;",\n        "\'": "&#39;",\n        \'"\': "&quot;"\n      }[tag] || tag)\n  );\n\nconst unescapehtml = str =>\n  str.replace(\n    /&amp;|&lt;|&gt;|&#39;|&quot;/g,\n    tag =>\n      ({\n        "&amp;": "&",\n        "&lt;": "<",\n        "&gt;": ">",\n        "&#39;": "\'",\n        "&quot;": \'"\'\n      }[tag] || tag)\n  );\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# nan\n * nan是 javascript 的特殊值,表示"非数字"(not a number)\n\ntypeof nan; // \'number\'\nnan == nan; // flase\nnan ===\n  nan[nan].indexof(nan); //false // -1\nboolean(nan); // false\nnumber.isnan(nan); // true\n\n\n1\n2\n3\n4\n5\n6\n * nan与任何数(包括它自己)的运算,得到的都是nan\n * 判断 nan 的方法\n\n//isnan方法可以用来判断一个值是否为nan\n//isnan只对数值有效,如果传入其他值,会被先转成数值\nisnan(nan); // true\nisnan(123); // false\nisnan({}); // true\nisnan("hello"); // true\nisnan(["xzy"]); // true\n\n//对于空数组和只有一个数值成员的数组,isnan返回false\nisnan([]); // false\nisnan([123]); // false\nisnan(["123"]); // false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# if else\nif (condition) {\n} else {\n}\n\nif (条件 / boolean) {\n  代码块1;\n} else if (条件 / boolean) {\n  代码块2;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# switch case\nswitch (变量){\n\tcase 变量的值1:\n\t\t// 代码块1;\n\t\tbreak;\n\tcase 变量的值2:\n\t\t// 代码块2;\n\t\tbreak;\n\t.....\n\tdefault:\n\t\t// 默认代码块;\n\t\tbreak;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 三元运算符/三目运算符\n * boolean表达式 ? 操作一:操作二;\n * (condition) ? expr1 : expr2\n * 如果 condition 为true,则返回 expr1 的值,否则返回 expr2 的值\n\nvar a = 16;\nvar b = 15;\nvar c = 24;\n//让a和b进行比较,找出大的,再用大的跟c比较\n(a > b ? a : b) > c ? alert(a > b ? a : b) : alert(c);\n\n\n1\n2\n3\n4\n5\n# 循环语句\n# while 循环\n * 当程序运行到 while 的时候,会判断 while 后面括号中的内容,\n * 如果内容为 true,会执行下面的代码,\n * 如果为内容为 false,则不执行这段代码,跳过这段代码执行下面的内容.\n\nwhile(条件语句/boolean)｛\n\t\t//重复执行的代码块\n｝\n\n\n1\n2\n3\n * 如果在写循环的时候一定要有循环的结束条件,如果没有就是死循环,就是一 bug.\n * 终止循环：break\n * 立即结束本次循环,开始下一次循环：continue\n\nvar a = 1;\nwhile(a <= 100) {\n  console.log(a);\n  a ++;//a = a + 1;\n}\nconsole.log("over");\n\n// el : element dom\nfunction node2fragment(el) {\n  var fragment = document.createdocumentfragment(),\n      child;\n  // 将原生节点拷贝到fragment\n  while (child = el.firstchild) {\n      fragment.appendchild(child);\n  }\n  return fragment;\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# do while\n代码从上到下执行的过程中如果遇到了 do 就会先执行一次 do 后面的代码,执行之后再 通过while来进行判断,如果判断通过那么再执行一次, 如果判断不通过却结束循环.\n\ndo {\n  //要循环执行的代码块\n} while (条件语句 / boolean);\n\n\n1\n2\n3\n * 区别\n * while先判断再做,\n * do-while先做再判断；\n\nvar k = 0;\ndo {\n  sum += k;\n  k++;\n} while (k < 101);\nconsole.log(sum);\n\n\n1\n2\n3\n4\n5\n6\n# for 循环\nfor (initialize; test; increment) {\n  statement\n}\n\n// 循环数组\nfor( var i=0 ,len=arr.lenth; i<len; i++ ){\n// 执行语句\n}\n\n-------------------------------------\n//从1加到100 计数器思想\nvar sum = 0;\nfor(var i=0; i < 101 ; i++ ){\n    sum += i;\n}\nalert(sum);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * for in循环用来遍历一个对象的全部属性\n * for in它遍历的是对象所有可遍历(enumerable)的属性,会跳过不可遍历的属性\n * for in它不仅遍历对象自身的属性,还遍历继承的属性\n\n// name 是 person 本身的属性\nfunction person(name) {\n  this.name = name;\n}\n\n// describe是person.prototype的属性\nperson.prototype.describe = function() {\n  return "name: " + this.name;\n};\n\nvar person = new person("jane");\n\n// for...in循环会遍历实例自身的属性(name),\n// 以及继承的属性(describe)\nfor (var key in person) {\n  console.log(key);\n}\n// name\n// describe\n\n//只想遍历对象本身的属性\nfor (var key in person) {\n  if (person.hasownproperty(key)) {\n    console.log(key);\n  }\n}\n// name\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# break 与 continue\n * break 终止循环\n * continue 跳出本次循环,进入下一次循环\n\n// break\nvar a = 0;\nwhile (a < 5) {\n  a++; //a = a + 1;\n  if (a == 3) {\n    break; //终止循环\n  }\n  console.log(a);\n}\nconsole.log("break is over");\n// 1 2 break is over\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n// continue\nvar a = 0;\nwhile (a < 5) {\n  a++; //a = a + 1;\n  if (a == 2) {\n    continue; //跳出本次循环,进入下一次循环\n  }\n  console.log(a);\n}\nconsole.log("continue is over");\n// 1 3 4 5 continue is over\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 使用 & 判断奇偶性\n7 & 1; // 1\n8 & 1; // 0\n\n\n1\n2\n# 使用 !! 将数字转为布尔值\nconsole.log(!!7); // true\nconsole.log(!!0); // false\nconsole.log(!!-1); // true\nconsole.log(!!0.71); // true\n\n\n1\n2\n3\n4\n# for in和for of的区别\n * 使用for in会遍历数组所有的可枚举属性，包括原型, 更适合遍历对象\n * for of遍历数组元素值',charsets:{cjk:!0}},{title:"regexp正则",frontmatter:{title:"regexp正则",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["regexp"],readingShow:"top"},regularPath:"/js/regExp.html",relativePath:"js/regExp.md",key:"v-25a66a6a",path:"/js/regExp.html",headers:[{level:2,title:"正则对象的属性和方法",slug:"正则对象的属性和方法",normalizedTitle:"正则对象的属性和方法",charIndex:124},{level:2,title:"ignoreCase",slug:"ignorecase",normalizedTitle:"ignorecase",charIndex:138},{level:3,title:"global",slug:"global",normalizedTitle:"global",charIndex:180},{level:3,title:"multiline",slug:"multiline",normalizedTitle:"multiline",charIndex:218},{level:3,title:"test",slug:"test",normalizedTitle:"test",charIndex:540},{level:3,title:"exec",slug:"exec",normalizedTitle:"exec",charIndex:877},{level:3,title:"match",slug:"match",normalizedTitle:"match",charIndex:1371},{level:3,title:"search",slug:"search",normalizedTitle:"search",charIndex:1513},{level:3,title:"replace",slug:"replace",normalizedTitle:"replace",charIndex:1634},{level:3,title:"split",slug:"split",normalizedTitle:"split",charIndex:2515},{level:3,title:"组匹配",slug:"组匹配",normalizedTitle:"组匹配",charIndex:2588},{level:3,title:"修饰符",slug:"修饰符",normalizedTitle:"修饰符",charIndex:167},{level:3,title:"贪婪模式",slug:"贪婪模式",normalizedTitle:"贪婪模式",charIndex:4120},{level:3,title:"量词符",slug:"量词符",normalizedTitle:"量词符",charIndex:4243},{level:3,title:"预定义模式",slug:"预定义模式",normalizedTitle:"预定义模式",charIndex:4691},{level:3,title:"字面量字符和元字符",slug:"字面量字符和元字符",normalizedTitle:"字面量字符和元字符",charIndex:5004},{level:2,title:"正则 regExp",slug:"正则-regexp",normalizedTitle:"正则 regexp",charIndex:5066},{level:3,title:"匹配规则",slug:"匹配规则",normalizedTitle:"匹配规则",charIndex:4155},{level:2,title:"正则表达式表达式收集",slug:"正则表达式表达式收集",normalizedTitle:"正则表达式表达式收集",charIndex:6124},{level:2,title:"校验数字的表达式",slug:"校验数字的表达式",normalizedTitle:"校验数字的表达式",charIndex:6263},{level:2,title:"校验字符的表达式",slug:"校验字符的表达式",normalizedTitle:"校验字符的表达式",charIndex:6793},{level:2,title:"特殊需求表达式",slug:"特殊需求表达式",normalizedTitle:"特殊需求表达式",charIndex:7306},{level:2,title:"相关资料",slug:"相关资料",normalizedTitle:"相关资料",charIndex:8717}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"正则对象的属性和方法 ignoreCase global multiline test exec match search replace split 组匹配 修饰符 贪婪模式 量词符 预定义模式 字面量字符和元字符 正则 regExp 匹配规则 正则表达式表达式收集 校验数字的表达式 校验字符的表达式 特殊需求表达式 相关资料",content:'\n\n * MDN/RegExp\n\n * 构造函数定义 var regex = new RegExp(/表达式/);\n * 直接量定义 var regex = /表达式/;\n * () 表示一组\n * [] 表示一个\n * {} 用来修饰次数\n\n# 正则对象的属性和方法\n * ignoreCase：返回一个布尔值,表示是否设置了 i 修饰符,该属性只读\n * global：返回一个布尔值,表示是否设置了 g 修饰符,该属性只读\n * multiline：返回一个布尔值,表示是否设置了 m 修饰符,该属性只读\n * lastIndex：返回下一次开始搜索的位置,该属性可读写,但是只在设置了g修饰符时有意义\n * source：返回正则表达式的字符串形式(不包括反斜杠),该属性只读\n\n# ignoreCase\n * RegExp.prototype.ignoreCase\n * 返回一个布尔值，表示是否设置了i修饰符\n\n# global\n * RegExp.prototype.global\n * 返回一个布尔值，表示是否设置了g修饰符\n\n# multiline\n * RegExp.prototype.multiline\n * 返回一个布尔值，表示是否设置了m修饰符\n\n# test\n * RegExp.prototype.test()\n * 返回一个布尔值，表示当前模式是否能匹配参数字符串\n * regex.test(string)\n * 正则对象的test方法返回一个布尔值,表示当前模式是否能匹配参数字符串\n * 如果正则表达式带有g修饰符,则每一次 test 方法都从上一次结束的位置开始向后匹配\n\n/cat/.test("cats and dogs"); // true\n\nvar r = /x/g;\nvar s = "_x_x";\n\nr.lastIndex; // 0\nr.test(s); // true\n\nr.lastIndex; // 2\nr.test(s); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# exec\n * RegExp.prototype.exec()\n * 发现匹配，返回数组; 否则返回null\n * 正则对象的exec方法,可以返回匹配结果\n * 如果发现匹配,就返回一个数组,成员是每一个匹配成功的子字符串,否则返回null\n * exec方法,返回一个数组.第一个成员是整个匹配的结果,第二个成员是圆括号匹配的结果\n\nvar s = "_x_x";\nvar r1 = /x/;\nvar r2 = /y/;\n\nr1.exec(s); // ["x"]\nr2.exec(s); // null\n\n\n1\n2\n3\n4\n5\n6\n * exec方法的返回数组还包含以下两个属性： * input：整个原字符串\n    * index：整个模式匹配成功的开始位置(从 0 开始计数)\n   \n   \n\nvar r = /a(b+)a/;\nvar arr = r.exec("_abbba_aba_");\n\narr; // ["abbba", "bbb"]\n\narr.index; // 1\narr.input; // "_abbba_aba_"\n\n\n1\n2\n3\n4\n5\n6\n7\n# match\n * string.match(regex)\n * 对字符串进行正则匹配,返回匹配结果\n\nvar s = "abba";\nvar r = /a/g;\n\ns.match(r); // ["a", "a"]\nr.exec(s); // ["a"]\n\n\n1\n2\n3\n4\n5\n# search\n * 返回第一个满足条件的匹配结果在整个字符串中的位置,如果没有任何匹配,则返回-1\n\nvar r = /x/g;\nr.lastIndex = 2; // 无效\n"_x_x".search(r); // 1\n\n\n1\n2\n3\n# replace\n * str.replace(search, replacement)\n\n"aaa".replace("a", "b"); // "baa"\n"aaa".replace(/a/g, "b"); // "bbb"\nvar str = "  #id div.class  ";\n\nstr.replace(/^\\s+|\\s+$/g, "");\n// "#id div.class"\n\n\n1\n2\n3\n4\n5\n6\n * replace 方法的第二个参数可以使用美元符号$,用来指代所替换的内容 * $& 指代匹配的子字符串\n    * $ 指代匹配结果前面的文本\n    * $\' 指代匹配结果后面的文本\n    * $n 指代匹配成功的第 n 组内容,n 是从1开始的自然数\n    * $$ 指代美元符号$\n   \n   \n\n"hello world".replace(/(\\w+)\\s(\\w+)/, "$2 $1");\n// "world hello"\n\n"abc".replace("b", "[$`-$&-$\']");\n// "a[a-b-c]c"\n\n\n1\n2\n3\n4\n5\n * replace 方法的第二个参数还可以是一个函数,将每一个匹配内容替换为函数返回值\n\n"3 and 5".replace(/[0-9]+/g, function(match) {\n  return 2 * match;\n});\n// "6 and 10"\n\nvar a = "The quick brown fox jumped over the lazy dog.";\nvar pattern = /quick|brown|lazy/gi;\n\na.replace(pattern, function replacer(match) {\n  return match.toUpperCase();\n});\n// The QUICK BROWN fox jumped over the LAZY dog.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# split\n * str.split(separator, [limit])\n * 第一个参数是分隔规则,第二个参数是返回数组的最大成员数\n\n# 组匹配\n * 正则表达式的括号表示分组匹配\n * 括号中的模式可以用来匹配分组的内容\n\n/fred+/.test("fredd") / // true\n  fred +\n  /.test(\'fredfred\') / / true;\n\n\n1\n2\n3\n * 用\\n引用括号匹配的内容,n 是从 1 开始的自然数,表示对应顺序的括号\n\n// \\1表示前一个括号匹配的内容("a"),\\2表示第二个括号匹配的内容("b")\n/(.)b(.)\\1b\\2/.test("abcabc")\n\n// \\1指向外层括号,\\2指向内层括号\n/y((..)\\2)\\1/.test(\'yabababab\') // true\n\n//匹配网页标签\nvar tagName = /<([^>]+)>[^<]*<\\/\\1>/;\ntagName.exec("<b>bold</b>")[1]\n// \'b\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 非捕获组 (?:x)称为非捕获组(Non-capturing group),表示不返回该组匹配的内容,即匹配的结果中不计入这个括号\n\n// 正常匹配\nvar url = /(http|ftp):\\/\\/([^/\\r\\n]+)(\\/[^\\r\\n]*)?/;\nurl.exec("http://google.com/");\n// ["http://google.com/", "http", "google.com", "/"]\n\n// 非捕获组匹配\nvar url = /(?:http|ftp):\\/\\/([^/\\r\\n]+)(\\/[^\\r\\n]*)?/;\nurl.exec("http://google.com/");\n// ["http://google.com/", "google.com", "/"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 先行断言x(?=y)称为先行断言(Positive look-ahead), x 只有在 y 前面才匹配,y 不会被计入返回结果\n\nvar m = \'abc\'.match(/b(?=c)/);\nm // ["b"]\n/Jack (?=Sprat|Frost)/.test(\'Jack Frost\') // true\n\n\n1\n2\n3\n * 先行否定断言 x(?!y)称为先行否定断言(Negative look-ahead), x 只有不在 y 前面才匹配,y 不会被计入返回结果\n\n/\\d+(?!\\.)/.exec("3.14");\n// ["14"]\n\nvar m = "abd".match(/abd(?!c)/);\nm; // [\'abd\']\n\n\n1\n2\n3\n4\n5\n# 修饰符\n * 修饰符 修饰符(modifier)表示模式的附加规则,放在正则模式的最尾部\n * g 修饰符, 全局匹配\n * i 修饰符, 忽略大小写\n * m 修饰符, 多行模式\n\nvar regex = /b/g;\nvar str = \'abba\';\n\nregex.test(str); // true\nregex.test(str); // true\nregex.test(str); // false\n\n/abc/.test(\'ABC\') // false\n/abc/i.test(\'ABC\') // true\n\n/world$/.test(\'hello world\\n\') // false\n/world$/m.test(\'hello world\\n\') // true\n/^b/m.test(\'a\\nb\') // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 贪婪模式\n * 默认情况下都是最大可能匹配,即匹配直到下一个字符不满足匹配规则为止\n * *?：表示某个模式出现0次或多次，匹配时采用非贪婪模式\n * +?：表示某个模式出现1次或多次，匹配时采用非贪婪模式\n * 将贪婪模式改为非贪婪模式,可以在量词符后面加一个问号\n\nvar s = "aaa";\ns.match(/a+/); // ["aaa"]\n\nvar s = "aaa";\ns.match(/a+?/); // ["a"]\n\n\n1\n2\n3\n4\n5\n# 量词符\n * 量词符用来设定某个模式出现的次数\n * ? 问号表示某个模式出现0次或1次，等同于{0, 1}\n * * 星号表示某个模式出现0次或多次，等同于{0,}\n * + 加号表示某个模式出现1次或多次，等同于{1,}\n * \\ 转义符 * 正则模式中,需要用斜杠转义的字符：^、.、[、$、(、)、|、*、+、?、{、\\\\\n    * 使用 RegExp 方法生成正则对象,转义需要使用两个斜杠,因为字符串内部会先转义一次\n   \n   \n\n/11|22/.test(\'911\') // true\n\n/1\\+1/.test(\'1+1\')  // true\n\n(new RegExp(\'1\\\\+1\')).test(\'1+1\')  // true\n\n\n1\n2\n3\n4\n5\n# 预定义模式\n * · [^\\n\\r] 除了换行,回车,行分隔符(\\u2028)和段分隔符(\\u2029)之外的任意字符\n * \\d, 匹配0-9之间的任一数字 相当于[0-9]\n * \\D, 匹配所有0-9以外的字符 相当于[^0-9]\n * \\w, 匹配任意的字母、数字和下划线 相当于[A-Za-z0-9_]\n * \\W, 除所有字母、数字和下划线以外的字符 相当于[^A-Za-z0-9_]\n * \\s, 匹配空格（包括换行符、制表符、空格符等）相等于[\\t\\r\\n\\v\\f]\n * \\S, 匹配非空格的字符 相当于[^\\t\\r\\n\\v\\f]\n * \\b, 匹配词的边界\n * \\B, 匹配非词边界，即在词的内部\n\n# 字面量字符和元字符\n * ^ 表示字符串的开始位置\n * $ 表示字符串的结束位置\n * | 表示“或关系”（OR）\n\n# 正则 regExp\n# 匹配规则\n * 定义模式 * 精确匹配次数,使用大括号{}表示\n    * {n} 表示恰好重复 n 次\n    * {n,} 表示至少重复 n 次\n    * {n,m}表示重复不少于 n 次,不多于 m 次\n   \n   \n\n/lo{2}k/.test(\'look\') // true\n/lo{2,5}k/.test(\'looook\') // true\n\nconsole.log(/^(chuan)*$/.test("chuanchuan"));\n// ()表示一组 []表示一个 {}用来修饰次数\n//  汉字：[\\u4e00-\\u9fa5]\n// 中文转unicode可以用escape()方法\nescape(\'你\')        // "%u4F60"\nunescape(\'\\u9fa5\')  //"龥"\n\n// unicode转中文\nhttp://tool.chinaz.com/Tools/Unicode.aspx\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 特殊字符\n\n\\cX 表示Ctrl-[X],其中的X是A-Z之中任一个英文字母,用来匹配控制字符\n[\\b] 匹配退格键\n\\n 匹配换行键\n\\r 匹配回车键\n\\t 匹配制表符tab\n\\v 匹配垂直制表符\n\\f 匹配换页符\n\\0 匹配null字符\n\\xhh 匹配一个以两位十六进制数(\\x00-\\xFF)表示的字符\n\\uhhhh 匹配一个以四位十六进制数(\\u0000-\\uFFFF)表示的unicode字符\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 字符类 表示有一系列字符可选择,只要匹配其中一个就可以\n\n/[abc]/.test(\'hello world\') // false\n/[abc]/.test(\'apple\') // true\n\n\n1\n2\n * 脱字符(^) * 方括号内的第一个字符是[^],表示除了字符类之中的字符,其他字符都可以匹配\n    * 如果方括号内没有其他字符,即只有[^],就表示匹配一切字符,其中包括换行符,而点号(.)是不包括换行符的\n   \n   \n\n/[^abc]/.test(\'hello world\') // true\n/[^abc]/.test(\'bbc\') // false\n\n\n1\n2\n * 连字符(-) 连续序列的字符,连字符(-)用来提供简写形式,表示字符的连续范围\n\n/[a-z]/.test("b"); // true\n\n\n1\n# 正则表达式表达式收集\nvar exp = new RegExp("^[0-9]*$");\nexp.test(\'abc1\')  // false\nexp.test(\'1\')  // true\n/^[0-9]*$/g.test(\'231\') // true\n\n\n1\n2\n3\n4\n# 校验数字的表达式\n数字：^[0-9]*$\n\nn位的数字：^\\d{n}$\n\n至少n位的数字：^\\d{n,}$\n\nm-n位的数字：^\\d{m,n}$\n\n零和非零开头的数字：^(0|[1-9][0-9]*)$\n\n非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]{1,2})?$\n\n带1-2位小数的正数或负数：^(\\-)?\\d+(\\.\\d{1,2})?$\n\n正数、负数、和小数：^(\\-|\\+)?\\d+(\\.\\d+)?$\n\n有两位小数的正实数：^[0-9]+(.[0-9]{2})?$\n\n有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$\n\n非零的正整数：^[1-9]\\d*$ 或 ^([1-9][0-9]*){1,3}$ 或 ^\\+?[1-9][0-9]*$\n\n非零的负整数：^\\-[1-9][]0-9"*$ 或 ^-[1-9]\\d*$\n\n非负整数：^\\d+$ 或 ^[1-9]\\d*|0$\n\n非正整数：^-[1-9]\\d*|0$ 或 ^((-\\d+)|(0+))$\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 校验字符的表达式\n汉字：^[\\u4e00-\\u9fa5]{0,}$\n\n英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$\n\n长度为3-20的所有字符：^.{3,20}$\n\n由26个英文字母组成的字符串：^[A-Za-z]+$\n\n由26个大写英文字母组成的字符串：^[A-Z]+$\n\n由26个小写英文字母组成的字符串：^[a-z]+$\n\n由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$\n\n由数字、26个英文字母或者下划线组成的字符串：^\\w+$ 或 ^\\w{3,20}$\n\n中文、英文、数字包括下划线：^[\\u4E00-\\u9FA5A-Za-z0-9_]+$\n\n中文、英文、数字但不包括下划线等符号：^[\\u4E00-\\u9FA5A-Za-z0-9]+$ 或 ^[\\u4E00-\\u9FA5A-Za-z0-9]{2,20}$\n\n可以输入含有^%&\',;=?$\\"等字符：[^%&\',;=?$\\x22]+\n\n禁止输入含有~的字符：[^~\\x22]+\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 特殊需求表达式\nEmail地址：^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$\n\n域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?\n\nInternetURL：[a-zA-z]+://[^\\s]* 或 ^http://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&=]*)?$\n\n手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$\n\n电话号码("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)：^(\\(\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$\n\n国内电话号码(0511-4405222、021-87888822)：\\d{3}-\\d{8}|\\d{4}-\\d{7}\n\n身份证号(15位、18位数字)：^\\d{15}|\\d{18}$\n\n短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$\n\n帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$\n\n密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\\w{5,17}$\n\n强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$\n\n日期格式：^\\d{4}-\\d{1,2}-\\d{1,2}\n\n一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$\n\n一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$\n\nxml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\\\.[x|X][m|M][l|L]$\n\n中文字符的正则表达式：[\\u4e00-\\u9fa5]\n\n双字节字符：[^\\x00-\\xff]\n\n空白行的正则表达式：\\n\\s*\\r\n\nHTML标记的正则表达式：<(\\S*?)[^>]*>.*?</\\1>|<.*? />\n\n首尾空白字符的正则表达式：^\\s*|\\s*$或(^\\s*)|(\\s*$)\n\n腾讯QQ号：[1-9][0-9]{4,}\n\n中国邮政编码：[1-9]\\d{5}(?!\\d)\n\nIP地址：\\d+\\.\\d+\\.\\d+\\.\\d+\n\n密码：/^[A-Z]{6,18}|[a-z]{6,18}|[0-9]{6,18}$/  只有数字或者字母\n\n/^([a-z].*[A-Z])|([A-Z].*[a-z])/   有大小写的字母\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n# 相关资料\n * JS 正则表达式完整教程（略长）\n * 2019 年 JS 正则大全(常用)',normalizedContent:'\n\n * mdn/regexp\n\n * 构造函数定义 var regex = new regexp(/表达式/);\n * 直接量定义 var regex = /表达式/;\n * () 表示一组\n * [] 表示一个\n * {} 用来修饰次数\n\n# 正则对象的属性和方法\n * ignorecase：返回一个布尔值,表示是否设置了 i 修饰符,该属性只读\n * global：返回一个布尔值,表示是否设置了 g 修饰符,该属性只读\n * multiline：返回一个布尔值,表示是否设置了 m 修饰符,该属性只读\n * lastindex：返回下一次开始搜索的位置,该属性可读写,但是只在设置了g修饰符时有意义\n * source：返回正则表达式的字符串形式(不包括反斜杠),该属性只读\n\n# ignorecase\n * regexp.prototype.ignorecase\n * 返回一个布尔值，表示是否设置了i修饰符\n\n# global\n * regexp.prototype.global\n * 返回一个布尔值，表示是否设置了g修饰符\n\n# multiline\n * regexp.prototype.multiline\n * 返回一个布尔值，表示是否设置了m修饰符\n\n# test\n * regexp.prototype.test()\n * 返回一个布尔值，表示当前模式是否能匹配参数字符串\n * regex.test(string)\n * 正则对象的test方法返回一个布尔值,表示当前模式是否能匹配参数字符串\n * 如果正则表达式带有g修饰符,则每一次 test 方法都从上一次结束的位置开始向后匹配\n\n/cat/.test("cats and dogs"); // true\n\nvar r = /x/g;\nvar s = "_x_x";\n\nr.lastindex; // 0\nr.test(s); // true\n\nr.lastindex; // 2\nr.test(s); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# exec\n * regexp.prototype.exec()\n * 发现匹配，返回数组; 否则返回null\n * 正则对象的exec方法,可以返回匹配结果\n * 如果发现匹配,就返回一个数组,成员是每一个匹配成功的子字符串,否则返回null\n * exec方法,返回一个数组.第一个成员是整个匹配的结果,第二个成员是圆括号匹配的结果\n\nvar s = "_x_x";\nvar r1 = /x/;\nvar r2 = /y/;\n\nr1.exec(s); // ["x"]\nr2.exec(s); // null\n\n\n1\n2\n3\n4\n5\n6\n * exec方法的返回数组还包含以下两个属性： * input：整个原字符串\n    * index：整个模式匹配成功的开始位置(从 0 开始计数)\n   \n   \n\nvar r = /a(b+)a/;\nvar arr = r.exec("_abbba_aba_");\n\narr; // ["abbba", "bbb"]\n\narr.index; // 1\narr.input; // "_abbba_aba_"\n\n\n1\n2\n3\n4\n5\n6\n7\n# match\n * string.match(regex)\n * 对字符串进行正则匹配,返回匹配结果\n\nvar s = "abba";\nvar r = /a/g;\n\ns.match(r); // ["a", "a"]\nr.exec(s); // ["a"]\n\n\n1\n2\n3\n4\n5\n# search\n * 返回第一个满足条件的匹配结果在整个字符串中的位置,如果没有任何匹配,则返回-1\n\nvar r = /x/g;\nr.lastindex = 2; // 无效\n"_x_x".search(r); // 1\n\n\n1\n2\n3\n# replace\n * str.replace(search, replacement)\n\n"aaa".replace("a", "b"); // "baa"\n"aaa".replace(/a/g, "b"); // "bbb"\nvar str = "  #id div.class  ";\n\nstr.replace(/^\\s+|\\s+$/g, "");\n// "#id div.class"\n\n\n1\n2\n3\n4\n5\n6\n * replace 方法的第二个参数可以使用美元符号$,用来指代所替换的内容 * $& 指代匹配的子字符串\n    * $ 指代匹配结果前面的文本\n    * $\' 指代匹配结果后面的文本\n    * $n 指代匹配成功的第 n 组内容,n 是从1开始的自然数\n    * $$ 指代美元符号$\n   \n   \n\n"hello world".replace(/(\\w+)\\s(\\w+)/, "$2 $1");\n// "world hello"\n\n"abc".replace("b", "[$`-$&-$\']");\n// "a[a-b-c]c"\n\n\n1\n2\n3\n4\n5\n * replace 方法的第二个参数还可以是一个函数,将每一个匹配内容替换为函数返回值\n\n"3 and 5".replace(/[0-9]+/g, function(match) {\n  return 2 * match;\n});\n// "6 and 10"\n\nvar a = "the quick brown fox jumped over the lazy dog.";\nvar pattern = /quick|brown|lazy/gi;\n\na.replace(pattern, function replacer(match) {\n  return match.touppercase();\n});\n// the quick brown fox jumped over the lazy dog.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# split\n * str.split(separator, [limit])\n * 第一个参数是分隔规则,第二个参数是返回数组的最大成员数\n\n# 组匹配\n * 正则表达式的括号表示分组匹配\n * 括号中的模式可以用来匹配分组的内容\n\n/fred+/.test("fredd") / // true\n  fred +\n  /.test(\'fredfred\') / / true;\n\n\n1\n2\n3\n * 用\\n引用括号匹配的内容,n 是从 1 开始的自然数,表示对应顺序的括号\n\n// \\1表示前一个括号匹配的内容("a"),\\2表示第二个括号匹配的内容("b")\n/(.)b(.)\\1b\\2/.test("abcabc")\n\n// \\1指向外层括号,\\2指向内层括号\n/y((..)\\2)\\1/.test(\'yabababab\') // true\n\n//匹配网页标签\nvar tagname = /<([^>]+)>[^<]*<\\/\\1>/;\ntagname.exec("<b>bold</b>")[1]\n// \'b\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 非捕获组 (?:x)称为非捕获组(non-capturing group),表示不返回该组匹配的内容,即匹配的结果中不计入这个括号\n\n// 正常匹配\nvar url = /(http|ftp):\\/\\/([^/\\r\\n]+)(\\/[^\\r\\n]*)?/;\nurl.exec("http://google.com/");\n// ["http://google.com/", "http", "google.com", "/"]\n\n// 非捕获组匹配\nvar url = /(?:http|ftp):\\/\\/([^/\\r\\n]+)(\\/[^\\r\\n]*)?/;\nurl.exec("http://google.com/");\n// ["http://google.com/", "google.com", "/"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 先行断言x(?=y)称为先行断言(positive look-ahead), x 只有在 y 前面才匹配,y 不会被计入返回结果\n\nvar m = \'abc\'.match(/b(?=c)/);\nm // ["b"]\n/jack (?=sprat|frost)/.test(\'jack frost\') // true\n\n\n1\n2\n3\n * 先行否定断言 x(?!y)称为先行否定断言(negative look-ahead), x 只有不在 y 前面才匹配,y 不会被计入返回结果\n\n/\\d+(?!\\.)/.exec("3.14");\n// ["14"]\n\nvar m = "abd".match(/abd(?!c)/);\nm; // [\'abd\']\n\n\n1\n2\n3\n4\n5\n# 修饰符\n * 修饰符 修饰符(modifier)表示模式的附加规则,放在正则模式的最尾部\n * g 修饰符, 全局匹配\n * i 修饰符, 忽略大小写\n * m 修饰符, 多行模式\n\nvar regex = /b/g;\nvar str = \'abba\';\n\nregex.test(str); // true\nregex.test(str); // true\nregex.test(str); // false\n\n/abc/.test(\'abc\') // false\n/abc/i.test(\'abc\') // true\n\n/world$/.test(\'hello world\\n\') // false\n/world$/m.test(\'hello world\\n\') // true\n/^b/m.test(\'a\\nb\') // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 贪婪模式\n * 默认情况下都是最大可能匹配,即匹配直到下一个字符不满足匹配规则为止\n * *?：表示某个模式出现0次或多次，匹配时采用非贪婪模式\n * +?：表示某个模式出现1次或多次，匹配时采用非贪婪模式\n * 将贪婪模式改为非贪婪模式,可以在量词符后面加一个问号\n\nvar s = "aaa";\ns.match(/a+/); // ["aaa"]\n\nvar s = "aaa";\ns.match(/a+?/); // ["a"]\n\n\n1\n2\n3\n4\n5\n# 量词符\n * 量词符用来设定某个模式出现的次数\n * ? 问号表示某个模式出现0次或1次，等同于{0, 1}\n * * 星号表示某个模式出现0次或多次，等同于{0,}\n * + 加号表示某个模式出现1次或多次，等同于{1,}\n * \\ 转义符 * 正则模式中,需要用斜杠转义的字符：^、.、[、$、(、)、|、*、+、?、{、\\\\\n    * 使用 regexp 方法生成正则对象,转义需要使用两个斜杠,因为字符串内部会先转义一次\n   \n   \n\n/11|22/.test(\'911\') // true\n\n/1\\+1/.test(\'1+1\')  // true\n\n(new regexp(\'1\\\\+1\')).test(\'1+1\')  // true\n\n\n1\n2\n3\n4\n5\n# 预定义模式\n * · [^\\n\\r] 除了换行,回车,行分隔符(\\u2028)和段分隔符(\\u2029)之外的任意字符\n * \\d, 匹配0-9之间的任一数字 相当于[0-9]\n * \\d, 匹配所有0-9以外的字符 相当于[^0-9]\n * \\w, 匹配任意的字母、数字和下划线 相当于[a-za-z0-9_]\n * \\w, 除所有字母、数字和下划线以外的字符 相当于[^a-za-z0-9_]\n * \\s, 匹配空格（包括换行符、制表符、空格符等）相等于[\\t\\r\\n\\v\\f]\n * \\s, 匹配非空格的字符 相当于[^\\t\\r\\n\\v\\f]\n * \\b, 匹配词的边界\n * \\b, 匹配非词边界，即在词的内部\n\n# 字面量字符和元字符\n * ^ 表示字符串的开始位置\n * $ 表示字符串的结束位置\n * | 表示“或关系”（or）\n\n# 正则 regexp\n# 匹配规则\n * 定义模式 * 精确匹配次数,使用大括号{}表示\n    * {n} 表示恰好重复 n 次\n    * {n,} 表示至少重复 n 次\n    * {n,m}表示重复不少于 n 次,不多于 m 次\n   \n   \n\n/lo{2}k/.test(\'look\') // true\n/lo{2,5}k/.test(\'looook\') // true\n\nconsole.log(/^(chuan)*$/.test("chuanchuan"));\n// ()表示一组 []表示一个 {}用来修饰次数\n//  汉字：[\\u4e00-\\u9fa5]\n// 中文转unicode可以用escape()方法\nescape(\'你\')        // "%u4f60"\nunescape(\'\\u9fa5\')  //"龥"\n\n// unicode转中文\nhttp://tool.chinaz.com/tools/unicode.aspx\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 特殊字符\n\n\\cx 表示ctrl-[x],其中的x是a-z之中任一个英文字母,用来匹配控制字符\n[\\b] 匹配退格键\n\\n 匹配换行键\n\\r 匹配回车键\n\\t 匹配制表符tab\n\\v 匹配垂直制表符\n\\f 匹配换页符\n\\0 匹配null字符\n\\xhh 匹配一个以两位十六进制数(\\x00-\\xff)表示的字符\n\\uhhhh 匹配一个以四位十六进制数(\\u0000-\\uffff)表示的unicode字符\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 字符类 表示有一系列字符可选择,只要匹配其中一个就可以\n\n/[abc]/.test(\'hello world\') // false\n/[abc]/.test(\'apple\') // true\n\n\n1\n2\n * 脱字符(^) * 方括号内的第一个字符是[^],表示除了字符类之中的字符,其他字符都可以匹配\n    * 如果方括号内没有其他字符,即只有[^],就表示匹配一切字符,其中包括换行符,而点号(.)是不包括换行符的\n   \n   \n\n/[^abc]/.test(\'hello world\') // true\n/[^abc]/.test(\'bbc\') // false\n\n\n1\n2\n * 连字符(-) 连续序列的字符,连字符(-)用来提供简写形式,表示字符的连续范围\n\n/[a-z]/.test("b"); // true\n\n\n1\n# 正则表达式表达式收集\nvar exp = new regexp("^[0-9]*$");\nexp.test(\'abc1\')  // false\nexp.test(\'1\')  // true\n/^[0-9]*$/g.test(\'231\') // true\n\n\n1\n2\n3\n4\n# 校验数字的表达式\n数字：^[0-9]*$\n\nn位的数字：^\\d{n}$\n\n至少n位的数字：^\\d{n,}$\n\nm-n位的数字：^\\d{m,n}$\n\n零和非零开头的数字：^(0|[1-9][0-9]*)$\n\n非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]{1,2})?$\n\n带1-2位小数的正数或负数：^(\\-)?\\d+(\\.\\d{1,2})?$\n\n正数、负数、和小数：^(\\-|\\+)?\\d+(\\.\\d+)?$\n\n有两位小数的正实数：^[0-9]+(.[0-9]{2})?$\n\n有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$\n\n非零的正整数：^[1-9]\\d*$ 或 ^([1-9][0-9]*){1,3}$ 或 ^\\+?[1-9][0-9]*$\n\n非零的负整数：^\\-[1-9][]0-9"*$ 或 ^-[1-9]\\d*$\n\n非负整数：^\\d+$ 或 ^[1-9]\\d*|0$\n\n非正整数：^-[1-9]\\d*|0$ 或 ^((-\\d+)|(0+))$\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 校验字符的表达式\n汉字：^[\\u4e00-\\u9fa5]{0,}$\n\n英文和数字：^[a-za-z0-9]+$ 或 ^[a-za-z0-9]{4,40}$\n\n长度为3-20的所有字符：^.{3,20}$\n\n由26个英文字母组成的字符串：^[a-za-z]+$\n\n由26个大写英文字母组成的字符串：^[a-z]+$\n\n由26个小写英文字母组成的字符串：^[a-z]+$\n\n由数字和26个英文字母组成的字符串：^[a-za-z0-9]+$\n\n由数字、26个英文字母或者下划线组成的字符串：^\\w+$ 或 ^\\w{3,20}$\n\n中文、英文、数字包括下划线：^[\\u4e00-\\u9fa5a-za-z0-9_]+$\n\n中文、英文、数字但不包括下划线等符号：^[\\u4e00-\\u9fa5a-za-z0-9]+$ 或 ^[\\u4e00-\\u9fa5a-za-z0-9]{2,20}$\n\n可以输入含有^%&\',;=?$\\"等字符：[^%&\',;=?$\\x22]+\n\n禁止输入含有~的字符：[^~\\x22]+\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 特殊需求表达式\nemail地址：^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$\n\n域名：[a-za-z0-9][-a-za-z0-9]{0,62}(/.[a-za-z0-9][-a-za-z0-9]{0,62})+/.?\n\ninterneturl：[a-za-z]+://[^\\s]* 或 ^http://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&=]*)?$\n\n手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$\n\n电话号码("xxx-xxxxxxx"、"xxxx-xxxxxxxx"、"xxx-xxxxxxx"、"xxx-xxxxxxxx"、"xxxxxxx"和"xxxxxxxx)：^(\\(\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$\n\n国内电话号码(0511-4405222、021-87888822)：\\d{3}-\\d{8}|\\d{4}-\\d{7}\n\n身份证号(15位、18位数字)：^\\d{15}|\\d{18}$\n\n短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|x)?$ 或 ^\\d{8,18}|[0-9x]{8,18}|[0-9x]{8,18}?$\n\n帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-za-z][a-za-z0-9_]{4,15}$\n\n密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-za-z]\\w{5,17}$\n\n强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.*\\d)(?=.*[a-z])(?=.*[a-z]).{8,10}$\n\n日期格式：^\\d{4}-\\d{1,2}-\\d{1,2}\n\n一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$\n\n一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$\n\nxml文件：^([a-za-z]+-?)+[a-za-z0-9]+\\\\.[x|x][m|m][l|l]$\n\n中文字符的正则表达式：[\\u4e00-\\u9fa5]\n\n双字节字符：[^\\x00-\\xff]\n\n空白行的正则表达式：\\n\\s*\\r\n\nhtml标记的正则表达式：<(\\s*?)[^>]*>.*?</\\1>|<.*? />\n\n首尾空白字符的正则表达式：^\\s*|\\s*$或(^\\s*)|(\\s*$)\n\n腾讯qq号：[1-9][0-9]{4,}\n\n中国邮政编码：[1-9]\\d{5}(?!\\d)\n\nip地址：\\d+\\.\\d+\\.\\d+\\.\\d+\n\n密码：/^[a-z]{6,18}|[a-z]{6,18}|[0-9]{6,18}$/  只有数字或者字母\n\n/^([a-z].*[a-z])|([a-z].*[a-z])/   有大小写的字母\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n# 相关资料\n * js 正则表达式完整教程（略长）\n * 2019 年 js 正则大全(常用)',charsets:{cjk:!0}},{title:"string字符串",frontmatter:{title:"string字符串",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["string"],readingShow:"top"},regularPath:"/js/string.html",relativePath:"js/string.md",key:"v-477b89cb",path:"/js/string.html",headers:[{level:2,title:"fromCharCode",slug:"fromcharcode",normalizedTitle:"fromcharcode",charIndex:16},{level:2,title:"charAt",slug:"charat",normalizedTitle:"charat",charIndex:159},{level:2,title:"charCodeAt",slug:"charcodeat",normalizedTitle:"charcodeat",charIndex:408},{level:2,title:"concat",slug:"concat",normalizedTitle:"concat",charIndex:604},{level:2,title:"slice",slug:"slice",normalizedTitle:"slice",charIndex:962},{level:2,title:"trim",slug:"trim",normalizedTitle:"trim",charIndex:1396},{level:2,title:"match",slug:"match",normalizedTitle:"match",charIndex:1928},{level:2,title:"search",slug:"search",normalizedTitle:"search",charIndex:2324},{level:2,title:"replace",slug:"replace",normalizedTitle:"replace",charIndex:2458},{level:2,title:"split",slug:"split",normalizedTitle:"split",charIndex:2636},{level:2,title:"toLowerCase",slug:"tolowercase",normalizedTitle:"tolowercase",charIndex:2935},{level:2,title:"toUpperCase",slug:"touppercase",normalizedTitle:"touppercase",charIndex:3062},{level:2,title:"indexOf",slug:"indexof",normalizedTitle:"indexof",charIndex:3202},{level:2,title:"lastIndexOf",slug:"lastindexof",normalizedTitle:"lastindexof",charIndex:3346},{level:2,title:"length",slug:"length",normalizedTitle:"length",charIndex:3507},{level:2,title:"Symbol.iterator",slug:"symbol-iterator",normalizedTitle:"symbol.iterator",charIndex:3587},{level:2,title:"字符串的扩展",slug:"字符串的扩展",normalizedTitle:"字符串的扩展",charIndex:4004},{level:2,title:"substr",slug:"substr",normalizedTitle:"substr",charIndex:2488},{level:2,title:"substring",slug:"substring",normalizedTitle:"substring",charIndex:4567},{level:2,title:"padStart",slug:"padstart",normalizedTitle:"padstart",charIndex:5452},{level:2,title:"padEnd",slug:"padend",normalizedTitle:"padend",charIndex:5723},{level:2,title:"startsWith",slug:"startswith",normalizedTitle:"startswith",charIndex:5942},{level:2,title:"endsWith",slug:"endswith",normalizedTitle:"endswith",charIndex:6239},{level:2,title:"repeat",slug:"repeat",normalizedTitle:"repeat",charIndex:6522},{level:2,title:"includes",slug:"includes",normalizedTitle:"includes",charIndex:6702},{level:2,title:"使用.link()创建链接",slug:"使用-link-创建链接",normalizedTitle:"使用.link()创建链接",charIndex:7053}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"fromCharCode charAt charCodeAt concat slice trim match search replace split toLowerCase toUpperCase indexOf lastIndexOf length Symbol.iterator 字符串的扩展 substr substring padStart padEnd startsWith endsWith repeat includes 使用.link()创建链接",content:'\n\nMDN/String\n\n# fromCharCode\n * String.fromCharCode(num1, ..., numN)\n * 一组序列数字，表示 Unicode 值\n * 返回值是这些码点组成的字符串\n\nString.fromCharCode(65, 66, 67); // "ABC"\n\n\n1\n# charAt\n * String.prototype.charAt()\n * 一个介于 0 和字符串长度减 1 之间的整数, 如果没有提供索引，charAt() 将使用 0\n * 从 0 开始编号的位置, 返回指定位置的字符\n * 参数为负数，或大于等于字符串的长度，charAt 返回空字符串\n\nvar anyString = "Brave new world";\nanyString.charAt(); // "B"\nanyString.charAt(0); // "B"\n\n\n1\n2\n3\n# charCodeAt\n * String.prototype.charCodeAt\n * 返回字符串指定位置的 Unicode 码点（十进制表示）\n\n"ABC".charCodeAt(0); // 65\n"ABC".charCodeAt(1); // 66\n"ABC".charCodeAt(2); // 67\n"ABC".charCodeAt(3); // NaN\n\n\n1\n2\n3\n4\n# concat\n * str.concat(string2, string3[, ..., stringN])\n * 连接两个字符串，返回一个新字符串，不改变原字符串\n * 参数不是字符串，concat 方法会将其先转为字符串，然后再连接\n\nvar hello = "Hello, ";\nhello.concat("Kevin", " have a nice day.");\n// "Hello, Kevin have a nice day."\n\nvar hello = "Hello, ";\nhello.concat("Kevin", " have a nice day.", ["A", "C"]);\n// "Hello, Kevin have a nice day.A,C"\n\n\n1\n2\n3\n4\n5\n6\n7\n# slice\n * String.prototype.slice(start, end)\n * 截取字符串, 不改变原字符串\n * 省略第二个参数，则表示子字符串一直到原字符串结束\n * 参数是负值，表示从结尾开始倒数计算的位置\n * 第一个参数大于第二个参数，slice 方法返回一个空字符串\n\nvar str1 = "The morning is upon us.";\nvar str2 = str1.slice(4, -2);\nstr2; // "morning is upon u"\nstr1; // "The morning is upon us."\n\nvar str = "The morning is upon us.";\nstr.slice(-3); //\'us.\'\nstr.slice(-3, -1); //\'us\'\nstr.slice(0, -1); //\'The morning is upon us\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# trim\n * String.prototype.trim()\n * 除字符串两端的空格，返回一个新字符串，不改变原字符串\n\nvar orig = "   foo  ";\norig.trim(); // \'foo\'\n\n\n1\n2\n * trimEnd() 方法从一个字符串的末端移除空白字符, trimRight() 是这个方法的别名\n\nvar greeting = "   Hello world!   ";\n\nconsole.log(greeting);\n//"   Hello world!   ";\n\nconsole.log(greeting.trimEnd());\n//"   Hello world!";\n\n\n1\n2\n3\n4\n5\n6\n7\n * trimStart() 方法从字符串的开头删除空格。trimLeft()是此方法的别名\n\nvar greeting = "   Hello world!   ";\n\nconsole.log(greeting);\n//"   Hello world!   ";\n\nconsole.log(greeting.trimStart());\n//"Hello world!   ";\n\n\n1\n2\n3\n4\n5\n6\n7\n# match\n * String.prototype.match()\n * 确定原字符串是否匹配某个字符串，返回一个数组\n * 没有, 则返回null\n\nvar str = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";\nvar regexp = /[A-E]/gi;\nvar matches_array = str.match(regexp);\n// ["A", "B", "C", "D", "E", "a", "b", "c", "d", "e"]\n\nvar str = "Hello, world!";\nvar res = str.match("!");\n// ["!", index: 12, input: "Hello, world!", groups: undefined]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# search\n * str.search(regexp)\n * 返回值为匹配的第一个位置\n * 没有, 则返回-1\n\nvar str = "Hello, world!";\nvar res = str.search("!");\nres; // 12\n\n\n1\n2\n3\n# replace\n * str.replace(regexp|substr, newSubStr|function)\n * 匹配替换匹配到的第一个字符串\n\nvar p = "Hello, world!";\nvar regex = /Hello/gi;\n\np.replace(regex, "Hi"); // "Hi, world!"\n\n\n1\n2\n3\n4\n# split\n * str.split([separator[, limit]])\n * 分割字符串，返回数组\n * 第二个参数，决定了返回数组的成员数\n\nvar p = "Hello, world!";\nvar res = p.split(" ");\nres; // ["Hello,", "world!"]\n\nvar myString = "Hello World. How are you doing?";\nvar splits = myString.split(" ", 3);\nsplits; // ["Hello", "World.", "How"]\n\n\n1\n2\n3\n4\n5\n6\n7\n# toLowerCase\n * str.toLowerCase()\n * 字符串全部转为小写，不改变原字符串\n\n"中文简体 zh-CN || zh-Hans".toLowerCase(); // "中文简体 zh-cn || zh-hans"\n\n\n1\n# toUpperCase\n * String.prototype.toUpperCase()\n * 字符串全部转为大写，不改变原字符串\n\n"中文简体 zh-CN || zh-Hans".toUpperCase(); // "中文简体 ZH-CN || ZH-HANS"\n\n\n1\n# indexOf\n * String.prototype.indexOf()\n * 返回字符第一次出现的位置，返回-1 表示不匹配\n\n"Blue Whale".indexOf("Blue"); // 0\n"Hello, world!".indexOf("o"); // 4\n\n\n1\n2\n# lastIndexOf\n * String.prototype.lastIndexOf()\n * 返回字符最后一次出现的位置，返回-1 表示不匹配\n\n"Blue Whale".lastIndexOf("Blue"); // 0\n"Hello, world!".lastIndexOf("o"); // 8\n\n\n1\n2\n# length\n * String.prototype.length\n * 返回字符串的长度\n\n"Blue Whale".length; // 10\n\n\n1\n# Symbol.iterator\n * [@@iterator]() 方法返回一个新的 Iterator 对象\n\nvar string = "A\\uD835\\uDC68";\nvar strIter = string[Symbol.iterator]();\nstrIter.next(); // {value: "A", done: false}\nstrIter.next(); // {value: "𝑨", done: false}\nstrIter.next(); // {value: undefined, done: true}\n\nvar string = "A\\uD835\\uDC68B\\uD835\\uDC69C\\uD835\\uDC6A";\nfor (var v of string) {\n  console.log(v); // A, 𝑨, B, 𝑩, C, 𝑪\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 字符串的扩展\n * 字符的 Unicode 表示法 (将码点放入大括号)\n\n"\\u0061"; // "a"\n"\\u20BB7"; // "₻7"\n"\\u{20BB7}"; // "𠮷"\n\n\n1\n2\n3\n# substr\n * str.substr(start[, length])\n * 返回一个字符串中从指定位置开始到指定字符数的字符\n\nvar str = "abcdefghij";\n\nconsole.log("(1,2): " + str.substr(1, 2)); // (1,2): bc\nconsole.log("(-3,2): " + str.substr(-3, 2)); // (-3,2): hi\nconsole.log("(-3): " + str.substr(-3)); // (-3): hij\nconsole.log("(1): " + str.substr(1)); // (1): bcdefghij\nconsole.log("(-20, 2): " + str.substr(-20, 2)); // (-20, 2): ab\nconsole.log("(20, 2): " + str.substr(20, 2)); // (20, 2):\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# substring\n * 如果 indexStart 等于 indexEnd，substring 返回一个空字符串\n * 如果省略 indexEnd，substring 提取字符一直到字符串末尾\n * 如果任一参数小于 0 或为 NaN，则被当作 0\n * 如果任一参数大于 stringName.length，则被当作 stringName.length\n * 如果 indexStart 大于 indexEnd，则 substring 的执行效果就像两个参数调换了一样\n\nvar anyString = "Mozilla";\n\n// 输出 "Moz"\nconsole.log(anyString.substring(0, 3));\nconsole.log(anyString.substring(3, 0));\nconsole.log(anyString.substring(3, -3));\nconsole.log(anyString.substring(3, NaN));\nconsole.log(anyString.substring(-2, 3));\nconsole.log(anyString.substring(NaN, 3));\n\n// 输出 "lla"\nconsole.log(anyString.substring(4, 7));\nconsole.log(anyString.substring(7, 4));\n\n// 输出 ""\nconsole.log(anyString.substring(4, 4));\n\n// 输出 "Mozill"\nconsole.log(anyString.substring(0, 6));\n\n// 输出 "Mozilla"\nconsole.log(anyString.substring(0, 7));\nconsole.log(anyString.substring(0, 10));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# padStart\n * str.padStart(targetLength [, padString])\n * 另一个字符串填充当前字符串\n\n"abc".padStart(10); // "       abc"\n"abc".padStart(10, "foo"); // "foofoofabc"\n"abc".padStart(6, "123465"); // "123abc"\n"abc".padStart(8, "0"); // "00000abc"\n"abc".padStart(1); // "abc"\n\n\n1\n2\n3\n4\n5\n# padEnd\n * str.padEnd(targetLength [, padString])\n * 用一个字符串填充当前字符串\n\n"abc".padEnd(10); // "abc       "\n"abc".padEnd(10, "foo"); // "abcfoofoof"\n"abc".padEnd(6, "123456"); // "abc123"\n"abc".padEnd(1); // "abc"\n\n\n1\n2\n3\n4\n# startsWith\n * str.startsWith(searchString [, position]);\n * 用来判断当前字符串是否是以另外一个给定的子字符串“开头”的，根据判断结果返回 true 或 false。\n\nvar str = "To be, or not to be, that is the question.";\n\nstr.startsWith("To be"); // true\nstr.startsWith("not to be"); // false\nstr.startsWith("not to be", 10); // true\n\n\n1\n2\n3\n4\n5\n# endsWith\n * str.endsWith(searchString [, position]);\n * 用来判断当前字符串是否是以另外一个给定的子字符串“结尾”的，根据判断结果返回 true 或 false。\n\nvar str = "To be, or not to be, that is the question.";\n\nstr.endsWith("question."); // true\nstr.endsWith("to be"); // false\nstr.endsWith("to be", 19); // true\n\n\n1\n2\n3\n4\n5\n# repeat\n * str.repeat(count)返回一个新字符串\n\n"abc".repeat(0); // ""\n"abc".repeat(1); // "abc"\n"abc".repeat(2); // "abcabc"\n"abc".repeat(3.5); // "abcabcabc" 参数count将会被自动转换成整数.\n\n\n1\n2\n3\n4\n# includes\n * 判断一个字符串是否包含另外一个字符串\n * 区分大小写\n\nvar str = "To be, or not to be, that is the question.";\n\nconsole.log(str.includes("To be")); // true\nconsole.log(str.includes("question")); // true\nconsole.log(str.includes("nonexistent")); // false\nconsole.log(str.includes("To be", 1)); // false\nconsole.log(str.includes("TO BE")); // false\n\n\n1\n2\n3\n4\n5\n6\n7\n# 使用.link()创建链接\nlet l = "google".link("www.google.com");\n// "<a href="www.google.com">google</a>"\n\n\n1\n2',normalizedContent:'\n\nmdn/string\n\n# fromcharcode\n * string.fromcharcode(num1, ..., numn)\n * 一组序列数字，表示 unicode 值\n * 返回值是这些码点组成的字符串\n\nstring.fromcharcode(65, 66, 67); // "abc"\n\n\n1\n# charat\n * string.prototype.charat()\n * 一个介于 0 和字符串长度减 1 之间的整数, 如果没有提供索引，charat() 将使用 0\n * 从 0 开始编号的位置, 返回指定位置的字符\n * 参数为负数，或大于等于字符串的长度，charat 返回空字符串\n\nvar anystring = "brave new world";\nanystring.charat(); // "b"\nanystring.charat(0); // "b"\n\n\n1\n2\n3\n# charcodeat\n * string.prototype.charcodeat\n * 返回字符串指定位置的 unicode 码点（十进制表示）\n\n"abc".charcodeat(0); // 65\n"abc".charcodeat(1); // 66\n"abc".charcodeat(2); // 67\n"abc".charcodeat(3); // nan\n\n\n1\n2\n3\n4\n# concat\n * str.concat(string2, string3[, ..., stringn])\n * 连接两个字符串，返回一个新字符串，不改变原字符串\n * 参数不是字符串，concat 方法会将其先转为字符串，然后再连接\n\nvar hello = "hello, ";\nhello.concat("kevin", " have a nice day.");\n// "hello, kevin have a nice day."\n\nvar hello = "hello, ";\nhello.concat("kevin", " have a nice day.", ["a", "c"]);\n// "hello, kevin have a nice day.a,c"\n\n\n1\n2\n3\n4\n5\n6\n7\n# slice\n * string.prototype.slice(start, end)\n * 截取字符串, 不改变原字符串\n * 省略第二个参数，则表示子字符串一直到原字符串结束\n * 参数是负值，表示从结尾开始倒数计算的位置\n * 第一个参数大于第二个参数，slice 方法返回一个空字符串\n\nvar str1 = "the morning is upon us.";\nvar str2 = str1.slice(4, -2);\nstr2; // "morning is upon u"\nstr1; // "the morning is upon us."\n\nvar str = "the morning is upon us.";\nstr.slice(-3); //\'us.\'\nstr.slice(-3, -1); //\'us\'\nstr.slice(0, -1); //\'the morning is upon us\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# trim\n * string.prototype.trim()\n * 除字符串两端的空格，返回一个新字符串，不改变原字符串\n\nvar orig = "   foo  ";\norig.trim(); // \'foo\'\n\n\n1\n2\n * trimend() 方法从一个字符串的末端移除空白字符, trimright() 是这个方法的别名\n\nvar greeting = "   hello world!   ";\n\nconsole.log(greeting);\n//"   hello world!   ";\n\nconsole.log(greeting.trimend());\n//"   hello world!";\n\n\n1\n2\n3\n4\n5\n6\n7\n * trimstart() 方法从字符串的开头删除空格。trimleft()是此方法的别名\n\nvar greeting = "   hello world!   ";\n\nconsole.log(greeting);\n//"   hello world!   ";\n\nconsole.log(greeting.trimstart());\n//"hello world!   ";\n\n\n1\n2\n3\n4\n5\n6\n7\n# match\n * string.prototype.match()\n * 确定原字符串是否匹配某个字符串，返回一个数组\n * 没有, 则返回null\n\nvar str = "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz";\nvar regexp = /[a-e]/gi;\nvar matches_array = str.match(regexp);\n// ["a", "b", "c", "d", "e", "a", "b", "c", "d", "e"]\n\nvar str = "hello, world!";\nvar res = str.match("!");\n// ["!", index: 12, input: "hello, world!", groups: undefined]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# search\n * str.search(regexp)\n * 返回值为匹配的第一个位置\n * 没有, 则返回-1\n\nvar str = "hello, world!";\nvar res = str.search("!");\nres; // 12\n\n\n1\n2\n3\n# replace\n * str.replace(regexp|substr, newsubstr|function)\n * 匹配替换匹配到的第一个字符串\n\nvar p = "hello, world!";\nvar regex = /hello/gi;\n\np.replace(regex, "hi"); // "hi, world!"\n\n\n1\n2\n3\n4\n# split\n * str.split([separator[, limit]])\n * 分割字符串，返回数组\n * 第二个参数，决定了返回数组的成员数\n\nvar p = "hello, world!";\nvar res = p.split(" ");\nres; // ["hello,", "world!"]\n\nvar mystring = "hello world. how are you doing?";\nvar splits = mystring.split(" ", 3);\nsplits; // ["hello", "world.", "how"]\n\n\n1\n2\n3\n4\n5\n6\n7\n# tolowercase\n * str.tolowercase()\n * 字符串全部转为小写，不改变原字符串\n\n"中文简体 zh-cn || zh-hans".tolowercase(); // "中文简体 zh-cn || zh-hans"\n\n\n1\n# touppercase\n * string.prototype.touppercase()\n * 字符串全部转为大写，不改变原字符串\n\n"中文简体 zh-cn || zh-hans".touppercase(); // "中文简体 zh-cn || zh-hans"\n\n\n1\n# indexof\n * string.prototype.indexof()\n * 返回字符第一次出现的位置，返回-1 表示不匹配\n\n"blue whale".indexof("blue"); // 0\n"hello, world!".indexof("o"); // 4\n\n\n1\n2\n# lastindexof\n * string.prototype.lastindexof()\n * 返回字符最后一次出现的位置，返回-1 表示不匹配\n\n"blue whale".lastindexof("blue"); // 0\n"hello, world!".lastindexof("o"); // 8\n\n\n1\n2\n# length\n * string.prototype.length\n * 返回字符串的长度\n\n"blue whale".length; // 10\n\n\n1\n# symbol.iterator\n * [@@iterator]() 方法返回一个新的 iterator 对象\n\nvar string = "a\\ud835\\udc68";\nvar striter = string[symbol.iterator]();\nstriter.next(); // {value: "a", done: false}\nstriter.next(); // {value: "𝑨", done: false}\nstriter.next(); // {value: undefined, done: true}\n\nvar string = "a\\ud835\\udc68b\\ud835\\udc69c\\ud835\\udc6a";\nfor (var v of string) {\n  console.log(v); // a, 𝑨, b, 𝑩, c, 𝑪\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 字符串的扩展\n * 字符的 unicode 表示法 (将码点放入大括号)\n\n"\\u0061"; // "a"\n"\\u20bb7"; // "₻7"\n"\\u{20bb7}"; // "𠮷"\n\n\n1\n2\n3\n# substr\n * str.substr(start[, length])\n * 返回一个字符串中从指定位置开始到指定字符数的字符\n\nvar str = "abcdefghij";\n\nconsole.log("(1,2): " + str.substr(1, 2)); // (1,2): bc\nconsole.log("(-3,2): " + str.substr(-3, 2)); // (-3,2): hi\nconsole.log("(-3): " + str.substr(-3)); // (-3): hij\nconsole.log("(1): " + str.substr(1)); // (1): bcdefghij\nconsole.log("(-20, 2): " + str.substr(-20, 2)); // (-20, 2): ab\nconsole.log("(20, 2): " + str.substr(20, 2)); // (20, 2):\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# substring\n * 如果 indexstart 等于 indexend，substring 返回一个空字符串\n * 如果省略 indexend，substring 提取字符一直到字符串末尾\n * 如果任一参数小于 0 或为 nan，则被当作 0\n * 如果任一参数大于 stringname.length，则被当作 stringname.length\n * 如果 indexstart 大于 indexend，则 substring 的执行效果就像两个参数调换了一样\n\nvar anystring = "mozilla";\n\n// 输出 "moz"\nconsole.log(anystring.substring(0, 3));\nconsole.log(anystring.substring(3, 0));\nconsole.log(anystring.substring(3, -3));\nconsole.log(anystring.substring(3, nan));\nconsole.log(anystring.substring(-2, 3));\nconsole.log(anystring.substring(nan, 3));\n\n// 输出 "lla"\nconsole.log(anystring.substring(4, 7));\nconsole.log(anystring.substring(7, 4));\n\n// 输出 ""\nconsole.log(anystring.substring(4, 4));\n\n// 输出 "mozill"\nconsole.log(anystring.substring(0, 6));\n\n// 输出 "mozilla"\nconsole.log(anystring.substring(0, 7));\nconsole.log(anystring.substring(0, 10));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# padstart\n * str.padstart(targetlength [, padstring])\n * 另一个字符串填充当前字符串\n\n"abc".padstart(10); // "       abc"\n"abc".padstart(10, "foo"); // "foofoofabc"\n"abc".padstart(6, "123465"); // "123abc"\n"abc".padstart(8, "0"); // "00000abc"\n"abc".padstart(1); // "abc"\n\n\n1\n2\n3\n4\n5\n# padend\n * str.padend(targetlength [, padstring])\n * 用一个字符串填充当前字符串\n\n"abc".padend(10); // "abc       "\n"abc".padend(10, "foo"); // "abcfoofoof"\n"abc".padend(6, "123456"); // "abc123"\n"abc".padend(1); // "abc"\n\n\n1\n2\n3\n4\n# startswith\n * str.startswith(searchstring [, position]);\n * 用来判断当前字符串是否是以另外一个给定的子字符串“开头”的，根据判断结果返回 true 或 false。\n\nvar str = "to be, or not to be, that is the question.";\n\nstr.startswith("to be"); // true\nstr.startswith("not to be"); // false\nstr.startswith("not to be", 10); // true\n\n\n1\n2\n3\n4\n5\n# endswith\n * str.endswith(searchstring [, position]);\n * 用来判断当前字符串是否是以另外一个给定的子字符串“结尾”的，根据判断结果返回 true 或 false。\n\nvar str = "to be, or not to be, that is the question.";\n\nstr.endswith("question."); // true\nstr.endswith("to be"); // false\nstr.endswith("to be", 19); // true\n\n\n1\n2\n3\n4\n5\n# repeat\n * str.repeat(count)返回一个新字符串\n\n"abc".repeat(0); // ""\n"abc".repeat(1); // "abc"\n"abc".repeat(2); // "abcabc"\n"abc".repeat(3.5); // "abcabcabc" 参数count将会被自动转换成整数.\n\n\n1\n2\n3\n4\n# includes\n * 判断一个字符串是否包含另外一个字符串\n * 区分大小写\n\nvar str = "to be, or not to be, that is the question.";\n\nconsole.log(str.includes("to be")); // true\nconsole.log(str.includes("question")); // true\nconsole.log(str.includes("nonexistent")); // false\nconsole.log(str.includes("to be", 1)); // false\nconsole.log(str.includes("to be")); // false\n\n\n1\n2\n3\n4\n5\n6\n7\n# 使用.link()创建链接\nlet l = "google".link("www.google.com");\n// "<a href="www.google.com">google</a>"\n\n\n1\n2',charsets:{cjk:!0}},{title:"js中的this使用",frontmatter:{title:"js中的this使用",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["this"],readingShow:"top"},regularPath:"/js/this.html",relativePath:"js/this.md",key:"v-71f3782b",path:"/js/this.html",headers:[{level:2,title:"全局环境",slug:"全局环境",normalizedTitle:"全局环境",charIndex:24},{level:2,title:"箭头函数中的 this",slug:"箭头函数中的-this",normalizedTitle:"箭头函数中的 this",charIndex:155},{level:2,title:"构造函数",slug:"构造函数",normalizedTitle:"构造函数",charIndex:849},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:1232},{level:2,title:"绑定 this 的方法",slug:"绑定-this-的方法",normalizedTitle:"绑定 this 的方法",charIndex:1781},{level:3,title:"参数为空、null和 undefined",slug:"参数为空、null和-undefined",normalizedTitle:"参数为空、null和 undefined",charIndex:2235},{level:3,title:"call、apply",slug:"call、apply",normalizedTitle:"call、apply",charIndex:3306},{level:3,title:"bind",slug:"bind",normalizedTitle:"bind",charIndex:2953},{level:2,title:"实现 call,apply,bind",slug:"实现-call-apply-bind",normalizedTitle:"实现 call,apply,bind",charIndex:4083},{level:3,title:"bind 兼容",slug:"bind-兼容",normalizedTitle:"bind 兼容",charIndex:4993},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:5733}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"全局环境 箭头函数中的 this 构造函数 使用 绑定 this 的方法 参数为空、null和 undefined call、apply bind 实现 call,apply,bind bind 兼容 相关链接",content:' * this 指向最后调用它的那个对象\n\n# 全局环境\n * 函数在全局环境中运行,那么this就是指顶层对象\n\nthis === window; // true\n\nfunction f() {\n  console.log(this === window); // true\n}\n\n\n1\n2\n3\n4\n5\n# 箭头函数中的 this\n箭头函数的 this 始终指向函数定义时的 this，而非执行时\n\n箭头函数中没有 this 绑定，必须通过查找作用域链来决定其值， 如果箭头函数被非箭头函数包含，则 this 绑定的是最近一层非箭头函数的 this， 否则，this 为 undefined\n\n * 代码 1\n\nvar name = "windows";\n\nvar a = {\n  name: "Cherry",\n\n  func1: function() {\n    console.log(this.name);\n  },\n\n  func2: function() {\n    setTimeout(() => {\n      this.func1();\n    }, 100);\n  }\n};\n\na.func2(); // Cherry\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * 代码 2\n\nvar name = "aaa";\n\nvar a = {\n  name: "Cherry",\n  func1: () => {\n    console.log(this.name); // aaa\n  },\n  func2: () => {\n    console.log(this); // widnow\n    this.func1(); // this.func1 is not a function\n  }\n};\n\na.func1();\na.func2();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 构造函数\n * 构造函数中的this,指的是实例对象\n\nvar Obj = function(p) {\n  this.p = p;\n};\n\nObj.prototype.m = function() {\n  console.log(this.constructor === Obj); // true\n  console.log(this instanceof Obj); // true\n  console.log(Obj.prototype.isPrototypeOf(this));\n  return this.p;\n};\nvar o = new Obj("Hello World!");\n\no.p; // "Hello World!"\no.m(); // "Hello World!"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 使用\n * 函数调用,this就代表全局对象\n\nvar x = 1;\nfunction test() {\n  console.log(this.x);\n}\ntest(); // 1\n\n\n1\n2\n3\n4\n5\n * 作为对象方法的调用,this 永远指向最后调用它的那个对象\n\nfunction test() {\n  console.log(this.x);\n}\n\nvar obj = {};\nobj.x = 1;\nobj.m = test;\n\nobj.m(); //\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 作为构造函数调用, this就指这个新对象\n\nfunction test() {\n  this.x = 1;\n}\n\nvar obj = new test();\nobj.x; // 1\n\n\n1\n2\n3\n4\n5\n6\n * apply调用, 改变this指向\n\nvar x = 0;\nfunction test() {\n  console.log(this.x);\n}\n\nvar obj = {};\nobj.x = 1;\nobj.m = test;\nobj.m.apply(); // 0\n\nobj.m.apply(obj); //1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 绑定 this 的方法\nfunction Fn(name) {\n  this.name = name;\n}\n\nFn.prototype.say = function() {\n  console.log("Fn,", this.name);\n};\n\nSub.prototype = Object.create(Fn.prototype);\nSub.prototype.constructor = Sub;\n\nfunction Sub(name) {\n  console.log(this);\n  Fn.call(this, name);\n}\n\n// Sub.prototype.say = function(){\n//   console.log(\'sub,\', this.name)\n// }\n\nvar sub = new Sub("js");\nsub.say(); // Fn,js\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# 参数为空、null和 undefined\n * call 参数为空、null和undefined,则默认传入全局对象\n\nvar n = 123;\nvar obj = { n: 456 };\nfunction a() {\n  console.log(Object.prototype.toString.call(this).slice(8, -1), this.n);\n}\n\na.call(); // Window , 123\na.call(null); // Window , 123\na.call(undefined); // Window , 123\na.call(window); // Window , 123\na.call(obj); // Object , 456\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * apply 参数为空、null和undefined,则默认传入全局对象\n\nvar n = 123;\nvar obj = { n: 456 };\nfunction a() {\n  console.log(Object.prototype.toString.call(this).slice(8, -1), this.n);\n}\n\na.apply(); // Window , 123\na.apply(null); // Window , 123\na.apply(undefined); // Window , 123\na.apply(window); // Window , 123\na.apply(obj); // Object , 456\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * bind 参数为空、null和undefined,则默认传入全局对象\n\nvar n = 123;\nvar obj = { n: 456 };\nfunction a() {\n  console.log(Object.prototype.toString.call(this).slice(8, -1), this.n);\n}\n\na.bind()(); // Window , 123\na.bind(null)(); // Window , 123\na.bind(undefined)(); // Window , 123\na.bind(window)(); // Window , 123\na.bind(obj)(); // Object , 456\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# call、apply\n * func.call(thisValue, arg1, arg2, ...)\n * func.apply(thisValue, [arg1, arg2, ...])\n * apply/call方法: 不仅会绑定函数执行时所在的对象,还会立即执行函数\n\nfunction add(a, b) {\n  console.log("add: ", a + b);\n}\n\nfunction fn() {}\n\nadd(5, 3); //8\n\nadd.call(this, 5, 3); //8\nadd.call(null, 5, 3); //8\n\nadd.call(fn, 5, 3); //8\nadd.apply(fn, [5, 3]); //8\n\nadd.bind(fn, 5, 3)(); //8\n\n//找出数组最大元素\nvar a = [10, 2, 4, 15, 9];\nMath.max.apply(null, a); //15\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# bind\n * function.prototype.bind()\n * 将函数体内的this绑定到某个对象,然后返回一个新函数\n * 第一个参数是null或undefined,等于将this绑定到全局对象\n * bind这个函数不会马上执行\n\nvar d = new Date();\nd.getTime();\nvar print = d.getTime;\nprint(); // Uncaught TypeError: this is not a Date object.\n\nvar print = d.getTime.bind(d);\nprint();\n\n\n1\n2\n3\n4\n5\n6\n7\n# 实现 call,apply,bind\n * 实现 call\n\nFunction.prototype.call2 = function (context = {}) {\n  context.fn = this;\n  let args = [...arguments].slice(1);\n  let result = context.fn(...args);\n  delete context.fn;\n  return result;\n}\nvar foo = {\n  value: 1\n}\nfunction bar(name, age) {\n  console.log(name)\n  console.log(age)\n  console.log(this.value);\n}\nbar.call2(foo, \'black\', \'18\') // black 18 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * 实现 apply\n\nFunction.prototype.apply2 = function (context = {}) {\n  context.fn = this\n  let result;\n  // 判断是否有第二个参数\n  if (arguments[1]) {\n    result = context.fn(...arguments[1])\n  } else {\n    result = context.fn()\n  }\n  delete context.fn\n  return result\n}\n\nvar foo = {\n  value: 1\n}\nfunction bar(name, age) {\n  console.log(name)\n  console.log(age)\n  console.log(this.value);\n}\nbar.apply2(foo, [\'black\', \'18\']) // black 18 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# bind 兼容\n// 原型链\nFunction.prototype.bind2 = function (obj) {\n  if (typeof this !== "function") {\n    throw new Error("context is not function");\n  }\n  var arg = Array.prototype.slice.call(arguments, 1);\n  var context = this;\n  var bound = function () {\n    context.apply(this instanceof context ? this : obj,\n      arg.concat(Array.prototype.slice.call(arguments)));\n  }\n  //这里需要一个寄生组合继承\n  var F = function () { }\n  F.prototype = context.prototype;\n  bound.prototype = new F();\n  return bound;\n}\n\nvar foo = {\n  value: 1\n}\nfunction bar(name, age) {\n  console.log(name)\n  console.log(age)\n  console.log(this.value);\n}\n\nbar.bind2(foo, \'black\', \'18\')() // black 18 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 相关链接\n * Javascript 的 this 用法\n * this、apply、call、bind',normalizedContent:' * this 指向最后调用它的那个对象\n\n# 全局环境\n * 函数在全局环境中运行,那么this就是指顶层对象\n\nthis === window; // true\n\nfunction f() {\n  console.log(this === window); // true\n}\n\n\n1\n2\n3\n4\n5\n# 箭头函数中的 this\n箭头函数的 this 始终指向函数定义时的 this，而非执行时\n\n箭头函数中没有 this 绑定，必须通过查找作用域链来决定其值， 如果箭头函数被非箭头函数包含，则 this 绑定的是最近一层非箭头函数的 this， 否则，this 为 undefined\n\n * 代码 1\n\nvar name = "windows";\n\nvar a = {\n  name: "cherry",\n\n  func1: function() {\n    console.log(this.name);\n  },\n\n  func2: function() {\n    settimeout(() => {\n      this.func1();\n    }, 100);\n  }\n};\n\na.func2(); // cherry\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * 代码 2\n\nvar name = "aaa";\n\nvar a = {\n  name: "cherry",\n  func1: () => {\n    console.log(this.name); // aaa\n  },\n  func2: () => {\n    console.log(this); // widnow\n    this.func1(); // this.func1 is not a function\n  }\n};\n\na.func1();\na.func2();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 构造函数\n * 构造函数中的this,指的是实例对象\n\nvar obj = function(p) {\n  this.p = p;\n};\n\nobj.prototype.m = function() {\n  console.log(this.constructor === obj); // true\n  console.log(this instanceof obj); // true\n  console.log(obj.prototype.isprototypeof(this));\n  return this.p;\n};\nvar o = new obj("hello world!");\n\no.p; // "hello world!"\no.m(); // "hello world!"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 使用\n * 函数调用,this就代表全局对象\n\nvar x = 1;\nfunction test() {\n  console.log(this.x);\n}\ntest(); // 1\n\n\n1\n2\n3\n4\n5\n * 作为对象方法的调用,this 永远指向最后调用它的那个对象\n\nfunction test() {\n  console.log(this.x);\n}\n\nvar obj = {};\nobj.x = 1;\nobj.m = test;\n\nobj.m(); //\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 作为构造函数调用, this就指这个新对象\n\nfunction test() {\n  this.x = 1;\n}\n\nvar obj = new test();\nobj.x; // 1\n\n\n1\n2\n3\n4\n5\n6\n * apply调用, 改变this指向\n\nvar x = 0;\nfunction test() {\n  console.log(this.x);\n}\n\nvar obj = {};\nobj.x = 1;\nobj.m = test;\nobj.m.apply(); // 0\n\nobj.m.apply(obj); //1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 绑定 this 的方法\nfunction fn(name) {\n  this.name = name;\n}\n\nfn.prototype.say = function() {\n  console.log("fn,", this.name);\n};\n\nsub.prototype = object.create(fn.prototype);\nsub.prototype.constructor = sub;\n\nfunction sub(name) {\n  console.log(this);\n  fn.call(this, name);\n}\n\n// sub.prototype.say = function(){\n//   console.log(\'sub,\', this.name)\n// }\n\nvar sub = new sub("js");\nsub.say(); // fn,js\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# 参数为空、null和 undefined\n * call 参数为空、null和undefined,则默认传入全局对象\n\nvar n = 123;\nvar obj = { n: 456 };\nfunction a() {\n  console.log(object.prototype.tostring.call(this).slice(8, -1), this.n);\n}\n\na.call(); // window , 123\na.call(null); // window , 123\na.call(undefined); // window , 123\na.call(window); // window , 123\na.call(obj); // object , 456\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * apply 参数为空、null和undefined,则默认传入全局对象\n\nvar n = 123;\nvar obj = { n: 456 };\nfunction a() {\n  console.log(object.prototype.tostring.call(this).slice(8, -1), this.n);\n}\n\na.apply(); // window , 123\na.apply(null); // window , 123\na.apply(undefined); // window , 123\na.apply(window); // window , 123\na.apply(obj); // object , 456\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * bind 参数为空、null和undefined,则默认传入全局对象\n\nvar n = 123;\nvar obj = { n: 456 };\nfunction a() {\n  console.log(object.prototype.tostring.call(this).slice(8, -1), this.n);\n}\n\na.bind()(); // window , 123\na.bind(null)(); // window , 123\na.bind(undefined)(); // window , 123\na.bind(window)(); // window , 123\na.bind(obj)(); // object , 456\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# call、apply\n * func.call(thisvalue, arg1, arg2, ...)\n * func.apply(thisvalue, [arg1, arg2, ...])\n * apply/call方法: 不仅会绑定函数执行时所在的对象,还会立即执行函数\n\nfunction add(a, b) {\n  console.log("add: ", a + b);\n}\n\nfunction fn() {}\n\nadd(5, 3); //8\n\nadd.call(this, 5, 3); //8\nadd.call(null, 5, 3); //8\n\nadd.call(fn, 5, 3); //8\nadd.apply(fn, [5, 3]); //8\n\nadd.bind(fn, 5, 3)(); //8\n\n//找出数组最大元素\nvar a = [10, 2, 4, 15, 9];\nmath.max.apply(null, a); //15\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# bind\n * function.prototype.bind()\n * 将函数体内的this绑定到某个对象,然后返回一个新函数\n * 第一个参数是null或undefined,等于将this绑定到全局对象\n * bind这个函数不会马上执行\n\nvar d = new date();\nd.gettime();\nvar print = d.gettime;\nprint(); // uncaught typeerror: this is not a date object.\n\nvar print = d.gettime.bind(d);\nprint();\n\n\n1\n2\n3\n4\n5\n6\n7\n# 实现 call,apply,bind\n * 实现 call\n\nfunction.prototype.call2 = function (context = {}) {\n  context.fn = this;\n  let args = [...arguments].slice(1);\n  let result = context.fn(...args);\n  delete context.fn;\n  return result;\n}\nvar foo = {\n  value: 1\n}\nfunction bar(name, age) {\n  console.log(name)\n  console.log(age)\n  console.log(this.value);\n}\nbar.call2(foo, \'black\', \'18\') // black 18 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * 实现 apply\n\nfunction.prototype.apply2 = function (context = {}) {\n  context.fn = this\n  let result;\n  // 判断是否有第二个参数\n  if (arguments[1]) {\n    result = context.fn(...arguments[1])\n  } else {\n    result = context.fn()\n  }\n  delete context.fn\n  return result\n}\n\nvar foo = {\n  value: 1\n}\nfunction bar(name, age) {\n  console.log(name)\n  console.log(age)\n  console.log(this.value);\n}\nbar.apply2(foo, [\'black\', \'18\']) // black 18 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# bind 兼容\n// 原型链\nfunction.prototype.bind2 = function (obj) {\n  if (typeof this !== "function") {\n    throw new error("context is not function");\n  }\n  var arg = array.prototype.slice.call(arguments, 1);\n  var context = this;\n  var bound = function () {\n    context.apply(this instanceof context ? this : obj,\n      arg.concat(array.prototype.slice.call(arguments)));\n  }\n  //这里需要一个寄生组合继承\n  var f = function () { }\n  f.prototype = context.prototype;\n  bound.prototype = new f();\n  return bound;\n}\n\nvar foo = {\n  value: 1\n}\nfunction bar(name, age) {\n  console.log(name)\n  console.log(age)\n  console.log(this.value);\n}\n\nbar.bind2(foo, \'black\', \'18\')() // black 18 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 相关链接\n * javascript 的 this 用法\n * this、apply、call、bind',charsets:{cjk:!0}},{title:"常见的函数算法2",frontmatter:{title:"常见的函数算法2",date:"2020-07-22T00:00:00.000Z",sidebar:"auto",tags:["工具函数"],categories:["libs"],readingShow:"top"},regularPath:"/libs/20200730.html",relativePath:"libs/20200730.md",key:"v-4e03900b",path:"/libs/20200730.html",headers:[{level:2,title:"简易克隆对象",slug:"简易克隆对象",normalizedTitle:"简易克隆对象",charIndex:2},{level:2,title:"formateMoney",slug:"formatemoney",normalizedTitle:"formatemoney",charIndex:218},{level:2,title:"formateNumber",slug:"formatenumber",normalizedTitle:"formatenumber",charIndex:510},{level:2,title:"二分查找",slug:"二分查找",normalizedTitle:"二分查找",charIndex:878},{level:2,title:"获取类名 ClassName",slug:"获取类名-classname",normalizedTitle:"获取类名 classname",charIndex:1375},{level:2,title:"动画 animate",slug:"动画-animate",normalizedTitle:"动画 animate",charIndex:2099},{level:2,title:"根据属性得到具体元素",slug:"根据属性得到具体元素",normalizedTitle:"根据属性得到具体元素",charIndex:5307},{level:2,title:"对象深度克隆",slug:"对象深度克隆",normalizedTitle:"对象深度克隆",charIndex:5616},{level:2,title:"other",slug:"other",normalizedTitle:"other",charIndex:7784},{level:2,title:"log",slug:"log",normalizedTitle:"log",charIndex:1295},{level:2,title:"cached",slug:"cached",normalizedTitle:"cached",charIndex:9483},{level:2,title:"UrlToObject",slug:"urltoobject",normalizedTitle:"urltoobject",charIndex:9825},{level:2,title:"hexToRGB",slug:"hextorgb",normalizedTitle:"hextorgb",charIndex:10485},{level:2,title:"toCamelCaseVar",slug:"tocamelcasevar",normalizedTitle:"tocamelcasevar",charIndex:11232},{level:2,title:"toChineseNum",slug:"tochinesenum",normalizedTitle:"tochinesenum",charIndex:11556},{level:2,title:"randomString",slug:"randomstring",normalizedTitle:"randomstring",charIndex:12560},{level:2,title:"如何避开 JavaScript 浮点数计算精度问题",slug:"如何避开-javascript-浮点数计算精度问题",normalizedTitle:"如何避开 javascript 浮点数计算精度问题",charIndex:13295},{level:2,title:"斐波那契数",slug:"斐波那契数",normalizedTitle:"斐波那契数",charIndex:17503},{level:2,title:"Promise",slug:"promise",normalizedTitle:"promise",charIndex:17983},{level:2,title:"监听数组变化",slug:"监听数组变化",normalizedTitle:"监听数组变化",charIndex:24578},{level:2,title:"最大公约数&最小公倍数",slug:"最大公约数-最小公倍数",normalizedTitle:"最大公约数&amp;最小公倍数",charIndex:null},{level:2,title:"验证是否为回文",slug:"验证是否为回文",normalizedTitle:"验证是否为回文",charIndex:25723},{level:2,title:"FIFO",slug:"fifo",normalizedTitle:"fifo",charIndex:26582},{level:2,title:"判断一个数是否为质数",slug:"判断一个数是否为质数",normalizedTitle:"判断一个数是否为质数",charIndex:27323},{level:2,title:"实现类 vue 的 filter 函数",slug:"实现类-vue-的-filter-函数",normalizedTitle:"实现类 vue 的 filter 函数",charIndex:27655},{level:2,title:"LRU",slug:"lru",normalizedTitle:"lru",charIndex:28337},{level:2,title:"字符串正则去重",slug:"字符串正则去重",normalizedTitle:"字符串正则去重",charIndex:30540},{level:2,title:"使用 Array 来重复字符",slug:"使用-array-来重复字符",normalizedTitle:"使用 array 来重复字符",charIndex:30730},{level:2,title:"使用 toString(16)取随机字符串",slug:"使用-tostring-16-取随机字符串",normalizedTitle:"使用 tostring(16)取随机字符串",charIndex:30992},{level:2,title:"使用setTimeout代替setInterval进行间歇调用",slug:"使用settimeout代替setinterval进行间歇调用",normalizedTitle:"使用settimeout代替setinterval进行间歇调用",charIndex:31075}],lastUpdated:"2021/1/5 上午8:30:03",headersStr:"简易克隆对象 formateMoney formateNumber 二分查找 获取类名 ClassName 动画 animate 根据属性得到具体元素 对象深度克隆 other log cached UrlToObject hexToRGB toCamelCaseVar toChineseNum randomString 如何避开 JavaScript 浮点数计算精度问题 斐波那契数 Promise 监听数组变化 最大公约数&最小公倍数 验证是否为回文 FIFO 判断一个数是否为质数 实现类 vue 的 filter 函数 LRU 字符串正则去重 使用 Array 来重复字符 使用 toString(16)取随机字符串 使用setTimeout代替setInterval进行间歇调用",content:'# 简易克隆对象\n//简易克隆对象\nfunction extend2(tag, source) {\n  for (var item in source) {\n    tag[item] = source[item];\n  }\n  return tag;\n}\n//\nJSON.parse(JSON.stringify(obj))\n//\nObject.create({}, obj)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# formateMoney\nconst formatMoney = function(num) {\n  if (num == "0") {\n    return "0.00";\n  }\n  if (num == undefined || num == "" || num == null) {\n    return "-";\n  }\n  return parseFloat(num)\n    .toFixed(2)\n    .replace(/\\d{1,3}(?=(\\d{3})+(\\.\\d*)?$)/g, "$&,");\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# formateNumber\nfunction formatNumber(num) {\n  let numStr = num + "";\n  let arr = num < 0 ? numStr.slice(1).split(".") : numStr.split(".");\n  let a = arr[0].split("");\n  for (let i = a.length - 3; i > 0; i = i - 3) {\n    a.splice(i, 0, ",");\n  }\n  let res = arr[1] ? a.join("") + "." + arr[1] : a.join("");\n  return num < 0 ? "-" + res : res;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 二分查找\n// 二分查找，前提是数组为有序数组, 返回索引值, O(㏒n)复杂度\nfunction binarySearch(target, arr) {\n  let start = 0;\n  let end = arr.length - 1;\n\n  while (start <= end) {\n    let mid = parseInt(start + (end - start) / 2);\n    if (target == arr[mid]) {\n      return mid;\n    } else if (target > arr[mid]) {\n      start = mid + 1;\n    } else {\n      end = mid - 1;\n    }\n  }\n  return -1;\n}\nlet arr = [1, 4, 6, 8, 9, 21, 45, 67, 98];\nconsole.log(binarySearch(67, arr));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 获取类名 ClassName\n//获取类名ClassName\nfunction getClassName(str) {\n  //为了火狐和谷歌及IE9-11\n  if (document.getElementsByClassName) {\n    return document.getElementsByClassName(str);\n  }\n  //获取所有标签节点(数组)\n  var allNodes = document.getElementsByTagName("*");\n  //定义数组(哪个标签满足我的需求，就把他push到arr中，最后返回)\n  var arr = [];\n  //遍历数组（所有标签的数组）\n  for (var i = 0; i < allNodes.length; i++) {\n    //把类名变成数组\n    var arrClassName = allNodes[i].className.split(" ");\n    //遍历数组中所有的元素（遍历数组中所有的元素用的）\n    for (var j = 0; j < arrClassName.length; j++) {\n      //在判断，如果Class属性值是传过来的值。放进数组。\n      if (arrClassName[j] == str) {\n        arr.push(aarrClassName[j]);\n      }\n    }\n  }\n  return arr;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# 动画 animate\n * 简易版\n\n//动画animate\nfunction animateOne(ele, target) {\n  //清理定时器\n  clearInterval(ele.timer);\n  ele.timer = setInterval(function () {\n    var step = 9;\n    //如果对象的位置在目标的左边 往右走 step是正数\n    //如果对象的位置在目标的右边 往左走 step是负数\n    //对象的位置在目标的左边 ele.offsetLeft<target\n    step = ele.offsetLeft < target ? step : -step;\n    //终点检测 对象到目标的距离 > step的距离 就要继续走\n    if (Math.abs(ele.offsetLeft - target) > Math.abs(step)) {\n      ele.style.left = ele.offsetLeft + step + "px";\n    } else {\n      //距有可能 离终点还有一点点距离 我们手动把他放置到终点位置\n      ele.style.left = target + "px";\n      clearInterval(ele.timer);\n    }\n  }, 30)\n}\n\n// animate 缓动动画\nfunction animate(obj, target) {\n  clearInterval(obj.timer);\n  obj.timer = setInterval(function () {\n    var leader = obj.offsetLeft;\n    var step = (target - leader) / 10;\n    step = step > 0 ? Math.ceil(step) : Math.floor(step);\n    obj.style.left = obj.offsetLeft + step + "px";\n    if (leader == target) {\n      clearInterval(obj.timer);\n    }\n  }, 25)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * animate\n\n//animate fn回调\nfunction animateTwo(obj, json, fn) {\n  clearInterval(obj.timer);\n  obj.timer = setInterval(function () {\n    var flag = true;\n    for (var k in json) {\n      var target = json[k];\n      var leader = parseInt(getStyle(obj, k));\n      var step = (target - leader) / 10;\n      step = step > 0 ? Math.ceil(step) : Math.floor(step);\n      leader = leader + step;\n      obj.style[k] = leader + "px";\n      if (leader != target) {\n        flag = false;\n      }\n    }\n    if (flag) {\n      clearInterval(obj.timer);\n      if (fn) {\n        //alert(fn);\n        fn();\n      }\n    }\n  }, 30)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n * animate 多属性动画\n\n//fn为回调函数\n//{attr:target,attr:target}\nfunction animate(obj, json, fn) {\n  clearInterval(obj.timer);\n  obj.timer = setInterval(function () {\n    var flag = true;\n    for (var attr in json) {\n      //step = (target-leader)/10\n      //leader = leader + step\n      if (attr == "opacity") {\n        var target = json[attr] * 100;\n        var leader = Math.round(parseInt(getStyle(obj, attr || "filter") * 100)) || 100;\n      } else {\n        var target = json[attr];\n        var leader = parseInt(getStyle(obj, attr));\n      }\n      var step = (target - leader) / 10;\n      step = step > 0 ? Math.ceil(step) : Math.floor(step);\n      leader = leader + step;\n      //obj.style.left = leader + "px";\n      //obj.style["left"] = leader + "px";\n      if (attr == "opacity") {\n        obj.style.opacity = leader / 100;\n        obj.style.filter = "alpha(opacity=" + leader + ")";\n        //filter:alpha(opacity=x);\n      } else if (attr == "zIndex") {\n        obj.style.zIndex = attr;\n      } else {\n        obj.style[attr] = leader + "px";\n      }\n      /*if (leader == target) {\n       clearInterval(obj.timer);\n       }*/\n      if (leader != target) {\n        flag = false;\n      }\n    }\n    if (flag) {\n      clearInterval(obj.timer);\n      //alert(fn);\n      if (fn) {\n        fn();\n      }\n    }\n  }, 30)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n# 根据属性得到具体元素\n// 根据属性得到具体元素\nfunction atrGetEle(ele, attr, value) {\n  var aElements = document.getElementsByTagName(ele);\n  var aEle = [];\n  for (var i = 0; i < aElements.length; i++) {\n    if (aElements[i].getAttribute(attr) == value)\n      aEle.push(aElements[i]);\n  }\n  return aEle;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 对象深度克隆\n// 对象数组的深拷贝\nvar objDeepCopy = function (source) {\n  var sourceCopy = source instanceof Array ? [] : {};\n  for (var item in source) {\n    sourceCopy[item] = typeof source[item] === \'object\' ? objDeepCopy(source[item]) : source[item];\n  }\n  return sourceCopy;\n}\n\nfunction isObject(obj) {\n  return Object.prototype.toString.call(obj) == "[object Object]"\n}\n\nvar objDeepCopy = function (obj) {\n  if (!isObject(obj)) return obj;\n  if (typeof window !== \'undefined\' && window.JSON) { // 浏览器环境下 并支持window.JSON 则使用 JSON\n    return JSON.parse(JSON.stringify(obj));\n  } else {\n    var newObj = obj.constructor === Array ? [] : {};\n    for (var key in obj) {\n      newObj[key] = typeof obj[key] === \'object\' ? deepCopy(obj[key]) : obj[key];\n    }\n    return newObj;\n  }\n}\n\nconst deepClone = function (target) {\n  if (typeof target !== \'object\') {\n    throw new TypeError(\'arguments must be a Object!\')\n  }\n  // 已经访问过的对象集合\n  const visitedObjs = []\n  // 克隆的对象集合\n  const clonedObjs = []\n  const clone = function (source) {\n    if (visitedObjs.indexOf(source) === -1) { // 这里是判断该原对象是否被访问过\n      visitedObjs.push(source) // 放入数组中\n      const obj = {} // 创建一个待克隆的新对象\n      // 设置原型\n      const prototype = Reflect.getPrototypeOf(source)\n      Reflect.setPrototypeOf(obj, prototype)\n      clonedObjs.push(obj); // 将其置入克隆对象集合中\n      // 设置属性\n      Reflect.ownKeys(source).forEach((key) => {\n        const value = source[key]\n        try {\n          const Constructor = Reflect.getPrototypeOf(value).constructor\n          if (Constructor === Date || Constructor === RegExp) {\n            obj[key] = new Constructor(value.valueOf())\n          } else {\n            obj[key] = clone(value) // 此处不能再递归调用 deepClone，而是要改为 clone 方法\n          }\n        } catch (e) {\n          obj[key] = value\n        }\n      })\n      return obj\n    } else {\n      // 如果该对象已经被访问过了，则直接从克隆对象中返回。返回的对象的索引是 source 在 visitedObjs 中的索引位置。\n      return clonedObjs[visitedObjs.indexOf(source)]\n    }\n  }\n  return clone(target)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n# other\nvar calendarLink = {\n  // 插入script标签\n  createSrc: function (url) {\n    var scrEle = document.createElement("script");\n    scrEle.src = url;\n    document.body.appendChild(scrEle);\n  },\n  // 插入样式表\n  createStyle: function (url) {\n    var scrEle = document.createElement("link");\n    scrEle.rel = "stylesheet";\n    scrEle.href = url;\n    document.head.appendChild(scrEle);\n  },\n  on: function (url) {\n    if (!url) {\n      return false;\n    }\n    if (window.addEventListener)\n      window.addEventListener("load", this.createSrc.bind(this, url), false);\n    else if (window.attachEvent)\n      window.attachEvent("onload", this.createSrc.bind(this, url));\n    else window.onload = this.createSrc.bind(this, url);\n  },\n  removeDom: function () {\n    var reSrc = document.querySelector(\'#appendEle\');\n    reSrc.parentNode.removeChild(reSrc);\n  },\n}\n\n\n//\nFunction.prototype.before = function (beforefn) {\n  let _self = this; // 缓存原函数的引用\n  return function () { // 代理函数\n    beforefn.apply(this, arguments); // 执行前置函数\n    return _self.apply(this, arguments); // 执行原函数\n  }\n}\n\nFunction.prototype.after = function (afterfn) {\n  let _self = this;\n  return function () {\n    let set = _self.apply(this, arguments);\n    afterfn.apply(this, arguments);\n    return set;\n  }\n}\n\nlet func = () => console.log(\'func\');\nfunc = func.before(() => {\n  console.log(\'===before===\');\n}).after(() => {\n  console.log(\'===after===\');\n});\n\nfunc();\n// ===before===\n// func\n// ===after===\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n# log\nconst log = (type) => console.log.bind(console, type);\n\n\n1\n# cached\nfunction cached(fn) {\n  const cache = Object.create(null)\n  return function cachedFn(str) {\n    if (!cache[str]) {\n      cache[str] = fn(str)\n    }\n    return cache[str]\n  }\n}\n// test\nvar cachedComputed = cached(computed)\ncachedComputed(\'ss\')\n// 打印2000s have passed\ncachedComputed(\'ss\')\n// 不再打印\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# UrlToObject\nfunction serilizeUrl(url) {\n  var urlObject = {}\n  if (/\\?/.test(url)) {\n    var urlString = url.substring(url.indexOf(\'?\') + 1)\n    console.log(urlString)\n    var urlArray = urlString.split(\'&\')\n    for (var i = 0, len = urlArray.length; i < len; i++) {\n      var urlItem = urlArray[i]\n      console.log(urlItem)\n      var item = urlItem.split(\'=\')\n      if (\n        item.length == 2 &&\n        item[0] != \'\' &&\n        item[0] != \'""\' &&\n        item[0] != \'"\'\n      ) {\n        urlObject[item[0]] = encodeURIComponent(item[1])\n      }\n    }\n    return urlObject\n  }\n  return {}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# hexToRGB\n * 16 进制颜色值转 RGB 值\n\nconst hexToRGB = (hex) => {\n  if (!/(^\\#([a-fA-F0-9]{3})$)|(^\\#([a-fA-F0-9]{6})$)/g.test(hex)) return null\n  let allNumberStr = \'0123456789abcdef\' // 十六进制的所有数字\n  let len = hex.slice(1).length;\n  let str = len === 6 ? hex.slice(1) : hex.slice(1)[0].repeat(2) + hex.slice(1)[1].repeat(2) + hex.slice(1)[2].repeat(2);\n  let arrStr = str.split(\'\');\n  let newArrStr = arrStr.map((item, index) => {\n    return allNumberStr.indexOf((item + \'\').toLowerCase())\n  })\n  let num1 = newArrStr[0] * 16 + newArrStr[1];\n  let num2 = newArrStr[2] * 16 + newArrStr[3];\n  let num3 = newArrStr[4] * 16 + newArrStr[5];\n  return `rgb(${num1}, ${num2}, ${num3})`\n}\n// console.log(hexToRGB(\'#fffaaa\'))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# toCamelCaseVar\n * 转换驼峰命名\n\nconst toCamelCaseVar = (variable) => {\n  variable = variable.replace(/[\\_|-](\\w)/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n  return variable.slice(0, 1).toLowerCase() + variable.slice(1)\n}\n\n// console.log(toCamelCaseVar(\'Foo_style_css\')) // fooStyleCss\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# toChineseNum\nfunction toChineseNum(num) {\n  num += \'\'\n  let numLength = num.length\n  let numStr = \'零一二三四五六七八九十\'\n  let unitArr = [\'\', \'十\', \'百\', \'千\', \'万\']\n  function getResult(str) {\n    let res = \'\';\n    if (str.length > 5) {\n      let first = str.slice(-5);\n      let second = str.slice(0, str.length - 5);\n      for (let i in second) {\n        res = res + numStr[second[i]] + unitArr[second.length - i];\n      }\n      for (let i in first) {\n        res = res + numStr[first[i]] + unitArr[first.length - i - 1];\n      }\n    } else {\n      let first = str.slice(-5);\n      for (let i in first) {\n        res = res + numStr[first[i]] + unitArr[first.length - i - 1];\n      }\n    }\n    res = res.replace(/零[零十百千]+/g, \'零\').replace(/零+$/g, \'\').replace(/零万/g, \'万\')\n    return res;\n  }\n\n  if (numLength > 8) {\n    return getResult(num.slice(0, numLength - 8)) + \'亿\' + getResult(num.slice(-8))\n  }\n  return getResult(num)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# randomString\nconst randomString = function(boolean, min, max=0) {\n  var str = "",\n    range = min,\n    arr = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];\n  // 随机产生\n  if (boolean) {\n    range = Math.round(Math.random() * (max - min)) + min;\n  }\n  for (var i = 0; i < range; i++) {\n    pos = Math.round(Math.random() * (arr.length - 1));\n    str += arr[pos];\n  }\n  return str;\n};\n// demo\nconsole.log(randomString(true, 1, 4));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 如何避开 JavaScript 浮点数计算精度问题\n * 如0.1+0.2!==0.3\n * 简单的进制转换：5..toString(2) //0101\n * 解决相关此问题的类库：bignumber.js\n * 简单解决方案：将小数转成整数来运算，之后再转回小数\n\n\'use strict\'\n\nvar accAdd = function (num1, num2) {\n  num1 = Number(num1);\n  num2 = Number(num2);\n  var dec1, dec2, times;\n  try { dec1 = countDecimals(num1) + 1; } catch (e) { dec1 = 0; }\n  try { dec2 = countDecimals(num2) + 1; } catch (e) { dec2 = 0; }\n  times = Math.pow(10, Math.max(dec1, dec2));\n  // var result = (num1 * times + num2 * times) / times;\n  var result = (accMul(num1, times) + accMul(num2, times)) / times;\n  return getCorrectResult("add", num1, num2, result);\n  // return result;\n};\n\nvar accSub = function (num1, num2) {\n  num1 = Number(num1);\n  num2 = Number(num2);\n  var dec1, dec2, times;\n  try { dec1 = countDecimals(num1) + 1; } catch (e) { dec1 = 0; }\n  try { dec2 = countDecimals(num2) + 1; } catch (e) { dec2 = 0; }\n  times = Math.pow(10, Math.max(dec1, dec2));\n  // var result = Number(((num1 * times - num2 * times) / times);\n  var result = Number((accMul(num1, times) - accMul(num2, times)) / times);\n  return getCorrectResult("sub", num1, num2, result);\n  // return result;\n};\n\nvar accDiv = function (num1, num2) {\n  num1 = Number(num1);\n  num2 = Number(num2);\n  var t1 = 0, t2 = 0, dec1, dec2;\n  try { t1 = countDecimals(num1); } catch (e) { }\n  try { t2 = countDecimals(num2); } catch (e) { }\n  dec1 = convertToInt(num1);\n  dec2 = convertToInt(num2);\n  var result = accMul((dec1 / dec2), Math.pow(10, t2 - t1));\n  return getCorrectResult("div", num1, num2, result);\n  // return result;\n};\n\nvar accMul = function (num1, num2) {\n  num1 = Number(num1);\n  num2 = Number(num2);\n  var times = 0, s1 = num1.toString(), s2 = num2.toString();\n  try { times += countDecimals(s1); } catch (e) { }\n  try { times += countDecimals(s2); } catch (e) { }\n  var result = convertToInt(s1) * convertToInt(s2) / Math.pow(10, times);\n  return getCorrectResult("mul", num1, num2, result);\n  // return result;\n};\n\nvar countDecimals = function (num) {\n  var len = 0;\n  try {\n    num = Number(num);\n    var str = num.toString().toUpperCase();\n    if (str.split(\'E\').length === 2) { // scientific notation\n      var isDecimal = false;\n      if (str.split(\'.\').length === 2) {\n        str = str.split(\'.\')[1];\n        if (parseInt(str.split(\'E\')[0]) !== 0) {\n          isDecimal = true;\n        }\n      }\n      let x = str.split(\'E\');\n      if (isDecimal) {\n        len = x[0].length;\n      }\n      len -= parseInt(x[1]);\n    } else if (str.split(\'.\').length === 2) { // decimal\n      if (parseInt(str.split(\'.\')[1]) !== 0) {\n        len = str.split(\'.\')[1].length;\n      }\n    }\n  } catch (e) {\n    throw e;\n  } finally {\n    if (isNaN(len) || len < 0) {\n      len = 0;\n    }\n    return len;\n  }\n};\n\nvar convertToInt = function (num) {\n  num = Number(num);\n  var newNum = num;\n  var times = countDecimals(num);\n  var temp_num = num.toString().toUpperCase();\n  if (temp_num.split(\'E\').length === 2) {\n    newNum = Math.round(num * Math.pow(10, times));\n  } else {\n    newNum = Number(temp_num.replace(".", ""));\n  }\n  return newNum;\n};\n\nvar getCorrectResult = function (type, num1, num2, result) {\n  var temp_result = 0;\n  switch (type) {\n    case "add":\n      temp_result = num1 + num2;\n      break;\n    case "sub":\n      temp_result = num1 - num2;\n      break;\n    case "div":\n      temp_result = num1 / num2;\n      break;\n    case "mul":\n      temp_result = num1 * num2;\n      break;\n  }\n  if (Math.abs(result - temp_result) > 1) {\n    return temp_result;\n  }\n  return result;\n};\n// 用法\n// 加法： accAdd(0.1, 0.2)  // 得到结果：0.3\n// 减法： accSub(1, 0.9)    // 得到结果：0.1\n// 除法： accDiv(2.2, 100)  // 得到结果：0.022\n// 乘法： accMul(7, 0.8)    // 得到结果：5.6\n\n// 工具函数\ncountDecimals() //方法：计算小数位的长度\n\nconvertToInt() //方法：将小数转成整数\n\ngetCorrectResult() //方法：确认我们的计算结果无误，以防万一\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n# 斐波那契数\n// fn1\nvar fib = function (N) {\n  if (N == 0) return 0;\n  if (N == 1) return 1;\n  return fib(N - 1) + fib(N - 2)\n};\n\n// fn2\nlet fib = n => {\n  if (n == 0) return 0;\n  let a1 = 0;\n  a2 = 1;\n  for (let i = 1; i < n; i++) {\n    [a1, a2] = [a2, a1 + a2];\n  }\n  return a2;\n}\n\n// fn3\nlet fib = n => Math.round(\n  (Math.pow((1 + Math.sqrt(5)) / 2, n) -\n    Math.pow((1 - Math.sqrt(5)) / 2, n)) /\n  Math.sqrt(5)\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# Promise\n * 原文：从零一步一步实现一个完整版的 Promise\n   \n   \n * 简易版\n   \n   \n\nfunction myPromise(constructor) {\n  let self = this;\n  self.status = "pending"; //定义状态改变前的初始状态\n  self.value = undefined; //定义状态为resolved的时候的状态\n  self.reason = undefined; //定义状态为rejected的时候的状态\n  function resolve(value) {\n    if (self.status === "pending") {\n      self.value = value;\n      self.status = "resolved";\n    }\n  }\n  function reject(reason) {\n    if (self.status === "pending") {\n      self.reason = reason;\n      self.status = "rejected";\n    }\n  }\n  //捕获构造异常\n  try {\n    constructor(resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n}\nmyPromise.prototype.then = function(onFullfilled, onRejected) {\n  let self = this;\n  switch (self.status) {\n    case "resolved":\n      onFullfilled(self.value);\n      break;\n    case "rejected":\n      onRejected(self.reason);\n      break;\n    default:\n  }\n};\n// demo\nvar p = new myPromise(function(resolve, reject) {\n  resolve(1);\n});\np.then(function(x) {\n  console.log(x);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n * 完整版\n\nfunction Promise(executor) {\n  var self = this;\n  // Promise 状态\n  self.status = \'pending\'\n  // Promise 值\n  self.data = undefined\n  // Promise resolve 时的回调函数集\n  self.onResolvedCallback = []\n  // Promise reject 时的回调函数集\n  self.onRejectedCallback = []\n\n  // reslove\n  function resolve(value) {\n    if (value instanceof Promise) {\n      value.then(resolve, reject)\n      return\n    }\n    setTimeout(function () {\n      if (self.status === \'pending\') {\n        self.status = \'fulfilled\'\n        self.data = value\n        // 执行resolve的回调函数，将value传递到callback中\n        self.onResolvedCallback.forEach(cb => cb(value))\n      }\n    })\n  }\n\n  // reject\n  function reject(reason) {\n    setTimeout(function () {\n      if (self.status === \'pending\') {\n        self.status = \'rejected\'\n        self.data = reason\n        // 执行reject的回调函数，将reason传递到callback中\n        self.onRejectedCallback.forEach(cb => cb(reason))\n      }\n    })\n  }\n\n  // 执行executor并传入相应的参数\n  try {\n    executor(resolve, reject)\n  } catch (error) {\n    reject(error)\n  }\n}\n\nfunction resolvePromise(promise2, x, resolve, reject) {\n  let then\n  let thenCalledOrThrow = false\n  if (promise2 === x) {\n    reject(new TypeError(\'Chaining cycle detected for promise!\'))\n    return\n  }\n\n  if (x instanceof Promise) {\n    if (x.status === \'pending\') {\n      x.then(value => {\n        resolvePromise(promise2, value, resolve, reject)\n      }, err => {\n        reject(err)\n      })\n    } else {\n      x.then(resolve, reject)\n    }\n    return\n  }\n\n  if ((x !== null) && ((typeof x === \'function\') || (typeof x === \'object\'))) {\n    try {\n      then = x.then\n      if (typeof then === \'function\') {\n        then.call(x, value => {\n          if (thenCalledOrThrow) return\n          thenCalledOrThrow = true\n          resolvePromise(promise2, value, resolve, reject)\n          return\n        }, err => {\n          if (thenCalledOrThrow) return\n          thenCalledOrThrow = true\n          reject(err)\n          return\n        })\n      } else {\n        resolve(x)\n      }\n    } catch (error) {\n      if (thenCalledOrThrow) return\n      thenCalledOrThrow = true\n      reject(error)\n    }\n  } else {\n    resolve(x)\n  }\n}\n\nPromise.prototype.then = function (onResolve, onReject) {\n  let self = this\n  let promise2\n  // 处理参数默认值\n  onResolve = typeof onResolve === \'function\' ? onResolve : function (value) { return value }\n  onReject = typeof onReject === \'function\' ? onReject : function (reason) { throw reason }\n  // 等待\n  if (self.status === \'pending\') {\n    return promise2 = new Promise(function (resolve, reject) {\n      self.onResolvedCallback.push(function (value) {\n        try {\n          var x = onResolve(value)\n          resolvePromise(promise2, x, resolve, reject)\n        } catch (error) {\n          reject(error)\n        }\n      })\n\n      self.onRejectedCallback.push(function (reason) {\n        try {\n          var x = onReject(reason)\n          resolvePromise(promise2, x, resolve, reject)\n        } catch (error) {\n          reject(error)\n        }\n      })\n\n    })\n  }\n  // 成功\n  if (self.status === \'fulfilled\') {\n    return promise2 = new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        try {\n          var x = onResolve(self.data)\n          resolvePromise(promise2, x, resolve, reject)\n        } catch (error) {\n          // 如果出错，以捕获到的错误做为promise2的结果\n          reject(error)\n        }\n      }, 0)\n    })\n  }\n  // 失败\n  if (self.status === \'rejected\') {\n    return promise2 = new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        try {\n          var x = onReject(self.data)\n          resolvePromise(promise2, x, resolve, reject)\n        } catch (error) {\n          reject(error)\n        }\n      }, 0)\n    })\n  }\n}\n\nPromise.prototype.catch = function (onReject) {\n  return this.then(null, onReject)\n}\n\nPromise.resolve = function (value) {\n  return new Promise(function (resolve, reject) { resolve(value) })\n}\n\nPromise.reject = function (reason) {\n  return new Promise(function (resolve, reject) { reject(reason) })\n}\n\nPromise.all = function (promises) {\n  return new Promise((resolve, reject) => {\n    let values = []\n    let count = 0\n    promises.forEach((promise, index) => {\n      promise.then(value => {\n        values[index] = value\n        count++\n        if (count === promises.length) {\n          resolve(values)\n        }\n      }, reject)\n    })\n  })\n}\n\nPromise.race = function (promises) {\n  return new Promise((resolve, reject) => {\n    promises.forEach(promise => {\n      promise.then(resolve, reject)\n    })\n  })\n}\n\nPromise.deferred = function () {\n  var defer = {}\n  defer.promise = new Promise((resolve, reject) => {\n    defer.resolve = resolve\n    defer.reject = reject\n  })\n  return defer\n}\n\ntry {\n  module.exports = Promise\n} catch (error) {\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n# 监听数组变化\n\nfunction ObserverableArray() {\n  return new Proxy([], {\n    get(target, propKey) {\n      const matArr = [\'push\', \'pop\', \'shift\', \'unshift\', \'splice\', \'sort\', \'reverse\'];\n      matArr.indexOf(propKey) > -1 && console.log(propKey);\n      return target[propKey]\n    }\n  })\n}\nconst arr = new ObserverableArray()\n\narr.push(\'Good\')\narr.unshift(\'Good2\')\nconsole.log(arr)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 最大公约数&最小公倍数\n// 最大公约数: 能同时被两数整除的最大数字\nfunction maxDivisor(num1, num2) {\n  let max = num1 > num2 ? num1 : num2,\n    min = num1 > num2 ? num2 : num1;\n  for (var i = min; i >= 1; i--) {\n    if (max % i == 0 && min % i == 0) {\n      return i;\n    }\n  }\n}\n\nconsole.log(maxDivisor(60, 30)); // 30\n\n// 最小公倍数: 能同时整除两数的最小数字\nfunction minDivisor(num1, num2) {\n  let max = num1 > num2 ? num1 : num2,\n    min = num1 > num2 ? num2 : num1,\n    result = 0;\n  // 这个循环，当两数同为质数时，终止的最大条件值为 i = min\n  for (var i = 1; i <= min; i++) {\n    result = i * max;\n    if (result % max == 0 && result % min == 0) {\n      return result;\n    }\n  }\n}\nconsole.log(minDivisor(6, 8)); // 24\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 验证是否为回文\n// 数组方法生成倒装的新字符串与原字符串对比\nfunction isPalindrome(str) {\n  str = \'\' + str;\n  if (!str || str.length < 2) {\n    return false;\n  }\n  return (\n    Array.from(str)\n      .reverse()\n      .join(\'\') === str\n  );\n}\n\n// 倒序循环生成新字符串与原字符串对比\nfunction isPalindrome(str) {\n  str = \'\' + str;\n  if (!str || str.length < 2) {\n    return false;\n  }\n  var newStr = \'\';\n  for (var i = str.length - 1; i >= 0; i--) {\n    newStr += str[i];\n  }\n  return str1 === str;\n}\n\n// 以中间点为基点，从头至中与从尾至中逐一字符串进行对比，若有一个不同，则 return false\nfunction isPalindrome(str) {\n  str = \'\' + str;\n  if (!str || str.length < 2) {\n    return false;\n  }\n  for (let i = 0; i < str.length / 2; i++) {\n    if (str[i] !== str[str.length - 1 - i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# FIFO\n * 一种缓存算法，设置缓存上限，当达到了缓存上限的时候，按照先进先出的策略进行淘汰，再增加进新的 k-v\n\nclass FIFOCache {\n  constructor(limit) {\n    this.limit = limit || 10;\n    this.map = {};\n    this.keys = [];\n  }\n  set(key, value) {\n    let map = this.map;\n    let keys = this.keys;\n    if (!Object.prototype.hasOwnProperty.call(map, key)) {\n      if (keys.length === this.limit) {\n        delete map[keys.shift()]; //先进先出，删除队列第一个元素\n      }\n      keys.push(key);\n    }\n    map[key] = value; //无论存在与否都对map中的key赋值\n  }\n  get(key) {\n    return this.map[key];\n  }\n}\n\nlet fifo = new FIFOCache(10);\n\nfor (let i = 0; i < 10; i++) {\n  fifo.set(`name-${i}`, i);\n}\nfifo.set("name-10", 10);\nconsole.log(fifo);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# 判断一个数是否为质数\nfunction isPrime(num) {\n  if (num === 1) {\n    return "1 不是质数，请输入大于1的数字";\n  } else if (num <= 3) {\n    return num > 1;\n  } else {\n    let sq = Math.sqrt(num);\n    for (let i = 2; i <= sq; i++) {\n      if (num % i === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 实现类 vue 的 filter 函数\n// {{ message | fn1 | fn2 }}\nfunction filterMap() {\n  var args = [].slice.call(arguments);\n  if (args.length == 0) {\n    throw Error("处理函数不能为空");\n  }\n  return function next(val) {\n    return args.length == 1\n      ? args.shift()(val)\n      : args.reduce((pre, cur) => {\n          let value = typeof pre == "function" ? pre(val) : pre;\n          return cur(value);\n        }, args.shift());\n  };\n}\n\nfunction fn1(val) {\n  return "fn1" + val;\n}\nfunction fn2(val) {\n  return "fn2" + val;\n}\nfunction fn3(val) {\n  return "fn3" + val;\n}\n\nvar s = filterMap(fn1, fn2)("123");\nconsole.log(s);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# LRU\n * LRU（Least recently used，最近最少使用）算法。最近被访问的数据那么它将来访问的概率就大，缓存满的时候，优先淘汰最无人问津者\n   \n   \n * 实现逻辑 Map : 原文：146. LRU 缓存机制\n   \n   \n\nMap 中的键值是有序的，而添加到对象中的键则不是。因此，当对它进行遍历时，Map 对象是按插入的顺序返回键值\nMap.prototype.keys()\n  返回一个新的 Iterator对象， 它按插入顺序包含了Map对象中每个元素的键 。\n\n1、尾部元素一直是最新set的，对应于LRU的最近使用原则\n  Map.set()\n2、头部元素是最远使用的，用于LRU容量满载时删除最远使用的元素，可获取其key\n  Map.keys().next().value\n\n解题步骤\nget\n  元素存在 delete、set\n  元素不存在 return -1\nput\n  元素存在  delete、set\n  元素不存在\n  容量超载 delete map头部元素(map.keys().next().value)、set\n  不超载   set\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\nlet myMap = new Map();\n\n// 添加键\nmyMap.set("1", "a");\nmyMap.set("2", "b");\nmyMap.set("3", "c");\nmyMap.set("4", "d");\n\nconsole.log(myMap.get("2")); // b\n\nconsole.log(myMap.delete("4")); // true\n\nconsole.log(myMap);\n\nlet val = myMap.keys();\nconsole.log(val.next());\nconsole.log(val.next());\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * 代码\n\n/**\n * @param {number} capacity 容量\n */\nvar LRUCache = function(capacity) {\n  this.cap = capacity;\n  this.cache = new Map();\n};\n\n/**\n * @param {number} key\n * @return {number}\n */\nLRUCache.prototype.get = function(key) {\n  let cache = this.cache;\n  if (cache.has(key)) {\n    let val = cache.get(key);\n    // 删除元素\n    cache.delete(key);\n    // 重新插入到map结构最后\n    cache.set(key, val);\n    return val;\n  } else {\n    return -1;\n  }\n};\n\n/**\n * @param {number} key\n * @param {number} value\n * @return {void}\n */\nLRUCache.prototype.put = function(key, value) {\n  let cache = this.cache;\n  if (cache.has(key)) {\n    // 删除元素\n    cache.delete(key);\n  } else {\n    if (cache.size == this.cap) {\n      // 删除map中第一个元素\n      cache.delete(cache.keys().next().value);\n    }\n  }\n  // 重新赋值插入\n  cache.set(key, value);\n};\n\n//  Your LRUCache object will be instantiated and called as such:\nvar cache = new LRUCache(2);\ncache.put(1, 1);\ncache.put(2, 2);\ncache.get(1); // 返回  1\ncache.put(3, 3); // 该操作会使得密钥 2 作废\ncache.get(2); // 返回 -1 (未找到)\ncache.put(4, 4); // 该操作会使得密钥 1 作废\ncache.get(1); // 返回 -1 (未找到)\ncache.get(3); // 返回  3\ncache.get(4); // 返回  4\n\nconsole.log(cache);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n# 字符串正则去重\nvar str = "adaaasfjjjbkk";\n\nvar res = str.replace(/(.).*(\\1)/g, function($1, $2, $3) {\n  $1 = $2 + $1.substring(1).replace(new RegExp($2, "g"), "");\n  return $1;\n});\n\n\n1\n2\n3\n4\n5\n6\n# 使用 Array 来重复字符\nfor (let a = "", i = 7; i--; ) a += 0;\n\nlet b = Array(7).join(0); // "0000000"\nlet c = Array(7).join("La"); // "LaLaLaLaLaLa"\n\nlet d = "0".repeat(7); // "0000000"\nlet e = Array(7)\n  .fill("Ab")\n  .join(""); // AbAbAbAbAbAbAb\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 使用 toString(16)取随机字符串\nMath.random()\n  .toString(16)\n  .substring(2, 15);\n\n\n1\n2\n3\n# 使用setTimeout代替setInterval进行间歇调用\nvar executeTimes = 0;\nvar intervalTime = 500;\nvar intervalId = null;\n\n// setInterval的Demo\nintervalId = setInterval(intervalFun,intervalTime);\n\nfunction intervalFun(){\n    executeTimes++;\n    console.log("doIntervalFun——"+executeTimes);\n    if(executeTimes==5){\n        clearInterval(intervalId);\n    }\n}\n\n// setTimeout的Demo\nsetTimeout(timeOutFun,intervalTime);\n\nfunction timeOutFun(){\n    executeTimes++;\n    console.log("doTimeOutFun——"+executeTimes);\n    if(executeTimes<5){\n        setTimeout(arguments.callee,intervalTime);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25',normalizedContent:'# 简易克隆对象\n//简易克隆对象\nfunction extend2(tag, source) {\n  for (var item in source) {\n    tag[item] = source[item];\n  }\n  return tag;\n}\n//\njson.parse(json.stringify(obj))\n//\nobject.create({}, obj)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# formatemoney\nconst formatmoney = function(num) {\n  if (num == "0") {\n    return "0.00";\n  }\n  if (num == undefined || num == "" || num == null) {\n    return "-";\n  }\n  return parsefloat(num)\n    .tofixed(2)\n    .replace(/\\d{1,3}(?=(\\d{3})+(\\.\\d*)?$)/g, "$&,");\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# formatenumber\nfunction formatnumber(num) {\n  let numstr = num + "";\n  let arr = num < 0 ? numstr.slice(1).split(".") : numstr.split(".");\n  let a = arr[0].split("");\n  for (let i = a.length - 3; i > 0; i = i - 3) {\n    a.splice(i, 0, ",");\n  }\n  let res = arr[1] ? a.join("") + "." + arr[1] : a.join("");\n  return num < 0 ? "-" + res : res;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 二分查找\n// 二分查找，前提是数组为有序数组, 返回索引值, o(㏒n)复杂度\nfunction binarysearch(target, arr) {\n  let start = 0;\n  let end = arr.length - 1;\n\n  while (start <= end) {\n    let mid = parseint(start + (end - start) / 2);\n    if (target == arr[mid]) {\n      return mid;\n    } else if (target > arr[mid]) {\n      start = mid + 1;\n    } else {\n      end = mid - 1;\n    }\n  }\n  return -1;\n}\nlet arr = [1, 4, 6, 8, 9, 21, 45, 67, 98];\nconsole.log(binarysearch(67, arr));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 获取类名 classname\n//获取类名classname\nfunction getclassname(str) {\n  //为了火狐和谷歌及ie9-11\n  if (document.getelementsbyclassname) {\n    return document.getelementsbyclassname(str);\n  }\n  //获取所有标签节点(数组)\n  var allnodes = document.getelementsbytagname("*");\n  //定义数组(哪个标签满足我的需求，就把他push到arr中，最后返回)\n  var arr = [];\n  //遍历数组（所有标签的数组）\n  for (var i = 0; i < allnodes.length; i++) {\n    //把类名变成数组\n    var arrclassname = allnodes[i].classname.split(" ");\n    //遍历数组中所有的元素（遍历数组中所有的元素用的）\n    for (var j = 0; j < arrclassname.length; j++) {\n      //在判断，如果class属性值是传过来的值。放进数组。\n      if (arrclassname[j] == str) {\n        arr.push(aarrclassname[j]);\n      }\n    }\n  }\n  return arr;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# 动画 animate\n * 简易版\n\n//动画animate\nfunction animateone(ele, target) {\n  //清理定时器\n  clearinterval(ele.timer);\n  ele.timer = setinterval(function () {\n    var step = 9;\n    //如果对象的位置在目标的左边 往右走 step是正数\n    //如果对象的位置在目标的右边 往左走 step是负数\n    //对象的位置在目标的左边 ele.offsetleft<target\n    step = ele.offsetleft < target ? step : -step;\n    //终点检测 对象到目标的距离 > step的距离 就要继续走\n    if (math.abs(ele.offsetleft - target) > math.abs(step)) {\n      ele.style.left = ele.offsetleft + step + "px";\n    } else {\n      //距有可能 离终点还有一点点距离 我们手动把他放置到终点位置\n      ele.style.left = target + "px";\n      clearinterval(ele.timer);\n    }\n  }, 30)\n}\n\n// animate 缓动动画\nfunction animate(obj, target) {\n  clearinterval(obj.timer);\n  obj.timer = setinterval(function () {\n    var leader = obj.offsetleft;\n    var step = (target - leader) / 10;\n    step = step > 0 ? math.ceil(step) : math.floor(step);\n    obj.style.left = obj.offsetleft + step + "px";\n    if (leader == target) {\n      clearinterval(obj.timer);\n    }\n  }, 25)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * animate\n\n//animate fn回调\nfunction animatetwo(obj, json, fn) {\n  clearinterval(obj.timer);\n  obj.timer = setinterval(function () {\n    var flag = true;\n    for (var k in json) {\n      var target = json[k];\n      var leader = parseint(getstyle(obj, k));\n      var step = (target - leader) / 10;\n      step = step > 0 ? math.ceil(step) : math.floor(step);\n      leader = leader + step;\n      obj.style[k] = leader + "px";\n      if (leader != target) {\n        flag = false;\n      }\n    }\n    if (flag) {\n      clearinterval(obj.timer);\n      if (fn) {\n        //alert(fn);\n        fn();\n      }\n    }\n  }, 30)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n * animate 多属性动画\n\n//fn为回调函数\n//{attr:target,attr:target}\nfunction animate(obj, json, fn) {\n  clearinterval(obj.timer);\n  obj.timer = setinterval(function () {\n    var flag = true;\n    for (var attr in json) {\n      //step = (target-leader)/10\n      //leader = leader + step\n      if (attr == "opacity") {\n        var target = json[attr] * 100;\n        var leader = math.round(parseint(getstyle(obj, attr || "filter") * 100)) || 100;\n      } else {\n        var target = json[attr];\n        var leader = parseint(getstyle(obj, attr));\n      }\n      var step = (target - leader) / 10;\n      step = step > 0 ? math.ceil(step) : math.floor(step);\n      leader = leader + step;\n      //obj.style.left = leader + "px";\n      //obj.style["left"] = leader + "px";\n      if (attr == "opacity") {\n        obj.style.opacity = leader / 100;\n        obj.style.filter = "alpha(opacity=" + leader + ")";\n        //filter:alpha(opacity=x);\n      } else if (attr == "zindex") {\n        obj.style.zindex = attr;\n      } else {\n        obj.style[attr] = leader + "px";\n      }\n      /*if (leader == target) {\n       clearinterval(obj.timer);\n       }*/\n      if (leader != target) {\n        flag = false;\n      }\n    }\n    if (flag) {\n      clearinterval(obj.timer);\n      //alert(fn);\n      if (fn) {\n        fn();\n      }\n    }\n  }, 30)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n# 根据属性得到具体元素\n// 根据属性得到具体元素\nfunction atrgetele(ele, attr, value) {\n  var aelements = document.getelementsbytagname(ele);\n  var aele = [];\n  for (var i = 0; i < aelements.length; i++) {\n    if (aelements[i].getattribute(attr) == value)\n      aele.push(aelements[i]);\n  }\n  return aele;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 对象深度克隆\n// 对象数组的深拷贝\nvar objdeepcopy = function (source) {\n  var sourcecopy = source instanceof array ? [] : {};\n  for (var item in source) {\n    sourcecopy[item] = typeof source[item] === \'object\' ? objdeepcopy(source[item]) : source[item];\n  }\n  return sourcecopy;\n}\n\nfunction isobject(obj) {\n  return object.prototype.tostring.call(obj) == "[object object]"\n}\n\nvar objdeepcopy = function (obj) {\n  if (!isobject(obj)) return obj;\n  if (typeof window !== \'undefined\' && window.json) { // 浏览器环境下 并支持window.json 则使用 json\n    return json.parse(json.stringify(obj));\n  } else {\n    var newobj = obj.constructor === array ? [] : {};\n    for (var key in obj) {\n      newobj[key] = typeof obj[key] === \'object\' ? deepcopy(obj[key]) : obj[key];\n    }\n    return newobj;\n  }\n}\n\nconst deepclone = function (target) {\n  if (typeof target !== \'object\') {\n    throw new typeerror(\'arguments must be a object!\')\n  }\n  // 已经访问过的对象集合\n  const visitedobjs = []\n  // 克隆的对象集合\n  const clonedobjs = []\n  const clone = function (source) {\n    if (visitedobjs.indexof(source) === -1) { // 这里是判断该原对象是否被访问过\n      visitedobjs.push(source) // 放入数组中\n      const obj = {} // 创建一个待克隆的新对象\n      // 设置原型\n      const prototype = reflect.getprototypeof(source)\n      reflect.setprototypeof(obj, prototype)\n      clonedobjs.push(obj); // 将其置入克隆对象集合中\n      // 设置属性\n      reflect.ownkeys(source).foreach((key) => {\n        const value = source[key]\n        try {\n          const constructor = reflect.getprototypeof(value).constructor\n          if (constructor === date || constructor === regexp) {\n            obj[key] = new constructor(value.valueof())\n          } else {\n            obj[key] = clone(value) // 此处不能再递归调用 deepclone，而是要改为 clone 方法\n          }\n        } catch (e) {\n          obj[key] = value\n        }\n      })\n      return obj\n    } else {\n      // 如果该对象已经被访问过了，则直接从克隆对象中返回。返回的对象的索引是 source 在 visitedobjs 中的索引位置。\n      return clonedobjs[visitedobjs.indexof(source)]\n    }\n  }\n  return clone(target)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n# other\nvar calendarlink = {\n  // 插入script标签\n  createsrc: function (url) {\n    var screle = document.createelement("script");\n    screle.src = url;\n    document.body.appendchild(screle);\n  },\n  // 插入样式表\n  createstyle: function (url) {\n    var screle = document.createelement("link");\n    screle.rel = "stylesheet";\n    screle.href = url;\n    document.head.appendchild(screle);\n  },\n  on: function (url) {\n    if (!url) {\n      return false;\n    }\n    if (window.addeventlistener)\n      window.addeventlistener("load", this.createsrc.bind(this, url), false);\n    else if (window.attachevent)\n      window.attachevent("onload", this.createsrc.bind(this, url));\n    else window.onload = this.createsrc.bind(this, url);\n  },\n  removedom: function () {\n    var resrc = document.queryselector(\'#appendele\');\n    resrc.parentnode.removechild(resrc);\n  },\n}\n\n\n//\nfunction.prototype.before = function (beforefn) {\n  let _self = this; // 缓存原函数的引用\n  return function () { // 代理函数\n    beforefn.apply(this, arguments); // 执行前置函数\n    return _self.apply(this, arguments); // 执行原函数\n  }\n}\n\nfunction.prototype.after = function (afterfn) {\n  let _self = this;\n  return function () {\n    let set = _self.apply(this, arguments);\n    afterfn.apply(this, arguments);\n    return set;\n  }\n}\n\nlet func = () => console.log(\'func\');\nfunc = func.before(() => {\n  console.log(\'===before===\');\n}).after(() => {\n  console.log(\'===after===\');\n});\n\nfunc();\n// ===before===\n// func\n// ===after===\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n# log\nconst log = (type) => console.log.bind(console, type);\n\n\n1\n# cached\nfunction cached(fn) {\n  const cache = object.create(null)\n  return function cachedfn(str) {\n    if (!cache[str]) {\n      cache[str] = fn(str)\n    }\n    return cache[str]\n  }\n}\n// test\nvar cachedcomputed = cached(computed)\ncachedcomputed(\'ss\')\n// 打印2000s have passed\ncachedcomputed(\'ss\')\n// 不再打印\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# urltoobject\nfunction serilizeurl(url) {\n  var urlobject = {}\n  if (/\\?/.test(url)) {\n    var urlstring = url.substring(url.indexof(\'?\') + 1)\n    console.log(urlstring)\n    var urlarray = urlstring.split(\'&\')\n    for (var i = 0, len = urlarray.length; i < len; i++) {\n      var urlitem = urlarray[i]\n      console.log(urlitem)\n      var item = urlitem.split(\'=\')\n      if (\n        item.length == 2 &&\n        item[0] != \'\' &&\n        item[0] != \'""\' &&\n        item[0] != \'"\'\n      ) {\n        urlobject[item[0]] = encodeuricomponent(item[1])\n      }\n    }\n    return urlobject\n  }\n  return {}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# hextorgb\n * 16 进制颜色值转 rgb 值\n\nconst hextorgb = (hex) => {\n  if (!/(^\\#([a-fa-f0-9]{3})$)|(^\\#([a-fa-f0-9]{6})$)/g.test(hex)) return null\n  let allnumberstr = \'0123456789abcdef\' // 十六进制的所有数字\n  let len = hex.slice(1).length;\n  let str = len === 6 ? hex.slice(1) : hex.slice(1)[0].repeat(2) + hex.slice(1)[1].repeat(2) + hex.slice(1)[2].repeat(2);\n  let arrstr = str.split(\'\');\n  let newarrstr = arrstr.map((item, index) => {\n    return allnumberstr.indexof((item + \'\').tolowercase())\n  })\n  let num1 = newarrstr[0] * 16 + newarrstr[1];\n  let num2 = newarrstr[2] * 16 + newarrstr[3];\n  let num3 = newarrstr[4] * 16 + newarrstr[5];\n  return `rgb(${num1}, ${num2}, ${num3})`\n}\n// console.log(hextorgb(\'#fffaaa\'))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# tocamelcasevar\n * 转换驼峰命名\n\nconst tocamelcasevar = (variable) => {\n  variable = variable.replace(/[\\_|-](\\w)/g, function (all, letter) {\n    return letter.touppercase();\n  });\n  return variable.slice(0, 1).tolowercase() + variable.slice(1)\n}\n\n// console.log(tocamelcasevar(\'foo_style_css\')) // foostylecss\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# tochinesenum\nfunction tochinesenum(num) {\n  num += \'\'\n  let numlength = num.length\n  let numstr = \'零一二三四五六七八九十\'\n  let unitarr = [\'\', \'十\', \'百\', \'千\', \'万\']\n  function getresult(str) {\n    let res = \'\';\n    if (str.length > 5) {\n      let first = str.slice(-5);\n      let second = str.slice(0, str.length - 5);\n      for (let i in second) {\n        res = res + numstr[second[i]] + unitarr[second.length - i];\n      }\n      for (let i in first) {\n        res = res + numstr[first[i]] + unitarr[first.length - i - 1];\n      }\n    } else {\n      let first = str.slice(-5);\n      for (let i in first) {\n        res = res + numstr[first[i]] + unitarr[first.length - i - 1];\n      }\n    }\n    res = res.replace(/零[零十百千]+/g, \'零\').replace(/零+$/g, \'\').replace(/零万/g, \'万\')\n    return res;\n  }\n\n  if (numlength > 8) {\n    return getresult(num.slice(0, numlength - 8)) + \'亿\' + getresult(num.slice(-8))\n  }\n  return getresult(num)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# randomstring\nconst randomstring = function(boolean, min, max=0) {\n  var str = "",\n    range = min,\n    arr = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"];\n  // 随机产生\n  if (boolean) {\n    range = math.round(math.random() * (max - min)) + min;\n  }\n  for (var i = 0; i < range; i++) {\n    pos = math.round(math.random() * (arr.length - 1));\n    str += arr[pos];\n  }\n  return str;\n};\n// demo\nconsole.log(randomstring(true, 1, 4));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 如何避开 javascript 浮点数计算精度问题\n * 如0.1+0.2!==0.3\n * 简单的进制转换：5..tostring(2) //0101\n * 解决相关此问题的类库：bignumber.js\n * 简单解决方案：将小数转成整数来运算，之后再转回小数\n\n\'use strict\'\n\nvar accadd = function (num1, num2) {\n  num1 = number(num1);\n  num2 = number(num2);\n  var dec1, dec2, times;\n  try { dec1 = countdecimals(num1) + 1; } catch (e) { dec1 = 0; }\n  try { dec2 = countdecimals(num2) + 1; } catch (e) { dec2 = 0; }\n  times = math.pow(10, math.max(dec1, dec2));\n  // var result = (num1 * times + num2 * times) / times;\n  var result = (accmul(num1, times) + accmul(num2, times)) / times;\n  return getcorrectresult("add", num1, num2, result);\n  // return result;\n};\n\nvar accsub = function (num1, num2) {\n  num1 = number(num1);\n  num2 = number(num2);\n  var dec1, dec2, times;\n  try { dec1 = countdecimals(num1) + 1; } catch (e) { dec1 = 0; }\n  try { dec2 = countdecimals(num2) + 1; } catch (e) { dec2 = 0; }\n  times = math.pow(10, math.max(dec1, dec2));\n  // var result = number(((num1 * times - num2 * times) / times);\n  var result = number((accmul(num1, times) - accmul(num2, times)) / times);\n  return getcorrectresult("sub", num1, num2, result);\n  // return result;\n};\n\nvar accdiv = function (num1, num2) {\n  num1 = number(num1);\n  num2 = number(num2);\n  var t1 = 0, t2 = 0, dec1, dec2;\n  try { t1 = countdecimals(num1); } catch (e) { }\n  try { t2 = countdecimals(num2); } catch (e) { }\n  dec1 = converttoint(num1);\n  dec2 = converttoint(num2);\n  var result = accmul((dec1 / dec2), math.pow(10, t2 - t1));\n  return getcorrectresult("div", num1, num2, result);\n  // return result;\n};\n\nvar accmul = function (num1, num2) {\n  num1 = number(num1);\n  num2 = number(num2);\n  var times = 0, s1 = num1.tostring(), s2 = num2.tostring();\n  try { times += countdecimals(s1); } catch (e) { }\n  try { times += countdecimals(s2); } catch (e) { }\n  var result = converttoint(s1) * converttoint(s2) / math.pow(10, times);\n  return getcorrectresult("mul", num1, num2, result);\n  // return result;\n};\n\nvar countdecimals = function (num) {\n  var len = 0;\n  try {\n    num = number(num);\n    var str = num.tostring().touppercase();\n    if (str.split(\'e\').length === 2) { // scientific notation\n      var isdecimal = false;\n      if (str.split(\'.\').length === 2) {\n        str = str.split(\'.\')[1];\n        if (parseint(str.split(\'e\')[0]) !== 0) {\n          isdecimal = true;\n        }\n      }\n      let x = str.split(\'e\');\n      if (isdecimal) {\n        len = x[0].length;\n      }\n      len -= parseint(x[1]);\n    } else if (str.split(\'.\').length === 2) { // decimal\n      if (parseint(str.split(\'.\')[1]) !== 0) {\n        len = str.split(\'.\')[1].length;\n      }\n    }\n  } catch (e) {\n    throw e;\n  } finally {\n    if (isnan(len) || len < 0) {\n      len = 0;\n    }\n    return len;\n  }\n};\n\nvar converttoint = function (num) {\n  num = number(num);\n  var newnum = num;\n  var times = countdecimals(num);\n  var temp_num = num.tostring().touppercase();\n  if (temp_num.split(\'e\').length === 2) {\n    newnum = math.round(num * math.pow(10, times));\n  } else {\n    newnum = number(temp_num.replace(".", ""));\n  }\n  return newnum;\n};\n\nvar getcorrectresult = function (type, num1, num2, result) {\n  var temp_result = 0;\n  switch (type) {\n    case "add":\n      temp_result = num1 + num2;\n      break;\n    case "sub":\n      temp_result = num1 - num2;\n      break;\n    case "div":\n      temp_result = num1 / num2;\n      break;\n    case "mul":\n      temp_result = num1 * num2;\n      break;\n  }\n  if (math.abs(result - temp_result) > 1) {\n    return temp_result;\n  }\n  return result;\n};\n// 用法\n// 加法： accadd(0.1, 0.2)  // 得到结果：0.3\n// 减法： accsub(1, 0.9)    // 得到结果：0.1\n// 除法： accdiv(2.2, 100)  // 得到结果：0.022\n// 乘法： accmul(7, 0.8)    // 得到结果：5.6\n\n// 工具函数\ncountdecimals() //方法：计算小数位的长度\n\nconverttoint() //方法：将小数转成整数\n\ngetcorrectresult() //方法：确认我们的计算结果无误，以防万一\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n# 斐波那契数\n// fn1\nvar fib = function (n) {\n  if (n == 0) return 0;\n  if (n == 1) return 1;\n  return fib(n - 1) + fib(n - 2)\n};\n\n// fn2\nlet fib = n => {\n  if (n == 0) return 0;\n  let a1 = 0;\n  a2 = 1;\n  for (let i = 1; i < n; i++) {\n    [a1, a2] = [a2, a1 + a2];\n  }\n  return a2;\n}\n\n// fn3\nlet fib = n => math.round(\n  (math.pow((1 + math.sqrt(5)) / 2, n) -\n    math.pow((1 - math.sqrt(5)) / 2, n)) /\n  math.sqrt(5)\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# promise\n * 原文：从零一步一步实现一个完整版的 promise\n   \n   \n * 简易版\n   \n   \n\nfunction mypromise(constructor) {\n  let self = this;\n  self.status = "pending"; //定义状态改变前的初始状态\n  self.value = undefined; //定义状态为resolved的时候的状态\n  self.reason = undefined; //定义状态为rejected的时候的状态\n  function resolve(value) {\n    if (self.status === "pending") {\n      self.value = value;\n      self.status = "resolved";\n    }\n  }\n  function reject(reason) {\n    if (self.status === "pending") {\n      self.reason = reason;\n      self.status = "rejected";\n    }\n  }\n  //捕获构造异常\n  try {\n    constructor(resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n}\nmypromise.prototype.then = function(onfullfilled, onrejected) {\n  let self = this;\n  switch (self.status) {\n    case "resolved":\n      onfullfilled(self.value);\n      break;\n    case "rejected":\n      onrejected(self.reason);\n      break;\n    default:\n  }\n};\n// demo\nvar p = new mypromise(function(resolve, reject) {\n  resolve(1);\n});\np.then(function(x) {\n  console.log(x);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n * 完整版\n\nfunction promise(executor) {\n  var self = this;\n  // promise 状态\n  self.status = \'pending\'\n  // promise 值\n  self.data = undefined\n  // promise resolve 时的回调函数集\n  self.onresolvedcallback = []\n  // promise reject 时的回调函数集\n  self.onrejectedcallback = []\n\n  // reslove\n  function resolve(value) {\n    if (value instanceof promise) {\n      value.then(resolve, reject)\n      return\n    }\n    settimeout(function () {\n      if (self.status === \'pending\') {\n        self.status = \'fulfilled\'\n        self.data = value\n        // 执行resolve的回调函数，将value传递到callback中\n        self.onresolvedcallback.foreach(cb => cb(value))\n      }\n    })\n  }\n\n  // reject\n  function reject(reason) {\n    settimeout(function () {\n      if (self.status === \'pending\') {\n        self.status = \'rejected\'\n        self.data = reason\n        // 执行reject的回调函数，将reason传递到callback中\n        self.onrejectedcallback.foreach(cb => cb(reason))\n      }\n    })\n  }\n\n  // 执行executor并传入相应的参数\n  try {\n    executor(resolve, reject)\n  } catch (error) {\n    reject(error)\n  }\n}\n\nfunction resolvepromise(promise2, x, resolve, reject) {\n  let then\n  let thencalledorthrow = false\n  if (promise2 === x) {\n    reject(new typeerror(\'chaining cycle detected for promise!\'))\n    return\n  }\n\n  if (x instanceof promise) {\n    if (x.status === \'pending\') {\n      x.then(value => {\n        resolvepromise(promise2, value, resolve, reject)\n      }, err => {\n        reject(err)\n      })\n    } else {\n      x.then(resolve, reject)\n    }\n    return\n  }\n\n  if ((x !== null) && ((typeof x === \'function\') || (typeof x === \'object\'))) {\n    try {\n      then = x.then\n      if (typeof then === \'function\') {\n        then.call(x, value => {\n          if (thencalledorthrow) return\n          thencalledorthrow = true\n          resolvepromise(promise2, value, resolve, reject)\n          return\n        }, err => {\n          if (thencalledorthrow) return\n          thencalledorthrow = true\n          reject(err)\n          return\n        })\n      } else {\n        resolve(x)\n      }\n    } catch (error) {\n      if (thencalledorthrow) return\n      thencalledorthrow = true\n      reject(error)\n    }\n  } else {\n    resolve(x)\n  }\n}\n\npromise.prototype.then = function (onresolve, onreject) {\n  let self = this\n  let promise2\n  // 处理参数默认值\n  onresolve = typeof onresolve === \'function\' ? onresolve : function (value) { return value }\n  onreject = typeof onreject === \'function\' ? onreject : function (reason) { throw reason }\n  // 等待\n  if (self.status === \'pending\') {\n    return promise2 = new promise(function (resolve, reject) {\n      self.onresolvedcallback.push(function (value) {\n        try {\n          var x = onresolve(value)\n          resolvepromise(promise2, x, resolve, reject)\n        } catch (error) {\n          reject(error)\n        }\n      })\n\n      self.onrejectedcallback.push(function (reason) {\n        try {\n          var x = onreject(reason)\n          resolvepromise(promise2, x, resolve, reject)\n        } catch (error) {\n          reject(error)\n        }\n      })\n\n    })\n  }\n  // 成功\n  if (self.status === \'fulfilled\') {\n    return promise2 = new promise(function (resolve, reject) {\n      settimeout(function () {\n        try {\n          var x = onresolve(self.data)\n          resolvepromise(promise2, x, resolve, reject)\n        } catch (error) {\n          // 如果出错，以捕获到的错误做为promise2的结果\n          reject(error)\n        }\n      }, 0)\n    })\n  }\n  // 失败\n  if (self.status === \'rejected\') {\n    return promise2 = new promise(function (resolve, reject) {\n      settimeout(function () {\n        try {\n          var x = onreject(self.data)\n          resolvepromise(promise2, x, resolve, reject)\n        } catch (error) {\n          reject(error)\n        }\n      }, 0)\n    })\n  }\n}\n\npromise.prototype.catch = function (onreject) {\n  return this.then(null, onreject)\n}\n\npromise.resolve = function (value) {\n  return new promise(function (resolve, reject) { resolve(value) })\n}\n\npromise.reject = function (reason) {\n  return new promise(function (resolve, reject) { reject(reason) })\n}\n\npromise.all = function (promises) {\n  return new promise((resolve, reject) => {\n    let values = []\n    let count = 0\n    promises.foreach((promise, index) => {\n      promise.then(value => {\n        values[index] = value\n        count++\n        if (count === promises.length) {\n          resolve(values)\n        }\n      }, reject)\n    })\n  })\n}\n\npromise.race = function (promises) {\n  return new promise((resolve, reject) => {\n    promises.foreach(promise => {\n      promise.then(resolve, reject)\n    })\n  })\n}\n\npromise.deferred = function () {\n  var defer = {}\n  defer.promise = new promise((resolve, reject) => {\n    defer.resolve = resolve\n    defer.reject = reject\n  })\n  return defer\n}\n\ntry {\n  module.exports = promise\n} catch (error) {\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n# 监听数组变化\n\nfunction observerablearray() {\n  return new proxy([], {\n    get(target, propkey) {\n      const matarr = [\'push\', \'pop\', \'shift\', \'unshift\', \'splice\', \'sort\', \'reverse\'];\n      matarr.indexof(propkey) > -1 && console.log(propkey);\n      return target[propkey]\n    }\n  })\n}\nconst arr = new observerablearray()\n\narr.push(\'good\')\narr.unshift(\'good2\')\nconsole.log(arr)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 最大公约数&最小公倍数\n// 最大公约数: 能同时被两数整除的最大数字\nfunction maxdivisor(num1, num2) {\n  let max = num1 > num2 ? num1 : num2,\n    min = num1 > num2 ? num2 : num1;\n  for (var i = min; i >= 1; i--) {\n    if (max % i == 0 && min % i == 0) {\n      return i;\n    }\n  }\n}\n\nconsole.log(maxdivisor(60, 30)); // 30\n\n// 最小公倍数: 能同时整除两数的最小数字\nfunction mindivisor(num1, num2) {\n  let max = num1 > num2 ? num1 : num2,\n    min = num1 > num2 ? num2 : num1,\n    result = 0;\n  // 这个循环，当两数同为质数时，终止的最大条件值为 i = min\n  for (var i = 1; i <= min; i++) {\n    result = i * max;\n    if (result % max == 0 && result % min == 0) {\n      return result;\n    }\n  }\n}\nconsole.log(mindivisor(6, 8)); // 24\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 验证是否为回文\n// 数组方法生成倒装的新字符串与原字符串对比\nfunction ispalindrome(str) {\n  str = \'\' + str;\n  if (!str || str.length < 2) {\n    return false;\n  }\n  return (\n    array.from(str)\n      .reverse()\n      .join(\'\') === str\n  );\n}\n\n// 倒序循环生成新字符串与原字符串对比\nfunction ispalindrome(str) {\n  str = \'\' + str;\n  if (!str || str.length < 2) {\n    return false;\n  }\n  var newstr = \'\';\n  for (var i = str.length - 1; i >= 0; i--) {\n    newstr += str[i];\n  }\n  return str1 === str;\n}\n\n// 以中间点为基点，从头至中与从尾至中逐一字符串进行对比，若有一个不同，则 return false\nfunction ispalindrome(str) {\n  str = \'\' + str;\n  if (!str || str.length < 2) {\n    return false;\n  }\n  for (let i = 0; i < str.length / 2; i++) {\n    if (str[i] !== str[str.length - 1 - i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# fifo\n * 一种缓存算法，设置缓存上限，当达到了缓存上限的时候，按照先进先出的策略进行淘汰，再增加进新的 k-v\n\nclass fifocache {\n  constructor(limit) {\n    this.limit = limit || 10;\n    this.map = {};\n    this.keys = [];\n  }\n  set(key, value) {\n    let map = this.map;\n    let keys = this.keys;\n    if (!object.prototype.hasownproperty.call(map, key)) {\n      if (keys.length === this.limit) {\n        delete map[keys.shift()]; //先进先出，删除队列第一个元素\n      }\n      keys.push(key);\n    }\n    map[key] = value; //无论存在与否都对map中的key赋值\n  }\n  get(key) {\n    return this.map[key];\n  }\n}\n\nlet fifo = new fifocache(10);\n\nfor (let i = 0; i < 10; i++) {\n  fifo.set(`name-${i}`, i);\n}\nfifo.set("name-10", 10);\nconsole.log(fifo);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# 判断一个数是否为质数\nfunction isprime(num) {\n  if (num === 1) {\n    return "1 不是质数，请输入大于1的数字";\n  } else if (num <= 3) {\n    return num > 1;\n  } else {\n    let sq = math.sqrt(num);\n    for (let i = 2; i <= sq; i++) {\n      if (num % i === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 实现类 vue 的 filter 函数\n// {{ message | fn1 | fn2 }}\nfunction filtermap() {\n  var args = [].slice.call(arguments);\n  if (args.length == 0) {\n    throw error("处理函数不能为空");\n  }\n  return function next(val) {\n    return args.length == 1\n      ? args.shift()(val)\n      : args.reduce((pre, cur) => {\n          let value = typeof pre == "function" ? pre(val) : pre;\n          return cur(value);\n        }, args.shift());\n  };\n}\n\nfunction fn1(val) {\n  return "fn1" + val;\n}\nfunction fn2(val) {\n  return "fn2" + val;\n}\nfunction fn3(val) {\n  return "fn3" + val;\n}\n\nvar s = filtermap(fn1, fn2)("123");\nconsole.log(s);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# lru\n * lru（least recently used，最近最少使用）算法。最近被访问的数据那么它将来访问的概率就大，缓存满的时候，优先淘汰最无人问津者\n   \n   \n * 实现逻辑 map : 原文：146. lru 缓存机制\n   \n   \n\nmap 中的键值是有序的，而添加到对象中的键则不是。因此，当对它进行遍历时，map 对象是按插入的顺序返回键值\nmap.prototype.keys()\n  返回一个新的 iterator对象， 它按插入顺序包含了map对象中每个元素的键 。\n\n1、尾部元素一直是最新set的，对应于lru的最近使用原则\n  map.set()\n2、头部元素是最远使用的，用于lru容量满载时删除最远使用的元素，可获取其key\n  map.keys().next().value\n\n解题步骤\nget\n  元素存在 delete、set\n  元素不存在 return -1\nput\n  元素存在  delete、set\n  元素不存在\n  容量超载 delete map头部元素(map.keys().next().value)、set\n  不超载   set\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\nlet mymap = new map();\n\n// 添加键\nmymap.set("1", "a");\nmymap.set("2", "b");\nmymap.set("3", "c");\nmymap.set("4", "d");\n\nconsole.log(mymap.get("2")); // b\n\nconsole.log(mymap.delete("4")); // true\n\nconsole.log(mymap);\n\nlet val = mymap.keys();\nconsole.log(val.next());\nconsole.log(val.next());\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * 代码\n\n/**\n * @param {number} capacity 容量\n */\nvar lrucache = function(capacity) {\n  this.cap = capacity;\n  this.cache = new map();\n};\n\n/**\n * @param {number} key\n * @return {number}\n */\nlrucache.prototype.get = function(key) {\n  let cache = this.cache;\n  if (cache.has(key)) {\n    let val = cache.get(key);\n    // 删除元素\n    cache.delete(key);\n    // 重新插入到map结构最后\n    cache.set(key, val);\n    return val;\n  } else {\n    return -1;\n  }\n};\n\n/**\n * @param {number} key\n * @param {number} value\n * @return {void}\n */\nlrucache.prototype.put = function(key, value) {\n  let cache = this.cache;\n  if (cache.has(key)) {\n    // 删除元素\n    cache.delete(key);\n  } else {\n    if (cache.size == this.cap) {\n      // 删除map中第一个元素\n      cache.delete(cache.keys().next().value);\n    }\n  }\n  // 重新赋值插入\n  cache.set(key, value);\n};\n\n//  your lrucache object will be instantiated and called as such:\nvar cache = new lrucache(2);\ncache.put(1, 1);\ncache.put(2, 2);\ncache.get(1); // 返回  1\ncache.put(3, 3); // 该操作会使得密钥 2 作废\ncache.get(2); // 返回 -1 (未找到)\ncache.put(4, 4); // 该操作会使得密钥 1 作废\ncache.get(1); // 返回 -1 (未找到)\ncache.get(3); // 返回  3\ncache.get(4); // 返回  4\n\nconsole.log(cache);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n# 字符串正则去重\nvar str = "adaaasfjjjbkk";\n\nvar res = str.replace(/(.).*(\\1)/g, function($1, $2, $3) {\n  $1 = $2 + $1.substring(1).replace(new regexp($2, "g"), "");\n  return $1;\n});\n\n\n1\n2\n3\n4\n5\n6\n# 使用 array 来重复字符\nfor (let a = "", i = 7; i--; ) a += 0;\n\nlet b = array(7).join(0); // "0000000"\nlet c = array(7).join("la"); // "lalalalalala"\n\nlet d = "0".repeat(7); // "0000000"\nlet e = array(7)\n  .fill("ab")\n  .join(""); // ababababababab\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 使用 tostring(16)取随机字符串\nmath.random()\n  .tostring(16)\n  .substring(2, 15);\n\n\n1\n2\n3\n# 使用settimeout代替setinterval进行间歇调用\nvar executetimes = 0;\nvar intervaltime = 500;\nvar intervalid = null;\n\n// setinterval的demo\nintervalid = setinterval(intervalfun,intervaltime);\n\nfunction intervalfun(){\n    executetimes++;\n    console.log("dointervalfun——"+executetimes);\n    if(executetimes==5){\n        clearinterval(intervalid);\n    }\n}\n\n// settimeout的demo\nsettimeout(timeoutfun,intervaltime);\n\nfunction timeoutfun(){\n    executetimes++;\n    console.log("dotimeoutfun——"+executetimes);\n    if(executetimes<5){\n        settimeout(arguments.callee,intervaltime);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25',charsets:{cjk:!0}},{title:"常见的函数算法",frontmatter:{title:"常见的函数算法",date:"2020-07-22T00:00:00.000Z",sidebar:"auto",tags:["工具函数"],categories:["libs"],readingShow:"top"},regularPath:"/libs/",relativePath:"libs/README.md",key:"v-221adb60",path:"/libs/",headers:[{level:2,title:"冒泡排序",slug:"冒泡排序",normalizedTitle:"冒泡排序",charIndex:2},{level:2,title:"升序算法",slug:"升序算法",normalizedTitle:"升序算法",charIndex:523},{level:2,title:"降序排列",slug:"降序排列",normalizedTitle:"降序排列",charIndex:897},{level:2,title:"数组去重",slug:"数组去重",normalizedTitle:"数组去重",charIndex:1270},{level:2,title:"最大值 / 最小值",slug:"最大值-最小值",normalizedTitle:"最大值 / 最小值",charIndex:2610},{level:2,title:"找出字符串中重复次数最多",slug:"找出字符串中重复次数最多",normalizedTitle:"找出字符串中重复次数最多",charIndex:3343},{level:2,title:"随机生成范围内不重复数字",slug:"随机生成范围内不重复数字",normalizedTitle:"随机生成范围内不重复数字",charIndex:4003},{level:2,title:"查找 1-9 中缺少的数字",slug:"查找-1-9-中缺少的数字",normalizedTitle:"查找 1-9 中缺少的数字",charIndex:4871},{level:2,title:"toRMB 形式",slug:"tormb-形式",normalizedTitle:"tormb 形式",charIndex:5403},{level:2,title:"字符串反转",slug:"字符串反转",normalizedTitle:"字符串反转",charIndex:5845}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"冒泡排序 升序算法 降序排列 数组去重 最大值 / 最小值 找出字符串中重复次数最多 随机生成范围内不重复数字 查找 1-9 中缺少的数字 toRMB 形式 字符串反转",content:"# 冒泡排序\nfunction bubbleSort(arr) {\n  var i = arr.length - 1; //初始时,最后位置保持不变\n  while (i > 0) {\n    var pos = 0; //每趟开始时,无记录交换\n    for (var j = 0; j < i; j++)\n      console.log(arr[j], arr[j + 1])\n    if (arr[j] > arr[j + 1]) {\n      pos = j; //记录交换的位置\n      var tmp = arr[j];\n      arr[j] = arr[j + 1];\n      arr[j + 1] = tmp;\n    }\n    i = pos; //为下一趟排序作准备\n  }\n  return arr;\n}\nvar arr = [3, 44, 38, 5, 47, 15, 36, 26, 27, 2, 46, 4, 19, 50, 48];\nconsole.log(bubbleSort(arr));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 升序算法\nfunction AscOrder(arr) {\n  for (var i = 0; i < arr.length; i++) {\n    for (var j = 0; j < arr.length - i; j++) {\n      if (arr[j] > arr[j + 1]) {\n        var c = arr[j]; //交换两个变量的位置\n        arr[j] = arr[j + 1];\n        arr[j + 1] = c;\n      }\n    };\n  };\n  return arr.toString();\n}\nconsole.log(AscOrder([23, 45, 18, 37, 92, 13, 24]));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 降序排列\nfunction DesOrder(arr) {\n  for (var i = 0; i < arr.length; i++) {\n    for (var j = 0; j < arr.length - i; j++) {\n      if (arr[j] < arr[j + 1]) {\n        var c = arr[j]; //交换两个变量的位置\n        arr[j] = arr[j + 1];\n        arr[j + 1] = c;\n      }\n    };\n  };\n  return arr.toString();\n}\nconsole.log(DesOrder([13, 45, 18, 37, 9, 13, 24]));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 数组去重\nfunction unique(arr) {\n  var result = [];\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var arri = arr[i];\n    if (result.indexOf(arri) < 0) {\n      result.push(arri);\n    }\n\n  }\n  return result;\n}\n\nfunction unique(arr) {\n  for (let i = 0, len = arr.length; i < len; i++) {\n    for (let j = i + 1; j < len; j++) {\n      if (arr[i] == arr[j]) {\n        arr.splice(j, 1)\n        len--;\n        j--\n      }\n    }\n  }\n  return arr\n}\n\nfunction unique(arr) {\n  return arr.filter((item, index) => {\n    return arr.indexOf(item) === index\n  })\n}\n\nfunction unique(arr) {\n  return [...new Set(arr)]\n}\n\nfunction unique(arr) {\n  var obj = []\n  return arr.filter(item => {\n    console.log(obj);\n    return obj.hasOwnProperty(typeof item + item) ?\n      false : (obj[typeof item + item] = true)\n  })\n}\n\nfunction unique(array) {\n  // res用来存储结果\n  var res = [];\n  for (var i = 0, arrayLen = array.length; i < arrayLen; i++) {\n    for (var j = 0, resLen = res.length; j < resLen; j++) {\n      if (array[i] === res[j]) {\n        break;\n      }\n    }\n    // 如果array[i]是唯一的，那么执行完循环，j等于resLen\n    if (j === resLen) {\n      res.push(array[i])\n    }\n  }\n  return res;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n# 最大值 / 最小值\n * 最小值\n\nfunction MinNum(arr) {\n  var min = arr[0];\n  for (var i = 0; i < arr.length; i++) {\n    if (min > arr[i]) {\n      min = arr[i]\n    }\n  }\n  return min;\n}\nconsole.log(MinNum([2, 3, -44, 555, 222]))\n\n// 最小值\nMath.min.apply(Math, [32, 18, 38, 12, 43, 31, 17])\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * 最大值\n\nfunction MaxNum(arr) {\n  var max = arr[0];\n  for (var i = 0; i < arr.length; i++) {\n    if (max < arr[i]) {\n      max = arr[i];\n    }\n  }\n  return max;\n}\n\nconsole.log(MaxNum([2, 3, 3, 42, 1123]))\n\nvar a = [1, 2, 3, [5, 6],\n  [1, 4, 8]\n];\nvar ta = a.join(\",\").split(\",\"); //转化为一维数组\nconsole.log(Math.max.apply(null, ta)); //最大值\nconsole.log(Math.min.apply(null, ta)); //最小值\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 找出字符串中重复次数最多\nfunction deduplication(str) {\n\n  var json = {};\n  //将存在字符的加入到json中；\n  for (var i = 0; i < str.length; i++) {\n    if (!json[str.charAt(i)]) {\n      json[str.charAt(i)] = 1;\n    } else {\n      json[str.charAt(i)]++;\n    }\n  }\n\n  //遍历json对象。比较json[key]的value值大小\n  var iMax = 0;\n  var iIndex = \"\";\n  var str = '';\n  for (var j in json) {\n    str += j\n    if (json[j] > iMax) {\n      iMax = json[j];\n      iIndex = j;\n    }\n  }\n  console.log('去重后的为: ' + str);\n  console.log('出现次数最多的是: ' + iIndex + \" 出现了: \" + iMax);\n}\nvar str = 'asdfssmmmaaasasasasaa';\ndeduplication(str);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 随机生成范围内不重复数字\n// 随机生成范围内不重复数字\n// aArray空数组 len数组个数  min最小值  max最大值\nfunction randomNumber(aArray, len, min, max) {\n  if (len >= (max - min)) {\n    console.log('超过' + min + '-' + max + '之间的个数范围' + (max - min - 1) + '个的总数');\n    return;\n  }\n  if (aArray.length >= len) {\n    aArray.sort(function (a, b) {\n      return a - b\n    });\n    return aArray;\n  }\n  var nowNub = parseInt(Math.random() * (max - min - 1)) + (min + 1);\n  //判断数组内是否有重复\n  for (var j = 0; j < aArray.length; j++) {\n    if (nowNub == aArray[j]) {\n      // 再次执行函数\n      randomNumber(aArray, len, min, max);\n      return;\n    }\n  }\n  // 添加到数组\n  aArray.push(nowNub);\n  //再次执行函数\n  randomNumber(aArray, len, min, max);\n  return aArray;\n}\n\n//定义一个空数组接收\nvar arr2 = [];\nrandomNumber(arr2, 8, 1, 10);\nconsole.log(arr2);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# 查找 1-9 中缺少的数字\nvar str = '236489';\nif (str.indexOf('1') != -1) {\n  findOneOfNumber(str);\n} else {\n  findOneOfNumber(str);\n  console.log('1');\n}\n\nfunction findOneOfNumber(str) {\n  str = str.split('').sort(function (a, b) {\n    return a - b;\n  }).reverse();\n  console.log(str);\n  for (var i = 0; i < (str.length - 1); i++) {\n    var s = str[i] - str[i + 1];\n    //console.log(s)\n    if (s == 1) {\n\n    } else {\n      console.log(str[i] + \"***\" + str[i + 1]);\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# toRMB 形式\n// 将数字12345678转化成 RMB形式\nfunction re(str) {\n  str += '';\n  return str.split(\"\").reverse().join(\"\");\n}\n\nfunction toRMB(num) {\n  var tmp = '';\n  for (var i = 1; i <= re(num).length; i++) {\n    tmp += re(num)[i - 1];\n    // console.log(tmp)\n    if (i % 3 == 0 && i != re(num).length) {\n      tmp += ',';\n    }\n  }\n  return re(tmp);\n}\n\nvar num1 = 12345789;\nconsole.log(toRMB(num1));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# 字符串反转\n// 字符串反转，如将 '12345678' 变成 '87654321'\n// split : 将字符串分割成字符串数组,反序,在将数组转换为字符串\nvar str = '123456789';\nstr = str.split('').reverse().join('');\nconsole.log(str);\n\n\n1\n2\n3\n4\n5",normalizedContent:"# 冒泡排序\nfunction bubblesort(arr) {\n  var i = arr.length - 1; //初始时,最后位置保持不变\n  while (i > 0) {\n    var pos = 0; //每趟开始时,无记录交换\n    for (var j = 0; j < i; j++)\n      console.log(arr[j], arr[j + 1])\n    if (arr[j] > arr[j + 1]) {\n      pos = j; //记录交换的位置\n      var tmp = arr[j];\n      arr[j] = arr[j + 1];\n      arr[j + 1] = tmp;\n    }\n    i = pos; //为下一趟排序作准备\n  }\n  return arr;\n}\nvar arr = [3, 44, 38, 5, 47, 15, 36, 26, 27, 2, 46, 4, 19, 50, 48];\nconsole.log(bubblesort(arr));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 升序算法\nfunction ascorder(arr) {\n  for (var i = 0; i < arr.length; i++) {\n    for (var j = 0; j < arr.length - i; j++) {\n      if (arr[j] > arr[j + 1]) {\n        var c = arr[j]; //交换两个变量的位置\n        arr[j] = arr[j + 1];\n        arr[j + 1] = c;\n      }\n    };\n  };\n  return arr.tostring();\n}\nconsole.log(ascorder([23, 45, 18, 37, 92, 13, 24]));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 降序排列\nfunction desorder(arr) {\n  for (var i = 0; i < arr.length; i++) {\n    for (var j = 0; j < arr.length - i; j++) {\n      if (arr[j] < arr[j + 1]) {\n        var c = arr[j]; //交换两个变量的位置\n        arr[j] = arr[j + 1];\n        arr[j + 1] = c;\n      }\n    };\n  };\n  return arr.tostring();\n}\nconsole.log(desorder([13, 45, 18, 37, 9, 13, 24]));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 数组去重\nfunction unique(arr) {\n  var result = [];\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var arri = arr[i];\n    if (result.indexof(arri) < 0) {\n      result.push(arri);\n    }\n\n  }\n  return result;\n}\n\nfunction unique(arr) {\n  for (let i = 0, len = arr.length; i < len; i++) {\n    for (let j = i + 1; j < len; j++) {\n      if (arr[i] == arr[j]) {\n        arr.splice(j, 1)\n        len--;\n        j--\n      }\n    }\n  }\n  return arr\n}\n\nfunction unique(arr) {\n  return arr.filter((item, index) => {\n    return arr.indexof(item) === index\n  })\n}\n\nfunction unique(arr) {\n  return [...new set(arr)]\n}\n\nfunction unique(arr) {\n  var obj = []\n  return arr.filter(item => {\n    console.log(obj);\n    return obj.hasownproperty(typeof item + item) ?\n      false : (obj[typeof item + item] = true)\n  })\n}\n\nfunction unique(array) {\n  // res用来存储结果\n  var res = [];\n  for (var i = 0, arraylen = array.length; i < arraylen; i++) {\n    for (var j = 0, reslen = res.length; j < reslen; j++) {\n      if (array[i] === res[j]) {\n        break;\n      }\n    }\n    // 如果array[i]是唯一的，那么执行完循环，j等于reslen\n    if (j === reslen) {\n      res.push(array[i])\n    }\n  }\n  return res;\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n# 最大值 / 最小值\n * 最小值\n\nfunction minnum(arr) {\n  var min = arr[0];\n  for (var i = 0; i < arr.length; i++) {\n    if (min > arr[i]) {\n      min = arr[i]\n    }\n  }\n  return min;\n}\nconsole.log(minnum([2, 3, -44, 555, 222]))\n\n// 最小值\nmath.min.apply(math, [32, 18, 38, 12, 43, 31, 17])\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * 最大值\n\nfunction maxnum(arr) {\n  var max = arr[0];\n  for (var i = 0; i < arr.length; i++) {\n    if (max < arr[i]) {\n      max = arr[i];\n    }\n  }\n  return max;\n}\n\nconsole.log(maxnum([2, 3, 3, 42, 1123]))\n\nvar a = [1, 2, 3, [5, 6],\n  [1, 4, 8]\n];\nvar ta = a.join(\",\").split(\",\"); //转化为一维数组\nconsole.log(math.max.apply(null, ta)); //最大值\nconsole.log(math.min.apply(null, ta)); //最小值\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 找出字符串中重复次数最多\nfunction deduplication(str) {\n\n  var json = {};\n  //将存在字符的加入到json中；\n  for (var i = 0; i < str.length; i++) {\n    if (!json[str.charat(i)]) {\n      json[str.charat(i)] = 1;\n    } else {\n      json[str.charat(i)]++;\n    }\n  }\n\n  //遍历json对象。比较json[key]的value值大小\n  var imax = 0;\n  var iindex = \"\";\n  var str = '';\n  for (var j in json) {\n    str += j\n    if (json[j] > imax) {\n      imax = json[j];\n      iindex = j;\n    }\n  }\n  console.log('去重后的为: ' + str);\n  console.log('出现次数最多的是: ' + iindex + \" 出现了: \" + imax);\n}\nvar str = 'asdfssmmmaaasasasasaa';\ndeduplication(str);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 随机生成范围内不重复数字\n// 随机生成范围内不重复数字\n// aarray空数组 len数组个数  min最小值  max最大值\nfunction randomnumber(aarray, len, min, max) {\n  if (len >= (max - min)) {\n    console.log('超过' + min + '-' + max + '之间的个数范围' + (max - min - 1) + '个的总数');\n    return;\n  }\n  if (aarray.length >= len) {\n    aarray.sort(function (a, b) {\n      return a - b\n    });\n    return aarray;\n  }\n  var nownub = parseint(math.random() * (max - min - 1)) + (min + 1);\n  //判断数组内是否有重复\n  for (var j = 0; j < aarray.length; j++) {\n    if (nownub == aarray[j]) {\n      // 再次执行函数\n      randomnumber(aarray, len, min, max);\n      return;\n    }\n  }\n  // 添加到数组\n  aarray.push(nownub);\n  //再次执行函数\n  randomnumber(aarray, len, min, max);\n  return aarray;\n}\n\n//定义一个空数组接收\nvar arr2 = [];\nrandomnumber(arr2, 8, 1, 10);\nconsole.log(arr2);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# 查找 1-9 中缺少的数字\nvar str = '236489';\nif (str.indexof('1') != -1) {\n  findoneofnumber(str);\n} else {\n  findoneofnumber(str);\n  console.log('1');\n}\n\nfunction findoneofnumber(str) {\n  str = str.split('').sort(function (a, b) {\n    return a - b;\n  }).reverse();\n  console.log(str);\n  for (var i = 0; i < (str.length - 1); i++) {\n    var s = str[i] - str[i + 1];\n    //console.log(s)\n    if (s == 1) {\n\n    } else {\n      console.log(str[i] + \"***\" + str[i + 1]);\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# tormb 形式\n// 将数字12345678转化成 rmb形式\nfunction re(str) {\n  str += '';\n  return str.split(\"\").reverse().join(\"\");\n}\n\nfunction tormb(num) {\n  var tmp = '';\n  for (var i = 1; i <= re(num).length; i++) {\n    tmp += re(num)[i - 1];\n    // console.log(tmp)\n    if (i % 3 == 0 && i != re(num).length) {\n      tmp += ',';\n    }\n  }\n  return re(tmp);\n}\n\nvar num1 = 12345789;\nconsole.log(tormb(num1));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# 字符串反转\n// 字符串反转，如将 '12345678' 变成 '87654321'\n// split : 将字符串分割成字符串数组,反序,在将数组转换为字符串\nvar str = '123456789';\nstr = str.split('').reverse().join('');\nconsole.log(str);\n\n\n1\n2\n3\n4\n5",charsets:{cjk:!0}},{title:"二叉树算法",frontmatter:{title:"二叉树算法",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["算法"],categories:["libs"],readingShow:"top"},regularPath:"/libs/binaryTree.html",relativePath:"libs/binaryTree.md",key:"v-909fc8aa",path:"/libs/binaryTree.html",headers:[{level:2,title:"基本结构",slug:"基本结构",normalizedTitle:"基本结构",charIndex:15},{level:2,title:"中序排列查询",slug:"中序排列查询",normalizedTitle:"中序排列查询",charIndex:1013},{level:2,title:"前序排列查询",slug:"前序排列查询",normalizedTitle:"前序排列查询",charIndex:2108},{level:2,title:"后序排列查询",slug:"后序排列查询",normalizedTitle:"后序排列查询",charIndex:2728},{level:2,title:"最大值",slug:"最大值",normalizedTitle:"最大值",charIndex:3343},{level:2,title:"最小值",slug:"最小值",normalizedTitle:"最小值",charIndex:3700},{level:2,title:"查询节点",slug:"查询节点",normalizedTitle:"查询节点",charIndex:4033},{level:2,title:"移除节点",slug:"移除节点",normalizedTitle:"移除节点",charIndex:4448},{level:2,title:"其他方法",slug:"其他方法",normalizedTitle:"其他方法",charIndex:5758},{level:2,title:"完整版",slug:"完整版",normalizedTitle:"完整版",charIndex:6883}],lastUpdated:"2020/7/22 上午4:40:52",headersStr:"基本结构 中序排列查询 前序排列查询 后序排列查询 最大值 最小值 查询节点 移除节点 其他方法 完整版",content:" * 原文：二叉树算法\n\n# 基本结构\nfunction BinaryTree(data, left, right) {\n  this.data = data; // 节点的值\n  this.left = left; // 左节点\n  this.right = right; // 右节点\n}\n\nfunction BST() {\n  this.root = null;\n}\n\n/**\n * 定义插入属性\n * @param key int|float 要插入的值\n */\nBST.prototype.insert = function(data) {\n  var newNode = new BinaryTree(data, null, null);\n  // 如果没有root节点\n  if (this.root === null) {\n    this.root = newNode;\n  } else {\n    this.insertNode(this.root, newNode);\n  }\n};\n\n/**\n * 插入数据 left小 ，right大\n * @param node obj 节点数据\n * @param newNode obj 要插入的节点数据\n */\nBST.prototype.insertNode = function(node, newNode) {\n  if (newNode.data < node.data) {\n    if (node.left === null) {\n      node.left = newNode;\n    } else {\n      this.insertNode(node.left, newNode);\n    }\n  } else {\n    if (node.right === null) {\n      node.right = newNode;\n    } else {\n      this.insertNode(node.right, newNode);\n    }\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# 中序排列查询\n * 示例图\n   \n   \n   \n   \n * 代码\n   \n   \n\n/**\n * 中序排列查询\n * @param node obj 节点\n * @returns {Array}\n */\nBST.prototype.inOrder = function(sort = \"ASC\") {\n  var nodeArr = [];\n  var node = this.root;\n  if (node !== null) {\n    if (sort.toUpperCase() == \"DESC\") {\n      this.inOrderDescNode(node, nodeArr);\n    } else {\n      this.inOrderAscNode(node, nodeArr);\n    }\n  }\n  return nodeArr;\n};\n\n/**\n * 中序查询-升序(左->中->右)\n * @param node obj 节点\n * @param nodeArr array 存储排序的值\n */\nBST.prototype.inOrderAscNode = function(node, nodeArr) {\n  if (node !== null) {\n    this.inOrderAscNode(node.left, nodeArr);\n    nodeArr.push(node.data);\n    this.inOrderAscNode(node.right, nodeArr);\n  }\n};\n\n/**\n * 中序查询-降序(右->中->左)\n * @param node obj 节点\n * @param nodeArr array 存储排序的值\n */\nBST.prototype.inOrderDescNode = function(node, nodeArr) {\n  if (node !== null) {\n    this.inOrderDescNode(node.right, nodeArr);\n    nodeArr.push(node.data);\n    this.inOrderDescNode(node.left, nodeArr);\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n# 前序排列查询\n * 示例图\n   \n   \n   \n   \n * 代码\n   \n   \n\n/**\n * 前序查询\n * @param node obj 节点\n * @returns {Array}\n */\nBST.prototype.preOrder = function(node) {\n  var nodeArr = [];\n  var node = this.root;\n  if (node !== null) {\n    this.preOrderNode(node, nodeArr);\n  }\n  return nodeArr;\n};\n\n/**\n * 前序(中->左->右)\n * @param node obj 节点\n * @param nodeArr 存储查询的值\n */\nBST.prototype.preOrderNode = function(node, nodeArr) {\n  if (node !== null) {\n    nodeArr.push(node.data);\n    this.preOrderNode(node.left, nodeArr);\n    this.preOrderNode(node.right, nodeArr);\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 后序排列查询\n * 示例图\n   \n   \n   \n   \n * 代码\n   \n   \n\n/**\n * 后序查询\n * @param node obj 节点\n * @returns {Array}\n */\nBST.prototype.reOrder = function(node) {\n  var nodeArr = [];\n  var node = this.root;\n  if (node !== null) {\n    this.reOrderNode(node, nodeArr);\n  }\n  return nodeArr;\n};\n\n/**\n * 后序(左->右->中)\n * @param node obj 节点\n * @param nodeArr 存储查询的值\n */\nBST.prototype.reOrderNode = function(node, nodeArr) {\n  if (node !== null) {\n    this.reOrderNode(node.left, nodeArr);\n    this.reOrderNode(node.right, nodeArr);\n    nodeArr.push(node.data);\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 最大值\nBST.prototype.max = function(node) {\n  var node = this.root;\n  var newNode = this.maxNode(node);\n  return newNode === null ? null : newNode.data;\n};\n\nBST.prototype.maxNode = function(node) {\n  if (node === null) return null;\n  while (node !== null && node.right !== null) {\n    node = node.right;\n  }\n  return node;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 最小值\nBST.prototype.min = function(node) {\n  var node = this.root;\n  var newNode = this.minNode(node);\n  return newNode === null ? null : newNode.data;\n};\n\nBST.prototype.minNode = function(node) {\n  if (node === null) return null;\n  if (node.left !== null) return this.minNode(node.left);\n  return node;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 查询节点\nBST.prototype.searchNode = function(node, data) {\n  if (node === null) {\n    return false;\n  }\n  if (data < node.data) {\n    return this.searchNode(node.left, data);\n  } else if (data > node.data) {\n    return this.searchNode(node.right, data);\n  } else {\n    return true;\n  }\n};\n\nBST.prototype.search = function(data) {\n  return this.searchNode(this.root, data);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 移除节点\n/**\n * 移除一个节点\n * @param data int|float 要移除的节点值\n * @param node obj 节点\n * @returns {*}\n */\nBST.prototype.remove = function(data) {\n  var node = this.root;\n  return this.removeNode(node, data);\n};\n\n/**\n * 移除节点\n * @param data int|float 要移除的节点值\n * @param node obj 节点\n * @returns {*}\n */\nBST.prototype.removeNode = function(node, data) {\n  if (node === null) return null;\n  if (data < node.data) {\n    node.left = this.removeNode(node.left, data);\n    return node;\n  } else if (data > node.data) {\n    node.right = this.removeNode(node.right, data);\n    return node;\n  } else {\n    // 这事判断第一种情况,没有左右分支的情况下,\n    if (node.left === null && node.right === null) {\n      node = null;\n      return node;\n    }\n    // 这是左子树为空的情况\n    if (node.left === null) {\n      node = node.right;\n      return node;\n    } else if (node.right === null) {\n      // 这是右子树为空的情况\n      node = node.left;\n      return node;\n    } else {\n      // 如果左右两个分支都存在的时候\n      // 寻找该节点的右节点的最小节点\n      var aux = this.minNode(node.right);\n      // 将改节点与找到的最小节点值互换\n      node.data = aux.data;\n      // 删掉替换后的最小节点\n      node.right = this.removeNode(node.right, aux.data);\n      return node;\n    }\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n# 其他方法\n// 求二叉树节点个数\nBST.prototype.sizeOfNode = function(node) {\n  if (!node) {\n    return 0;\n  }\n  return 1 + this.sizeOfNode(node.left) + this.sizeOfNode(node.right);\n};\n\n// 求二叉树层级\nBST.prototype.levelOfNode = function(node) {\n  if (!node) {\n    return 0;\n  }\n  return (\n    Math.max(this.levelOfNode(node.left), this.levelOfNode(node.right)) + 1\n  );\n};\n\n// 求二叉树第K层的节点个数\nBST.prototype.numKLevel = function(node, k) {\n  if (k < 0) {\n    return 0;\n  }\n  if (node === null) {\n    return 0;\n  }\n  if (node !== null && k === 1) {\n    return 1;\n  }\n  return this.numKLevel(node.left, k - 1) + this.numKLevel(node.right, k - 1);\n};\n\n// 比较二叉树是否相同\nBST.prototype.compareNodes = function(node1, node2) {\n  if (node1 === null && node2 === null) {\n    return true;\n  }\n  if (\n    (node1 !== null && node2 === null) ||\n    (node1 === null && node2 !== null)\n  ) {\n    return false;\n  }\n  return (\n    this.compareNodes(node1.left, node2.left) &&\n    this.compareNodes(node1.right, node2.right)\n  );\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n# 完整版\n// node节点\nfunction BinaryTree(data, left, right) {\n  this.data = data; // 节点的值\n  this.left = left; // 左节点\n  this.right = right; // 右节点\n}\n\nfunction BST() {\n  this.root = null;\n}\n\n/**\n * 定义插入属性\n * @param key int|float 要插入的值\n */\nBST.prototype.insert = function (data) {\n  var newNode = new BinaryTree(data, null, null);\n  // 如果没有root节点\n  if (this.root === null) {\n    this.root = newNode;\n  } else {\n    this.insertNode(this.root, newNode);\n  }\n}\n\n/**\n * 插入数据 left小 ，right大\n * @param node obj 节点数据\n * @param newNode obj 要插入的节点数据\n */\nBST.prototype.insertNode = function (node, newNode) {\n  if (newNode.data < node.data) {\n    if (node.left === null) {\n      node.left = newNode;\n    } else {\n      this.insertNode(node.left, newNode);\n    }\n  } else {\n    if (node.right === null) {\n      node.right = newNode;\n    } else {\n      this.insertNode(node.right, newNode);\n    }\n  }\n};\n\n/**\n * 中序排列查询\n * @param node obj 节点\n * @returns {Array}\n */\nBST.prototype.inOrder = function (sort = \"ASC\") {\n  var nodeArr = [];\n  var node = this.root;\n  if (node !== null) {\n    if (sort.toUpperCase() == \"DESC\") {\n      this.inOrderDescNode(node, nodeArr);\n    } else {\n      this.inOrderAscNode(node, nodeArr);\n    }\n  }\n  return nodeArr;\n};\n\n/**\n * 中序查询-升序(左->中->右)\n * @param node obj 节点\n * @param nodeArr array 存储排序的值\n */\nBST.prototype.inOrderAscNode = function (node, nodeArr) {\n  if (node !== null) {\n    this.inOrderAscNode(node.left, nodeArr);\n    nodeArr.push(node.data);\n    this.inOrderAscNode(node.right, nodeArr);\n  }\n};\n\n/**\n * 中序查询-降序(右->中->左)\n * @param node obj 节点\n * @param nodeArr array 存储排序的值\n */\nBST.prototype.inOrderDescNode = function (node, nodeArr) {\n  if (node !== null) {\n    this.inOrderDescNode(node.right, nodeArr);\n    nodeArr.push(node.data);\n    this.inOrderDescNode(node.left, nodeArr);\n  }\n};\n\n/**\n * 前序查询\n * @param node obj 节点\n * @returns {Array}\n */\nBST.prototype.preOrder = function (node) {\n  var nodeArr = [];\n  var node = this.root;\n  if (node !== null) {\n    this.preOrderNode(node, nodeArr);\n  }\n  return nodeArr;\n};\n\n/**\n * 前序(中->左->右)\n * @param node obj 节点\n * @param nodeArr 存储查询的值\n */\nBST.prototype.preOrderNode = function (node, nodeArr) {\n  if (node !== null) {\n    nodeArr.push(node.data);\n    this.preOrderNode(node.left, nodeArr);\n    this.preOrderNode(node.right, nodeArr);\n  }\n};\n\n\n/**\n * 后序查询\n * @param node obj 节点\n * @returns {Array}\n */\nBST.prototype.reOrder = function (node) {\n  var nodeArr = [];\n  var node = this.root;\n  if (node !== null) {\n    this.reOrderNode(node, nodeArr);\n  }\n  return nodeArr;\n};\n\n/**\n * 后序(左->右->中)\n * @param node obj 节点\n * @param nodeArr 存储查询的值\n */\nBST.prototype.reOrderNode = function (node, nodeArr) {\n  if (node !== null) {\n    this.reOrderNode(node.left, nodeArr);\n    this.reOrderNode(node.right, nodeArr);\n    nodeArr.push(node.data);\n  }\n};\n\n\n/**\n * 最大值\n * @param node obj 节点\n * @returns {*}\n */\nBST.prototype.max = function (node) {\n  var node = this.root;\n  var newNode = this.maxNode(node);\n  return newNode === null ? null : newNode.data;\n};\n\n/**\n * 查找一个节点最大的值\n * @param node obj 节点\n * @returns {*}\n */\nBST.prototype.maxNode = function (node) {\n  if (node === null) return null;\n  while (node !== null && node.right !== null) {\n    node = node.right;\n  }\n  return node;\n};\n\n/**\n * 最小值\n * @param node obj 节点\n * @returns {*}\n */\nBST.prototype.min = function (node) {\n  var node = this.root;\n  var newNode = this.minNode(node);\n  return newNode === null ? null : newNode.data;\n};\n\n/**\n * 查找一个节点最小值\n * @param node obj 节点\n * @returns {*}\n */\nBST.prototype.minNode = function (node) {\n  if (node === null) return null;\n  if (node.left !== null) return this.minNode(node.left);\n  return node;\n};\n\nBST.prototype.searchNode = function (node, data) {\n  if (node === null) {\n    return false\n  }\n  if (data < node.data) {\n    return this.searchNode(node.left, data)\n  } else if (data > node.data) {\n    return this.searchNode(node.right, data)\n  } else {\n    return true\n  }\n}\n\n/**\n * 查找一个节点是否存在\n * @param data 节点值\n * @returns {*}\n */\nBST.prototype.search = function (data) {\n  return this.searchNode(this.root, data)\n}\n\n/**\n * 移除一个节点\n * @param data int|float 要移除的节点值\n * @param node obj 节点\n * @returns {*}\n */\nBST.prototype.remove = function (data) {\n  var node = this.root;\n  return this.removeNode(node, data);\n};\n\n/**\n * 移除节点\n * @param data int|float 要移除的节点值\n * @param node obj 节点\n * @returns {*}\n */\nBST.prototype.removeNode = function (node, data) {\n  if (node === null) return null;\n  if (data < node.data) {\n    node.left = this.removeNode(node.left, data)\n    return node\n  } else if (data > node.data) {\n    node.right = this.removeNode(node.right, data)\n    return node\n  } else {\n    // 这事判断第一种情况,没有左右分支的情况下,\n    if (node.left === null && node.right === null) {\n      node = null\n      return node\n    }\n    // 这是左子树为空的情况\n    if (node.left === null) {\n      node = node.right\n      return node\n    } else if (node.right === null) {\n      // 这是右子树为空的情况\n      node = node.left\n      return node\n    } else {\n      // 如果左右两个分支都存在的时候\n      // 寻找该节点的右节点的最小节点\n      var aux = this.minNode(node.right)\n      // 将改节点与找到的最小节点值互换\n      node.data = aux.data\n      // 删掉替换后的最小节点\n      node.right = this.removeNode(node.right, aux.data)\n      return node\n    }\n  }\n};\n\n// 求二叉树节点个数\nBST.prototype.sizeOfNode = function (node) {\n  if (!node) {\n    return 0\n  }\n  return 1 + this.sizeOfNode(node.left) + this.sizeOfNode(node.right);\n}\n\n// 求二叉树层级\nBST.prototype.levelOfNode = function (node) {\n  if (!node) {\n    return 0\n  }\n  return Math.max(this.levelOfNode(node.left), this.levelOfNode(node.right)) + 1\n}\n\n// 求二叉树第K层的节点个数\nBST.prototype.numKLevel = function (node, k) {\n  if (k < 0) {\n    return 0\n  }\n  if (node === null) {\n    return 0\n  }\n  if (node !== null && k === 1) {\n    return 1\n  }\n  return this.numKLevel(node.left, k - 1) + this.numKLevel(node.right, k - 1)\n}\n\n// 比较二叉树是否相同\nBST.prototype.compareNodes = function (node1, node2) {\n  if (node1 === null && node2 === null) {\n    return true\n  }\n  if ((node1 !== null && node2 === null) || (node1 === null && node2 !== null)) {\n    return false\n  }\n  return (this.compareNodes(node1.left, node2.left) && this.compareNodes(node1.right, node2.right))\n}\n\n\n//测试数据\nvar bst = new BST();\nvar nums = [10, 3, 18, 2, 4, 13, 21, 9, 8, 9];\nfor (var i = 0; i < nums.length; i++) {\n  bst.insert(nums[i]);\n}\n\n// console.log(bst);\n\n// console.log(\"inOrder-Asc: \", bst.inOrder());\n// console.log(\"inOrder-Desc: \", bst.inOrder('DESC'));\n\n// console.log('preOrder: ', bst.preOrder());\n\n// console.log('reOrder: ', bst.reOrder());\n\n// console.log('max: ', bst.max());\n// console.log('min: ', bst.min());\n\n// console.log('search: ', bst.search(21));\n// console.log('search: ', bst.search(22));\n\n// console.log('remove: ', bst.remove(2));\n// console.log('remove: ', bst.remove(9));\n// console.log('remove: ', bst.remove(18));\n\n// console.log('sizeOfNode: ', bst.sizeOfNode(bst.root));\n\n// console.log('levelOfNode: ', bst.levelOfNode(bst.root));\n\n// console.log('numKLevel: ', bst.numKLevel(bst.root, 3));\n\nvar bst1 =  {\n  data: 10,\n  left:  {\n    data: 3,\n    left:  { data: 2, left: null, right: null },\n    right: { data: 21, left: null, right: null }\n  },\n  right:  null\n}\nconsole.log('compareNodes: ', bst.compareNodes(bst.root, bst1));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350",normalizedContent:" * 原文：二叉树算法\n\n# 基本结构\nfunction binarytree(data, left, right) {\n  this.data = data; // 节点的值\n  this.left = left; // 左节点\n  this.right = right; // 右节点\n}\n\nfunction bst() {\n  this.root = null;\n}\n\n/**\n * 定义插入属性\n * @param key int|float 要插入的值\n */\nbst.prototype.insert = function(data) {\n  var newnode = new binarytree(data, null, null);\n  // 如果没有root节点\n  if (this.root === null) {\n    this.root = newnode;\n  } else {\n    this.insertnode(this.root, newnode);\n  }\n};\n\n/**\n * 插入数据 left小 ，right大\n * @param node obj 节点数据\n * @param newnode obj 要插入的节点数据\n */\nbst.prototype.insertnode = function(node, newnode) {\n  if (newnode.data < node.data) {\n    if (node.left === null) {\n      node.left = newnode;\n    } else {\n      this.insertnode(node.left, newnode);\n    }\n  } else {\n    if (node.right === null) {\n      node.right = newnode;\n    } else {\n      this.insertnode(node.right, newnode);\n    }\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# 中序排列查询\n * 示例图\n   \n   \n   \n   \n * 代码\n   \n   \n\n/**\n * 中序排列查询\n * @param node obj 节点\n * @returns {array}\n */\nbst.prototype.inorder = function(sort = \"asc\") {\n  var nodearr = [];\n  var node = this.root;\n  if (node !== null) {\n    if (sort.touppercase() == \"desc\") {\n      this.inorderdescnode(node, nodearr);\n    } else {\n      this.inorderascnode(node, nodearr);\n    }\n  }\n  return nodearr;\n};\n\n/**\n * 中序查询-升序(左->中->右)\n * @param node obj 节点\n * @param nodearr array 存储排序的值\n */\nbst.prototype.inorderascnode = function(node, nodearr) {\n  if (node !== null) {\n    this.inorderascnode(node.left, nodearr);\n    nodearr.push(node.data);\n    this.inorderascnode(node.right, nodearr);\n  }\n};\n\n/**\n * 中序查询-降序(右->中->左)\n * @param node obj 节点\n * @param nodearr array 存储排序的值\n */\nbst.prototype.inorderdescnode = function(node, nodearr) {\n  if (node !== null) {\n    this.inorderdescnode(node.right, nodearr);\n    nodearr.push(node.data);\n    this.inorderdescnode(node.left, nodearr);\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n# 前序排列查询\n * 示例图\n   \n   \n   \n   \n * 代码\n   \n   \n\n/**\n * 前序查询\n * @param node obj 节点\n * @returns {array}\n */\nbst.prototype.preorder = function(node) {\n  var nodearr = [];\n  var node = this.root;\n  if (node !== null) {\n    this.preordernode(node, nodearr);\n  }\n  return nodearr;\n};\n\n/**\n * 前序(中->左->右)\n * @param node obj 节点\n * @param nodearr 存储查询的值\n */\nbst.prototype.preordernode = function(node, nodearr) {\n  if (node !== null) {\n    nodearr.push(node.data);\n    this.preordernode(node.left, nodearr);\n    this.preordernode(node.right, nodearr);\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 后序排列查询\n * 示例图\n   \n   \n   \n   \n * 代码\n   \n   \n\n/**\n * 后序查询\n * @param node obj 节点\n * @returns {array}\n */\nbst.prototype.reorder = function(node) {\n  var nodearr = [];\n  var node = this.root;\n  if (node !== null) {\n    this.reordernode(node, nodearr);\n  }\n  return nodearr;\n};\n\n/**\n * 后序(左->右->中)\n * @param node obj 节点\n * @param nodearr 存储查询的值\n */\nbst.prototype.reordernode = function(node, nodearr) {\n  if (node !== null) {\n    this.reordernode(node.left, nodearr);\n    this.reordernode(node.right, nodearr);\n    nodearr.push(node.data);\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 最大值\nbst.prototype.max = function(node) {\n  var node = this.root;\n  var newnode = this.maxnode(node);\n  return newnode === null ? null : newnode.data;\n};\n\nbst.prototype.maxnode = function(node) {\n  if (node === null) return null;\n  while (node !== null && node.right !== null) {\n    node = node.right;\n  }\n  return node;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 最小值\nbst.prototype.min = function(node) {\n  var node = this.root;\n  var newnode = this.minnode(node);\n  return newnode === null ? null : newnode.data;\n};\n\nbst.prototype.minnode = function(node) {\n  if (node === null) return null;\n  if (node.left !== null) return this.minnode(node.left);\n  return node;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 查询节点\nbst.prototype.searchnode = function(node, data) {\n  if (node === null) {\n    return false;\n  }\n  if (data < node.data) {\n    return this.searchnode(node.left, data);\n  } else if (data > node.data) {\n    return this.searchnode(node.right, data);\n  } else {\n    return true;\n  }\n};\n\nbst.prototype.search = function(data) {\n  return this.searchnode(this.root, data);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 移除节点\n/**\n * 移除一个节点\n * @param data int|float 要移除的节点值\n * @param node obj 节点\n * @returns {*}\n */\nbst.prototype.remove = function(data) {\n  var node = this.root;\n  return this.removenode(node, data);\n};\n\n/**\n * 移除节点\n * @param data int|float 要移除的节点值\n * @param node obj 节点\n * @returns {*}\n */\nbst.prototype.removenode = function(node, data) {\n  if (node === null) return null;\n  if (data < node.data) {\n    node.left = this.removenode(node.left, data);\n    return node;\n  } else if (data > node.data) {\n    node.right = this.removenode(node.right, data);\n    return node;\n  } else {\n    // 这事判断第一种情况,没有左右分支的情况下,\n    if (node.left === null && node.right === null) {\n      node = null;\n      return node;\n    }\n    // 这是左子树为空的情况\n    if (node.left === null) {\n      node = node.right;\n      return node;\n    } else if (node.right === null) {\n      // 这是右子树为空的情况\n      node = node.left;\n      return node;\n    } else {\n      // 如果左右两个分支都存在的时候\n      // 寻找该节点的右节点的最小节点\n      var aux = this.minnode(node.right);\n      // 将改节点与找到的最小节点值互换\n      node.data = aux.data;\n      // 删掉替换后的最小节点\n      node.right = this.removenode(node.right, aux.data);\n      return node;\n    }\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n# 其他方法\n// 求二叉树节点个数\nbst.prototype.sizeofnode = function(node) {\n  if (!node) {\n    return 0;\n  }\n  return 1 + this.sizeofnode(node.left) + this.sizeofnode(node.right);\n};\n\n// 求二叉树层级\nbst.prototype.levelofnode = function(node) {\n  if (!node) {\n    return 0;\n  }\n  return (\n    math.max(this.levelofnode(node.left), this.levelofnode(node.right)) + 1\n  );\n};\n\n// 求二叉树第k层的节点个数\nbst.prototype.numklevel = function(node, k) {\n  if (k < 0) {\n    return 0;\n  }\n  if (node === null) {\n    return 0;\n  }\n  if (node !== null && k === 1) {\n    return 1;\n  }\n  return this.numklevel(node.left, k - 1) + this.numklevel(node.right, k - 1);\n};\n\n// 比较二叉树是否相同\nbst.prototype.comparenodes = function(node1, node2) {\n  if (node1 === null && node2 === null) {\n    return true;\n  }\n  if (\n    (node1 !== null && node2 === null) ||\n    (node1 === null && node2 !== null)\n  ) {\n    return false;\n  }\n  return (\n    this.comparenodes(node1.left, node2.left) &&\n    this.comparenodes(node1.right, node2.right)\n  );\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n# 完整版\n// node节点\nfunction binarytree(data, left, right) {\n  this.data = data; // 节点的值\n  this.left = left; // 左节点\n  this.right = right; // 右节点\n}\n\nfunction bst() {\n  this.root = null;\n}\n\n/**\n * 定义插入属性\n * @param key int|float 要插入的值\n */\nbst.prototype.insert = function (data) {\n  var newnode = new binarytree(data, null, null);\n  // 如果没有root节点\n  if (this.root === null) {\n    this.root = newnode;\n  } else {\n    this.insertnode(this.root, newnode);\n  }\n}\n\n/**\n * 插入数据 left小 ，right大\n * @param node obj 节点数据\n * @param newnode obj 要插入的节点数据\n */\nbst.prototype.insertnode = function (node, newnode) {\n  if (newnode.data < node.data) {\n    if (node.left === null) {\n      node.left = newnode;\n    } else {\n      this.insertnode(node.left, newnode);\n    }\n  } else {\n    if (node.right === null) {\n      node.right = newnode;\n    } else {\n      this.insertnode(node.right, newnode);\n    }\n  }\n};\n\n/**\n * 中序排列查询\n * @param node obj 节点\n * @returns {array}\n */\nbst.prototype.inorder = function (sort = \"asc\") {\n  var nodearr = [];\n  var node = this.root;\n  if (node !== null) {\n    if (sort.touppercase() == \"desc\") {\n      this.inorderdescnode(node, nodearr);\n    } else {\n      this.inorderascnode(node, nodearr);\n    }\n  }\n  return nodearr;\n};\n\n/**\n * 中序查询-升序(左->中->右)\n * @param node obj 节点\n * @param nodearr array 存储排序的值\n */\nbst.prototype.inorderascnode = function (node, nodearr) {\n  if (node !== null) {\n    this.inorderascnode(node.left, nodearr);\n    nodearr.push(node.data);\n    this.inorderascnode(node.right, nodearr);\n  }\n};\n\n/**\n * 中序查询-降序(右->中->左)\n * @param node obj 节点\n * @param nodearr array 存储排序的值\n */\nbst.prototype.inorderdescnode = function (node, nodearr) {\n  if (node !== null) {\n    this.inorderdescnode(node.right, nodearr);\n    nodearr.push(node.data);\n    this.inorderdescnode(node.left, nodearr);\n  }\n};\n\n/**\n * 前序查询\n * @param node obj 节点\n * @returns {array}\n */\nbst.prototype.preorder = function (node) {\n  var nodearr = [];\n  var node = this.root;\n  if (node !== null) {\n    this.preordernode(node, nodearr);\n  }\n  return nodearr;\n};\n\n/**\n * 前序(中->左->右)\n * @param node obj 节点\n * @param nodearr 存储查询的值\n */\nbst.prototype.preordernode = function (node, nodearr) {\n  if (node !== null) {\n    nodearr.push(node.data);\n    this.preordernode(node.left, nodearr);\n    this.preordernode(node.right, nodearr);\n  }\n};\n\n\n/**\n * 后序查询\n * @param node obj 节点\n * @returns {array}\n */\nbst.prototype.reorder = function (node) {\n  var nodearr = [];\n  var node = this.root;\n  if (node !== null) {\n    this.reordernode(node, nodearr);\n  }\n  return nodearr;\n};\n\n/**\n * 后序(左->右->中)\n * @param node obj 节点\n * @param nodearr 存储查询的值\n */\nbst.prototype.reordernode = function (node, nodearr) {\n  if (node !== null) {\n    this.reordernode(node.left, nodearr);\n    this.reordernode(node.right, nodearr);\n    nodearr.push(node.data);\n  }\n};\n\n\n/**\n * 最大值\n * @param node obj 节点\n * @returns {*}\n */\nbst.prototype.max = function (node) {\n  var node = this.root;\n  var newnode = this.maxnode(node);\n  return newnode === null ? null : newnode.data;\n};\n\n/**\n * 查找一个节点最大的值\n * @param node obj 节点\n * @returns {*}\n */\nbst.prototype.maxnode = function (node) {\n  if (node === null) return null;\n  while (node !== null && node.right !== null) {\n    node = node.right;\n  }\n  return node;\n};\n\n/**\n * 最小值\n * @param node obj 节点\n * @returns {*}\n */\nbst.prototype.min = function (node) {\n  var node = this.root;\n  var newnode = this.minnode(node);\n  return newnode === null ? null : newnode.data;\n};\n\n/**\n * 查找一个节点最小值\n * @param node obj 节点\n * @returns {*}\n */\nbst.prototype.minnode = function (node) {\n  if (node === null) return null;\n  if (node.left !== null) return this.minnode(node.left);\n  return node;\n};\n\nbst.prototype.searchnode = function (node, data) {\n  if (node === null) {\n    return false\n  }\n  if (data < node.data) {\n    return this.searchnode(node.left, data)\n  } else if (data > node.data) {\n    return this.searchnode(node.right, data)\n  } else {\n    return true\n  }\n}\n\n/**\n * 查找一个节点是否存在\n * @param data 节点值\n * @returns {*}\n */\nbst.prototype.search = function (data) {\n  return this.searchnode(this.root, data)\n}\n\n/**\n * 移除一个节点\n * @param data int|float 要移除的节点值\n * @param node obj 节点\n * @returns {*}\n */\nbst.prototype.remove = function (data) {\n  var node = this.root;\n  return this.removenode(node, data);\n};\n\n/**\n * 移除节点\n * @param data int|float 要移除的节点值\n * @param node obj 节点\n * @returns {*}\n */\nbst.prototype.removenode = function (node, data) {\n  if (node === null) return null;\n  if (data < node.data) {\n    node.left = this.removenode(node.left, data)\n    return node\n  } else if (data > node.data) {\n    node.right = this.removenode(node.right, data)\n    return node\n  } else {\n    // 这事判断第一种情况,没有左右分支的情况下,\n    if (node.left === null && node.right === null) {\n      node = null\n      return node\n    }\n    // 这是左子树为空的情况\n    if (node.left === null) {\n      node = node.right\n      return node\n    } else if (node.right === null) {\n      // 这是右子树为空的情况\n      node = node.left\n      return node\n    } else {\n      // 如果左右两个分支都存在的时候\n      // 寻找该节点的右节点的最小节点\n      var aux = this.minnode(node.right)\n      // 将改节点与找到的最小节点值互换\n      node.data = aux.data\n      // 删掉替换后的最小节点\n      node.right = this.removenode(node.right, aux.data)\n      return node\n    }\n  }\n};\n\n// 求二叉树节点个数\nbst.prototype.sizeofnode = function (node) {\n  if (!node) {\n    return 0\n  }\n  return 1 + this.sizeofnode(node.left) + this.sizeofnode(node.right);\n}\n\n// 求二叉树层级\nbst.prototype.levelofnode = function (node) {\n  if (!node) {\n    return 0\n  }\n  return math.max(this.levelofnode(node.left), this.levelofnode(node.right)) + 1\n}\n\n// 求二叉树第k层的节点个数\nbst.prototype.numklevel = function (node, k) {\n  if (k < 0) {\n    return 0\n  }\n  if (node === null) {\n    return 0\n  }\n  if (node !== null && k === 1) {\n    return 1\n  }\n  return this.numklevel(node.left, k - 1) + this.numklevel(node.right, k - 1)\n}\n\n// 比较二叉树是否相同\nbst.prototype.comparenodes = function (node1, node2) {\n  if (node1 === null && node2 === null) {\n    return true\n  }\n  if ((node1 !== null && node2 === null) || (node1 === null && node2 !== null)) {\n    return false\n  }\n  return (this.comparenodes(node1.left, node2.left) && this.comparenodes(node1.right, node2.right))\n}\n\n\n//测试数据\nvar bst = new bst();\nvar nums = [10, 3, 18, 2, 4, 13, 21, 9, 8, 9];\nfor (var i = 0; i < nums.length; i++) {\n  bst.insert(nums[i]);\n}\n\n// console.log(bst);\n\n// console.log(\"inorder-asc: \", bst.inorder());\n// console.log(\"inorder-desc: \", bst.inorder('desc'));\n\n// console.log('preorder: ', bst.preorder());\n\n// console.log('reorder: ', bst.reorder());\n\n// console.log('max: ', bst.max());\n// console.log('min: ', bst.min());\n\n// console.log('search: ', bst.search(21));\n// console.log('search: ', bst.search(22));\n\n// console.log('remove: ', bst.remove(2));\n// console.log('remove: ', bst.remove(9));\n// console.log('remove: ', bst.remove(18));\n\n// console.log('sizeofnode: ', bst.sizeofnode(bst.root));\n\n// console.log('levelofnode: ', bst.levelofnode(bst.root));\n\n// console.log('numklevel: ', bst.numklevel(bst.root, 3));\n\nvar bst1 =  {\n  data: 10,\n  left:  {\n    data: 3,\n    left:  { data: 2, left: null, right: null },\n    right: { data: 21, left: null, right: null }\n  },\n  right:  null\n}\nconsole.log('comparenodes: ', bst.comparenodes(bst.root, bst1));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350",charsets:{cjk:!0}},{title:"柯里化currying",frontmatter:{title:"柯里化currying",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["currying","工具函数"],categories:["libs"],readingShow:"top"},regularPath:"/libs/currying.html",relativePath:"libs/currying.md",key:"v-0eb1eaaa",path:"/libs/currying.html",headers:[{level:2,title:"currying 柯里化",slug:"currying-柯里化",normalizedTitle:"currying 柯里化",charIndex:66},{level:2,title:"currying 扩展",slug:"currying-扩展",normalizedTitle:"currying 扩展",charIndex:707},{level:2,title:"反柯里化",slug:"反柯里化",normalizedTitle:"反柯里化",charIndex:1656}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"currying 柯里化 currying 扩展 反柯里化",content:' * 逐步接收参数，并缓存供后期计算使用\n * 不立即计算，延后执行\n * 符合计算的条件，将缓存的参数，统一传递给执行方法\n\n# currying 柯里化\nlet log = console.log.bind(console);\nfunction currying(fn) {\n  var allArgs = []; // 用来接收参数\n\n  return function next() {\n    var args = [].slice.call(arguments);\n\n    // 判断是否执行计算\n    if (args.length > 0) {\n      // 收集传入的参数，进行缓存\n      allArgs = allArgs.concat(args);\n      return next;\n    } else {\n      // 符合执行条件，执行计算\n      return fn.apply(null, allArgs);\n    }\n  };\n}\n\nvar add = currying(function() {\n  var sum = 0;\n  for (var i = 0; i < arguments.length; i++) {\n    sum += arguments[i];\n  }\n  log(sum);\n  return sum;\n});\n\nadd(1, 2, 3)(4)();\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# currying 扩展\nfunction currying(fn) {\n  var allArgs = [];\n\n  function next() {\n    var args = [].slice.call(arguments);\n    allArgs = allArgs.concat(args);\n    return next;\n  }\n  // 隐式调用valueOf和toString方法\n  // 字符类型\n  next.toString = function() {\n    return fn.apply(null, allArgs);\n  };\n  // 数值类型\n  next.valueOf = function() {\n    return fn.apply(null, allArgs);\n  };\n\n  return next;\n}\nvar add = currying(function() {\n  var sum = 0;\n  for (var i = 0; i < arguments.length; i++) {\n    sum += arguments[i];\n  }\n  return sum;\n});\n\nadd(1, 2, 3)(4)(5);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n * es6\n\nconst curry = (fn, arr = []) => (...args) =>\n  (arg => (arg.length === fn.length ? fn(...arg) : curry(fn, arg)))([\n    ...arr,\n    ...args\n  ]);\n\nlet curryTest = curry((a, b, c, d) => a + b + c + d);\ncurryTest(1, 2, 3)(4); //返回10\ncurryTest(1, 2)(4)(3); //返回10\ncurryTest(1, 2)(3, 4); //返回10\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 反柯里化\n * 示例 1\n\nfunction Toast(option) {\n  this.prompt = "";\n}\nToast.prototype = {\n  constructor: Toast,\n  show: function() {\n    console.log(this.prompt);\n  }\n};\n\n// 新对象\nvar obj = {\n  prompt: "新对象"\n};\n\n// 反柯里化\nfunction unCurrying(fn) {\n  return function() {\n    var args = [].slice.call(arguments);\n    var that = args.shift();\n    return fn.apply(that, args);\n  };\n}\n\nvar objShow = unCurrying(Toast.prototype.show);\nobjShow(obj); // => "新对象"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * 示例 2\n\nfunction Toast(option) {\n  this.prompt = "";\n}\nToast.prototype = {\n  constructor: Toast,\n  show: function() {\n    console.log(this.prompt);\n  }\n};\n\n// 新对象\nvar obj = {\n  prompt: "新对象"\n};\n\nfunction unCurrying(fn) {\n  return function() {\n    var args = [].slice.call(arguments);\n    var that = args.shift();\n    return fn.apply(that, args);\n  };\n}\n\nvar objShow = unCurrying(Toast.prototype.show);\nobjShow(obj); // => "新对象"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n * 示例 3\n\nfunction nodeListen(node, eventName) {\n  return function(fn) {\n    node.addEventListener(\n      eventName,\n      function() {\n        fn.apply(this, Array.prototype.slice.call(arguments));\n      },\n      false\n    );\n  };\n}\n// example\nvar bodyClickListen = nodeListen(document.body, "click");\nbodyClickListen(function() {\n  console.log("first listen");\n});\n\nbodyClickListen(function() {\n  console.log("second listen");\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20',normalizedContent:' * 逐步接收参数，并缓存供后期计算使用\n * 不立即计算，延后执行\n * 符合计算的条件，将缓存的参数，统一传递给执行方法\n\n# currying 柯里化\nlet log = console.log.bind(console);\nfunction currying(fn) {\n  var allargs = []; // 用来接收参数\n\n  return function next() {\n    var args = [].slice.call(arguments);\n\n    // 判断是否执行计算\n    if (args.length > 0) {\n      // 收集传入的参数，进行缓存\n      allargs = allargs.concat(args);\n      return next;\n    } else {\n      // 符合执行条件，执行计算\n      return fn.apply(null, allargs);\n    }\n  };\n}\n\nvar add = currying(function() {\n  var sum = 0;\n  for (var i = 0; i < arguments.length; i++) {\n    sum += arguments[i];\n  }\n  log(sum);\n  return sum;\n});\n\nadd(1, 2, 3)(4)();\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# currying 扩展\nfunction currying(fn) {\n  var allargs = [];\n\n  function next() {\n    var args = [].slice.call(arguments);\n    allargs = allargs.concat(args);\n    return next;\n  }\n  // 隐式调用valueof和tostring方法\n  // 字符类型\n  next.tostring = function() {\n    return fn.apply(null, allargs);\n  };\n  // 数值类型\n  next.valueof = function() {\n    return fn.apply(null, allargs);\n  };\n\n  return next;\n}\nvar add = currying(function() {\n  var sum = 0;\n  for (var i = 0; i < arguments.length; i++) {\n    sum += arguments[i];\n  }\n  return sum;\n});\n\nadd(1, 2, 3)(4)(5);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n * es6\n\nconst curry = (fn, arr = []) => (...args) =>\n  (arg => (arg.length === fn.length ? fn(...arg) : curry(fn, arg)))([\n    ...arr,\n    ...args\n  ]);\n\nlet currytest = curry((a, b, c, d) => a + b + c + d);\ncurrytest(1, 2, 3)(4); //返回10\ncurrytest(1, 2)(4)(3); //返回10\ncurrytest(1, 2)(3, 4); //返回10\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 反柯里化\n * 示例 1\n\nfunction toast(option) {\n  this.prompt = "";\n}\ntoast.prototype = {\n  constructor: toast,\n  show: function() {\n    console.log(this.prompt);\n  }\n};\n\n// 新对象\nvar obj = {\n  prompt: "新对象"\n};\n\n// 反柯里化\nfunction uncurrying(fn) {\n  return function() {\n    var args = [].slice.call(arguments);\n    var that = args.shift();\n    return fn.apply(that, args);\n  };\n}\n\nvar objshow = uncurrying(toast.prototype.show);\nobjshow(obj); // => "新对象"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * 示例 2\n\nfunction toast(option) {\n  this.prompt = "";\n}\ntoast.prototype = {\n  constructor: toast,\n  show: function() {\n    console.log(this.prompt);\n  }\n};\n\n// 新对象\nvar obj = {\n  prompt: "新对象"\n};\n\nfunction uncurrying(fn) {\n  return function() {\n    var args = [].slice.call(arguments);\n    var that = args.shift();\n    return fn.apply(that, args);\n  };\n}\n\nvar objshow = uncurrying(toast.prototype.show);\nobjshow(obj); // => "新对象"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n * 示例 3\n\nfunction nodelisten(node, eventname) {\n  return function(fn) {\n    node.addeventlistener(\n      eventname,\n      function() {\n        fn.apply(this, array.prototype.slice.call(arguments));\n      },\n      false\n    );\n  };\n}\n// example\nvar bodyclicklisten = nodelisten(document.body, "click");\nbodyclicklisten(function() {\n  console.log("first listen");\n});\n\nbodyclicklisten(function() {\n  console.log("second listen");\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20',charsets:{cjk:!0}},{title:"节流和防抖函数(debounce/throttle)",frontmatter:{title:"节流和防抖函数(debounce/throttle)",date:"2020-07-22T00:00:00.000Z",sidebar:"auto",tags:["debounce","throttle"],categories:["libs"],readingShow:"top"},regularPath:"/libs/debounce-throttle.html",relativePath:"libs/debounce-throttle.md",key:"v-01608806",path:"/libs/debounce-throttle.html",headers:[{level:2,title:"防抖函数 debounce",slug:"防抖函数-debounce",normalizedTitle:"防抖函数 debounce",charIndex:77},{level:2,title:"节流函数 throttle",slug:"节流函数-throttle",normalizedTitle:"节流函数 throttle",charIndex:1615}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"防抖函数 debounce 节流函数 throttle",content:'原文\n\n * JavaScript 专题之跟着 underscore 学节流\n * JavaScript 专题之跟着 underscore 学防抖\n\n# 防抖函数 debounce\n事件在被触发 n 秒后，再执行回调；如果在这 n 秒中内再次被触发，则重新计时然后在执行回调\n\nfunction debounce(callback, wait, ...arr) {\n  let timer = null;\n  return () => {\n    if (timer) {\n      // 如果有一个函数在等待执行 清除定时器 下面重新计时\n      clearTimeout(timer);\n      timer = null; // 清空timer 下次重启定时器\n    }\n    // 设定时器/重置定时器\n    timer = setTimeout(() => {\n      callback && callback(...arr);\n    }, wait);\n  };\n}\n// 要防抖的函数\nlet fn = function(a, b) {\n  console.log("回调", a, b);\n};\nsetInterval(debounce(fn, 500, "参数1", "参数2"), 1000);\nsetInterval(debounce(fn, 2000), 1000); // 不会执行\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * 用途\n\n// 简单的防抖动函数\n// 实际想绑定在 scroll 事件上的 handler\nfunction realFunc() {\n  console.log("Success");\n}\n\n// 采用了防抖动\nwindow.addEventListener("scroll", debounce(realFunc, 500));\n// 没采用防抖动\nwindow.addEventListener("scroll", realFunc);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * debounce 防抖函数 underscore.js\n\nfunction debounce(func, wait, immediate) {\n  var timer, result;\n  var debounced = function() {\n    var context = this;\n    var args = arguments;\n    if (timer) clearTimeout(timer);\n    if (immediate) {\n      var callNow = !timer;\n      timer = setTimeout(function() {\n        timer = null;\n      }, wait);\n      if (callNow) result = func.apply(context, args);\n    } else {\n      timer = setTimeout(function() {\n        func.apply(context, args);\n      }, wait);\n    }\n    return result;\n  };\n  debounced.cancel = function() {\n    clearTimeout(timer);\n    timer = null;\n  };\n  return debounced;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# 节流函数 throttle\n单位时间内有事件被多次触发则，只生效一次\n\nfunction throttle(callback, time, ...arr) {\n  // 上次执行时间 第一次马上执行\n  let last = 0;\n  return () => {\n    // 当前时间\n    let cur = Date.now();\n    // 当前时间与上次执行的时间，是否超过间隔时间\n    if (cur - last > time) {\n      // ...arr为callback的参数\n      callback(...arr);\n      // 重置上次执行时间为当前时间 方便下次执行\n      last = cur;\n    }\n  };\n}\nlet fn = (a, b) => {\n  console.log("回调", a, b);\n};\n// 重复执行函数\nsetInterval(throttle(fn, 1000, "参数1", "参数2"), 10);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * 完整版\n\nfunction throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function() {\n    previous = options.leading === false ? 0 : new Date().getTime();\n    timeout = null;\n    func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function() {\n    var now = new Date().getTime();\n    if (!previous && options.leading === false) previous = now;\n    var remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n  };\n\n  throttled.cancel = function() {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = null;\n  };\n\n  return throttled;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39',normalizedContent:'原文\n\n * javascript 专题之跟着 underscore 学节流\n * javascript 专题之跟着 underscore 学防抖\n\n# 防抖函数 debounce\n事件在被触发 n 秒后，再执行回调；如果在这 n 秒中内再次被触发，则重新计时然后在执行回调\n\nfunction debounce(callback, wait, ...arr) {\n  let timer = null;\n  return () => {\n    if (timer) {\n      // 如果有一个函数在等待执行 清除定时器 下面重新计时\n      cleartimeout(timer);\n      timer = null; // 清空timer 下次重启定时器\n    }\n    // 设定时器/重置定时器\n    timer = settimeout(() => {\n      callback && callback(...arr);\n    }, wait);\n  };\n}\n// 要防抖的函数\nlet fn = function(a, b) {\n  console.log("回调", a, b);\n};\nsetinterval(debounce(fn, 500, "参数1", "参数2"), 1000);\nsetinterval(debounce(fn, 2000), 1000); // 不会执行\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * 用途\n\n// 简单的防抖动函数\n// 实际想绑定在 scroll 事件上的 handler\nfunction realfunc() {\n  console.log("success");\n}\n\n// 采用了防抖动\nwindow.addeventlistener("scroll", debounce(realfunc, 500));\n// 没采用防抖动\nwindow.addeventlistener("scroll", realfunc);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * debounce 防抖函数 underscore.js\n\nfunction debounce(func, wait, immediate) {\n  var timer, result;\n  var debounced = function() {\n    var context = this;\n    var args = arguments;\n    if (timer) cleartimeout(timer);\n    if (immediate) {\n      var callnow = !timer;\n      timer = settimeout(function() {\n        timer = null;\n      }, wait);\n      if (callnow) result = func.apply(context, args);\n    } else {\n      timer = settimeout(function() {\n        func.apply(context, args);\n      }, wait);\n    }\n    return result;\n  };\n  debounced.cancel = function() {\n    cleartimeout(timer);\n    timer = null;\n  };\n  return debounced;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# 节流函数 throttle\n单位时间内有事件被多次触发则，只生效一次\n\nfunction throttle(callback, time, ...arr) {\n  // 上次执行时间 第一次马上执行\n  let last = 0;\n  return () => {\n    // 当前时间\n    let cur = date.now();\n    // 当前时间与上次执行的时间，是否超过间隔时间\n    if (cur - last > time) {\n      // ...arr为callback的参数\n      callback(...arr);\n      // 重置上次执行时间为当前时间 方便下次执行\n      last = cur;\n    }\n  };\n}\nlet fn = (a, b) => {\n  console.log("回调", a, b);\n};\n// 重复执行函数\nsetinterval(throttle(fn, 1000, "参数1", "参数2"), 10);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * 完整版\n\nfunction throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function() {\n    previous = options.leading === false ? 0 : new date().gettime();\n    timeout = null;\n    func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function() {\n    var now = new date().gettime();\n    if (!previous && options.leading === false) previous = now;\n    var remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        cleartimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = settimeout(later, remaining);\n    }\n  };\n\n  throttled.cancel = function() {\n    cleartimeout(timeout);\n    previous = 0;\n    timeout = null;\n  };\n\n  return throttled;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39',charsets:{cjk:!0}},{title:"浏览器的navigator/document",frontmatter:{title:"浏览器的navigator/document",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["工具函数"],categories:["libs"],readingShow:"top"},regularPath:"/libs/document.html",relativePath:"libs/document.md",key:"v-d40032aa",path:"/libs/document.html",headers:[{level:2,title:"visibilityChange 判断页面可见状态",slug:"visibilitychange-判断页面可见状态",normalizedTitle:"visibilitychange 判断页面可见状态",charIndex:2},{level:2,title:"监听屏幕旋转变化接口: orientationchange",slug:"监听屏幕旋转变化接口-orientationchange",normalizedTitle:"监听屏幕旋转变化接口: orientationchange",charIndex:1946},{level:2,title:"电池状态：navigator.getBattery",slug:"电池状态-navigator-getbattery",normalizedTitle:"电池状态：navigator.getbattery",charIndex:2501},{level:2,title:"让你的手机震动: window.navigator.vibrate",slug:"让你的手机震动-window-navigator-vibrate",normalizedTitle:"让你的手机震动: window.navigator.vibrate",charIndex:3157},{level:2,title:"当前语言：navigator.language",slug:"当前语言-navigator-language",normalizedTitle:"当前语言：navigator.language",charIndex:3543},{level:2,title:"联网状态：navigator.onLine",slug:"联网状态-navigator-online",normalizedTitle:"联网状态：navigator.online",charIndex:3982},{level:2,title:"页面可编辑：contentEditable",slug:"页面可编辑-contenteditable",normalizedTitle:"页面可编辑：contenteditable",charIndex:4357},{level:2,title:"浏览器活跃窗口监听: window.onblur & window.onfocus",slug:"浏览器活跃窗口监听-window-onblur-window-onfocus",normalizedTitle:"浏览器活跃窗口监听: window.onblur &amp; window.onfocus",charIndex:null},{level:2,title:"全屏 API（Fullscreen API）",slug:"全屏-api-fullscreen-api",normalizedTitle:"全屏 api（fullscreen api）",charIndex:5091},{level:2,title:"asyncToGenerator",slug:"asynctogenerator",normalizedTitle:"asynctogenerator",charIndex:6190}],lastUpdated:"2021/1/7 上午4:26:40",headersStr:"visibilityChange 判断页面可见状态 监听屏幕旋转变化接口: orientationchange 电池状态：navigator.getBattery 让你的手机震动: window.navigator.vibrate 当前语言：navigator.language 联网状态：navigator.onLine 页面可编辑：contentEditable 浏览器活跃窗口监听: window.onblur & window.onfocus 全屏 API（Fullscreen API） asyncToGenerator",content:'# visibilityChange 判断页面可见状态\n * 原文\n\nvar hidden, state, visibilityChange;\nif (typeof document.hidden !== "undefined") {\n  hidden = "hidden";\n  visibilityChange = "visibilitychange";\n  state = "visibilityState";\n} else if (typeof document.mozHidden !== "undefined") {\n  hidden = "mozHidden";\n  visibilityChange = "mozvisibilitychange";\n  state = "mozVisibilityState";\n} else if (typeof document.msHidden !== "undefined") {\n  hidden = "msHidden";\n  visibilityChange = "msvisibilitychange";\n  state = "msVisibilityState";\n} else if (typeof document.webkitHidden !== "undefined") {\n  hidden = "webkitHidden";\n  visibilityChange = "webkitvisibilitychange";\n  state = "webkitVisibilityState";\n}\n\n// 添加监听器，在title里显示状态变化\ndocument.addEventListener(\n  visibilityChange,\n  function() {\n    document.title = document[state];\n  },\n  false\n);\n\n// 初始化\ndocument.title = document[state];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n * js\n\nfunction getHidden (){\n    let prefixs = [\'webkit\',\'moz\',\'mos\',\'o\'];\n    if (\'hidden\' in document) return document.hidden;\n    for (let i = 0; i < prefixs.length; i++) {\n        if (`${prefixs[i]}Hidden` in document){\n            return document[`${prefixs[i]}Hidden`];\n        }\n    }\n    // not support\n    return null;\n}\n\nfunction getVivibilityState (){\n    let prefixs = [\'webkit\',\'moz\',\'mos\',\'o\'];\n    if (\'visibilityState\' in document) return document.visibilityState;\n    for (let i = 0; i < prefixs.length; i++) {\n        if (`${prefixs[i]}VisibilityState` in document){\n            return document[`${prefixs[i]}VisibilityState`];\n        }\n    }\n    // not support\n    return null;\n}\n\nfunction pageHiddenHandler () {\n    let isHidden = getHidden();\n    // 改变页面title用户观察状态\n    document.title = isHidden ? \'藏起来了\' : \'闪现\';\n}\ndocument.addEventListener(\'visibilitychange\',pageHiddenHandler,false);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# 监听屏幕旋转变化接口: orientationchange\n * js\n\nvar screenOrientation = function() {\n  let self = this;\n  let orientation =\n    screen.orientation || screen.mozOrientation || screen.msOrientation;\n  window.addEventListener(\n    "onorientationchange" in window ? "orientationchange" : "resize",\n    function() {\n      self.angle = orientation.angle;\n    }\n  );\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * css\n\n/* 竖屏 */\n@media screen and (orientation: portrait) {\n  // some css code\n}\n/* 横屏 */\n@media screen and (orientation: landscape) {\n  // some css code\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 电池状态：navigator.getBattery\nlet getBatteryInfo = function() {\n  let self = this;\n  if (navigator.getBattery) {\n    navigator.getBattery().then(function(battery) {\n      // 判断是否在充电\n      self.batteryInfo = battery.charging\n        ? `在充电 : 剩余 ${battery.level * 100}%`\n        : `没充电 : 剩余 ${battery.level * 100}%`;\n      // 电池充电状态改变事件\n      battery.addEventListener("chargingchange", function() {\n        self.batteryInfo = battery.charging\n          ? `在充电 : 剩余 ${battery.level * 100}%`\n          : `没充电 : 剩余 ${battery.level * 100}%`;\n      });\n    });\n  } else {\n    self.batteryInfo = "不支持电池状态接口";\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 让你的手机震动: window.navigator.vibrate\nlet vibrateFun = function() {\n  let self = this;\n  if (navigator.vibrate) {\n    navigator.vibrate([500, 500, 500, 500, 500, 500, 500, 500, 500, 500]);\n  } else {\n    self.vibrateInfo = "您的设备不支持震动";\n  }\n  // 清除震动\n  navigator.vibrate(0);\n  // 持续震动\n  setInterval(function() {\n    navigator.vibrate(200);\n  }, 500);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 当前语言：navigator.language\nfunction getThisLang() {\n  const langList = ["cn", "hk", "tw", "en", "fr"];\n  const langListLen = langList.length;\n  const thisLang = (\n    navigator.language || navigator.browserLanguage\n  ).toLowerCase();\n  for (let i = 0; i < langListLen; i++) {\n    let lang = langList[i];\n    if (thisLang.includes(lang)) {\n      return lang;\n    } else {\n      return "en";\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 联网状态：navigator.onLine\nmounted(){\n    let self = this;\n    window.addEventListener(\'online\',  self.updateOnlineStatus, true);\n    window.addEventListener(\'offline\', self.updateOnlineStatus, true);\n},\nmethods: {\n    updateOnlineStatus: function(){\n        var self = this;\n        self.onLineInfo = navigator.onLine ? "online" : "offline";\n    },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 页面可编辑：contentEditable\ndata:text/html, <html contenteditable>\n\n\n1\n# 浏览器活跃窗口监听: window.onblur & window.onfocus\nmounted(){\n  let self = this;\n  window.addEventListener(\'blur\',  self.doFlashTitle, true);\n  window.addEventListener(\'focus\', function () {\n      clearInterval(self.timer);\n      document.title = \'微信网页版\';\n  }, true);\n},\nmethods: {\n    doFlashTitle: function(){\n        var self = this;\n        self.timer = setInterval( () => {\n            if (!self.flashFlag) {\n                document.title = "微信网页版";\n            } else {\n                document.title = `微信（${self.infoNum}）`;\n            }\n            self.flashFlag = ! self.flashFlag\n        }, 500)\n    },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# 全屏 API（Fullscreen API）\nlet fullScreenFun = function() {\n  let self = this;\n  var fullscreenEnabled =\n    document.fullscreenEnabled ||\n    document.mozFullScreenEnabled ||\n    document.webkitFullscreenEnabled ||\n    document.msFullscreenEnabled;\n\n  if (fullscreenEnabled) {\n    let de = document.documentElement;\n    if (self.fullScreenInfo === "打开全屏") {\n      if (de.requestFullscreen) {\n        de.requestFullscreen();\n      } else if (de.mozRequestFullScreen) {\n        de.mozRequestFullScreen();\n      } else if (de.webkitRequestFullScreen) {\n        de.webkitRequestFullScreen();\n      }\n      self.fullScreenInfo = "退出全屏";\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen();\n      }\n      self.fullScreenInfo = "打开全屏";\n    }\n  } else {\n    self.fullScreenInfo = "浏览器当前不能全屏";\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# asyncToGenerator\nfunction asyncToGenerator(generatorFunc) {\n  return function() {\n    const gen = generatorFunc.apply(this, arguments);\n    return new Promise((resolve, reject) => {\n      function step(key, arg) {\n        let generatorResult;\n        try {\n          generatorResult = gen[key](arg);\n        } catch (error) {\n          return reject(error);\n        }\n        const { value, done } = generatorResult;\n        if (done) {\n          return resolve(value);\n        } else {\n          return Promise.resolve(value).then(\n            val => step("next", val),\n            err => step("throw", err)\n          );\n        }\n      }\n      step("next");\n    });\n  };\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25',normalizedContent:'# visibilitychange 判断页面可见状态\n * 原文\n\nvar hidden, state, visibilitychange;\nif (typeof document.hidden !== "undefined") {\n  hidden = "hidden";\n  visibilitychange = "visibilitychange";\n  state = "visibilitystate";\n} else if (typeof document.mozhidden !== "undefined") {\n  hidden = "mozhidden";\n  visibilitychange = "mozvisibilitychange";\n  state = "mozvisibilitystate";\n} else if (typeof document.mshidden !== "undefined") {\n  hidden = "mshidden";\n  visibilitychange = "msvisibilitychange";\n  state = "msvisibilitystate";\n} else if (typeof document.webkithidden !== "undefined") {\n  hidden = "webkithidden";\n  visibilitychange = "webkitvisibilitychange";\n  state = "webkitvisibilitystate";\n}\n\n// 添加监听器，在title里显示状态变化\ndocument.addeventlistener(\n  visibilitychange,\n  function() {\n    document.title = document[state];\n  },\n  false\n);\n\n// 初始化\ndocument.title = document[state];\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n * js\n\nfunction gethidden (){\n    let prefixs = [\'webkit\',\'moz\',\'mos\',\'o\'];\n    if (\'hidden\' in document) return document.hidden;\n    for (let i = 0; i < prefixs.length; i++) {\n        if (`${prefixs[i]}hidden` in document){\n            return document[`${prefixs[i]}hidden`];\n        }\n    }\n    // not support\n    return null;\n}\n\nfunction getvivibilitystate (){\n    let prefixs = [\'webkit\',\'moz\',\'mos\',\'o\'];\n    if (\'visibilitystate\' in document) return document.visibilitystate;\n    for (let i = 0; i < prefixs.length; i++) {\n        if (`${prefixs[i]}visibilitystate` in document){\n            return document[`${prefixs[i]}visibilitystate`];\n        }\n    }\n    // not support\n    return null;\n}\n\nfunction pagehiddenhandler () {\n    let ishidden = gethidden();\n    // 改变页面title用户观察状态\n    document.title = ishidden ? \'藏起来了\' : \'闪现\';\n}\ndocument.addeventlistener(\'visibilitychange\',pagehiddenhandler,false);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# 监听屏幕旋转变化接口: orientationchange\n * js\n\nvar screenorientation = function() {\n  let self = this;\n  let orientation =\n    screen.orientation || screen.mozorientation || screen.msorientation;\n  window.addeventlistener(\n    "onorientationchange" in window ? "orientationchange" : "resize",\n    function() {\n      self.angle = orientation.angle;\n    }\n  );\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * css\n\n/* 竖屏 */\n@media screen and (orientation: portrait) {\n  // some css code\n}\n/* 横屏 */\n@media screen and (orientation: landscape) {\n  // some css code\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 电池状态：navigator.getbattery\nlet getbatteryinfo = function() {\n  let self = this;\n  if (navigator.getbattery) {\n    navigator.getbattery().then(function(battery) {\n      // 判断是否在充电\n      self.batteryinfo = battery.charging\n        ? `在充电 : 剩余 ${battery.level * 100}%`\n        : `没充电 : 剩余 ${battery.level * 100}%`;\n      // 电池充电状态改变事件\n      battery.addeventlistener("chargingchange", function() {\n        self.batteryinfo = battery.charging\n          ? `在充电 : 剩余 ${battery.level * 100}%`\n          : `没充电 : 剩余 ${battery.level * 100}%`;\n      });\n    });\n  } else {\n    self.batteryinfo = "不支持电池状态接口";\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 让你的手机震动: window.navigator.vibrate\nlet vibratefun = function() {\n  let self = this;\n  if (navigator.vibrate) {\n    navigator.vibrate([500, 500, 500, 500, 500, 500, 500, 500, 500, 500]);\n  } else {\n    self.vibrateinfo = "您的设备不支持震动";\n  }\n  // 清除震动\n  navigator.vibrate(0);\n  // 持续震动\n  setinterval(function() {\n    navigator.vibrate(200);\n  }, 500);\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 当前语言：navigator.language\nfunction getthislang() {\n  const langlist = ["cn", "hk", "tw", "en", "fr"];\n  const langlistlen = langlist.length;\n  const thislang = (\n    navigator.language || navigator.browserlanguage\n  ).tolowercase();\n  for (let i = 0; i < langlistlen; i++) {\n    let lang = langlist[i];\n    if (thislang.includes(lang)) {\n      return lang;\n    } else {\n      return "en";\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 联网状态：navigator.online\nmounted(){\n    let self = this;\n    window.addeventlistener(\'online\',  self.updateonlinestatus, true);\n    window.addeventlistener(\'offline\', self.updateonlinestatus, true);\n},\nmethods: {\n    updateonlinestatus: function(){\n        var self = this;\n        self.onlineinfo = navigator.online ? "online" : "offline";\n    },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 页面可编辑：contenteditable\ndata:text/html, <html contenteditable>\n\n\n1\n# 浏览器活跃窗口监听: window.onblur & window.onfocus\nmounted(){\n  let self = this;\n  window.addeventlistener(\'blur\',  self.doflashtitle, true);\n  window.addeventlistener(\'focus\', function () {\n      clearinterval(self.timer);\n      document.title = \'微信网页版\';\n  }, true);\n},\nmethods: {\n    doflashtitle: function(){\n        var self = this;\n        self.timer = setinterval( () => {\n            if (!self.flashflag) {\n                document.title = "微信网页版";\n            } else {\n                document.title = `微信（${self.infonum}）`;\n            }\n            self.flashflag = ! self.flashflag\n        }, 500)\n    },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# 全屏 api（fullscreen api）\nlet fullscreenfun = function() {\n  let self = this;\n  var fullscreenenabled =\n    document.fullscreenenabled ||\n    document.mozfullscreenenabled ||\n    document.webkitfullscreenenabled ||\n    document.msfullscreenenabled;\n\n  if (fullscreenenabled) {\n    let de = document.documentelement;\n    if (self.fullscreeninfo === "打开全屏") {\n      if (de.requestfullscreen) {\n        de.requestfullscreen();\n      } else if (de.mozrequestfullscreen) {\n        de.mozrequestfullscreen();\n      } else if (de.webkitrequestfullscreen) {\n        de.webkitrequestfullscreen();\n      }\n      self.fullscreeninfo = "退出全屏";\n    } else {\n      if (document.exitfullscreen) {\n        document.exitfullscreen();\n      } else if (document.mozcancelfullscreen) {\n        document.mozcancelfullscreen();\n      } else if (document.webkitcancelfullscreen) {\n        document.webkitcancelfullscreen();\n      }\n      self.fullscreeninfo = "打开全屏";\n    }\n  } else {\n    self.fullscreeninfo = "浏览器当前不能全屏";\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# asynctogenerator\nfunction asynctogenerator(generatorfunc) {\n  return function() {\n    const gen = generatorfunc.apply(this, arguments);\n    return new promise((resolve, reject) => {\n      function step(key, arg) {\n        let generatorresult;\n        try {\n          generatorresult = gen[key](arg);\n        } catch (error) {\n          return reject(error);\n        }\n        const { value, done } = generatorresult;\n        if (done) {\n          return resolve(value);\n        } else {\n          return promise.resolve(value).then(\n            val => step("next", val),\n            err => step("throw", err)\n          );\n        }\n      }\n      step("next");\n    });\n  };\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25',charsets:{cjk:!0}},{title:"常见的浏览器事件封装",frontmatter:{title:"常见的浏览器事件封装",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["工具函数"],categories:["libs"],readingShow:"top"},regularPath:"/libs/event.html",relativePath:"libs/event.md",key:"v-26ab0fa5",path:"/libs/event.html",headers:[{level:2,title:"获取键盘事件的键值",slug:"获取键盘事件的键值",normalizedTitle:"获取键盘事件的键值",charIndex:2},{level:2,title:"onmousewheel 兼容",slug:"onmousewheel-兼容",normalizedTitle:"onmousewheel 兼容",charIndex:141},{level:2,title:"禁止选中",slug:"禁止选中",normalizedTitle:"禁止选中",charIndex:651},{level:2,title:"requestAnimationFrame",slug:"requestanimationframe",normalizedTitle:"requestanimationframe",charIndex:1263},{level:2,title:"DOMContentLoaded",slug:"domcontentloaded",normalizedTitle:"domcontentloaded",charIndex:2302},{level:2,title:"阻止冒泡",slug:"阻止冒泡",normalizedTitle:"阻止冒泡",charIndex:3402},{level:2,title:"阻止默认事件",slug:"阻止默认事件",normalizedTitle:"阻止默认事件",charIndex:3627},{level:2,title:"targetElement",slug:"targetelement",normalizedTitle:"targetelement",charIndex:3864},{level:2,title:"dispatchDOMEvent",slug:"dispatchdomevent",normalizedTitle:"dispatchdomevent",charIndex:4084}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"获取键盘事件的键值 onmousewheel 兼容 禁止选中 requestAnimationFrame DOMContentLoaded 阻止冒泡 阻止默认事件 targetElement dispatchDOMEvent",content:"# 获取键盘事件的键值\nfunction getKeyCode(e) {\n  e = e ? e : (window.event ? window.event : \"\")\n  return e.keyCode ? e.keyCode : e.which\n}\n\n\n1\n2\n3\n4\n# onmousewheel 兼容\n// 兼容onmousewheel\nfunction addMouseWheelEvent(element, func) {\n  if (typeof element.onmousewheel == \"object\") {\n    element.onmousewheel = function (ev) {\n      ev = ev || window.event;\n      //console.log(ev.wheelDelta);\n      func();\n    };\n  } else {\n    // 兼容 firefox\n    element.addEventListener(\"DOMMouseScroll\", function (ev) {\n      ev = ev || window.event;\n      //console.log('ev.detail : '+ev.detail);\n      func();\n    }, false);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 禁止选中\n// 禁止选中\nfunction disabledSel() {\n  if (document.all) {\n    document.onselectstart = function () { return false; }; //for ie\n  } else {\n    document.onmousedown = function () { return false; };\n    document.onmouseup = function () { return true; };\n  }\n  document.onselectstart = new Function('event.returnValue=false;');\n  if (window.getSelector) {\n    var selection = window.getSelection();\n    selection.removeAllRanges();\n  } else if (document.selection && document.selection.empty) {\n    document.selection.empty();\n    // document.selection.clear();\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# requestAnimationFrame\n(function () {\n  var lastTime = 0;\n  var vendors = ['webkit', 'moz', 'o', 'ms'];\n  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||\n      // name has changed in Webkit\n      window[vendors[x] + 'CancelRequestAnimationFrame'];\n  }\n\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = function (callback, element) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16.7 - (currTime - lastTime));\n      var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n  }\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = function (id) {\n      clearTimeout(id);\n    };\n  }\n}());\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# DOMContentLoaded\n// Javascript封装DOMContentLoaded事件\nfunction ready(callback) {\n  // 目前Mozilla、Opera和webkit 525+内核支持DOMContentLoaded事件\n  if (document.addEventListener) {\n    document.addEventListener('DOMContentLoaded', function () {\n      document.removeEventListener('DOMContentLoaded', arguments.callee, false);\n      callback && callback();\n    }, false);\n  }\n\n  // 如果IE\n  else if (document.attachEvent) {\n    // 确保当页面是在iframe中加载时，事件依旧会被安全触发\n    document.attachEvent('onreadystatechange', function () {\n      if (document.readyState == 'complete') {\n        document.detachEvent('onreadystatechange', arguments.callee);\n        callback && callback();\n      }\n    });\n\n    // 如果是IE且页面不在iframe中时，轮询调用doScroll 方法检测DOM是否加载完毕\n    if (document.documentElement.doScroll && typeof window.frameElement === \"undefined\") {\n      try {\n        document.documentElement.doScroll('left');\n      }\n      catch (error) {\n        return setTimeout(arguments.callee, 20);\n      };\n      callback && callback();\n    }\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n# 阻止冒泡\nvar util = {\n  // 阻止事件冒泡\n  stopPro: function (e) {\n    e = e || window.event;\n    if (document.all) { //只有ie识别\n      e.cancelBubble = true;\n    } else {\n      e.stopPropagation();\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 阻止默认事件\nvar util = {\n  // 取消默认行为\n  stopDefault: function (e) {\n    e = e || window.event;\n    if (document.all) {\n      window.event.returnValue = false;\n    } else {\n      event.preventDefault();\n    }\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# targetElement\nvar util = {\n  // target兼容\n  targetEl: function (e) {\n    // event兼容\n    var event = e || window.event;\n    var targetEl = event.target || event.srcElement;\n    return targetEl;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# dispatchDOMEvent\n * dispatchDOMEvent\n\nfunction dispatchDOMEvent(el, payload, eventInit) {\n  let event;\n  if (void 0 !== Event) {\n    event = new Event(type, eventInit);\n  } else {\n    event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(type, eventInit?.bubbles, eventInit?.cancelable);\n  }\n  return el.dispatchEvent(event);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10",normalizedContent:"# 获取键盘事件的键值\nfunction getkeycode(e) {\n  e = e ? e : (window.event ? window.event : \"\")\n  return e.keycode ? e.keycode : e.which\n}\n\n\n1\n2\n3\n4\n# onmousewheel 兼容\n// 兼容onmousewheel\nfunction addmousewheelevent(element, func) {\n  if (typeof element.onmousewheel == \"object\") {\n    element.onmousewheel = function (ev) {\n      ev = ev || window.event;\n      //console.log(ev.wheeldelta);\n      func();\n    };\n  } else {\n    // 兼容 firefox\n    element.addeventlistener(\"dommousescroll\", function (ev) {\n      ev = ev || window.event;\n      //console.log('ev.detail : '+ev.detail);\n      func();\n    }, false);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 禁止选中\n// 禁止选中\nfunction disabledsel() {\n  if (document.all) {\n    document.onselectstart = function () { return false; }; //for ie\n  } else {\n    document.onmousedown = function () { return false; };\n    document.onmouseup = function () { return true; };\n  }\n  document.onselectstart = new function('event.returnvalue=false;');\n  if (window.getselector) {\n    var selection = window.getselection();\n    selection.removeallranges();\n  } else if (document.selection && document.selection.empty) {\n    document.selection.empty();\n    // document.selection.clear();\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# requestanimationframe\n(function () {\n  var lasttime = 0;\n  var vendors = ['webkit', 'moz', 'o', 'ms'];\n  for (var x = 0; x < vendors.length && !window.requestanimationframe; ++x) {\n    window.requestanimationframe = window[vendors[x] + 'requestanimationframe'];\n    window.cancelanimationframe = window[vendors[x] + 'cancelanimationframe'] ||\n      // name has changed in webkit\n      window[vendors[x] + 'cancelrequestanimationframe'];\n  }\n\n  if (!window.requestanimationframe) {\n    window.requestanimationframe = function (callback, element) {\n      var currtime = new date().gettime();\n      var timetocall = math.max(0, 16.7 - (currtime - lasttime));\n      var id = window.settimeout(function () {\n        callback(currtime + timetocall);\n      }, timetocall);\n      lasttime = currtime + timetocall;\n      return id;\n    };\n  }\n  if (!window.cancelanimationframe) {\n    window.cancelanimationframe = function (id) {\n      cleartimeout(id);\n    };\n  }\n}());\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# domcontentloaded\n// javascript封装domcontentloaded事件\nfunction ready(callback) {\n  // 目前mozilla、opera和webkit 525+内核支持domcontentloaded事件\n  if (document.addeventlistener) {\n    document.addeventlistener('domcontentloaded', function () {\n      document.removeeventlistener('domcontentloaded', arguments.callee, false);\n      callback && callback();\n    }, false);\n  }\n\n  // 如果ie\n  else if (document.attachevent) {\n    // 确保当页面是在iframe中加载时，事件依旧会被安全触发\n    document.attachevent('onreadystatechange', function () {\n      if (document.readystate == 'complete') {\n        document.detachevent('onreadystatechange', arguments.callee);\n        callback && callback();\n      }\n    });\n\n    // 如果是ie且页面不在iframe中时，轮询调用doscroll 方法检测dom是否加载完毕\n    if (document.documentelement.doscroll && typeof window.frameelement === \"undefined\") {\n      try {\n        document.documentelement.doscroll('left');\n      }\n      catch (error) {\n        return settimeout(arguments.callee, 20);\n      };\n      callback && callback();\n    }\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n# 阻止冒泡\nvar util = {\n  // 阻止事件冒泡\n  stoppro: function (e) {\n    e = e || window.event;\n    if (document.all) { //只有ie识别\n      e.cancelbubble = true;\n    } else {\n      e.stoppropagation();\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 阻止默认事件\nvar util = {\n  // 取消默认行为\n  stopdefault: function (e) {\n    e = e || window.event;\n    if (document.all) {\n      window.event.returnvalue = false;\n    } else {\n      event.preventdefault();\n    }\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# targetelement\nvar util = {\n  // target兼容\n  targetel: function (e) {\n    // event兼容\n    var event = e || window.event;\n    var targetel = event.target || event.srcelement;\n    return targetel;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# dispatchdomevent\n * dispatchdomevent\n\nfunction dispatchdomevent(el, payload, eventinit) {\n  let event;\n  if (void 0 !== event) {\n    event = new event(type, eventinit);\n  } else {\n    event = document.createevent(\"htmlevents\");\n    event.initevent(type, eventinit?.bubbles, eventinit?.cancelable);\n  }\n  return el.dispatchevent(event);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10",charsets:{cjk:!0}},{title:"移动端的touch事件",frontmatter:{title:"移动端的touch事件",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["mobile"],categories:["libs"],readingShow:"top"},regularPath:"/libs/mobile.html",relativePath:"libs/mobile.md",key:"v-2f8561ea",path:"/libs/mobile.html",headers:[{level:2,title:"点击事件",slug:"点击事件",normalizedTitle:"点击事件",charIndex:2},{level:2,title:"长按事件",slug:"长按事件",normalizedTitle:"长按事件",charIndex:789},{level:2,title:"双击事件",slug:"双击事件",normalizedTitle:"双击事件",charIndex:1722},{level:2,title:"向上滑动事件",slug:"向上滑动事件",normalizedTitle:"向上滑动事件",charIndex:4436},{level:2,title:"向下滑动事件",slug:"向下滑动事件",normalizedTitle:"向下滑动事件",charIndex:5485},{level:2,title:"向左滑动事件",slug:"向左滑动事件",normalizedTitle:"向左滑动事件",charIndex:6537},{level:2,title:"向右滑动事件",slug:"向右滑动事件",normalizedTitle:"向右滑动事件",charIndex:7589}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"点击事件 长按事件 双击事件 向上滑动事件 向下滑动事件 向左滑动事件 向右滑动事件",content:"# 点击事件\nvar touch = {\n  /* 点击事件 */\n  tap: function (dom, callback) {\n    if (dom && typeof dom == 'object') {\n      var isMove = false;\n      var startTime = 0;\n      dom.addEventListener('touchstart', function (e) {\n        startTime = Date.now();\n      }, false);\n      dom.addEventListener('touchmove', function (e) {\n        e.preventDefault();\n        isMove = true;\n      }, false);\n      dom.addEventListener('touchend', function (e) {\n        e.preventDefault();\n        /*是否满足tap 的要求*/\n        if (!isMove && (Date.now() - startTime) < 150) {\n          /*调用 callback*/\n          callback && callback(e);\n        }\n        /*重置*/\n        isMove = false;\n        startTime = 0;\n      }, false);\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 长按事件\nvar touch = {\n  /* 长按事件 */\n  longTap: function (dom, callback) {\n    if (dom && typeof dom == 'object') {\n      var startX, startY, startTime, isLongTime = false;\n      dom.addEventListener('touchstart', function (e) {\n        startTime = Date.now();\n        startX = e.touches[0].clientX;\n        startY = e.touches[0].clientY;\n      }, false);\n      dom.addEventListener('touchend', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var endX = e.changedTouches[0].clientX;\n        var endY = e.changedTouches[0].clientY;\n        if (Math.abs(endX - startX) < 6 && Math.abs(endY - startY) < 6) {\n          isLongTime = true;\n        } else {\n          isLongTime = false;\n        }\n\n        if ((+new Date()) - startTime > 200 && isLongTime) {\n          callback && callback(e);\n        }\n      }, false);\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 双击事件\nvar touch = {\n  /* 双击事件 */\n  doubleTap: function (dom, callback) {\n    if (!dom) {\n      return false;\n    }\n    var isTouchEnd = false,\n      lastTime = 0,\n      lastTx = null,\n      lastTy = null,\n      firstTouchEnd = true,\n      body = document.body,\n      dTapTimer, startTx, startTy, startTime;\n    dom.addEventListener('touchstart', function (e) {\n      if (dTapTimer) {\n        clearTimeout(dTapTimer);\n        dTapTimer = null;\n      }\n      var touches = e.touches[0];\n      startTx = touches.clientX;\n      startTy = touches.clientY;\n    }, false);\n    dom.addEventListener('touchend', function (e) {\n      var touches = e.changedTouches[0],\n        endTx = touches.clientX,\n        endTy = touches.clientY,\n        now = Date.now(),\n        duration = now - lastTime;\n      // 首先要确保能触发单次的 tap 事件\n      if (Math.abs(startTx - endTx) < 6 && Math.abs(startTx - endTx) < 6) {\n        // 两次 tap 的间隔确保在 500 毫秒以内\n        if (duration < 301) {\n          // 本次的 tap 位置和上一次的 tap 的位置允许一定范围内的误差\n          if (lastTx !== null &&\n            Math.abs(lastTx - endTx) < 45 &&\n            Math.abs(lastTy - endTy) < 45) {\n            firstTouchEnd = true;\n            lastTx = lastTy = null;\n            callback && callback(e);\n          }\n        } else {\n          lastTx = endTx;\n          lastTy = endTy;\n        }\n      } else {\n        firstTouchEnd = true;\n        lastTx = lastTy = null;\n      }\n      lastTime = now;\n    }, false);\n    // 在 iOS 的 safari 上手指敲击屏幕的速度过快，\n    // 有一定的几率会导致第二次不会响应 touchstart 和 touchend 事件\n    // 同时手指长时间的touch不会触发click\n    if (~navigator.userAgent.toLowerCase().indexOf('iphone os')) {\n      body.addEventListener('touchstart', function (e) {\n        startTime = Date.now();\n      }, true);\n      body.addEventListener('touchend', function (e) {\n        var noLongTap = Date.now() - startTime < 501;\n        if (firstTouchEnd) {\n          firstTouchEnd = false;\n          if (noLongTap && e.target === dom) {\n            dTapTimer = setTimeout(function () {\n              firstTouchEnd = true;\n              lastTx = lastTy = null;\n              callback && callback(e);\n            }, 400);\n          }\n        } else {\n          firstTouchEnd = true;\n        }\n      }, true);\n      // iOS 上手指多次敲击屏幕时的速度过快不会触发 click 事件\n      dom.addEventListener('click', function (e) {\n        if (dTapTimer) {\n          clearTimeout(dTapTimer);\n          dTapTimer = null;\n          firstTouchEnd = true;\n        }\n      }, false);\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n# 向上滑动事件\nvar touch = {\n  /*向上滑动事件*/\n  swipeUp: function (dom, callback) {\n    if (!dom) {\n      return false;\n    }\n    var isTouchMove, startTx, startTy;\n    dom.addEventListener('touchstart', function (e) {\n      var touches = e.touches[0];\n      startTx = touches.clientX;\n      startTy = touches.clientY;\n      isTouchMove = false;\n    }, false);\n    dom.addEventListener('touchmove', function (e) {\n      isTouchMove = true;\n      e.preventDefault();\n    }, false);\n    dom.addEventListener('touchend', function (e) {\n      if (!isTouchMove) {\n        return;\n      }\n      var touches = e.changedTouches[0],\n        endTx = touches.clientX,\n        endTy = touches.clientY,\n        distanceX = startTx - endTx\n      distanceY = startTy - endTy,\n        isSwipe = false;\n      if (Math.abs(distanceX) < Math.abs(distanceY)) {\n        if (distanceY > 20) {\n          callback();\n          isSwipe = true;\n        }\n      }\n    }, false);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n# 向下滑动事件\nvar touch = {\n  /*向下滑动事件*/\n  swipeDown: function (dom, callback) {\n    if (!dom) {\n      return false;\n    }\n    var isTouchMove, startTx, startTy;\n    dom.addEventListener('touchstart', function (e) {\n      var touches = e.touches[0];\n      startTx = touches.clientX;\n      startTy = touches.clientY;\n      isTouchMove = false;\n    }, false);\n    dom.addEventListener('touchmove', function (e) {\n      isTouchMove = true;\n      e.preventDefault();\n    }, false);\n    dom.addEventListener('touchend', function (e) {\n      if (!isTouchMove) {\n        return;\n      }\n      var touches = e.changedTouches[0],\n        endTx = touches.clientX,\n        endTy = touches.clientY,\n        distanceX = startTx - endTx\n      distanceY = startTy - endTy,\n        isSwipe = false;\n      if (Math.abs(distanceX) < Math.abs(distanceY)) {\n        if (distanceY < -20) {\n          callback();\n          isSwipe = true;\n        }\n      }\n    }, false);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n# 向左滑动事件\nvar touch = {\n  /*向左滑动事件*/\n  swipeLeft: function (dom, callback) {\n    if (!dom) {\n      return false;\n    }\n    var isTouchMove, startTx, startTy;\n    dom.addEventListener('touchstart', function (e) {\n      var touches = e.touches[0];\n      startTx = touches.clientX;\n      startTy = touches.clientY;\n      isTouchMove = false;\n    }, false);\n    dom.addEventListener('touchmove', function (e) {\n      isTouchMove = true;\n      e.preventDefault();\n    }, false);\n    dom.addEventListener('touchend', function (e) {\n      if (!isTouchMove) {\n        return;\n      }\n      var touches = e.changedTouches[0],\n        endTx = touches.clientX,\n        endTy = touches.clientY,\n        distanceX = startTx - endTx\n      distanceY = startTy - endTy,\n        isSwipe = false;\n      if (Math.abs(distanceX) >= Math.abs(distanceY)) {\n        if (distanceX > 20) {\n          callback();\n          isSwipe = true;\n        }\n      }\n    }, false);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n# 向右滑动事件\nvar touch = {\n  /*向右滑动事件*/\n  swipeRight: function (dom, callback) {\n    if (!dom) {\n      return false;\n    }\n    var isTouchMove, startTx, startTy;\n    dom.addEventListener('touchstart', function (e) {\n      var touches = e.touches[0];\n      startTx = touches.clientX;\n      startTy = touches.clientY;\n      isTouchMove = false;\n    }, false);\n    dom.addEventListener('touchmove', function (e) {\n      isTouchMove = true;\n      e.preventDefault();\n    }, false);\n    dom.addEventListener('touchend', function (e) {\n      if (!isTouchMove) {\n        return;\n      }\n      var touches = e.changedTouches[0],\n        endTx = touches.clientX,\n        endTy = touches.clientY,\n        distanceX = startTx - endTx\n      distanceY = startTy - endTy,\n        isSwipe = false;\n      if (Math.abs(distanceX) >= Math.abs(distanceY)) {\n        if (distanceX < -20) {\n          callback();\n          isSwipe = true;\n        }\n      }\n    }, false);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36",normalizedContent:"# 点击事件\nvar touch = {\n  /* 点击事件 */\n  tap: function (dom, callback) {\n    if (dom && typeof dom == 'object') {\n      var ismove = false;\n      var starttime = 0;\n      dom.addeventlistener('touchstart', function (e) {\n        starttime = date.now();\n      }, false);\n      dom.addeventlistener('touchmove', function (e) {\n        e.preventdefault();\n        ismove = true;\n      }, false);\n      dom.addeventlistener('touchend', function (e) {\n        e.preventdefault();\n        /*是否满足tap 的要求*/\n        if (!ismove && (date.now() - starttime) < 150) {\n          /*调用 callback*/\n          callback && callback(e);\n        }\n        /*重置*/\n        ismove = false;\n        starttime = 0;\n      }, false);\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 长按事件\nvar touch = {\n  /* 长按事件 */\n  longtap: function (dom, callback) {\n    if (dom && typeof dom == 'object') {\n      var startx, starty, starttime, islongtime = false;\n      dom.addeventlistener('touchstart', function (e) {\n        starttime = date.now();\n        startx = e.touches[0].clientx;\n        starty = e.touches[0].clienty;\n      }, false);\n      dom.addeventlistener('touchend', function (e) {\n        e.stoppropagation();\n        e.preventdefault();\n        var endx = e.changedtouches[0].clientx;\n        var endy = e.changedtouches[0].clienty;\n        if (math.abs(endx - startx) < 6 && math.abs(endy - starty) < 6) {\n          islongtime = true;\n        } else {\n          islongtime = false;\n        }\n\n        if ((+new date()) - starttime > 200 && islongtime) {\n          callback && callback(e);\n        }\n      }, false);\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 双击事件\nvar touch = {\n  /* 双击事件 */\n  doubletap: function (dom, callback) {\n    if (!dom) {\n      return false;\n    }\n    var istouchend = false,\n      lasttime = 0,\n      lasttx = null,\n      lastty = null,\n      firsttouchend = true,\n      body = document.body,\n      dtaptimer, starttx, startty, starttime;\n    dom.addeventlistener('touchstart', function (e) {\n      if (dtaptimer) {\n        cleartimeout(dtaptimer);\n        dtaptimer = null;\n      }\n      var touches = e.touches[0];\n      starttx = touches.clientx;\n      startty = touches.clienty;\n    }, false);\n    dom.addeventlistener('touchend', function (e) {\n      var touches = e.changedtouches[0],\n        endtx = touches.clientx,\n        endty = touches.clienty,\n        now = date.now(),\n        duration = now - lasttime;\n      // 首先要确保能触发单次的 tap 事件\n      if (math.abs(starttx - endtx) < 6 && math.abs(starttx - endtx) < 6) {\n        // 两次 tap 的间隔确保在 500 毫秒以内\n        if (duration < 301) {\n          // 本次的 tap 位置和上一次的 tap 的位置允许一定范围内的误差\n          if (lasttx !== null &&\n            math.abs(lasttx - endtx) < 45 &&\n            math.abs(lastty - endty) < 45) {\n            firsttouchend = true;\n            lasttx = lastty = null;\n            callback && callback(e);\n          }\n        } else {\n          lasttx = endtx;\n          lastty = endty;\n        }\n      } else {\n        firsttouchend = true;\n        lasttx = lastty = null;\n      }\n      lasttime = now;\n    }, false);\n    // 在 ios 的 safari 上手指敲击屏幕的速度过快，\n    // 有一定的几率会导致第二次不会响应 touchstart 和 touchend 事件\n    // 同时手指长时间的touch不会触发click\n    if (~navigator.useragent.tolowercase().indexof('iphone os')) {\n      body.addeventlistener('touchstart', function (e) {\n        starttime = date.now();\n      }, true);\n      body.addeventlistener('touchend', function (e) {\n        var nolongtap = date.now() - starttime < 501;\n        if (firsttouchend) {\n          firsttouchend = false;\n          if (nolongtap && e.target === dom) {\n            dtaptimer = settimeout(function () {\n              firsttouchend = true;\n              lasttx = lastty = null;\n              callback && callback(e);\n            }, 400);\n          }\n        } else {\n          firsttouchend = true;\n        }\n      }, true);\n      // ios 上手指多次敲击屏幕时的速度过快不会触发 click 事件\n      dom.addeventlistener('click', function (e) {\n        if (dtaptimer) {\n          cleartimeout(dtaptimer);\n          dtaptimer = null;\n          firsttouchend = true;\n        }\n      }, false);\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n# 向上滑动事件\nvar touch = {\n  /*向上滑动事件*/\n  swipeup: function (dom, callback) {\n    if (!dom) {\n      return false;\n    }\n    var istouchmove, starttx, startty;\n    dom.addeventlistener('touchstart', function (e) {\n      var touches = e.touches[0];\n      starttx = touches.clientx;\n      startty = touches.clienty;\n      istouchmove = false;\n    }, false);\n    dom.addeventlistener('touchmove', function (e) {\n      istouchmove = true;\n      e.preventdefault();\n    }, false);\n    dom.addeventlistener('touchend', function (e) {\n      if (!istouchmove) {\n        return;\n      }\n      var touches = e.changedtouches[0],\n        endtx = touches.clientx,\n        endty = touches.clienty,\n        distancex = starttx - endtx\n      distancey = startty - endty,\n        isswipe = false;\n      if (math.abs(distancex) < math.abs(distancey)) {\n        if (distancey > 20) {\n          callback();\n          isswipe = true;\n        }\n      }\n    }, false);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n# 向下滑动事件\nvar touch = {\n  /*向下滑动事件*/\n  swipedown: function (dom, callback) {\n    if (!dom) {\n      return false;\n    }\n    var istouchmove, starttx, startty;\n    dom.addeventlistener('touchstart', function (e) {\n      var touches = e.touches[0];\n      starttx = touches.clientx;\n      startty = touches.clienty;\n      istouchmove = false;\n    }, false);\n    dom.addeventlistener('touchmove', function (e) {\n      istouchmove = true;\n      e.preventdefault();\n    }, false);\n    dom.addeventlistener('touchend', function (e) {\n      if (!istouchmove) {\n        return;\n      }\n      var touches = e.changedtouches[0],\n        endtx = touches.clientx,\n        endty = touches.clienty,\n        distancex = starttx - endtx\n      distancey = startty - endty,\n        isswipe = false;\n      if (math.abs(distancex) < math.abs(distancey)) {\n        if (distancey < -20) {\n          callback();\n          isswipe = true;\n        }\n      }\n    }, false);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n# 向左滑动事件\nvar touch = {\n  /*向左滑动事件*/\n  swipeleft: function (dom, callback) {\n    if (!dom) {\n      return false;\n    }\n    var istouchmove, starttx, startty;\n    dom.addeventlistener('touchstart', function (e) {\n      var touches = e.touches[0];\n      starttx = touches.clientx;\n      startty = touches.clienty;\n      istouchmove = false;\n    }, false);\n    dom.addeventlistener('touchmove', function (e) {\n      istouchmove = true;\n      e.preventdefault();\n    }, false);\n    dom.addeventlistener('touchend', function (e) {\n      if (!istouchmove) {\n        return;\n      }\n      var touches = e.changedtouches[0],\n        endtx = touches.clientx,\n        endty = touches.clienty,\n        distancex = starttx - endtx\n      distancey = startty - endty,\n        isswipe = false;\n      if (math.abs(distancex) >= math.abs(distancey)) {\n        if (distancex > 20) {\n          callback();\n          isswipe = true;\n        }\n      }\n    }, false);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n# 向右滑动事件\nvar touch = {\n  /*向右滑动事件*/\n  swiperight: function (dom, callback) {\n    if (!dom) {\n      return false;\n    }\n    var istouchmove, starttx, startty;\n    dom.addeventlistener('touchstart', function (e) {\n      var touches = e.touches[0];\n      starttx = touches.clientx;\n      startty = touches.clienty;\n      istouchmove = false;\n    }, false);\n    dom.addeventlistener('touchmove', function (e) {\n      istouchmove = true;\n      e.preventdefault();\n    }, false);\n    dom.addeventlistener('touchend', function (e) {\n      if (!istouchmove) {\n        return;\n      }\n      var touches = e.changedtouches[0],\n        endtx = touches.clientx,\n        endty = touches.clienty,\n        distancex = starttx - endtx\n      distancey = startty - endty,\n        isswipe = false;\n      if (math.abs(distancex) >= math.abs(distancey)) {\n        if (distancex < -20) {\n          callback();\n          isswipe = true;\n        }\n      }\n    }, false);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36",charsets:{cjk:!0}},{title:"regexp",frontmatter:{title:"regexp",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["regexp"],categories:["libs"],readingShow:"top"},regularPath:"/libs/regexp.html",relativePath:"libs/regexp.md",key:"v-d6a7842a",path:"/libs/regexp.html",headers:[{level:2,title:"regExp",slug:"regexp",normalizedTitle:"regexp",charIndex:2},{level:2,title:"字面量",slug:"字面量",normalizedTitle:"字面量",charIndex:211},{level:2,title:"对象创建表达式",slug:"对象创建表达式",normalizedTitle:"对象创建表达式",charIndex:320},{level:2,title:"选择符",slug:"选择符",normalizedTitle:"选择符",charIndex:805},{level:2,title:"原子表和原子组",slug:"原子表和原子组",normalizedTitle:"原子表和原子组",charIndex:889},{level:2,title:"转义字符",slug:"转义字符",normalizedTitle:"转义字符",charIndex:1071}],lastUpdated:"2020/7/22 上午4:40:52",headersStr:"regExp 字面量 对象创建表达式 选择符 原子表和原子组 转义字符",content:'# regExp\nlet str = "abcdef1234www123com";\nlet nums = [...str].filter(item => !Number.isNaN(parseInt(item)));\nconsole.log(nums.join("")); // 1234123\nconsole.log(str.match(/\\d/g).join("")); // 1234123\n\n\n1\n2\n3\n4\n# 字面量\nlet str = "abcdef1234www123com";\nlet a = "abc";\nconsole.log(eval(`/${a}/`).test(str)); // true\n\n\n1\n2\n3\n# 对象创建表达式\nvar str = "www.baidu.com";\nvar reg = new RegExp("b", "g");\nconsole.log(reg.test(str)); // true\n\nvar str = "www.baidu.com";\nvar s = "b";\nvar reg = new RegExp(s, "g");\nconsole.log(reg.test(str)); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 示例\n\n<div>Lorem ipsum dolor sit amet.</div>\n\nlet con = prompt("输入内容匹配") let div = document.querySelector(\'div\') let reg\n= new RegExp(con, "g") div.innerHTML = div.innerHTML.replace(reg, search =>\n`<span style="color: red">${search}</span>`)\n\n\n1\n2\n3\n4\n5\n# 选择符\nlet tel = "010-1234567";\nconsole.log(/^(010|020)\\-\\d{7,8}$/.test(tel));\n\n\n1\n2\n# 原子表和原子组\nlet reg = /[123456]/;\nlet str = "123345";\nconsole.log(reg.test(str)); // true\n\nlet reg = /(12|34)/;\nlet str = "123345";\nconsole.log(reg.test(str)); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n# 转义字符\nlet num = "123.234";\nconsole.log(/\\d+\\.\\d+/.test(num)); // true\n\n\n1\n2',normalizedContent:'# regexp\nlet str = "abcdef1234www123com";\nlet nums = [...str].filter(item => !number.isnan(parseint(item)));\nconsole.log(nums.join("")); // 1234123\nconsole.log(str.match(/\\d/g).join("")); // 1234123\n\n\n1\n2\n3\n4\n# 字面量\nlet str = "abcdef1234www123com";\nlet a = "abc";\nconsole.log(eval(`/${a}/`).test(str)); // true\n\n\n1\n2\n3\n# 对象创建表达式\nvar str = "www.baidu.com";\nvar reg = new regexp("b", "g");\nconsole.log(reg.test(str)); // true\n\nvar str = "www.baidu.com";\nvar s = "b";\nvar reg = new regexp(s, "g");\nconsole.log(reg.test(str)); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 示例\n\n<div>lorem ipsum dolor sit amet.</div>\n\nlet con = prompt("输入内容匹配") let div = document.queryselector(\'div\') let reg\n= new regexp(con, "g") div.innerhtml = div.innerhtml.replace(reg, search =>\n`<span style="color: red">${search}</span>`)\n\n\n1\n2\n3\n4\n5\n# 选择符\nlet tel = "010-1234567";\nconsole.log(/^(010|020)\\-\\d{7,8}$/.test(tel));\n\n\n1\n2\n# 原子表和原子组\nlet reg = /[123456]/;\nlet str = "123345";\nconsole.log(reg.test(str)); // true\n\nlet reg = /(12|34)/;\nlet str = "123345";\nconsole.log(reg.test(str)); // true\n\n\n1\n2\n3\n4\n5\n6\n7\n# 转义字符\nlet num = "123.234";\nconsole.log(/\\d+\\.\\d+/.test(num)); // true\n\n\n1\n2',charsets:{cjk:!0}},{title:"常见十种算法",frontmatter:{title:"常见十种算法",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["算法"],categories:["libs"],readingShow:"top"},regularPath:"/libs/sort.html",relativePath:"libs/sort.md",key:"v-1e971e6a",path:"/libs/sort.html",headers:[{level:2,title:"冒泡排序",slug:"冒泡排序",normalizedTitle:"冒泡排序",charIndex:41},{level:2,title:"快速排序",slug:"快速排序",normalizedTitle:"快速排序",charIndex:2407},{level:2,title:"选择排序",slug:"选择排序",normalizedTitle:"选择排序",charIndex:5925},{level:2,title:"归并排序",slug:"归并排序",normalizedTitle:"归并排序",charIndex:6798},{level:2,title:"插入排序",slug:"插入排序",normalizedTitle:"插入排序",charIndex:7831},{level:3,title:"直接插入",slug:"直接插入",normalizedTitle:"直接插入",charIndex:7838},{level:3,title:"拆半插入",slug:"拆半插入",normalizedTitle:"拆半插入",charIndex:8935},{level:2,title:"希尔排序",slug:"希尔排序",normalizedTitle:"希尔排序",charIndex:10710},{level:2,title:"堆排序",slug:"堆排序",normalizedTitle:"堆排序",charIndex:12266},{level:2,title:"桶排序",slug:"桶排序",normalizedTitle:"桶排序",charIndex:13949},{level:2,title:"计数排序",slug:"计数排序",normalizedTitle:"计数排序",charIndex:16320},{level:2,title:"基数排序",slug:"基数排序",normalizedTitle:"基数排序",charIndex:17803},{level:2,title:"算法可视化工具",slug:"算法可视化工具",normalizedTitle:"算法可视化工具",charIndex:19102},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:19177}],lastUpdated:"2020/7/22 上午4:40:52",headersStr:"冒泡排序 快速排序 选择排序 归并排序 插入排序 直接插入 拆半插入 希尔排序 堆排序 桶排序 计数排序 基数排序 算法可视化工具 相关链接",content:"\n\n原文: JavaScript 数据结构与算法之美 - 十大经典排序算法\n\n# 冒泡排序\n * 步骤 * 冒泡排序只会操作相邻的两个数据;\n    * 每次冒泡操作都会对相邻的两个元素进行比较，看是否满足大小关系要求。如果不满足就让它俩互换;\n    * 一次冒泡会让至少一个元素移动到它应该在的位置，重复 n 次，就完成了 n 个数据的排序工作.\n   \n   \n\n\n\n * 代码\n\n// 冒泡排序（未优化）\nvar bubbleSort = arr => {\n  console.time('改进前冒泡排序耗时');\n  const length = arr.length;\n  if (length <= 1) return;\n  // i < length - 1 是因为外层只需要 length-1 次就排好了，第 length 次比较是多余的。\n  for (let i = 0; i < length - 1; i++) {\n    // j < length - i - 1 是因为内层的 length-i-1 到 length-1 的位置已经排好了，不需要再比较一次。\n    for (let j = 0; j < length - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        // 设置临时变量交换相邻数字\n        const temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n      }\n    }\n  }\n  console.log('改进前 arr :', arr);\n  console.timeEnd('改进前冒泡排序耗时');\n};\n\nvar arr = [10, 3, 7, 1, 23, 4, 3]\nbubbleSort(arr)\n\n// 冒泡排序（已优化）\nconst bubbleSort2 = arr => {\n  console.time('改进后冒泡排序耗时');\n  const length = arr.length;\n  if (length <= 1) return;\n  // i < length - 1 是因为外层只需要 length-1 次就排好了，第 length 次比较是多余的。\n  for (let i = 0; i < length - 1; i++) {\n    let hasChange = false; // 提前退出冒泡循环的标志位\n    // j < length - i - 1 是因为内层的 length-i-1 到 length-1 的位置已经排好了，不需要再比较一次。\n    for (let j = 0; j < length - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        const temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n        hasChange = true; // 表示有数据交换\n      }\n    }\n\n    if (!hasChange) break; // 如果 false 说明所有元素已经到位，没有数据交换，提前退出\n  }\n  console.log('改进后 arr :', arr);\n  console.timeEnd('改进后冒泡排序耗时');\n};\n\nvar arr = [10, 3, 7, 1, 23, 4, 3]\nbubbleSort2(arr)\n\n// 冒泡排序（优化3）\nfunction bubbleSort(arr) {\n  //记录最后一次交换的位置\n  var pos = 0;\n  for (var i = 0; i < arr.length; i++) {\n    //有序标记，每一轮的初始是true\n    var hasChange = false;\n    for (var j = 0; j < arr.length - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        var temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n        //有元素交换，所以不是有序，标记变为false\n        hasChange = true;\n        //把无序数列的边界更新为最后一次交换元素的位置\n        pos = j\n      }\n    }\n    i = pos\n    if (!hasChange) break;\n  }\n  return arr\n}\n\nvar arr = [3, 44, 38, 5, 47, 15, 36, 26, 27, 2, 46, 4, 19, 50, 48];\nconsole.log(bubbleSort(arr));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n# 快速排序\n * 相关资料： 资料 1 | 资料 2 | 资料 3 | 资料 4\n   \n   \n * 步骤\n   \n    * 先找到一个基准点（一般指数组的中部），然后数组被该基准点分为两部分，依次与该基准点数据比较，如果比它小，放左边；反之，放右边。\n    * 左右分别用一个空数组去存储比较后的数据。\n    * 最后递归执行上述操作，直到数组长度 <= 1\n   \n   \n\n\n\n * 代码 1\n\nconst quickSort0 = arr => {\n  if (arr.length <= 1) {\n    return arr;\n  }\n  //取基准点\n  const midIndex = Math.floor(arr.length / 2);\n  //取基准点的值，splice(index,1) 则返回的是含有被删除的元素的数组。\n  const valArr = arr.splice(midIndex, 1);\n  const midIndexVal = valArr[0];\n  const left = []; //存放比基准点小的数组\n  const right = []; //存放比基准点大的数组\n  //遍历数组，进行判断分配\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < midIndexVal) {\n      left.push(arr[i]); //比基准点小的放在左边数组\n    } else {\n      right.push(arr[i]); //比基准点大的放在右边数组\n    }\n  }\n  //递归执行以上操作，对左右两个数组进行操作，直到数组长度为 <= 1\n  return quickSort0(left).concat(midIndexVal, quickSort0(right));\n};\nconst array0 = [5, 14, 3, 21, 10];\nconsole.log('quickSort0 ', quickSort0(array0));\n\nconst quickSort1 = arr => {\n  if (arr.length <= 1) {\n    return arr;\n  }\n  // 基准值取数组第一个\n  const pivot = arr.pop();\n  // const left = []; //存放比基准点小的数组\n  // const right = []; //存放比基准点大的数组\n  //遍历数组，进行判断分配\n  // for (let i = 1; i < arr.length; i++) {\n  //   if (arr[i] <= midVal) {\n  //     left.push(arr[i]); //比基准点小的放在左边数组\n  //   } else {\n  //     right.push(arr[i]); //比基准点大的放在右边数组\n  //   }\n  // }\n  let left = arr.filter(item => item < pivot);\n  let right = arr.filter(item => item >= pivot);\n  //递归执行以上操作，对左右两个数组进行操作，直到数组长度为 <= 1\n  return quickSort1(left).concat(pivot, quickSort1(right));\n};\nconst array1 = [5, 4, 3, 2, 1];\nconsole.log('quickSort1 ', quickSort1(array1));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n * 原地分区版快速排序实现\n\n// 原地分区版快速排序实现\nconst quickSort2 = (arr, left, right) => {\n  let len = arr.length,\n    partitionIndex;\n  left = typeof left != 'number' ? 0 : left;\n  right = typeof right != 'number' ? len - 1 : right;\n\n  if (left < right) {\n    // 返回基准值的所在位置， 即索引\n    partitionIndex = partition(arr, left, right);\n    // 可理解为：把数组拆分为 左边的数组值都比基准值小，右边的数组都比基准值大\n\n    // 比对基准值左边的数组\n    quickSort2(arr, left, partitionIndex - 1);\n    // 比对基准值右边的数组\n    quickSort2(arr, partitionIndex + 1, right);\n  }\n  return arr;\n};\n\nconst swap = (arr, i, j) => {\n  // let temp = arr[i];\n  // arr[i] = arr[j];\n  // arr[j] = temp;\n  [arr[i], arr[j]] = [arr[j], arr[i]]\n};\n\nconst partition = (arr, left, right) => {\n  //分区操作\n  let pivotIdx = left, //基准值（pivot）的索引\n    pivot = arr[pivotIdx], // 基准值（pivot）\n    index = pivotIdx + 1; // 初始index的位置\n\n  // index: 最终记录着数组中首次比基准值（pivot）大的最后索引位置\n\n  // i 取 index 的下一个数与之对比\n  for (let i = index; i <= right; i++) {\n    // 判断基准值与当前项的大小\n    if (arr[i] < pivot) {\n      // 如果比基准值小，将arr[i] 与 arr[index]交换\n      // 即 小于基准值的 与 大于基准值的 互相交换\n      swap(arr, i, index);\n      // index 下移一位\n      index++;\n    }\n  }\n  // 将基准值与最后一次小于它的值交换\n  swap(arr, pivotIdx, index - 1);\n\n  // 返回最后一次比基准值小的索引位置： index-1\n  return index - 1;\n};\n\nconst array2 = [8, 5, 1, 13, 2, 6, 9, 21];\n\n// partitionIndex = partition(arr, left, right);\n// 执行 部分 结果\n// ...\n// 8, 5, 1, 13, 2, 6, 9, 21\n// 8, 5, 1, 2, 13, 6, 9, 21\n// 8, 5, 1, 2, 6, 13, 9, 21\n// 8, 5, 1, 2, 6, 13, 9, 21\n// ...\n// 6, 5, 1, 2, 8, 13, 9, 21 => swap(arr, pivotIdx, index - 1);\n\nconsole.log('quickSort2 ', quickSort2(array2));\n// => [ 1, 2, 5, 6, 8, 9, 13, 21 ]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n# 选择排序\n * 步骤 * 首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置\n    * 再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾\n    * 重复第二步，直到所有元素均排序完毕\n   \n   \n\n\n\n * 代码\n\nconst selectionSort = array => {\n  const len = array.length;\n  let minIndex, temp;\n  for (let i = 0; i < len - 1; i++) {\n    minIndex = i;\n    for (let j = i + 1; j < len; j++) {\n      if (array[j] < array[minIndex]) {\n        // 寻找最小的数\n        minIndex = j; // 将最小数的索引保存\n      }\n    }\n    temp = array[i];\n    array[i] = array[minIndex];\n    array[minIndex] = temp;\n    console.log('array: ', array);\n  }\n  return array;\n};\n\n// 测试\nconst array = [5, 4, 3, 2, 1];\nconsole.log('原始array:', array);\nselectionSort(array);\n// 原始 array:  [5, 4, 3, 2, 1]\n// array:  \t\t [1, 4, 3, 2, 5]\n// array:  \t\t [1, 2, 3, 4, 5]\n// array: \t\t [1, 2, 3, 4, 5]\n// array:  \t\t [1, 2, 3, 4, 5]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 归并排序\n * 相关资料：资料 1\n\n排序一个数组，我们先把数组从中间分成前后两部分，然后对前后两部分分别排序，再将排好序的两部分合并在一起，这样整个数组就都有序\n\n\n\n * 代码\n\nconst mergeSort = arr => {\n  //采用自上而下的递归方法\n  const len = arr.length;\n  if (len < 2) {\n    return arr;\n  }\n  // length >> 1 和 Math.floor(len / 2) 等价\n  let middle = Math.floor(len / 2),\n    left = arr.slice(0, middle),\n    right = arr.slice(middle); // 拆分为两个子数组\n  return merge(mergeSort(left), mergeSort(right));\n};\n\nconst merge = (left, right) => {\n  const result = [];\n  while (left.length && right.length) {\n    // 注意: 判断的条件是小于或等于，如果只是小于，那么排序将不稳定.\n    if (left[0] <= right[0]) {\n      result.push(left.shift());\n    } else {\n      result.push(right.shift());\n    }\n  }\n\n  while (left.length) result.push(left.shift());\n  while (right.length) result.push(right.shift());\n  return result;\n};\nconst arr = [3, 44, 38, 5, 47, 15, 36, 26, 27, 2, 46, 4, 19, 50, 48];\nconsole.time('归并排序耗时');\nconsole.log('arr :', mergeSort(arr));\nconsole.timeEnd('归并排序耗时');\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n# 插入排序\n# 直接插入\n * 步骤\n   \n    * 从第一个元素开始，该元素可以认为已经被排序；\n    * 取出下一个元素，在已经排序的元素序列中从后向前扫描；\n    * 如果该元素（已排序）大于新元素，将该元素移到下一位置；\n    * 重复步骤 3，直到找到已排序的元素小于或者等于新元素的位置；\n    * 将新元素插入到该位置后；\n    * 重复步骤 2 ~ 5\n   \n   \n\n\n\n * 代码\n\n// 插入排序\nconst insertionSort = array => {\n  const len = array.length;\n  if (len <= 1) return\n\n  let preIndex, current;\n  for (let i = 1; i < len; i++) {\n    preIndex = i - 1; //待比较元素的下标\n    current = array[i]; //当前元素\n    while (preIndex >= 0 && array[preIndex] > current) {\n      //前置条件之一: 待比较元素比当前元素大\n      array[preIndex + 1] = array[preIndex]; //将待比较元素后移一位\n      preIndex--; //游标前移一位\n    }\n    if (preIndex + 1 != i) {\n      //避免同一个元素赋值给自身\n      array[preIndex + 1] = current; //将当前元素插入预留空位\n      console.log('array :', array);\n    }\n  }\n  return array;\n};\n\n// 测试\nconst array = [5, 4, 3, 2, 1];\nconsole.log(\"原始 array :\", array);\ninsertionSort(array);\n// 原始 array:    [5, 4, 3, 2, 1]\n// array:  \t\t [4, 5, 3, 2, 1]\n// array:  \t\t [3, 4, 5, 2, 1]\n// array: \t\t [2, 3, 4, 5, 1]\n// array:  \t\t [1, 2, 3, 4, 5]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n# 拆半插入\n * 步骤\n   \n    * 取0 ~ i-1 的中间点 ( m = (i-1) >> 1 )，array[i] 与array[m] 进行比较，若 array[i] < array[m]，则说明待插入的元素 array[i]应该处于数组的 0 ~ m索引之间；反之，则说明它应该处于数组的 m ~ i-1 索引之间。\n    * 重复步骤 1，每次缩小一半的查找范围，直至找到插入的位置。\n    * 将数组中插入位置之后的元素全部后移一位。\n    * 在指定位置插入第 i 个元素。\n   \n   \n\n注：x >> 1 是位运算中的右移运算，表示右移一位，等同于 x 除以 2 再取整，即 x >> 1 == Math.floor(x/2)\n\n * 代码\n\n// 折半插入排序\nconst binaryInsertionSort = array => {\n  const len = array.length;\n  if (len <= 1) return;\n\n  let current, i, j, low, high, m;\n  for (i = 1; i < len; i++) {\n    low = 0;\n    high = i - 1;\n    current = array[i];\n\n    while (low <= high) {\n      //步骤 1 & 2 : 折半查找\n      m = (low + high) >> 1; // 注: x>>1 是位运算中的右移运算, 表示右移一位, 等同于 x 除以 2 再取整, 即 x>>1 == Math.floor(x/2) .\n      if (array[i] >= array[m]) {\n        //值相同时, 切换到高半区，保证稳定性\n        low = m + 1; //插入点在高半区\n      } else {\n        high = m - 1; //插入点在低半区\n      }\n    }\n    for (j = i; j > low; j--) {\n      //步骤 3: 插入位置之后的元素全部后移一位\n      array[j] = array[j - 1];\n      console.log('array2 :', JSON.parse(JSON.stringify(array)));\n    }\n    array[low] = current; //步骤 4: 插入该元素\n  }\n  console.log('array2 :', JSON.parse(JSON.stringify(array)));\n  return array;\n};\n\nconst array2 = [5, 4, 3, 2, 1];\nconsole.log('原始 array2:', array2);\nbinaryInsertionSort(array2);\n// 原始 array2:  [5, 4, 3, 2, 1]\n// array2 :     [5, 5, 3, 2, 1]\n// array2 :     [4, 5, 5, 2, 1]\n// array2 :     [4, 4, 5, 2, 1]\n// array2 :     [3, 4, 5, 5, 1]\n// array2 :     [3, 4, 4, 5, 1]\n// array2 :     [3, 3, 4, 5, 1]\n// array2 :     [2, 3, 4, 5, 5]\n// array2 :     [2, 3, 4, 4, 5]\n// array2 :     [2, 3, 3, 4, 5]\n// array2 :     [2, 2, 3, 4, 5]\n// array2 :     [1, 2, 3, 4, 5]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n# 希尔排序\n * 步骤 * 先将整个待排序的记录序列分割成为若干子序列。\n    * 分别进行直接插入排序。\n    * 待整个序列中的记录基本有序时，再对全体记录进行依次直接插入排序。\n   \n   \n\n\n\n * 代码\n\nconst shellSort = arr => {\n  let len = arr.length,\n    temp,\n    gap = 1;\n  console.time('希尔排序耗时');\n  while (gap < len / 3) {\n    //动态定义间隔序列\n    gap = gap * 3 + 1;\n  }\n  for (gap; gap > 0; gap = Math.floor(gap / 3)) {\n    for (let i = gap; i < len; i++) {\n      temp = arr[i];\n      let j = i - gap;\n      for (; j >= 0 && arr[j] > temp; j -= gap) {\n        arr[j + gap] = arr[j];\n      }\n      arr[j + gap] = temp;\n      console.log('arr  :', arr);\n    }\n  }\n  console.timeEnd('希尔排序耗时');\n  return arr;\n};\n\n// 测试\nconst array = [35, 33, 42, 10, 14, 19, 27, 44];\nconsole.log('原始array:', array);\nconst newArr = shellSort(array);\nconsole.log('newArr:', newArr);\n// 原始 array:   [35, 33, 42, 10, 14, 19, 27, 44]\n// arr      :   [14, 33, 42, 10, 35, 19, 27, 44]\n// arr      :   [14, 19, 42, 10, 35, 33, 27, 44]\n// arr      :   [14, 19, 27, 10, 35, 33, 42, 44]\n// arr      :   [14, 19, 27, 10, 35, 33, 42, 44]\n// arr      :   [14, 19, 27, 10, 35, 33, 42, 44]\n// arr      :   [14, 19, 27, 10, 35, 33, 42, 44]\n// arr      :   [10, 14, 19, 27, 35, 33, 42, 44]\n// arr      :   [10, 14, 19, 27, 35, 33, 42, 44]\n// arr      :   [10, 14, 19, 27, 33, 35, 42, 44]\n// arr      :   [10, 14, 19, 27, 33, 35, 42, 44]\n// arr      :   [10, 14, 19, 27, 33, 35, 42, 44]\n// 希尔排序耗时: 3.592041015625ms\n// newArr:     [10, 14, 19, 27, 33, 35, 42, 44]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n# 堆排序\n * 代码\n\n// 堆排序\nconst heapSort = array => {\n  console.time('堆排序耗时');\n  // 初始化大顶堆，从第一个非叶子结点开始\n  for (let i = Math.floor(array.length / 2 - 1); i >= 0; i--) {\n    heapify(array, i, array.length);\n  }\n  // 排序，每一次 for 循环找出一个当前最大值，数组长度减一\n  for (let i = Math.floor(array.length - 1); i > 0; i--) {\n    // 根节点与最后一个节点交换\n    swap(array, 0, i);\n    // 从根节点开始调整，并且最后一个结点已经为当前最大值，不需要再参与比较，所以第三个参数为 i，即比较到最后一个结点前一个即可\n    heapify(array, 0, i);\n  }\n  console.timeEnd('堆排序耗时');\n  return array;\n};\n\n// 交换两个节点\nconst swap = (array, i, j) => {\n  let temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n};\n\n// 将 i 结点以下的堆整理为大顶堆，注意这一步实现的基础实际上是：\n// 假设结点 i 以下的子堆已经是一个大顶堆，heapify 函数实现的\n// 功能是实际上是：找到 结点 i 在包括结点 i 的堆中的正确位置。\n// 后面将写一个 for 循环，从第一个非叶子结点开始，对每一个非叶子结点\n// 都执行 heapify 操作，所以就满足了结点 i 以下的子堆已经是一大顶堆\nconst heapify = (array, i, length) => {\n  let temp = array[i]; // 当前父节点\n  // j < length 的目的是对结点 i 以下的结点全部做顺序调整\n  for (let j = 2 * i + 1; j < length; j = 2 * j + 1) {\n    temp = array[i]; // 将 array[i] 取出，整个过程相当于找到 array[i] 应处于的位置\n    if (j + 1 < length && array[j] < array[j + 1]) {\n      j++; // 找到两个孩子中较大的一个，再与父节点比较\n    }\n    if (temp < array[j]) {\n      swap(array, i, j); // 如果父节点小于子节点:交换；否则跳出\n      i = j; // 交换后，temp 的下标变为 j\n    } else {\n      break;\n    }\n  }\n};\n\n// 测试\nconst array = [4, 6, 8, 5, 9, 1, 2, 5, 3, 2];\nconsole.log('原始array:', array);\nconst newArr = heapSort(array);\nconsole.log('newArr:', newArr);\n// 原始 array:  [4, 6, 8, 5, 9, 1, 2, 5, 3, 2]\n// 堆排序耗时: 0.15087890625ms\n// newArr:     [1, 2, 2, 3, 4, 5, 5, 6, 8, 9]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n# 桶排序\n * 代码\n\n// 桶排序\nconst bucketSort = (array, bucketSize) => {\n  if (array.length === 0) {\n    return array;\n  }\n\n  console.time('桶排序耗时');\n  let i = 0;\n  let minValue = array[0];\n  let maxValue = array[0];\n  for (i = 1; i < array.length; i++) {\n    if (array[i] < minValue) {\n      minValue = array[i]; //输入数据的最小值\n    } else if (array[i] > maxValue) {\n      maxValue = array[i]; //输入数据的最大值\n    }\n  }\n\n  //桶的初始化\n  const DEFAULT_BUCKET_SIZE = 5; //设置桶的默认数量为 5\n  bucketSize = bucketSize || DEFAULT_BUCKET_SIZE;\n  const bucketCount = Math.floor((maxValue - minValue) / bucketSize) + 1;\n  const buckets = new Array(bucketCount);\n  for (i = 0; i < buckets.length; i++) {\n    buckets[i] = [];\n  }\n\n  //利用映射函数将数据分配到各个桶中\n  for (i = 0; i < array.length; i++) {\n    buckets[Math.floor((array[i] - minValue) / bucketSize)].push(array[i]);\n  }\n\n  array.length = 0;\n  for (i = 0; i < buckets.length; i++) {\n    quickSort(buckets[i]); //对每个桶进行排序，这里使用了快速排序\n    for (var j = 0; j < buckets[i].length; j++) {\n      array.push(buckets[i][j]);\n    }\n  }\n  console.timeEnd('桶排序耗时');\n\n  return array;\n};\n\n// 快速排序\nconst quickSort = (arr, left, right) => {\n  let len = arr.length,\n    partitionIndex;\n  left = typeof left != 'number' ? 0 : left;\n  right = typeof right != 'number' ? len - 1 : right;\n\n  if (left < right) {\n    partitionIndex = partition(arr, left, right);\n    quickSort(arr, left, partitionIndex - 1);\n    quickSort(arr, partitionIndex + 1, right);\n  }\n  return arr;\n};\n\nconst partition = (arr, left, right) => {\n  //分区操作\n  let pivot = left, //设定基准值（pivot）\n    index = pivot + 1;\n  for (let i = index; i <= right; i++) {\n    if (arr[i] < arr[pivot]) {\n      swap(arr, i, index);\n      index++;\n    }\n  }\n  swap(arr, pivot, index - 1);\n  return index - 1;\n};\n\nconst swap = (arr, i, j) => {\n  let temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n};\n\n\n// 测试\nconst array = [4, 6, 8, 5, 9, 1, 2, 5, 3, 2];\nconsole.log('原始array:', array);\nconst newArr = bucketSort(array);\nconsole.log('newArr:', newArr);\n// 原始 array:  [4, 6, 8, 5, 9, 1, 2, 5, 3, 2]\n// 堆排序耗时:   0.133056640625ms\n// newArr:  \t [1, 2, 2, 3, 4, 5, 5, 6, 8, 9]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n# 计数排序\n * 代码\n\nconst countingSort = array => {\n  let len = array.length,\n    result = [],\n    countArr = [],\n    min = (max = array[0]);\n  console.time('计数排序耗时');\n  for (let i = 0; i < len; i++) {\n    // 获取最小，最大 值\n    min = min <= array[i] ? min : array[i];\n    max = max >= array[i] ? max : array[i];\n    countArr[array[i]] = countArr[array[i]] ? countArr[array[i]] + 1 : 1;\n  }\n  console.log('countArr :', countArr);\n  // 从最小值 -> 最大值,将计数逐项相加\n  for (let j = min; j < max; j++) {\n    countArr[j + 1] = (countArr[j + 1] || 0) + (countArr[j] || 0);\n  }\n  console.log('countArr 2:', countArr);\n  // countArr 中,下标为 array 数值，数据为 array 数值出现次数；反向填充数据进入 result 数据\n  for (let k = len - 1; k >= 0; k--) {\n    // result[位置] = array 数据\n    result[countArr[array[k]] - 1] = array[k];\n    // 减少 countArr 数组中保存的计数\n    countArr[array[k]]--;\n    // console.log(\"array[k]:\", array[k], 'countArr[array[k]] :', countArr[array[k]],)\n    console.log('result:', result);\n  }\n  console.timeEnd('计数排序耗时');\n  return result;\n};\n\n// 测试\nconst array = [2, 2, 3, 8, 7, 1, 2, 2, 2, 7, 3, 9, 8, 2, 1, 4, 2, 4, 6, 9, 2];\nconsole.log('原始 array: ', array);\nconst newArr = countingSort(array);\nconsole.log('newArr: ', newArr);\n// 原始 array:  [2, 2, 3, 8, 7, 1, 2, 2, 2, 7, 3, 9, 8, 2, 1, 4, 2, 4, 6, 9, 2]\n// 计数排序耗时:   5.6708984375ms\n// newArr:  \t [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 6, 7, 7, 8, 8, 9, 9]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n# 基数排序\n * 代码\n\n/**\n\t* name: 基数排序\n\t* @param  array 待排序数组\n\t* @param  max 最大位数\n\t*/\nconst radixSort = (array, max) => {\n  console.time('计数排序耗时');\n  const buckets = [];\n  let unit = 10,\n    base = 1;\n  for (let i = 0; i < max; i++ , base *= 10, unit *= 10) {\n    for (let j = 0; j < array.length; j++) {\n      let index = ~~((array[j] % unit) / base); //依次过滤出个位，十位等等数字\n      if (buckets[index] == null) {\n        buckets[index] = []; //初始化桶\n      }\n      buckets[index].push(array[j]); //往不同桶里添加数据\n    }\n    let pos = 0,\n      value;\n    for (let j = 0, length = buckets.length; j < length; j++) {\n      if (buckets[j] != null) {\n        while ((value = buckets[j].shift()) != null) {\n          array[pos++] = value; //将不同桶里数据挨个捞出来，为下一轮高位排序做准备，由于靠近桶底的元素排名靠前，因此从桶底先捞\n        }\n      }\n    }\n  }\n  console.timeEnd('计数排序耗时');\n  return array;\n};\n\n// 测试\nconst array = [3, 44, 38, 5, 47, 15, 36, 26, 27, 2, 46, 4, 19, 50, 48];\nconsole.log('原始array:', array);\nconst newArr = radixSort(array, 2);\nconsole.log('newArr:', newArr);\n// 原始 array:  [3, 44, 38, 5, 47, 15, 36, 26, 27, 2, 46, 4, 19, 50, 48]\n// 堆排序耗时:   0.064208984375ms\n// newArr:  \t [2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# 算法可视化工具\n * algorithm-visualizer\n * visualgo.net/en\n * www.ee.ryerson.ca\n\n# 相关链接\n * JavaScript 数据结构与算法之美 - 时间和空间复杂度\n * JavaScript 数据结构与算法之美 - 十大经典排序算法汇总\n * 漫画：“排序算法” 大总结",normalizedContent:"\n\n原文: javascript 数据结构与算法之美 - 十大经典排序算法\n\n# 冒泡排序\n * 步骤 * 冒泡排序只会操作相邻的两个数据;\n    * 每次冒泡操作都会对相邻的两个元素进行比较，看是否满足大小关系要求。如果不满足就让它俩互换;\n    * 一次冒泡会让至少一个元素移动到它应该在的位置，重复 n 次，就完成了 n 个数据的排序工作.\n   \n   \n\n\n\n * 代码\n\n// 冒泡排序（未优化）\nvar bubblesort = arr => {\n  console.time('改进前冒泡排序耗时');\n  const length = arr.length;\n  if (length <= 1) return;\n  // i < length - 1 是因为外层只需要 length-1 次就排好了，第 length 次比较是多余的。\n  for (let i = 0; i < length - 1; i++) {\n    // j < length - i - 1 是因为内层的 length-i-1 到 length-1 的位置已经排好了，不需要再比较一次。\n    for (let j = 0; j < length - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        // 设置临时变量交换相邻数字\n        const temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n      }\n    }\n  }\n  console.log('改进前 arr :', arr);\n  console.timeend('改进前冒泡排序耗时');\n};\n\nvar arr = [10, 3, 7, 1, 23, 4, 3]\nbubblesort(arr)\n\n// 冒泡排序（已优化）\nconst bubblesort2 = arr => {\n  console.time('改进后冒泡排序耗时');\n  const length = arr.length;\n  if (length <= 1) return;\n  // i < length - 1 是因为外层只需要 length-1 次就排好了，第 length 次比较是多余的。\n  for (let i = 0; i < length - 1; i++) {\n    let haschange = false; // 提前退出冒泡循环的标志位\n    // j < length - i - 1 是因为内层的 length-i-1 到 length-1 的位置已经排好了，不需要再比较一次。\n    for (let j = 0; j < length - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        const temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n        haschange = true; // 表示有数据交换\n      }\n    }\n\n    if (!haschange) break; // 如果 false 说明所有元素已经到位，没有数据交换，提前退出\n  }\n  console.log('改进后 arr :', arr);\n  console.timeend('改进后冒泡排序耗时');\n};\n\nvar arr = [10, 3, 7, 1, 23, 4, 3]\nbubblesort2(arr)\n\n// 冒泡排序（优化3）\nfunction bubblesort(arr) {\n  //记录最后一次交换的位置\n  var pos = 0;\n  for (var i = 0; i < arr.length; i++) {\n    //有序标记，每一轮的初始是true\n    var haschange = false;\n    for (var j = 0; j < arr.length - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        var temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n        //有元素交换，所以不是有序，标记变为false\n        haschange = true;\n        //把无序数列的边界更新为最后一次交换元素的位置\n        pos = j\n      }\n    }\n    i = pos\n    if (!haschange) break;\n  }\n  return arr\n}\n\nvar arr = [3, 44, 38, 5, 47, 15, 36, 26, 27, 2, 46, 4, 19, 50, 48];\nconsole.log(bubblesort(arr));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n# 快速排序\n * 相关资料： 资料 1 | 资料 2 | 资料 3 | 资料 4\n   \n   \n * 步骤\n   \n    * 先找到一个基准点（一般指数组的中部），然后数组被该基准点分为两部分，依次与该基准点数据比较，如果比它小，放左边；反之，放右边。\n    * 左右分别用一个空数组去存储比较后的数据。\n    * 最后递归执行上述操作，直到数组长度 <= 1\n   \n   \n\n\n\n * 代码 1\n\nconst quicksort0 = arr => {\n  if (arr.length <= 1) {\n    return arr;\n  }\n  //取基准点\n  const midindex = math.floor(arr.length / 2);\n  //取基准点的值，splice(index,1) 则返回的是含有被删除的元素的数组。\n  const valarr = arr.splice(midindex, 1);\n  const midindexval = valarr[0];\n  const left = []; //存放比基准点小的数组\n  const right = []; //存放比基准点大的数组\n  //遍历数组，进行判断分配\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < midindexval) {\n      left.push(arr[i]); //比基准点小的放在左边数组\n    } else {\n      right.push(arr[i]); //比基准点大的放在右边数组\n    }\n  }\n  //递归执行以上操作，对左右两个数组进行操作，直到数组长度为 <= 1\n  return quicksort0(left).concat(midindexval, quicksort0(right));\n};\nconst array0 = [5, 14, 3, 21, 10];\nconsole.log('quicksort0 ', quicksort0(array0));\n\nconst quicksort1 = arr => {\n  if (arr.length <= 1) {\n    return arr;\n  }\n  // 基准值取数组第一个\n  const pivot = arr.pop();\n  // const left = []; //存放比基准点小的数组\n  // const right = []; //存放比基准点大的数组\n  //遍历数组，进行判断分配\n  // for (let i = 1; i < arr.length; i++) {\n  //   if (arr[i] <= midval) {\n  //     left.push(arr[i]); //比基准点小的放在左边数组\n  //   } else {\n  //     right.push(arr[i]); //比基准点大的放在右边数组\n  //   }\n  // }\n  let left = arr.filter(item => item < pivot);\n  let right = arr.filter(item => item >= pivot);\n  //递归执行以上操作，对左右两个数组进行操作，直到数组长度为 <= 1\n  return quicksort1(left).concat(pivot, quicksort1(right));\n};\nconst array1 = [5, 4, 3, 2, 1];\nconsole.log('quicksort1 ', quicksort1(array1));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n * 原地分区版快速排序实现\n\n// 原地分区版快速排序实现\nconst quicksort2 = (arr, left, right) => {\n  let len = arr.length,\n    partitionindex;\n  left = typeof left != 'number' ? 0 : left;\n  right = typeof right != 'number' ? len - 1 : right;\n\n  if (left < right) {\n    // 返回基准值的所在位置， 即索引\n    partitionindex = partition(arr, left, right);\n    // 可理解为：把数组拆分为 左边的数组值都比基准值小，右边的数组都比基准值大\n\n    // 比对基准值左边的数组\n    quicksort2(arr, left, partitionindex - 1);\n    // 比对基准值右边的数组\n    quicksort2(arr, partitionindex + 1, right);\n  }\n  return arr;\n};\n\nconst swap = (arr, i, j) => {\n  // let temp = arr[i];\n  // arr[i] = arr[j];\n  // arr[j] = temp;\n  [arr[i], arr[j]] = [arr[j], arr[i]]\n};\n\nconst partition = (arr, left, right) => {\n  //分区操作\n  let pivotidx = left, //基准值（pivot）的索引\n    pivot = arr[pivotidx], // 基准值（pivot）\n    index = pivotidx + 1; // 初始index的位置\n\n  // index: 最终记录着数组中首次比基准值（pivot）大的最后索引位置\n\n  // i 取 index 的下一个数与之对比\n  for (let i = index; i <= right; i++) {\n    // 判断基准值与当前项的大小\n    if (arr[i] < pivot) {\n      // 如果比基准值小，将arr[i] 与 arr[index]交换\n      // 即 小于基准值的 与 大于基准值的 互相交换\n      swap(arr, i, index);\n      // index 下移一位\n      index++;\n    }\n  }\n  // 将基准值与最后一次小于它的值交换\n  swap(arr, pivotidx, index - 1);\n\n  // 返回最后一次比基准值小的索引位置： index-1\n  return index - 1;\n};\n\nconst array2 = [8, 5, 1, 13, 2, 6, 9, 21];\n\n// partitionindex = partition(arr, left, right);\n// 执行 部分 结果\n// ...\n// 8, 5, 1, 13, 2, 6, 9, 21\n// 8, 5, 1, 2, 13, 6, 9, 21\n// 8, 5, 1, 2, 6, 13, 9, 21\n// 8, 5, 1, 2, 6, 13, 9, 21\n// ...\n// 6, 5, 1, 2, 8, 13, 9, 21 => swap(arr, pivotidx, index - 1);\n\nconsole.log('quicksort2 ', quicksort2(array2));\n// => [ 1, 2, 5, 6, 8, 9, 13, 21 ]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n# 选择排序\n * 步骤 * 首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置\n    * 再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾\n    * 重复第二步，直到所有元素均排序完毕\n   \n   \n\n\n\n * 代码\n\nconst selectionsort = array => {\n  const len = array.length;\n  let minindex, temp;\n  for (let i = 0; i < len - 1; i++) {\n    minindex = i;\n    for (let j = i + 1; j < len; j++) {\n      if (array[j] < array[minindex]) {\n        // 寻找最小的数\n        minindex = j; // 将最小数的索引保存\n      }\n    }\n    temp = array[i];\n    array[i] = array[minindex];\n    array[minindex] = temp;\n    console.log('array: ', array);\n  }\n  return array;\n};\n\n// 测试\nconst array = [5, 4, 3, 2, 1];\nconsole.log('原始array:', array);\nselectionsort(array);\n// 原始 array:  [5, 4, 3, 2, 1]\n// array:  \t\t [1, 4, 3, 2, 5]\n// array:  \t\t [1, 2, 3, 4, 5]\n// array: \t\t [1, 2, 3, 4, 5]\n// array:  \t\t [1, 2, 3, 4, 5]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 归并排序\n * 相关资料：资料 1\n\n排序一个数组，我们先把数组从中间分成前后两部分，然后对前后两部分分别排序，再将排好序的两部分合并在一起，这样整个数组就都有序\n\n\n\n * 代码\n\nconst mergesort = arr => {\n  //采用自上而下的递归方法\n  const len = arr.length;\n  if (len < 2) {\n    return arr;\n  }\n  // length >> 1 和 math.floor(len / 2) 等价\n  let middle = math.floor(len / 2),\n    left = arr.slice(0, middle),\n    right = arr.slice(middle); // 拆分为两个子数组\n  return merge(mergesort(left), mergesort(right));\n};\n\nconst merge = (left, right) => {\n  const result = [];\n  while (left.length && right.length) {\n    // 注意: 判断的条件是小于或等于，如果只是小于，那么排序将不稳定.\n    if (left[0] <= right[0]) {\n      result.push(left.shift());\n    } else {\n      result.push(right.shift());\n    }\n  }\n\n  while (left.length) result.push(left.shift());\n  while (right.length) result.push(right.shift());\n  return result;\n};\nconst arr = [3, 44, 38, 5, 47, 15, 36, 26, 27, 2, 46, 4, 19, 50, 48];\nconsole.time('归并排序耗时');\nconsole.log('arr :', mergesort(arr));\nconsole.timeend('归并排序耗时');\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n# 插入排序\n# 直接插入\n * 步骤\n   \n    * 从第一个元素开始，该元素可以认为已经被排序；\n    * 取出下一个元素，在已经排序的元素序列中从后向前扫描；\n    * 如果该元素（已排序）大于新元素，将该元素移到下一位置；\n    * 重复步骤 3，直到找到已排序的元素小于或者等于新元素的位置；\n    * 将新元素插入到该位置后；\n    * 重复步骤 2 ~ 5\n   \n   \n\n\n\n * 代码\n\n// 插入排序\nconst insertionsort = array => {\n  const len = array.length;\n  if (len <= 1) return\n\n  let preindex, current;\n  for (let i = 1; i < len; i++) {\n    preindex = i - 1; //待比较元素的下标\n    current = array[i]; //当前元素\n    while (preindex >= 0 && array[preindex] > current) {\n      //前置条件之一: 待比较元素比当前元素大\n      array[preindex + 1] = array[preindex]; //将待比较元素后移一位\n      preindex--; //游标前移一位\n    }\n    if (preindex + 1 != i) {\n      //避免同一个元素赋值给自身\n      array[preindex + 1] = current; //将当前元素插入预留空位\n      console.log('array :', array);\n    }\n  }\n  return array;\n};\n\n// 测试\nconst array = [5, 4, 3, 2, 1];\nconsole.log(\"原始 array :\", array);\ninsertionsort(array);\n// 原始 array:    [5, 4, 3, 2, 1]\n// array:  \t\t [4, 5, 3, 2, 1]\n// array:  \t\t [3, 4, 5, 2, 1]\n// array: \t\t [2, 3, 4, 5, 1]\n// array:  \t\t [1, 2, 3, 4, 5]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n# 拆半插入\n * 步骤\n   \n    * 取0 ~ i-1 的中间点 ( m = (i-1) >> 1 )，array[i] 与array[m] 进行比较，若 array[i] < array[m]，则说明待插入的元素 array[i]应该处于数组的 0 ~ m索引之间；反之，则说明它应该处于数组的 m ~ i-1 索引之间。\n    * 重复步骤 1，每次缩小一半的查找范围，直至找到插入的位置。\n    * 将数组中插入位置之后的元素全部后移一位。\n    * 在指定位置插入第 i 个元素。\n   \n   \n\n注：x >> 1 是位运算中的右移运算，表示右移一位，等同于 x 除以 2 再取整，即 x >> 1 == math.floor(x/2)\n\n * 代码\n\n// 折半插入排序\nconst binaryinsertionsort = array => {\n  const len = array.length;\n  if (len <= 1) return;\n\n  let current, i, j, low, high, m;\n  for (i = 1; i < len; i++) {\n    low = 0;\n    high = i - 1;\n    current = array[i];\n\n    while (low <= high) {\n      //步骤 1 & 2 : 折半查找\n      m = (low + high) >> 1; // 注: x>>1 是位运算中的右移运算, 表示右移一位, 等同于 x 除以 2 再取整, 即 x>>1 == math.floor(x/2) .\n      if (array[i] >= array[m]) {\n        //值相同时, 切换到高半区，保证稳定性\n        low = m + 1; //插入点在高半区\n      } else {\n        high = m - 1; //插入点在低半区\n      }\n    }\n    for (j = i; j > low; j--) {\n      //步骤 3: 插入位置之后的元素全部后移一位\n      array[j] = array[j - 1];\n      console.log('array2 :', json.parse(json.stringify(array)));\n    }\n    array[low] = current; //步骤 4: 插入该元素\n  }\n  console.log('array2 :', json.parse(json.stringify(array)));\n  return array;\n};\n\nconst array2 = [5, 4, 3, 2, 1];\nconsole.log('原始 array2:', array2);\nbinaryinsertionsort(array2);\n// 原始 array2:  [5, 4, 3, 2, 1]\n// array2 :     [5, 5, 3, 2, 1]\n// array2 :     [4, 5, 5, 2, 1]\n// array2 :     [4, 4, 5, 2, 1]\n// array2 :     [3, 4, 5, 5, 1]\n// array2 :     [3, 4, 4, 5, 1]\n// array2 :     [3, 3, 4, 5, 1]\n// array2 :     [2, 3, 4, 5, 5]\n// array2 :     [2, 3, 4, 4, 5]\n// array2 :     [2, 3, 3, 4, 5]\n// array2 :     [2, 2, 3, 4, 5]\n// array2 :     [1, 2, 3, 4, 5]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n# 希尔排序\n * 步骤 * 先将整个待排序的记录序列分割成为若干子序列。\n    * 分别进行直接插入排序。\n    * 待整个序列中的记录基本有序时，再对全体记录进行依次直接插入排序。\n   \n   \n\n\n\n * 代码\n\nconst shellsort = arr => {\n  let len = arr.length,\n    temp,\n    gap = 1;\n  console.time('希尔排序耗时');\n  while (gap < len / 3) {\n    //动态定义间隔序列\n    gap = gap * 3 + 1;\n  }\n  for (gap; gap > 0; gap = math.floor(gap / 3)) {\n    for (let i = gap; i < len; i++) {\n      temp = arr[i];\n      let j = i - gap;\n      for (; j >= 0 && arr[j] > temp; j -= gap) {\n        arr[j + gap] = arr[j];\n      }\n      arr[j + gap] = temp;\n      console.log('arr  :', arr);\n    }\n  }\n  console.timeend('希尔排序耗时');\n  return arr;\n};\n\n// 测试\nconst array = [35, 33, 42, 10, 14, 19, 27, 44];\nconsole.log('原始array:', array);\nconst newarr = shellsort(array);\nconsole.log('newarr:', newarr);\n// 原始 array:   [35, 33, 42, 10, 14, 19, 27, 44]\n// arr      :   [14, 33, 42, 10, 35, 19, 27, 44]\n// arr      :   [14, 19, 42, 10, 35, 33, 27, 44]\n// arr      :   [14, 19, 27, 10, 35, 33, 42, 44]\n// arr      :   [14, 19, 27, 10, 35, 33, 42, 44]\n// arr      :   [14, 19, 27, 10, 35, 33, 42, 44]\n// arr      :   [14, 19, 27, 10, 35, 33, 42, 44]\n// arr      :   [10, 14, 19, 27, 35, 33, 42, 44]\n// arr      :   [10, 14, 19, 27, 35, 33, 42, 44]\n// arr      :   [10, 14, 19, 27, 33, 35, 42, 44]\n// arr      :   [10, 14, 19, 27, 33, 35, 42, 44]\n// arr      :   [10, 14, 19, 27, 33, 35, 42, 44]\n// 希尔排序耗时: 3.592041015625ms\n// newarr:     [10, 14, 19, 27, 33, 35, 42, 44]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n# 堆排序\n * 代码\n\n// 堆排序\nconst heapsort = array => {\n  console.time('堆排序耗时');\n  // 初始化大顶堆，从第一个非叶子结点开始\n  for (let i = math.floor(array.length / 2 - 1); i >= 0; i--) {\n    heapify(array, i, array.length);\n  }\n  // 排序，每一次 for 循环找出一个当前最大值，数组长度减一\n  for (let i = math.floor(array.length - 1); i > 0; i--) {\n    // 根节点与最后一个节点交换\n    swap(array, 0, i);\n    // 从根节点开始调整，并且最后一个结点已经为当前最大值，不需要再参与比较，所以第三个参数为 i，即比较到最后一个结点前一个即可\n    heapify(array, 0, i);\n  }\n  console.timeend('堆排序耗时');\n  return array;\n};\n\n// 交换两个节点\nconst swap = (array, i, j) => {\n  let temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n};\n\n// 将 i 结点以下的堆整理为大顶堆，注意这一步实现的基础实际上是：\n// 假设结点 i 以下的子堆已经是一个大顶堆，heapify 函数实现的\n// 功能是实际上是：找到 结点 i 在包括结点 i 的堆中的正确位置。\n// 后面将写一个 for 循环，从第一个非叶子结点开始，对每一个非叶子结点\n// 都执行 heapify 操作，所以就满足了结点 i 以下的子堆已经是一大顶堆\nconst heapify = (array, i, length) => {\n  let temp = array[i]; // 当前父节点\n  // j < length 的目的是对结点 i 以下的结点全部做顺序调整\n  for (let j = 2 * i + 1; j < length; j = 2 * j + 1) {\n    temp = array[i]; // 将 array[i] 取出，整个过程相当于找到 array[i] 应处于的位置\n    if (j + 1 < length && array[j] < array[j + 1]) {\n      j++; // 找到两个孩子中较大的一个，再与父节点比较\n    }\n    if (temp < array[j]) {\n      swap(array, i, j); // 如果父节点小于子节点:交换；否则跳出\n      i = j; // 交换后，temp 的下标变为 j\n    } else {\n      break;\n    }\n  }\n};\n\n// 测试\nconst array = [4, 6, 8, 5, 9, 1, 2, 5, 3, 2];\nconsole.log('原始array:', array);\nconst newarr = heapsort(array);\nconsole.log('newarr:', newarr);\n// 原始 array:  [4, 6, 8, 5, 9, 1, 2, 5, 3, 2]\n// 堆排序耗时: 0.15087890625ms\n// newarr:     [1, 2, 2, 3, 4, 5, 5, 6, 8, 9]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n# 桶排序\n * 代码\n\n// 桶排序\nconst bucketsort = (array, bucketsize) => {\n  if (array.length === 0) {\n    return array;\n  }\n\n  console.time('桶排序耗时');\n  let i = 0;\n  let minvalue = array[0];\n  let maxvalue = array[0];\n  for (i = 1; i < array.length; i++) {\n    if (array[i] < minvalue) {\n      minvalue = array[i]; //输入数据的最小值\n    } else if (array[i] > maxvalue) {\n      maxvalue = array[i]; //输入数据的最大值\n    }\n  }\n\n  //桶的初始化\n  const default_bucket_size = 5; //设置桶的默认数量为 5\n  bucketsize = bucketsize || default_bucket_size;\n  const bucketcount = math.floor((maxvalue - minvalue) / bucketsize) + 1;\n  const buckets = new array(bucketcount);\n  for (i = 0; i < buckets.length; i++) {\n    buckets[i] = [];\n  }\n\n  //利用映射函数将数据分配到各个桶中\n  for (i = 0; i < array.length; i++) {\n    buckets[math.floor((array[i] - minvalue) / bucketsize)].push(array[i]);\n  }\n\n  array.length = 0;\n  for (i = 0; i < buckets.length; i++) {\n    quicksort(buckets[i]); //对每个桶进行排序，这里使用了快速排序\n    for (var j = 0; j < buckets[i].length; j++) {\n      array.push(buckets[i][j]);\n    }\n  }\n  console.timeend('桶排序耗时');\n\n  return array;\n};\n\n// 快速排序\nconst quicksort = (arr, left, right) => {\n  let len = arr.length,\n    partitionindex;\n  left = typeof left != 'number' ? 0 : left;\n  right = typeof right != 'number' ? len - 1 : right;\n\n  if (left < right) {\n    partitionindex = partition(arr, left, right);\n    quicksort(arr, left, partitionindex - 1);\n    quicksort(arr, partitionindex + 1, right);\n  }\n  return arr;\n};\n\nconst partition = (arr, left, right) => {\n  //分区操作\n  let pivot = left, //设定基准值（pivot）\n    index = pivot + 1;\n  for (let i = index; i <= right; i++) {\n    if (arr[i] < arr[pivot]) {\n      swap(arr, i, index);\n      index++;\n    }\n  }\n  swap(arr, pivot, index - 1);\n  return index - 1;\n};\n\nconst swap = (arr, i, j) => {\n  let temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n};\n\n\n// 测试\nconst array = [4, 6, 8, 5, 9, 1, 2, 5, 3, 2];\nconsole.log('原始array:', array);\nconst newarr = bucketsort(array);\nconsole.log('newarr:', newarr);\n// 原始 array:  [4, 6, 8, 5, 9, 1, 2, 5, 3, 2]\n// 堆排序耗时:   0.133056640625ms\n// newarr:  \t [1, 2, 2, 3, 4, 5, 5, 6, 8, 9]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n# 计数排序\n * 代码\n\nconst countingsort = array => {\n  let len = array.length,\n    result = [],\n    countarr = [],\n    min = (max = array[0]);\n  console.time('计数排序耗时');\n  for (let i = 0; i < len; i++) {\n    // 获取最小，最大 值\n    min = min <= array[i] ? min : array[i];\n    max = max >= array[i] ? max : array[i];\n    countarr[array[i]] = countarr[array[i]] ? countarr[array[i]] + 1 : 1;\n  }\n  console.log('countarr :', countarr);\n  // 从最小值 -> 最大值,将计数逐项相加\n  for (let j = min; j < max; j++) {\n    countarr[j + 1] = (countarr[j + 1] || 0) + (countarr[j] || 0);\n  }\n  console.log('countarr 2:', countarr);\n  // countarr 中,下标为 array 数值，数据为 array 数值出现次数；反向填充数据进入 result 数据\n  for (let k = len - 1; k >= 0; k--) {\n    // result[位置] = array 数据\n    result[countarr[array[k]] - 1] = array[k];\n    // 减少 countarr 数组中保存的计数\n    countarr[array[k]]--;\n    // console.log(\"array[k]:\", array[k], 'countarr[array[k]] :', countarr[array[k]],)\n    console.log('result:', result);\n  }\n  console.timeend('计数排序耗时');\n  return result;\n};\n\n// 测试\nconst array = [2, 2, 3, 8, 7, 1, 2, 2, 2, 7, 3, 9, 8, 2, 1, 4, 2, 4, 6, 9, 2];\nconsole.log('原始 array: ', array);\nconst newarr = countingsort(array);\nconsole.log('newarr: ', newarr);\n// 原始 array:  [2, 2, 3, 8, 7, 1, 2, 2, 2, 7, 3, 9, 8, 2, 1, 4, 2, 4, 6, 9, 2]\n// 计数排序耗时:   5.6708984375ms\n// newarr:  \t [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 6, 7, 7, 8, 8, 9, 9]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n# 基数排序\n * 代码\n\n/**\n\t* name: 基数排序\n\t* @param  array 待排序数组\n\t* @param  max 最大位数\n\t*/\nconst radixsort = (array, max) => {\n  console.time('计数排序耗时');\n  const buckets = [];\n  let unit = 10,\n    base = 1;\n  for (let i = 0; i < max; i++ , base *= 10, unit *= 10) {\n    for (let j = 0; j < array.length; j++) {\n      let index = ~~((array[j] % unit) / base); //依次过滤出个位，十位等等数字\n      if (buckets[index] == null) {\n        buckets[index] = []; //初始化桶\n      }\n      buckets[index].push(array[j]); //往不同桶里添加数据\n    }\n    let pos = 0,\n      value;\n    for (let j = 0, length = buckets.length; j < length; j++) {\n      if (buckets[j] != null) {\n        while ((value = buckets[j].shift()) != null) {\n          array[pos++] = value; //将不同桶里数据挨个捞出来，为下一轮高位排序做准备，由于靠近桶底的元素排名靠前，因此从桶底先捞\n        }\n      }\n    }\n  }\n  console.timeend('计数排序耗时');\n  return array;\n};\n\n// 测试\nconst array = [3, 44, 38, 5, 47, 15, 36, 26, 27, 2, 46, 4, 19, 50, 48];\nconsole.log('原始array:', array);\nconst newarr = radixsort(array, 2);\nconsole.log('newarr:', newarr);\n// 原始 array:  [3, 44, 38, 5, 47, 15, 36, 26, 27, 2, 46, 4, 19, 50, 48]\n// 堆排序耗时:   0.064208984375ms\n// newarr:  \t [2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n# 算法可视化工具\n * algorithm-visualizer\n * visualgo.net/en\n * www.ee.ryerson.ca\n\n# 相关链接\n * javascript 数据结构与算法之美 - 时间和空间复杂度\n * javascript 数据结构与算法之美 - 十大经典排序算法汇总\n * 漫画：“排序算法” 大总结",charsets:{cjk:!0}},{title:"数据类型判断",frontmatter:{title:"数据类型判断",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["typeOf","instanceof","_hasOwnProperty","工具函数"],categories:["libs"],readingShow:"top"},regularPath:"/libs/types.html",relativePath:"libs/types.md",key:"v-43e29632",path:"/libs/types.html",headers:[{level:2,title:"typeOf 类型判断",slug:"typeof-类型判断",normalizedTitle:"typeof 类型判断",charIndex:2},{level:2,title:"eqeqeq",slug:"eqeqeq",normalizedTitle:"eqeqeq",charIndex:1771},{level:2,title:"判断类型",slug:"判断类型",normalizedTitle:"判断类型",charIndex:1872},{level:2,title:"instanceof",slug:"instanceof",normalizedTitle:"instanceof",charIndex:2158},{level:2,title:"hasOwnProperty",slug:"hasownproperty",normalizedTitle:"hasownproperty",charIndex:3838},{level:2,title:"toRawType",slug:"torawtype",normalizedTitle:"torawtype",charIndex:4796},{level:2,title:"浏览器标识",slug:"浏览器标识",normalizedTitle:"浏览器标识",charIndex:5382},{level:2,title:"判断浏览器平台",slug:"判断浏览器平台",normalizedTitle:"判断浏览器平台",charIndex:6956},{level:2,title:"BrowserInfo",slug:"browserinfo",normalizedTitle:"browserinfo",charIndex:8219}],lastUpdated:"2020/8/3 上午11:42:47",headersStr:"typeOf 类型判断 eqeqeq 判断类型 instanceof hasOwnProperty toRawType 浏览器标识 判断浏览器平台 BrowserInfo",content:"# typeOf 类型判断\ntypeof undefined   //return undefined\ntypeof 1   //return number\ntypeof ' ni '   //return string\ntypeof Function   //return function\ntypeof Symbol   //return function\ntypeof []   //return object\ntypeof null   //return object\ntypeof {}   //return object\ntypeof RegExp   //return function\ntypeof new RegExp()   //return object\ntypeof Math   //return object\ntypeof Date   //return function\ntypeof new Date()   //return object\ntypeof JSON   //return object\n\nfunction isType(data, type) {\n  const typeObj = {\n    '[object String]': 'string',\n    '[object Number]': 'number',\n    '[object Boolean]': 'boolean',\n    '[object Null]': 'null',\n    '[object Undefined]': 'undefined',\n    '[object Object]': 'object',\n    '[object Array]': 'array',\n    '[object Function]': 'function',\n    '[object Date]': 'date', // Object.prototype.toString.call(new Date())\n    '[object RegExp]': 'regExp',\n    '[object Map]': 'map',\n    '[object Set]': 'set',\n    '[object HTMLDivElement]': 'dom', // document.querySelector('#app')\n    '[object WeakMap]': 'weakMap',\n    '[object Window]': 'window',  // Object.prototype.toString.call(window)\n    '[object Error]': 'error', // new Error('1')\n    '[object Arguments]': 'arguments',\n    '[object BigInt]': 'BigInt',\n    '[object Symbol]': 'Symbol'\n  }\n  let name = Object.prototype.toString.call(data) // 借用Object.prototype.toString()获取数据类型\n  let typeName = typeObj[name] || '未知类型' // 匹配数据类型\n  return typeName === type // 判断该数据类型是否为传入的类型\n}\nconsole.log(\n  isType({}, 'object'), // true\n  isType([], 'array'), // true\n  isType(new Date(), 'object'), // false\n  isType(new Date(), 'date'), // true\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n# eqeqeq\nconsole.log(null == undefined); // return true\nconsole.log({} == {}); // return false\n\n\n1\n2\n# 判断类型\n * typeof 判断类型\n * Object.prototype.toString.call(obj).slice(8,-1); 判断类型\n * (obj).constructor.name.toString().toLowerCase() obj != null || obj != undefined除外\n * Array.isArray() 确定传递的值是否是一个 Array\n * isNaN(testValue) 用来确定一个值是否为NaN\n * Object.is(value1, value2); 判断两个值是否是相同的值\n * object instanceof constructor 检测 constructor.prototype 是否存在于参数 object 的原型链\n\n# instanceof\nconsole.log(2 instanceof Number);                    // false\nconsole.log(true instanceof Boolean);                // false\nconsole.log('str' instanceof String);                // false\nconsole.log([] instanceof Array);                    // true\nconsole.log(function () { } instanceof Function);       // true\nconsole.log({} instanceof Object);                   // true\n// 优点：能够区分Array、Object和Function\n// 缺点：Number，Boolean，String基本数据类型不能判断\n\n//object instanceof constructor\nfunction C() { }\nfunction D() { }\n\nvar o = new C();\n// true，因为 Object.getPrototypeOf(o) === C.prototype\no instanceof C;\n\n// false，因为 D.prototype不在o的原型链上\no instanceof D;\n\n// instanceof\nvar o = {};\nvar a = [];\nconsole.log(\"o typeof is : \", typeof (o))//object\nconsole.log(\"a typeof is : \", typeof (a))//object\nconsole.log(\"o instanceof Array is : \", o instanceof Array); // false\nconsole.log(\"a instanceof Array is : \", a instanceof Array); // true\n\n// custom\nfunction instanceOf2(l, r) {\n  let proto = l.__proto__;\n  let prototype = r.prototype\n  while (true) {\n    if (proto == null) {\n      return false\n    }\n    if (proto == prototype) {\n      return true\n    }\n    proto = proto.__proto__\n  }\n}\n\nfunction Car() { }\nfunction Dog() { }\nvar car = new Car();\nvar dog = new Dog()\n\nconsole.log(instanceOf2(dog, Car))\n// expected output: false\nconsole.log(instanceOf2(car, Car));\n// expected output: true\nconsole.log(instanceOf2(car, Object));\n// expected output: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n# hasOwnProperty\n * obj.hasOwnProperty(prop) 方法会返回一个布尔值，指示对象自身属性中是否具有指定的属性\n\nfunction Foo() {\n  this.name = \"张三\";\n}\nFoo.prototype = {\n  constructor: Foo,\n  age: 19,\n  gender: \"男\"\n};\n\nvar f = new Foo();\nvar isTrue = f.hasOwnProperty(\"name\");\nconsole.log(\"name -> \" + isTrue); // true\n\nisTrue = f.hasOwnProperty(\"age\");\nconsole.log(\"age -> \" + isTrue); // false\n\nisTrue = f.hasOwnProperty(\"gender\");\nconsole.log(\"gender -> \" + isTrue); // false\n\nisTrue = f.hasOwnProperty(\"web\");\nconsole.log(\"web -> \" + isTrue); // false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n * Object.prototype.toString.call\n\n// 判断类型\nvar arr = [];\nconsole.log(Object.prototype.toString.call(arr)); //\"[object Array]\"\nconsole.log(Object.prototype.toString.apply(arr)); //\"[object Array]\"\n\nfunction fn() { }\n// 判断\nObject.prototype.toString.call(obj).slice(8, -1);\n\n// obj != null || obj != undefined 除外\nobj.constructor.name.toString().toLowerCase();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# toRawType\n * Object.prototype.toString.call(arg) 和 String(arg) 的区别？\n\nconst _toString = Object.prototype.toString\n\nvar obj = {}\n\nobj.toString()  // [object Object]\n_toString.call(obj) // [object Object]\n\nobj.toString = () => '111'\n\nobj.toString()  // 111\n_toString.call(obj) // [object Object]\n\n  (/hello/).toString() // /hello/\n_toString.call(/hello/) // [object RegExp]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * toRawType\n\nfunction toRawType(value) {\n  return Object.prototype.toString.call(value).slice(8, -1);\n}\n\ntoRawType(null); // \"Null\"\ntoRawType(/sdfsd/); //\"RegExp\"\n\n\n1\n2\n3\n4\n5\n6\n# 浏览器标识\n// 判断浏览器标识\n(function getMobileDevice(window) {\n  var ua = navigator.userAgent;\n  var mobile = /AppleWebKit.*Mobile.*/.test(ua) || /AppleWebKit/.test(ua); // 是否为移动终端\n  var ios = /\\(i[^;]+;( U;)? CPU.+Mac OS X/.test(ua); // ios终端\n  var android = /(Android);?[\\s\\/]+([\\d.]+)?/.test(ua); // android终端或者uc浏览器\n  var iphone = /iphone/i.test(ua); // iphone\n  var iPad = /iPad/i.test(ua); // ipad\n  var weixin = /micromessenger/i.test(ua); // weixin\n  var chrome = /Chrome\\/([\\d.]+)/.test(ua) || /CriOS\\/([\\d.]+)/.test(ua); // Chrome\n  var mozilla = ua.indexOf(\"Gecko\") > -1 && ua.indexOf(\"KHTML\") == -1; // 火狐内核\n  var webkit = /AppleWebKit/i.test(ua); // 苹果、谷歌内核\n  var opera = /Presto/i.test(ua); // opera内核\n  var safari = /safari/i.test(ua) && !/Chrome/i.test(ua); // 苹果浏览器\n  var msie = /msie/i.test(ua); // 微软\n  window.device = {\n    isMobile: mobile,\n    isIos: ios,\n    isAndroid: android,\n    isIPhone: iphone,\n    isIPad: iPad,\n    isWeiXin: weixin,\n    isChrome: chrome,\n    isMozilla: mozilla,\n    isWebkit: webkit,\n    isOpera: opera,\n    isSafari: safari,\n    isMsie: msie\n  };\n})(window);\n\nlet url = navigator.userAgent.toLowerCase();\n//使用toLowerCase将字符串全部转为小写 方便我们判断使用\nif (url.indexOf(\"15b202 qq\") > -1) {\n  //单独判断QQ内置浏览器\n  alert(\"QQ APP 内置浏览器，做你想做的操作\");\n}\nif (url.indexOf(\"micromessenger\") > -1) {\n  //单独判断微信内置浏览器\n  alert(\"微信内置浏览器，做你想做的操作\");\n}\nif (url.indexOf(\"15b202\") > -1) {\n  //判断微信内置浏览器，QQ内置浏览器\n  alert(\"QQ和微信内置浏览器，做你想做的操作\");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n# 判断浏览器平台\nvar tools = {\n  isMobile() {\n    var isMobile = false\n    // 判断是pc还是移动端\n    var system = {\n      win: false,\n      mac: false,\n      x11: false,\n    }\n    // 检测平台\n    var p = navigator.platform\n    system.win = p.indexOf('Win') === 0\n    system.mac = p.indexOf('Mac') === 0\n    system.x11 = p === 'X11'\n\n    system.ipad = p === 'iPad'\n\n    // 跳转语句\n    if (!system.win && !system.mac && !system.x11 && !system.ipad) {\n      isMobile = true\n    }\n    return isMobile\n  },\n  // 判断是否是移动端\n  checkPlatform() {\n    var utils = {}\n    var isBudge = (function () {\n      // 手持设备：ipad、iphone、android、ipod\n      return /mobile/i.test(navigator.userAgent)\n    })()\n    var isMac = (function () {\n      return /macintosh/i.test(navigator.userAgent)\n    })()\n    var isWindows = (function () {\n      return /windows nt/i.test(navigator.userAgent)\n    })()\n    var isLinux = (function () {\n      return /linux/i.test(navigator.userAgent)\n    })()\n    var isIpad = (function () {\n      return /ipad/i.test(navigator.userAgent)\n    })()\n    utils.isMobile = !(isWindows || isMac || (isLinux && !isBudge) || isIpad)\n    return utils\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n# BrowserInfo\nvar BrowserInfo = function () {\n  var json = {\n    userAgent: navigator.userAgent.toLowerCase(),\n    isAndroid: Boolean(navigator.userAgent.match(/android/gi)),\n    isIphone: Boolean(navigator.userAgent.match(/iphone|ipod/gi)),\n    isIpad: Boolean(navigator.userAgent.match(/ipad/gi)),\n    isWeixin: Boolean(navigator.userAgent.match(/MicroMessenger/gi))\n  };\n  return json;\n};\n\n// other\nconst inBrowser = typeof window !== \"undefined\";\n\nconst inWeex = typeof WXEnvironment !== \"undefined\" && !!WXEnvironment.platform;\nconst weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\n\nconst UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\nconst isIE = UA && /msie|trident/.test(UA);\nconst isIE9 = UA && UA.indexOf(\"msie 9.0\") > 0;\nconst isEdge = UA && UA.indexOf(\"edge/\") > 0;\nconst isAndroid =\n  (UA && UA.indexOf(\"android\") > 0) || weexPlatform === \"android\";\nconst isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || weexPlatform === \"ios\";\nconst isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nconst isPhantomJS = UA && /phantomjs/.test(UA);\nconst isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\nwindow.location.href = /Android|webOS|iPhone|iPod|BlackBerry/i.test(\n  navigator.userAgent\n)\n  ? \"https://www.baidu.com/\"\n  : \"http://news.baidu.com/\";\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34",normalizedContent:"# typeof 类型判断\ntypeof undefined   //return undefined\ntypeof 1   //return number\ntypeof ' ni '   //return string\ntypeof function   //return function\ntypeof symbol   //return function\ntypeof []   //return object\ntypeof null   //return object\ntypeof {}   //return object\ntypeof regexp   //return function\ntypeof new regexp()   //return object\ntypeof math   //return object\ntypeof date   //return function\ntypeof new date()   //return object\ntypeof json   //return object\n\nfunction istype(data, type) {\n  const typeobj = {\n    '[object string]': 'string',\n    '[object number]': 'number',\n    '[object boolean]': 'boolean',\n    '[object null]': 'null',\n    '[object undefined]': 'undefined',\n    '[object object]': 'object',\n    '[object array]': 'array',\n    '[object function]': 'function',\n    '[object date]': 'date', // object.prototype.tostring.call(new date())\n    '[object regexp]': 'regexp',\n    '[object map]': 'map',\n    '[object set]': 'set',\n    '[object htmldivelement]': 'dom', // document.queryselector('#app')\n    '[object weakmap]': 'weakmap',\n    '[object window]': 'window',  // object.prototype.tostring.call(window)\n    '[object error]': 'error', // new error('1')\n    '[object arguments]': 'arguments',\n    '[object bigint]': 'bigint',\n    '[object symbol]': 'symbol'\n  }\n  let name = object.prototype.tostring.call(data) // 借用object.prototype.tostring()获取数据类型\n  let typename = typeobj[name] || '未知类型' // 匹配数据类型\n  return typename === type // 判断该数据类型是否为传入的类型\n}\nconsole.log(\n  istype({}, 'object'), // true\n  istype([], 'array'), // true\n  istype(new date(), 'object'), // false\n  istype(new date(), 'date'), // true\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n# eqeqeq\nconsole.log(null == undefined); // return true\nconsole.log({} == {}); // return false\n\n\n1\n2\n# 判断类型\n * typeof 判断类型\n * object.prototype.tostring.call(obj).slice(8,-1); 判断类型\n * (obj).constructor.name.tostring().tolowercase() obj != null || obj != undefined除外\n * array.isarray() 确定传递的值是否是一个 array\n * isnan(testvalue) 用来确定一个值是否为nan\n * object.is(value1, value2); 判断两个值是否是相同的值\n * object instanceof constructor 检测 constructor.prototype 是否存在于参数 object 的原型链\n\n# instanceof\nconsole.log(2 instanceof number);                    // false\nconsole.log(true instanceof boolean);                // false\nconsole.log('str' instanceof string);                // false\nconsole.log([] instanceof array);                    // true\nconsole.log(function () { } instanceof function);       // true\nconsole.log({} instanceof object);                   // true\n// 优点：能够区分array、object和function\n// 缺点：number，boolean，string基本数据类型不能判断\n\n//object instanceof constructor\nfunction c() { }\nfunction d() { }\n\nvar o = new c();\n// true，因为 object.getprototypeof(o) === c.prototype\no instanceof c;\n\n// false，因为 d.prototype不在o的原型链上\no instanceof d;\n\n// instanceof\nvar o = {};\nvar a = [];\nconsole.log(\"o typeof is : \", typeof (o))//object\nconsole.log(\"a typeof is : \", typeof (a))//object\nconsole.log(\"o instanceof array is : \", o instanceof array); // false\nconsole.log(\"a instanceof array is : \", a instanceof array); // true\n\n// custom\nfunction instanceof2(l, r) {\n  let proto = l.__proto__;\n  let prototype = r.prototype\n  while (true) {\n    if (proto == null) {\n      return false\n    }\n    if (proto == prototype) {\n      return true\n    }\n    proto = proto.__proto__\n  }\n}\n\nfunction car() { }\nfunction dog() { }\nvar car = new car();\nvar dog = new dog()\n\nconsole.log(instanceof2(dog, car))\n// expected output: false\nconsole.log(instanceof2(car, car));\n// expected output: true\nconsole.log(instanceof2(car, object));\n// expected output: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n# hasownproperty\n * obj.hasownproperty(prop) 方法会返回一个布尔值，指示对象自身属性中是否具有指定的属性\n\nfunction foo() {\n  this.name = \"张三\";\n}\nfoo.prototype = {\n  constructor: foo,\n  age: 19,\n  gender: \"男\"\n};\n\nvar f = new foo();\nvar istrue = f.hasownproperty(\"name\");\nconsole.log(\"name -> \" + istrue); // true\n\nistrue = f.hasownproperty(\"age\");\nconsole.log(\"age -> \" + istrue); // false\n\nistrue = f.hasownproperty(\"gender\");\nconsole.log(\"gender -> \" + istrue); // false\n\nistrue = f.hasownproperty(\"web\");\nconsole.log(\"web -> \" + istrue); // false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n * object.prototype.tostring.call\n\n// 判断类型\nvar arr = [];\nconsole.log(object.prototype.tostring.call(arr)); //\"[object array]\"\nconsole.log(object.prototype.tostring.apply(arr)); //\"[object array]\"\n\nfunction fn() { }\n// 判断\nobject.prototype.tostring.call(obj).slice(8, -1);\n\n// obj != null || obj != undefined 除外\nobj.constructor.name.tostring().tolowercase();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# torawtype\n * object.prototype.tostring.call(arg) 和 string(arg) 的区别？\n\nconst _tostring = object.prototype.tostring\n\nvar obj = {}\n\nobj.tostring()  // [object object]\n_tostring.call(obj) // [object object]\n\nobj.tostring = () => '111'\n\nobj.tostring()  // 111\n_tostring.call(obj) // [object object]\n\n  (/hello/).tostring() // /hello/\n_tostring.call(/hello/) // [object regexp]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * torawtype\n\nfunction torawtype(value) {\n  return object.prototype.tostring.call(value).slice(8, -1);\n}\n\ntorawtype(null); // \"null\"\ntorawtype(/sdfsd/); //\"regexp\"\n\n\n1\n2\n3\n4\n5\n6\n# 浏览器标识\n// 判断浏览器标识\n(function getmobiledevice(window) {\n  var ua = navigator.useragent;\n  var mobile = /applewebkit.*mobile.*/.test(ua) || /applewebkit/.test(ua); // 是否为移动终端\n  var ios = /\\(i[^;]+;( u;)? cpu.+mac os x/.test(ua); // ios终端\n  var android = /(android);?[\\s\\/]+([\\d.]+)?/.test(ua); // android终端或者uc浏览器\n  var iphone = /iphone/i.test(ua); // iphone\n  var ipad = /ipad/i.test(ua); // ipad\n  var weixin = /micromessenger/i.test(ua); // weixin\n  var chrome = /chrome\\/([\\d.]+)/.test(ua) || /crios\\/([\\d.]+)/.test(ua); // chrome\n  var mozilla = ua.indexof(\"gecko\") > -1 && ua.indexof(\"khtml\") == -1; // 火狐内核\n  var webkit = /applewebkit/i.test(ua); // 苹果、谷歌内核\n  var opera = /presto/i.test(ua); // opera内核\n  var safari = /safari/i.test(ua) && !/chrome/i.test(ua); // 苹果浏览器\n  var msie = /msie/i.test(ua); // 微软\n  window.device = {\n    ismobile: mobile,\n    isios: ios,\n    isandroid: android,\n    isiphone: iphone,\n    isipad: ipad,\n    isweixin: weixin,\n    ischrome: chrome,\n    ismozilla: mozilla,\n    iswebkit: webkit,\n    isopera: opera,\n    issafari: safari,\n    ismsie: msie\n  };\n})(window);\n\nlet url = navigator.useragent.tolowercase();\n//使用tolowercase将字符串全部转为小写 方便我们判断使用\nif (url.indexof(\"15b202 qq\") > -1) {\n  //单独判断qq内置浏览器\n  alert(\"qq app 内置浏览器，做你想做的操作\");\n}\nif (url.indexof(\"micromessenger\") > -1) {\n  //单独判断微信内置浏览器\n  alert(\"微信内置浏览器，做你想做的操作\");\n}\nif (url.indexof(\"15b202\") > -1) {\n  //判断微信内置浏览器，qq内置浏览器\n  alert(\"qq和微信内置浏览器，做你想做的操作\");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n# 判断浏览器平台\nvar tools = {\n  ismobile() {\n    var ismobile = false\n    // 判断是pc还是移动端\n    var system = {\n      win: false,\n      mac: false,\n      x11: false,\n    }\n    // 检测平台\n    var p = navigator.platform\n    system.win = p.indexof('win') === 0\n    system.mac = p.indexof('mac') === 0\n    system.x11 = p === 'x11'\n\n    system.ipad = p === 'ipad'\n\n    // 跳转语句\n    if (!system.win && !system.mac && !system.x11 && !system.ipad) {\n      ismobile = true\n    }\n    return ismobile\n  },\n  // 判断是否是移动端\n  checkplatform() {\n    var utils = {}\n    var isbudge = (function () {\n      // 手持设备：ipad、iphone、android、ipod\n      return /mobile/i.test(navigator.useragent)\n    })()\n    var ismac = (function () {\n      return /macintosh/i.test(navigator.useragent)\n    })()\n    var iswindows = (function () {\n      return /windows nt/i.test(navigator.useragent)\n    })()\n    var islinux = (function () {\n      return /linux/i.test(navigator.useragent)\n    })()\n    var isipad = (function () {\n      return /ipad/i.test(navigator.useragent)\n    })()\n    utils.ismobile = !(iswindows || ismac || (islinux && !isbudge) || isipad)\n    return utils\n  },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n# browserinfo\nvar browserinfo = function () {\n  var json = {\n    useragent: navigator.useragent.tolowercase(),\n    isandroid: boolean(navigator.useragent.match(/android/gi)),\n    isiphone: boolean(navigator.useragent.match(/iphone|ipod/gi)),\n    isipad: boolean(navigator.useragent.match(/ipad/gi)),\n    isweixin: boolean(navigator.useragent.match(/micromessenger/gi))\n  };\n  return json;\n};\n\n// other\nconst inbrowser = typeof window !== \"undefined\";\n\nconst inweex = typeof wxenvironment !== \"undefined\" && !!wxenvironment.platform;\nconst weexplatform = inweex && wxenvironment.platform.tolowercase();\n\nconst ua = inbrowser && window.navigator.useragent.tolowercase();\n\nconst isie = ua && /msie|trident/.test(ua);\nconst isie9 = ua && ua.indexof(\"msie 9.0\") > 0;\nconst isedge = ua && ua.indexof(\"edge/\") > 0;\nconst isandroid =\n  (ua && ua.indexof(\"android\") > 0) || weexplatform === \"android\";\nconst isios = (ua && /iphone|ipad|ipod|ios/.test(ua)) || weexplatform === \"ios\";\nconst ischrome = ua && /chrome\\/\\d+/.test(ua) && !isedge;\nconst isphantomjs = ua && /phantomjs/.test(ua);\nconst isff = ua && ua.match(/firefox\\/(\\d+)/);\n\nwindow.location.href = /android|webos|iphone|ipod|blackberry/i.test(\n  navigator.useragent\n)\n  ? \"https://www.baidu.com/\"\n  : \"http://news.baidu.com/\";\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34",charsets:{cjk:!0}},{title:"centos7的一些命令参数",frontmatter:{title:"centos7的一些命令参数",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["centos7"],categories:["server"],readingShow:"top"},regularPath:"/linux/centos7.html",relativePath:"linux/centos7.md",key:"v-5f067c2b",path:"/linux/centos7.html",headers:[{level:2,title:"ip 查看",slug:"ip-查看",normalizedTitle:"ip 查看",charIndex:2},{level:2,title:"网络配置",slug:"网络配置",normalizedTitle:"网络配置",charIndex:22},{level:2,title:"修改 hosts",slug:"修改-hosts",normalizedTitle:"修改 hosts",charIndex:39},{level:2,title:"systemctl 服务",slug:"systemctl-服务",normalizedTitle:"systemctl 服务",charIndex:118},{level:2,title:"passwd",slug:"passwd",normalizedTitle:"passwd",charIndex:475},{level:2,title:"curl",slug:"curl",normalizedTitle:"curl",charIndex:506},{level:2,title:"rsync 同步",slug:"rsync-同步",normalizedTitle:"rsync 同步",charIndex:792},{level:2,title:"ssh root 禁用",slug:"ssh-root-禁用",normalizedTitle:"ssh root 禁用",charIndex:1279},{level:2,title:"禁止 root 本地登录",slug:"禁止-root-本地登录",normalizedTitle:"禁止 root 本地登录",charIndex:1432},{level:2,title:"vmware-tools",slug:"vmware-tools",normalizedTitle:"vmware-tools",charIndex:1536},{level:2,title:"port 修改",slug:"port-修改",normalizedTitle:"port 修改",charIndex:1633},{level:2,title:"SELINUX",slug:"selinux",normalizedTitle:"selinux",charIndex:1752},{level:2,title:"关闭 SELINUX",slug:"关闭-selinux",normalizedTitle:"关闭 selinux",charIndex:1762},{level:2,title:"不关 SELINUX",slug:"不关-selinux",normalizedTitle:"不关 selinux",charIndex:1928},{level:2,title:"通过软件源在线安装",slug:"通过软件源在线安装",normalizedTitle:"通过软件源在线安装",charIndex:3312},{level:2,title:"通过本地 rpm 包安装",slug:"通过本地-rpm-包安装",normalizedTitle:"通过本地 rpm 包安装",charIndex:3385},{level:2,title:"安装 nginx",slug:"安装-nginx",normalizedTitle:"安装 nginx",charIndex:3447},{level:2,title:"nvm 安装换源",slug:"nvm-安装换源",normalizedTitle:"nvm 安装换源",charIndex:3983},{level:2,title:"firewall-cmd",slug:"firewall-cmd",normalizedTitle:"firewall-cmd",charIndex:2487},{level:2,title:"Yum 命令",slug:"yum-命令",normalizedTitle:"yum 命令",charIndex:7447},{level:2,title:"命令行命令失效",slug:"命令行命令失效",normalizedTitle:"命令行命令失效",charIndex:7648},{level:2,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:7681},{level:2,title:"ss server",slug:"ss-server",normalizedTitle:"ss server",charIndex:8199},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:9445}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"ip 查看 网络配置 修改 hosts systemctl 服务 passwd curl rsync 同步 ssh root 禁用 禁止 root 本地登录 vmware-tools port 修改 SELINUX 关闭 SELINUX 不关 SELINUX 通过软件源在线安装 通过本地 rpm 包安装 安装 nginx nvm 安装换源 firewall-cmd Yum 命令 命令行命令失效 常用命令 ss server 相关链接",content:'# ip 查看\n * ip addr\n\n# 网络配置\n * nmtui\n\n# 修改 hosts\nvi /etc/hosts\n# 保存后重启网络\nsudo /etc/init.d/networking restart\n\n\n1\n2\n3\n# systemctl 服务\nsudo systemctl start service_name   # 启动服务\nsudo systemctl stop service_name    # 停止服务\nsudo systemctl status service_name  # 服务状态\nsudo systemctl restart service_name # 重启服务\nsudo systemctl reload service_name  # 重载服务\n\n# 启用与禁用\nsudo systemctl enable service_name   # 开机自启用可以用enable启用\nsudo systemctl disable service_name  # 禁用\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# passwd\n * 修改密码: passwd root\n\n# curl\ncurl https://www.baidu.com\ncurl -v https://www.baidu.com\n\n# 把地址内容下载到某个文件里\ncurl -o file_name url\ncurl -o test.html https://www.baidu.com\n\n# 用远程地址是文件，把文件下载下来，文件名使用远程文件的名字\ncurl -O file_url\ncurl -O https://raw.githubusercontent.com/amix/vimrc/master/README.md\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# rsync 同步\n# 参数\nr（recursive）# 递归复制，复制同步的文件不保留文件的权限，创建与修改时间\na（archive）# 存档模式，可以递归复制，保留文件替身，复制同步的文件会保留文件的拥有者，用户名，时间，权限\nz（compress）# 压缩传输，传输文件时会压缩文件\nn（dry-run）# 假装同步，看看都有什么东西可以同步的，不会真正执行同步\nh（human-readable）# 用人类都看懂的方式显示数字\nP（progress）# 进度\n\n# 基本用法：rsync 选项 源 目标\n# 递归同步：\nrsync -r 源 目标   # 递归模式同步不保留文件属性。\n# 存档模式：\nrsync -a 源 目标   # 保留文件属性\n# 显示进度：\nrsync -a -P 源 目标\nrsync -aP 源 目标\n# 删 除：\nrsync -a -P --delete 源 目标\n# 远 程：\nrsync -a -P 用户@主机:源 目标\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# ssh root 禁用\n# 查找：\n/etc/ssh/sshd_config\n# 将PermitRootLogin yes\n# 修改为：\nPermitRootLogin no\n\n# 重新启动 sshd：\nsystemctl restart sshd.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 禁止 root 本地登录\n# 修改配置 /etc/pam.d/login ，增加如下一行\nauth required pam_succeed_if.so user != root quiet\n\n\n1\n2\n# vmware-tools\n * vmware 虚拟机工具\n\nsu root\ncd vmware-tools-distrib\nls\n./vmware-install.pl\n\n\n1\n2\n3\n4\n# port 修改\n# 查找：/etc/ssh/sshd_config\n＃Port 22\n# 修改为：\nPort 5000\n\n# 重启ssh：\nsystemctl restart sshd.service\n\n\n1\n2\n3\n4\n5\n6\n7\n# SELINUX\n# 关闭 SELINUX\nvi /etc/selinux/config  修改 SELINUX=disabled\n\n# 查看selinux状态sestatus 如果是enabled就是开启状态\nsestatus -v\n\n# 重启ssh：\nsystemctl restart sshd.service\n\n\n1\n2\n3\n4\n5\n6\n7\n# 不关 SELINUX\n * 但是需要添加一下 SELINUX 的端口, 使用 semanage 工具\n * 安装 semanage\n\nyum -y install policycoreutils-python\n\n# 使用以下命令查看当前SElinux 允许的ssh端口\nsemanage port -l | grep ssh\n\n# 添加20000端口到 SELinux\nsemanage port -a -t ssh_port_t -p tcp 5000\n\n# 然后确认一下是否添加进去\nsemanage port -l | grep ssh\n\n# 如果成功会输出\nssh_port_t   --\x3e  tcp    5000, 22\n\n# 重启ssh\nsystemctl restart sshd.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * 防火墙中放行新加入端口\n   \n    * 方法 1\n   \n   # 启动 systemctl\n   systemctl start firewalld.service\n   # 开机时启用服务\n   systemctl enable firewalld.service\n   \n   # 添加允许新端口号\n   firewall-cmd --permanent --add-port=5000/tcp\n   \n   # 用该命令查询\n   firewall-cmd --permanent --query-port=5000/tcp\n   # 如果是yes就是添加成功，如果是no就是没成功\n   \n   # 成功后重载防火墙\n   firewall-cmd --reload\n   \n   # 配置iptable\n   \n   iptables -A INPUT -p tcp --dport 5000 -j ACCEPT\n   \n   # 重启 iptable\n   service iptables restart\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n    * 方法 2\n   \n   # 复制 firewalld 有关 sshd 的设定档案：\n   cp /usr/lib/firewalld/services/ssh.xml /etc/firewalld/services/\n   \n   # 使用 vim  (或任何文本编辑器) 开启 /etc/firewalld/services/ssh.xml，寻找：\n   <port protocol="tcp" port="22"/>\n   # 修改为：\n   <port protocol="tcp" port="5000"/>\n   \n   # 储存后重新加载 firewalld：\n   firewall-cmd --reload\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n# 通过软件源在线安装\nsudo yum -y install 软件名\n# 其中参数-y为所有选项均选则yes，不加-y则要手动确认\n\n\n1\n2\n# 通过本地 rpm 包安装\nsudo rpm -ivh 软件名\n# 其中参数-i为安装，-vh为列出安装过程\n\n\n1\n2\n# 安装 nginx\nyum install epel-release -y\nyum install nginx -y\nnginx -t # 检测nginx的语法\nservice nginx status # 查看状态\nservice nginx start / reload\nservice nginx stop\nsystemctl enable nginx\n\n# firewall设置：\nsystemctl start firewalld.service    #启动firewall\nsystemctl stop firewalld.service     #停止firewall\nsystemctl disable firewalld.service  #禁止firewall开机启动\n\n# firewalld默认已经安装并启用了，如果需要nginx可以访问需要执行以下命令：\nfirewall-cmd --permanent --add-service=http\nfirewall-cmd --permanent --zone=trusted --add-port=80/tcp\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# nvm 安装换源\n * Node Version Manager: nvm\n\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n\nvim .bashrc\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node\n\nsource ~/git/nvm/nvm.sh\n\n\n1\n2\n3\n4\n5\n6\n# firewall-cmd\n * firewalld\n\n# 启动：\nsystemctl start firewalld\n# 查状态：\nsystemctl status firewalld\n# 停止：\nsystemctl disable firewalld\n# 禁用：\nsystemctl stop firewalld\n# 在开机时启用一个服务：\nsystemctl enable firewalld.service\n# 在开机时禁用一个服务：\nsystemctl disable firewalld.service\n# 查看服务是否开机启动：\nsystemctl is-enabled firewalld.service\n# 查看已启动的服务列表：\nsystemctl list-unit-files|grep enabled\n# 查看启动失败的服务列表：\nsystemctl --failed\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 配置 firewalld-cmd\n\n# 查看版本：\nfirewall-cmd --version\n# 查看帮助：\nfirewall-cmd --help\n# 显示状态：\nfirewall-cmd --state\n\n# 查看所有打开的端口：\nfirewall-cmd --zone=public --list-ports\nfirewall-cmd --permanent --zone=public --list-ports\n# 查看开启的服务\nfirewall-cmd --permanent --zone=public --list-services\n\n# 更新防火墙规则：\nfirewall-cmd --reload\n# 查看区域信息:\nfirewall-cmd --get-active-zones\n# 查看指定接口所属区域：\nfirewall-cmd --get-zone-of-interface=eth0\n# 拒绝所有包：\nfirewall-cmd --panic-on\n# 取消拒绝状态：\nfirewall-cmd --panic-off\n# 查看是否拒绝：\nfirewall-cmd --query-panic\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n * 开启端口\n\n# /etc/firewalld/zones/public.xml\n\nfirewall-cmd --zone=public(作用域) --add-port=80/tcp(端口和访问类型) --permanent(永久生效)\n\nfirewall-cmd --zone=public --add-service=http --permanent\n\nfirewall-cmd --zone=public --query-port=80/tcp  #查看\nfirewall-cmd --zone=public --remove-port=80/tcp --permanent  # 删除\n\nfirewall-cmd --list-services\nfirewall-cmd --get-services\nfirewall-cmd --add-service=<service>\nfirewall-cmd --delete-service=<service>\n\n# 参数解释\n--add-service #添加的服务\n--zone #作用域\n--add-port=80/tcp #添加端口，格式为：端口/通讯协议\n--permanent #永久生效，没有此参数重启后失效\n\n# 开启某个端口\nfirewall-cmd --permanent --zone=public --add-port=8080-8081/tcp # 永久\nfirewall-cmd --zone=public --add-port=8080-8081/tcp # 临时\n\n# 启用某个服务\nfirewall-cmd --zone=public --add-service=https # 临时\nfirewall-cmd --permanent --zone=public --add-service=https # 永久\n\n# 查看开启的端口和服务\nfirewall-cmd --permanent --zone=public --list-services # 服务空格隔开 例如 dhcpv6-client https ss\nfirewall-cmd --permanent --zone=public --list-ports # 端口空格隔开 例如 8080-8081/tcp 8388/tcp 80/tcp\n\n# 重新载入，更新防火墙规则\nfirewall-cmd --reload\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * 详细使用\n\n# 设置某个ip访问某个服务\nfirewall-cmd --permanent --zone=public --add-rich-rule=\'rule family="ipv4" source address="192.168.0.4/24" service name="http" accept\'\n# 删除配置\nfirewall-cmd --permanent --zone=public --remove-rich-rule=\'rule family="ipv4" source address="192.168.0.4/24" service name="http" accept\'\n# 设置某个ip访问某个端口\nfirewall-cmd --permanent --add-rich-rule \'rule family=ipv4 source address=192.168.0.1/2 port port=80 protocol=tcp accept\'\n# 删除配置\nfirewall-cmd --permanent --remove-rich-rule \'rule family=ipv4 source address=192.168.0.1/2 port port=80 protocol=tcp accept\'\n\n# 检查是否允许伪装IP\nfirewall-cmd --query-masquerade\n# 允许防火墙伪装IP\nfirewall-cmd --add-masquerade\n# 禁止防火墙伪装IP\nfirewall-cmd --remove-masquerade\n\n# 将80端口的流量转发至8080\nfirewall-cmd --add-forward-port=port=80:proto=tcp:toport=8080\n# 将80端口的流量转发至192.168.0.1\nfirewall-cmd --add-forward-port=proto=80:proto=tcp:toaddr=192.168.1.0.1\n# 将80端口的流量转发至192.168.0.1的8080端口\nfirewall-cmd --add-forward-port=proto=80:proto=tcp:toaddr=192.168.0.1:toport=8080\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# Yum 命令\nyum(选项)(参数)\n\nh  # 显示帮助信息\ny  # 对所有的提问都回答"yes"\nc  # 指定配置文件\nq  # 安静模式\nv  # 详细模式\nd  # 设置调试等级(0-10)\ne  # 设置错误等级(0-10)\nR  # 设置yum处理一个命令的最大等待时间\nC  # 完全从缓存中运行，而不去下载或者更新任何头文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 命令行命令失效\n * PATH=/bin:/usr/bin\n\n# 常用命令\nyum repolist\nyum search xxx\nyum info xxx\nyum install xxx -y\nyum -y install vim\t# 安装vim\nyum remove xxx -y\nyum -y update && yum -y upgrade\nyum install wget -y\nyum install -y epel-release\nyum -y install gcc gcc-c++\nyum -y install gcc automake autoconf libtool make\nyum -y install net-tools\nnetstat –apn\nnetstat -ntlp\nps -aux | grep tomcat\nnetstat -ntulp |grep 80  # 查看80端口\nssh # 远程登录，如ssh root@gitlab.study.com\ncat /etc/redhat-release # 查看系统版本\nps -ef | grep nginx\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# ss server\nmac SSR: https://github.com/qinyuhang/ShadowsocksX-NG-R\nwin SSR : https://github.com/shadowsocksr-backup/shadowsocksr-csharp\nandroid SSR: https://github.com/shadowsocksr-backup/shadowsocksr-android\nandroid SSRR: https://github.com/shadowsocksrr/shadowsocksr-android\n\nwin : https://github.com/shadowsocks/shadowsocks-windows\nmac : https://github.com/shadowsocks/ShadowsocksX-NG\nandroid : https://github.com/shadowsocks/shadowsocks-android\n\nbase: https://github.com/shadowsocks/shadowsocks/tree/master\n\nhttps://segmentfault.com/a/1190000013242438\nhttps://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E\nhttps://segmentfault.com/a/1190000012654072\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * install\n\n# 需要安装git\nyum install python-setuptools && easy_install pip\npip install git+https://github.com/shadowsocks/shadowsocks.git@master\nssserver -c /etc/shadowsocks.json\nvim /etc/rc.d/rc.local\nssserver -c /etc/shadowsocks.json -d start\n\n\n1\n2\n3\n4\n5\n6\n * config\n\n# shadowsocks.json\n# server ip : 101.*.*.*\n\n{\n    "server":"server ip",\n    "server_port":23345,\n    "local_address":"127.0.0.1",\n    "local_port":1080,\n    "password":"password",\n    "timeout":300,\n    "method":"aes-256-cfb",\n    "fast_open":false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 相关链接\n * centos7 开机界面出现多个选项\n * Centos7 修改 SSH 端口\n * judasn/Linux-Tutorial\n * amix/vimrc\n * systemctl 命令\n * linux 基础命令介绍\n * firewall 防火墙',normalizedContent:'# ip 查看\n * ip addr\n\n# 网络配置\n * nmtui\n\n# 修改 hosts\nvi /etc/hosts\n# 保存后重启网络\nsudo /etc/init.d/networking restart\n\n\n1\n2\n3\n# systemctl 服务\nsudo systemctl start service_name   # 启动服务\nsudo systemctl stop service_name    # 停止服务\nsudo systemctl status service_name  # 服务状态\nsudo systemctl restart service_name # 重启服务\nsudo systemctl reload service_name  # 重载服务\n\n# 启用与禁用\nsudo systemctl enable service_name   # 开机自启用可以用enable启用\nsudo systemctl disable service_name  # 禁用\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# passwd\n * 修改密码: passwd root\n\n# curl\ncurl https://www.baidu.com\ncurl -v https://www.baidu.com\n\n# 把地址内容下载到某个文件里\ncurl -o file_name url\ncurl -o test.html https://www.baidu.com\n\n# 用远程地址是文件，把文件下载下来，文件名使用远程文件的名字\ncurl -o file_url\ncurl -o https://raw.githubusercontent.com/amix/vimrc/master/readme.md\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# rsync 同步\n# 参数\nr（recursive）# 递归复制，复制同步的文件不保留文件的权限，创建与修改时间\na（archive）# 存档模式，可以递归复制，保留文件替身，复制同步的文件会保留文件的拥有者，用户名，时间，权限\nz（compress）# 压缩传输，传输文件时会压缩文件\nn（dry-run）# 假装同步，看看都有什么东西可以同步的，不会真正执行同步\nh（human-readable）# 用人类都看懂的方式显示数字\np（progress）# 进度\n\n# 基本用法：rsync 选项 源 目标\n# 递归同步：\nrsync -r 源 目标   # 递归模式同步不保留文件属性。\n# 存档模式：\nrsync -a 源 目标   # 保留文件属性\n# 显示进度：\nrsync -a -p 源 目标\nrsync -ap 源 目标\n# 删 除：\nrsync -a -p --delete 源 目标\n# 远 程：\nrsync -a -p 用户@主机:源 目标\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# ssh root 禁用\n# 查找：\n/etc/ssh/sshd_config\n# 将permitrootlogin yes\n# 修改为：\npermitrootlogin no\n\n# 重新启动 sshd：\nsystemctl restart sshd.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 禁止 root 本地登录\n# 修改配置 /etc/pam.d/login ，增加如下一行\nauth required pam_succeed_if.so user != root quiet\n\n\n1\n2\n# vmware-tools\n * vmware 虚拟机工具\n\nsu root\ncd vmware-tools-distrib\nls\n./vmware-install.pl\n\n\n1\n2\n3\n4\n# port 修改\n# 查找：/etc/ssh/sshd_config\n＃port 22\n# 修改为：\nport 5000\n\n# 重启ssh：\nsystemctl restart sshd.service\n\n\n1\n2\n3\n4\n5\n6\n7\n# selinux\n# 关闭 selinux\nvi /etc/selinux/config  修改 selinux=disabled\n\n# 查看selinux状态sestatus 如果是enabled就是开启状态\nsestatus -v\n\n# 重启ssh：\nsystemctl restart sshd.service\n\n\n1\n2\n3\n4\n5\n6\n7\n# 不关 selinux\n * 但是需要添加一下 selinux 的端口, 使用 semanage 工具\n * 安装 semanage\n\nyum -y install policycoreutils-python\n\n# 使用以下命令查看当前selinux 允许的ssh端口\nsemanage port -l | grep ssh\n\n# 添加20000端口到 selinux\nsemanage port -a -t ssh_port_t -p tcp 5000\n\n# 然后确认一下是否添加进去\nsemanage port -l | grep ssh\n\n# 如果成功会输出\nssh_port_t   --\x3e  tcp    5000, 22\n\n# 重启ssh\nsystemctl restart sshd.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * 防火墙中放行新加入端口\n   \n    * 方法 1\n   \n   # 启动 systemctl\n   systemctl start firewalld.service\n   # 开机时启用服务\n   systemctl enable firewalld.service\n   \n   # 添加允许新端口号\n   firewall-cmd --permanent --add-port=5000/tcp\n   \n   # 用该命令查询\n   firewall-cmd --permanent --query-port=5000/tcp\n   # 如果是yes就是添加成功，如果是no就是没成功\n   \n   # 成功后重载防火墙\n   firewall-cmd --reload\n   \n   # 配置iptable\n   \n   iptables -a input -p tcp --dport 5000 -j accept\n   \n   # 重启 iptable\n   service iptables restart\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n    * 方法 2\n   \n   # 复制 firewalld 有关 sshd 的设定档案：\n   cp /usr/lib/firewalld/services/ssh.xml /etc/firewalld/services/\n   \n   # 使用 vim  (或任何文本编辑器) 开启 /etc/firewalld/services/ssh.xml，寻找：\n   <port protocol="tcp" port="22"/>\n   # 修改为：\n   <port protocol="tcp" port="5000"/>\n   \n   # 储存后重新加载 firewalld：\n   firewall-cmd --reload\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n# 通过软件源在线安装\nsudo yum -y install 软件名\n# 其中参数-y为所有选项均选则yes，不加-y则要手动确认\n\n\n1\n2\n# 通过本地 rpm 包安装\nsudo rpm -ivh 软件名\n# 其中参数-i为安装，-vh为列出安装过程\n\n\n1\n2\n# 安装 nginx\nyum install epel-release -y\nyum install nginx -y\nnginx -t # 检测nginx的语法\nservice nginx status # 查看状态\nservice nginx start / reload\nservice nginx stop\nsystemctl enable nginx\n\n# firewall设置：\nsystemctl start firewalld.service    #启动firewall\nsystemctl stop firewalld.service     #停止firewall\nsystemctl disable firewalld.service  #禁止firewall开机启动\n\n# firewalld默认已经安装并启用了，如果需要nginx可以访问需要执行以下命令：\nfirewall-cmd --permanent --add-service=http\nfirewall-cmd --permanent --zone=trusted --add-port=80/tcp\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# nvm 安装换源\n * node version manager: nvm\n\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n\nvim .bashrc\nexport nvm_nodejs_org_mirror=https://npm.taobao.org/mirrors/node\n\nsource ~/git/nvm/nvm.sh\n\n\n1\n2\n3\n4\n5\n6\n# firewall-cmd\n * firewalld\n\n# 启动：\nsystemctl start firewalld\n# 查状态：\nsystemctl status firewalld\n# 停止：\nsystemctl disable firewalld\n# 禁用：\nsystemctl stop firewalld\n# 在开机时启用一个服务：\nsystemctl enable firewalld.service\n# 在开机时禁用一个服务：\nsystemctl disable firewalld.service\n# 查看服务是否开机启动：\nsystemctl is-enabled firewalld.service\n# 查看已启动的服务列表：\nsystemctl list-unit-files|grep enabled\n# 查看启动失败的服务列表：\nsystemctl --failed\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 配置 firewalld-cmd\n\n# 查看版本：\nfirewall-cmd --version\n# 查看帮助：\nfirewall-cmd --help\n# 显示状态：\nfirewall-cmd --state\n\n# 查看所有打开的端口：\nfirewall-cmd --zone=public --list-ports\nfirewall-cmd --permanent --zone=public --list-ports\n# 查看开启的服务\nfirewall-cmd --permanent --zone=public --list-services\n\n# 更新防火墙规则：\nfirewall-cmd --reload\n# 查看区域信息:\nfirewall-cmd --get-active-zones\n# 查看指定接口所属区域：\nfirewall-cmd --get-zone-of-interface=eth0\n# 拒绝所有包：\nfirewall-cmd --panic-on\n# 取消拒绝状态：\nfirewall-cmd --panic-off\n# 查看是否拒绝：\nfirewall-cmd --query-panic\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n * 开启端口\n\n# /etc/firewalld/zones/public.xml\n\nfirewall-cmd --zone=public(作用域) --add-port=80/tcp(端口和访问类型) --permanent(永久生效)\n\nfirewall-cmd --zone=public --add-service=http --permanent\n\nfirewall-cmd --zone=public --query-port=80/tcp  #查看\nfirewall-cmd --zone=public --remove-port=80/tcp --permanent  # 删除\n\nfirewall-cmd --list-services\nfirewall-cmd --get-services\nfirewall-cmd --add-service=<service>\nfirewall-cmd --delete-service=<service>\n\n# 参数解释\n--add-service #添加的服务\n--zone #作用域\n--add-port=80/tcp #添加端口，格式为：端口/通讯协议\n--permanent #永久生效，没有此参数重启后失效\n\n# 开启某个端口\nfirewall-cmd --permanent --zone=public --add-port=8080-8081/tcp # 永久\nfirewall-cmd --zone=public --add-port=8080-8081/tcp # 临时\n\n# 启用某个服务\nfirewall-cmd --zone=public --add-service=https # 临时\nfirewall-cmd --permanent --zone=public --add-service=https # 永久\n\n# 查看开启的端口和服务\nfirewall-cmd --permanent --zone=public --list-services # 服务空格隔开 例如 dhcpv6-client https ss\nfirewall-cmd --permanent --zone=public --list-ports # 端口空格隔开 例如 8080-8081/tcp 8388/tcp 80/tcp\n\n# 重新载入，更新防火墙规则\nfirewall-cmd --reload\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * 详细使用\n\n# 设置某个ip访问某个服务\nfirewall-cmd --permanent --zone=public --add-rich-rule=\'rule family="ipv4" source address="192.168.0.4/24" service name="http" accept\'\n# 删除配置\nfirewall-cmd --permanent --zone=public --remove-rich-rule=\'rule family="ipv4" source address="192.168.0.4/24" service name="http" accept\'\n# 设置某个ip访问某个端口\nfirewall-cmd --permanent --add-rich-rule \'rule family=ipv4 source address=192.168.0.1/2 port port=80 protocol=tcp accept\'\n# 删除配置\nfirewall-cmd --permanent --remove-rich-rule \'rule family=ipv4 source address=192.168.0.1/2 port port=80 protocol=tcp accept\'\n\n# 检查是否允许伪装ip\nfirewall-cmd --query-masquerade\n# 允许防火墙伪装ip\nfirewall-cmd --add-masquerade\n# 禁止防火墙伪装ip\nfirewall-cmd --remove-masquerade\n\n# 将80端口的流量转发至8080\nfirewall-cmd --add-forward-port=port=80:proto=tcp:toport=8080\n# 将80端口的流量转发至192.168.0.1\nfirewall-cmd --add-forward-port=proto=80:proto=tcp:toaddr=192.168.1.0.1\n# 将80端口的流量转发至192.168.0.1的8080端口\nfirewall-cmd --add-forward-port=proto=80:proto=tcp:toaddr=192.168.0.1:toport=8080\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# yum 命令\nyum(选项)(参数)\n\nh  # 显示帮助信息\ny  # 对所有的提问都回答"yes"\nc  # 指定配置文件\nq  # 安静模式\nv  # 详细模式\nd  # 设置调试等级(0-10)\ne  # 设置错误等级(0-10)\nr  # 设置yum处理一个命令的最大等待时间\nc  # 完全从缓存中运行，而不去下载或者更新任何头文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 命令行命令失效\n * path=/bin:/usr/bin\n\n# 常用命令\nyum repolist\nyum search xxx\nyum info xxx\nyum install xxx -y\nyum -y install vim\t# 安装vim\nyum remove xxx -y\nyum -y update && yum -y upgrade\nyum install wget -y\nyum install -y epel-release\nyum -y install gcc gcc-c++\nyum -y install gcc automake autoconf libtool make\nyum -y install net-tools\nnetstat –apn\nnetstat -ntlp\nps -aux | grep tomcat\nnetstat -ntulp |grep 80  # 查看80端口\nssh # 远程登录，如ssh root@gitlab.study.com\ncat /etc/redhat-release # 查看系统版本\nps -ef | grep nginx\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# ss server\nmac ssr: https://github.com/qinyuhang/shadowsocksx-ng-r\nwin ssr : https://github.com/shadowsocksr-backup/shadowsocksr-csharp\nandroid ssr: https://github.com/shadowsocksr-backup/shadowsocksr-android\nandroid ssrr: https://github.com/shadowsocksrr/shadowsocksr-android\n\nwin : https://github.com/shadowsocks/shadowsocks-windows\nmac : https://github.com/shadowsocks/shadowsocksx-ng\nandroid : https://github.com/shadowsocks/shadowsocks-android\n\nbase: https://github.com/shadowsocks/shadowsocks/tree/master\n\nhttps://segmentfault.com/a/1190000013242438\nhttps://github.com/neilpang/acme.sh/wiki/%e8%af%b4%e6%98%8e\nhttps://segmentfault.com/a/1190000012654072\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * install\n\n# 需要安装git\nyum install python-setuptools && easy_install pip\npip install git+https://github.com/shadowsocks/shadowsocks.git@master\nssserver -c /etc/shadowsocks.json\nvim /etc/rc.d/rc.local\nssserver -c /etc/shadowsocks.json -d start\n\n\n1\n2\n3\n4\n5\n6\n * config\n\n# shadowsocks.json\n# server ip : 101.*.*.*\n\n{\n    "server":"server ip",\n    "server_port":23345,\n    "local_address":"127.0.0.1",\n    "local_port":1080,\n    "password":"password",\n    "timeout":300,\n    "method":"aes-256-cfb",\n    "fast_open":false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 相关链接\n * centos7 开机界面出现多个选项\n * centos7 修改 ssh 端口\n * judasn/linux-tutorial\n * amix/vimrc\n * systemctl 命令\n * linux 基础命令介绍\n * firewall 防火墙',charsets:{cjk:!0}},{title:"linux的命令参数罗列",frontmatter:{title:"linux的命令参数罗列",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["linux"],categories:["server"],readingShow:"top"},regularPath:"/linux/linux.html",relativePath:"linux/linux.md",key:"v-4392c46a",path:"/linux/linux.html",headers:[{level:2,title:"常见命令",slug:"常见命令",normalizedTitle:"常见命令",charIndex:77},{level:2,title:"标准输入输出",slug:"标准输入输出",normalizedTitle:"标准输入输出",charIndex:792},{level:2,title:"输出重定向",slug:"输出重定向",normalizedTitle:"输出重定向",charIndex:959},{level:2,title:"关机",slug:"关机",normalizedTitle:"关机",charIndex:1655},{level:2,title:"常用快捷键",slug:"常用快捷键",normalizedTitle:"常用快捷键",charIndex:1779},{level:2,title:"alias 别名",slug:"alias-别名",normalizedTitle:"alias 别名",charIndex:1942},{level:2,title:"服务启动与关闭",slug:"服务启动与关闭",normalizedTitle:"服务启动与关闭",charIndex:2118},{level:2,title:"创建文件夹",slug:"创建文件夹",normalizedTitle:"创建文件夹",charIndex:2522},{level:2,title:"创建文件",slug:"创建文件",normalizedTitle:"创建文件",charIndex:2522},{level:2,title:"查看文件",slug:"查看文件",normalizedTitle:"查看文件",charIndex:2753},{level:2,title:"编辑文件",slug:"编辑文件",normalizedTitle:"编辑文件",charIndex:3116},{level:2,title:"复制",slug:"复制",normalizedTitle:"复制",charIndex:3152},{level:2,title:"重命名与移动",slug:"重命名与移动",normalizedTitle:"重命名与移动",charIndex:3356},{level:2,title:"删除",slug:"删除",normalizedTitle:"删除",charIndex:1825},{level:2,title:"软连接和硬链接 ln",slug:"软连接和硬链接-ln",normalizedTitle:"软连接和硬链接 ln",charIndex:3583},{level:2,title:"通配符",slug:"通配符",normalizedTitle:"通配符",charIndex:3687},{level:2,title:"逻辑链接符",slug:"逻辑链接符",normalizedTitle:"逻辑链接符",charIndex:3743},{level:2,title:"工作进程",slug:"工作进程",normalizedTitle:"工作进程",charIndex:3789},{level:2,title:"系统资源查看",slug:"系统资源查看",normalizedTitle:"系统资源查看",charIndex:3979},{level:2,title:"帮助命令",slug:"帮助命令",normalizedTitle:"帮助命令",charIndex:4213},{level:2,title:"压缩/解压",slug:"压缩-解压",normalizedTitle:"压缩/解压",charIndex:4432},{level:2,title:"wc 统计",slug:"wc-统计",normalizedTitle:"wc 统计",charIndex:4805},{level:2,title:"挂载命令",slug:"挂载命令",normalizedTitle:"挂载命令",charIndex:4999},{level:2,title:"运行级别",slug:"运行级别",normalizedTitle:"运行级别",charIndex:1728},{level:2,title:"查询已安装的服务",slug:"查询已安装的服务",normalizedTitle:"查询已安装的服务",charIndex:5472},{level:2,title:"服务与端口号",slug:"服务与端口号",normalizedTitle:"服务与端口号",charIndex:5601},{level:2,title:"RPM 包服务",slug:"rpm-包服务",normalizedTitle:"rpm 包服务",charIndex:5861},{level:2,title:"源码包服务",slug:"源码包服务",normalizedTitle:"源码包服务",charIndex:7346},{level:2,title:"进程",slug:"进程",normalizedTitle:"进程",charIndex:3791},{level:2,title:"系统定时任务",slug:"系统定时任务",normalizedTitle:"系统定时任务",charIndex:9096},{level:2,title:"基本权限",slug:"基本权限",normalizedTitle:"基本权限",charIndex:10203},{level:2,title:"新建用户",slug:"新建用户",normalizedTitle:"新建用户",charIndex:10482},{level:2,title:"用户组",slug:"用户组",normalizedTitle:"用户组",charIndex:10574},{level:2,title:"chown 修改文件与目录的所有权",slug:"chown-修改文件与目录的所有权",normalizedTitle:"chown 修改文件与目录的所有权",charIndex:12772},{level:2,title:"文件权限(rwx)",slug:"文件权限-rwx",normalizedTitle:"文件权限(rwx)",charIndex:12897},{level:2,title:"chmod 修改文件与目录的权限",slug:"chmod-修改文件与目录的权限",normalizedTitle:"chmod 修改文件与目录的权限",charIndex:13421},{level:2,title:"sudo 权限命令",slug:"sudo-权限命令",normalizedTitle:"sudo 权限命令",charIndex:13757},{level:2,title:"IP 常用网段",slug:"ip-常用网段",normalizedTitle:"ip 常用网段",charIndex:14231},{level:2,title:"新建.sh 脚本",slug:"新建-sh-脚本",normalizedTitle:"新建.sh 脚本",charIndex:15436},{level:2,title:"bash 变量",slug:"bash-变量",normalizedTitle:"bash 变量",charIndex:15533},{level:2,title:"bash 执行方法",slug:"bash-执行方法",normalizedTitle:"bash 执行方法",charIndex:15588},{level:2,title:"shell",slug:"shell",normalizedTitle:"shell",charIndex:12756},{level:2,title:"环境变量",slug:"环境变量",normalizedTitle:"环境变量",charIndex:2017},{level:2,title:"其他",slug:"其他",normalizedTitle:"其他",charIndex:10264},{level:2,title:"文件搜索",slug:"文件搜索",normalizedTitle:"文件搜索",charIndex:16265},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:17184}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"常见命令 标准输入输出 输出重定向 关机 常用快捷键 alias 别名 服务启动与关闭 创建文件夹 创建文件 查看文件 编辑文件 复制 重命名与移动 删除 软连接和硬链接 ln 通配符 逻辑链接符 工作进程 系统资源查看 帮助命令 压缩/解压 wc 统计 挂载命令 运行级别 查询已安装的服务 服务与端口号 RPM 包服务 源码包服务 进程 系统定时任务 基本权限 新建用户 用户组 chown 修改文件与目录的所有权 文件权限(rwx) chmod 修改文件与目录的权限 sudo 权限命令 IP 常用网段 新建.sh 脚本 bash 变量 bash 执行方法 shell 环境变量 其他 文件搜索 相关链接",content:' * https://www.kernel.org 内核发布网址\n * uname -r 内核版本\n * linux 严格区分大小写,扩展名非必须\n\n# 常见命令\n * 禁用网卡: ifdown\n * 启用网卡: ifup\n * netstat\n * nslookup\n * tcpdump -i eth0 -nnX port 21\n * 链接远程 linux 服务器: ssh 用户名@服务器ip\n * 下载文件: scp [-r] 用户名@服务器ip:文件路径 本地路径\n * 上传文件: scp [-r] 本地文件 用户名@服务器ip:上传路径\n * export PATH=/bin:/usr/bin:/usr/local/bin\n * ps -ef | grep nginx\n * 显示磁盘的占用率: df -hT\n\n-a：# 显示所有文件系统的磁盘使用情况\n-h：# 方便阅读方式显示\n-i：# 显示i节点信息，而不是磁盘块\n-t：# 显示各指定类型的文件系统的磁盘空间使用情况\n-x：# 列出不是某一指定类型文件系统的磁盘空间使用情况\n-T：# 显示文件系统类型\n--no-sync：# 忽略 sync 命令\n--sync：# 在取得磁盘信息前,先执行sync命令\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * du -sh /usr # 显示usr的大小\n\n-a：# 显示目录中个别文件的大小\n-s：# 仅显示总计，只列出最后加总的值\n-h：# 提高信息的可读性\n\n\n1\n2\n3\n * pwd 显示当前路径\n * tab 自动补全，连按两次会将所有匹配内容显示出来\n * history 查看操作历史\n * | 管道符\n * w / who 查看用户登录\n * last 登录信息和登录记录\n * lastlog 查看所有用户最后一次的登录信息\n * whoami\n\n# 标准输入输出\n * > --\x3e 命令 > 文件 这是将命令内容写入文件中\n\n netstat -an > txt.log\n\n\n1\n * < --\x3e 命令 < 文件 这是将文件作为命令输入\n\nmail -s "test" linux@163.com < aa\n# 就是将文件aa作为信件的内容主题为test给收信人发去\n\n\n1\n2\n# 输出重定向\n * 标准输入 (stdin) ：代码为 0 ,使用 < 或 <<\n * 标准输出 (stdout)：代码为 1 ,使用 > 或 >>\n * 标准错误输出(stderr)：代码为 2 ,使用 2> 或 2>>\n\n>  --\x3e ps: ifconfig > test.log    # 将结果保存在test.log\n>  --\x3e ps: ifconfig 2>test.log    # 将结果(包括错误信息)保存在test.log\n>> --\x3e ps: ifconfig >> test.log   # 将结果追加保存在test.log\n>> --\x3e ps: ifconfig 2>>test.log   # 将结果(包括错误信息)追加保存在test.log\n\n> --\x3e ps: ifconfig > test.log 2>&1  # 将结果(包括错误信息)保存在test.log\n>> --\x3e ps: ifconfig >> test.log 2>&1  # 将结果(包括错误信息)追加保存在test.log\n>> --\x3e ps: ifconfig &>>test.log  # 将结果(包括错误信息)追加保存在test.log\n>> --\x3e ps: ifconfig 1>>success.log 2>>error.log  # 将成功放入success,失败放入error.log\n> --\x3e ps: ifconfig &>/dev/null\n> --\x3e ps: ifconfig > /dev/null 2>&1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 关机\n * shutdown + 参数 + 时间\n\n-c  # 取消\n-h  # 关机\n-r  # 重启\n\n\n1\n2\n3\n * runlevel 运行级别\n * reboot 重启系统\n * logout 退出登录\n * init 0 关机\n\n# 常用快捷键\n * clear / ctrl+l 清屏\n * ctrl + u 从光标所在位置删除到行首\n * ctrl + a 从光标移动到命令行首\n * ctrl + e 从光标移动到命令行尾\n * ctrl + c 强制终止当前命令\n * ctrl + z 把命令放入后台\n * ctrl + r 在历史命令中搜索\n\n# alias 别名\nalias # 查看系统已拥有别名\nalias 别名=\'原命令\'  # 临时生效,关机重启无效\n\n# alias永久生效需要写入系统环境变量 \'./bashrc\'中\nsource ./bashrc  # 立即生效\n\n# 删掉别名：\n\'unalias 别名\'  # 然后去系统关系删掉对应的条件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 服务启动与关闭\n * /etc/init.d/服务名 start|stop|status|restart 启动服务 (推荐)\n * service 服务名 start|stop|status|restart 启动服务 (不推荐)\n * chkconfig --level 2345 服务名 on 启用自启动服务 (不推荐)\n * chkconfig --level 2345 服务名 off 停止自启动服务 (不推荐)\n * ntsysv 启用自启动服务 (不推荐)\n * /etc/rc.d/rc.local | /etc/rc.local 修改自启动服务 (推荐)\n * xinetd 服务的管理\n * yum install xinetd -y 安装 xinetd\n * /etc/xinetd.d/rsync vim 修改配置文件\n * service xinetd restart 启动服务\n\n# 创建文件夹\n * mkdir + 参数 + 文件夹名\n\n-p # 递归创建文件夹\n\nmkdir test\nmkdir -p test/demo/po\n\n\n1\n2\n3\n4\n# 创建文件\ntouch a.txt\nvi a.txt   # (没有相应文件)创建编辑\n# >表示覆盖, >>表示追加\nps: echo hello world! > README.md ;\necho \'Hello!!\' >> a.txt   # 文件追加内容\n\n\n1\n2\n3\n4\n5\n# 查看文件\n * more less 查看文件，如more /etc/passwd、less /etc/passwd\n * ls + 参数 + 文件\n\nls -a  # a隐藏\nls -l  # 详细\nls -d  # 目录属性\nls -h  # 文件大小\nls -i  # 显示inode\n\ncat a.txt\ncat test/a.txt\n\ntail a.txt   # 可以输出文件里的最后一小部分内容\ntail test/a.txt\n\nhead # 查看文件前几行\nhead -5 index.html\n\ntail # 查看文件后几行 –n –f\ntail index.html、tail -f -n 5 index.html\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 编辑文件\nvi a.txt\nvi text/a.txt\n\n\n1\n2\n# 复制\n * cp + 参数 + 源文件 + 目标文件\n\ncp -r # 复制目录\ncp -p # 文件属性\ncp -d # 源文件是链接文件则复制链接属性\ncp -a # 拷贝源文件后的所有属性一致\n\n- cp test1/a.txt test2/app/   # 复制文件\n- cp -R test1 test1-bak       # 复制文件夹test1下所有文件\n\n\n1\n2\n3\n4\n5\n6\n7\n# 重命名与移动\n- mv a.txt home/   # 移动 a.text 到该目录下的home文件夹\n- mv test1 test2   # 重命名\n\n\n1\n2\n# 删除\n * rm -rf 文件\n\nr # 删除\nf # 强制删除\n\n- rm text/a.txt # 删除文件\n- rm -rf text   # 删除非空目录\n- rmdir (Remove Directory) # 删除文件夹，只能删除空文件夹\n\n\n1\n2\n3\n4\n5\n6\n# 软连接和硬链接 ln\n * ln -s 源文件绝对路径 目标文件 创建软连接 (删掉源文件,无法使用)\n * ln 源文件 目标文件 硬链接 相当于把源文件拷贝一份(删掉源文件,也可以正常使用不影响)\n\n# 通配符\n * * 匹配任意一个或多个内容\n * ? 匹配任意一个内容\n * [] 匹配中括号中的一个字符\n\n# 逻辑链接符\n * ; 顺序执行,没有逻辑关系\n * && 逻辑与\n * || 逻辑非\n\n# 工作进程\n * 运行程序 & | ctrl + z (暂停) 将进程放入到后台\n * jobs -l 查看\n * fg %工作号 将后台暂停的工作回复到前台执行\n * bg %工作号 将后台暂停的工作回复到后台执行\n * /etc/rc.local 将需要后台执行的命令加入开机启动(脱离终端执行)(推荐)\n * nohup 命令 & 将进程放入到后台执行(脱离终端执行)\n\n# 系统资源查看\n * vmstat 刷新延迟 刷新次数 ps:vmstat 1 3 监控系统资源\n * 缓存 cache 用来加速数据从硬盘读取的速度\n * 缓冲 buffer 用来加速数据的写入速度\n * dmesg ps: dmesg | grep CUP 开机时内核检测信息\n * free [-b|-k|-m|g] 查看内存使用状态\n * cat /proc/cpuinfo 查看 CPU 信息\n * uptime\n * uname -a\n * lsof\n\n# 帮助命令\n * man\n\nman ls  # 查看ls的帮助信息\n-f -> ps: man -f passwd   # 查看命令拥有的什么级别的帮助\nman -f + 命令 # 相当于 whatis + 命令\n-k -> ps: man -k passwd   # 查看和命令相关的所有帮助\nman -k + 命令 # 相当于 apropos + 命令\n\n\n1\n2\n3\n4\n5\n * 命令 + --help 查看该命令的帮助信息\n\n# 压缩/解压\ntar 参数\n-c：打包\n-v：显示过程\n-f：指定打包后的文件名\n-x：解压\n-t：查看内容\n-r：向压缩归档文件末尾追加文件\n-u：更新原压缩包中的文件\n-z：有gzip属性的\n-j：有bz2属性的\n\ntar -zcvf 压缩包名.tar.gz 源文件  # 压缩\ntar -zxvf 压缩包名.tar.gz         # 解压缩\ntar -jcvf 压缩包名.tar.bz2 源文件 # 压缩\ntar -jxvf 压缩包名.tar.bz2        # 解压缩\n\ntar -jtvf 压缩包名.tar.bz2        # 查看压缩文件\ntar -ztvf 压缩包名.tar.gz         # 查看压缩文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# wc 统计\n * wc 统计用来计算数字,并将统计结果显示输出\n\n-c # 统计字节数\n-l # 统计行数\n-m # 统计字符数。这个标志不能与 -c 标志一起使用\n-w # 统计字数。一个字被定义为由空白、跳格或换行字符分隔的字符串\n-L # 打印最长行的长度\n\nwc -l test.txt > test.log`\nwc < test.log\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 挂载命令\n * 挂载命令mount\n\n\'mount\'     # 查看当前已挂载设备\n\'mount -a\'  # 挂载 "/etc/fstab" 里写入数据的设备\n\'mount [-t文件系统][-o特殊选项] + 设备文件名 + 挂载点\'\n\n\n1\n2\n3\n * 挂载光盘mount\n\nmkdir /mnt/cdrom\nmount -t iso9660 /dev/sr0 /mnt/cdrom/\n\n\n1\n2\n * 卸载光盘umount /mnt/cdrom/\n * fdisk -l 查看设备名\n * 挂载 u 盘：mount -t vfat /dev/sdb1/mnt/usb/\n\n# 运行级别\n * 运行系统级别 init 3\n * 查看运行级别 runlevel\n * 修改默认运行级别 /etc/inittab\n\n0 # 关机\n1 # 单用户模式,主要用户系统修复\n2 # 不完全的命令模式,不含NFS服务\n3 # 完全的命令模式,就是标准的字符界面\n4 # 系统保留\n5 # 图形模式\n6 # 重启\n\n\n1\n2\n3\n4\n5\n6\n7\n# 查询已安装的服务\n * RPM 包安装的服务\n\n# 查看服务自启动服务状态,可以看到所有RPM安装包的服务\nchkconfig --list   # 自启动服务\n\n\n1\n2\n * 源码包安装的服务: 查看服务安装位置,一般是在 /usr/local/\n\n# 服务与端口号\n * etc/services\n * 查看服务 ps aux\n * 查看系统开启端口号 netstat\n\n# 安装 net-tools 服务\n\nnetstat -tlunp   # 启动服务(监听的服务)\n-t # 列出tcp数据\n-u # 列出udp数据\n-l # 列出正在监听的网络服务(不包含已经连接的网络服务)\n-n # 用端口号来显示服务,而不是用服务名\n-p # 列出该服务的进程ID(PID)\n\nnetstat -an  # 已经启动的服务\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# RPM 包服务\n * rpm 常用命令组合\n\n－ivh：# 安装显示安装进度--install--verbose--hash\n－Uvh：# 升级软件包--Update\n－qpl：# 列出RPM软件包内的文件信息[Query Package list]\n－qpi：# 列出RPM软件包的描述信息[Query Package install package(s)]\n－qf：# 查找指定文件属于哪个RPM软件包[Query File]\n－Va：# 校验所有的 RPM软件包，查找丢失的文件[View Lost]\n－e：# 删除包\n\nrpm -q samba # 查询程序是否安装\n\nrpm -ivh  /media/cdrom/RedHat/RPMS/samba-3.0.10-1.4E.i386.rpm # 按路径安装并显示进度\nrpm -ivh --relocate /=/opt/gaim gaim-1.3.0-1.fc4.i386.rpm    # 指定安装目录\n\nrpm -ivh --test gaim-1.3.0-1.fc4.i386.rpm　　　 # 用来检查依赖关系；并不是真正的安装；\nrpm -Uvh --oldpackage gaim-1.3.0-1.fc4.i386.rpm # 新版本降级为旧版本\n\nrpm -qa | grep httpd　# [搜索指定rpm包是否安装]--all搜索*httpd*\nrpm -ql httpd　　　# [搜索rpm包]--list所有文件安装目录\n\nrpm -qpi Linux-1.4-6.i368.rpm　# [查看rpm包]--query--package--install package信息\nrpm -qpf Linux-1.4-6.i368.rpm　# [查看rpm包]--file\nrpm -qpR file.rpm　　　　　　　# [查看包]依赖关系\nrpm2cpio file.rpm |cpio -div    # [抽出文件]\n\nrpm -ivh file.rpm 　# [安装新的rpm]--install--verbose--hash\nrpm -ivh\n\nrpm -Uvh file.rpm    # [升级一个rpm]--upgrade\nrpm -e file.rpm      # [删除一个rpm包]--erase\n\n# .src.rpm 结尾的文件，这些文件是由软件的源代码包装而成的，用户要安装这类RPM软件包\nrpm　--recompile　vim-4.6-4.src.rpm  # 这个命令会把源代码解包并编译、安装它\nrpm　--rebuild　vim-4.6-4.src.rpm　# 在安装完成后，还会把编译生成的可执行文件重新包装成i386.rpm的RPM软件包\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n * 独立服务安装位置(一般)\n\n/etc/init.d/  # 启动脚本位置\n/etc/sysconfig/ # 初始化环境配置文件位置\n/etc/ # 配置文件位置\n/etc/xinetd.conf # xinetd配置文件\n/etc/xinetd.d/ # 基于xinetd服务的启动脚本\n/var/lib/ # 服务产生的数据放在这里\n/var/log/ # 日志文件\n\n\n1\n2\n3\n4\n5\n6\n7\n# 源码包服务\n * /usr/local/ 一般安装目录\n * 源码包安装绝对路径 start|stop|restart|status 开启服务 (推荐)\n * /etc/rc.local | /etc/rc.d/rc.local 开启自启动 (推荐)\n\n/usr/local/apache2/bin/apachectl start\n\n\n1\n * ln -s 源码包安装绝对路径 /etc/init.d/服务名 软连接使该服务支持 service 服务方式启动 (不推荐)\n\nln -s /usr/local/apache2/bin/apachectl /etc/init.d/apache3\nservice apache3 restart  启动apache3服务\n\n\n1\n2\n * 让源码包的 apache3 服务能被 chkconfig 与 ntsysv 命令管理自启动 (不推荐)\n\n# chkconfig:运行级别　启动顺序　关闭顺序\n# 启动顺序、关闭顺序:可以去"/etc/rc3.d/"查看,找没有的数字填写\nvi /etc/init.d/appache3\n  #chkconfig:35 86 76\n  #description:source package apache3\nchkconfig --add apche3\n\n\n1\n2\n3\n4\n5\n6\n# 进程\n * ps aux 查看系统所有进程\n * ps -le 查看系统所有进程\n\n-a # 显示一个终端的所有进程,处理会话引线\n-u # 显示进程的归属用户及内存的使用情况\n-x # 显示没有控制终端的进程\n-l # 长格式显示 显示更加详细的信息\n-e # 显示所有进程,和-A作用一致\n\n\n1\n2\n3\n4\n5\n * pstree [选项] 进程树\n\n# 选项\n-p # 显示进程的PID\n-u # 显示进程的所属用户\n\n\n1\n2\n3\n * top 查看进程健康状态\n\n- P # 以CPU使用率排序\n- M # 以内存的使用率排序\n- N # 以PID排序\n- Q # 退出top\n\n\n1\n2\n3\n4\n * kill(选项) 进程或作业识别号 杀死单一进程\n\n-l：# 列出所有信号名称\n-a：# 当处理当前进程时，不限制命令名和进程号的对应关系\n-p：# 指定kill 命令只打印相关进程的进程号，而不发送任何信号；\n-s <信息名称或编号>：# 指定要送出的信息\n-u：# 指定用户\n\n-HUP    1     # 终端断线\n-INT    2     # 中断（同 Ctrl + C）\n-QUIT   3     # 退出（同 Ctrl + \\）\n-TERM   15    # 终止\n-KILL   9     # 强制终止\n-CONT   18    # 继续（与STOP相反， fg/bg命令）\n-STOP   19    # 暂停（同 Ctrl + Z）\n\nps: kill -HUP 进程号 | kill -1 进程号  # 重启进程\nps: kill -9 进程号  # 强制杀死进程\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * killall [选项I/i] [信号] 进程号\n\n-e：# 对长名称进行精确匹配\n-l：# 忽略大小写的不同\n-p：# 杀死进程所属的进程组\n-i：# 交互式杀死进程，杀死进程前需要进行确认\n-l：# 打印所有已知信号列表\n-q：# 如果没有进程被杀死。则不输出任何信息\n-r：# 使用正规表达式匹配要杀死的进程名称\n-s：# 用指定的进程号代替默认信号“SIGTERM”\n-u：# 杀死指定用户的进程\n\ni ：# 交互式,询问是否要杀死进程\nI ：# 忽略进程名的大小写\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * pkill (选项) 进程名称\n\n-o：# 仅向找到的最小（起始）进程号发送信号\n-n：# 仅向找到的最大（结束）进程号发送信号\n-P：# 指定父进程号发送信号\n-g：# 指定进程组\n-t：# 指定开启进程的终端\n\npkill -9 -t pts/1\n\n\n1\n2\n3\n4\n5\n6\n7\n# 系统定时任务\n * at\n * cron\n * anacron\n * crontab\n\nyum install vixie-cron -y\nyum install crontab -y\ncrontab -l\n"no crontab for root -> crontab -e   -> wq "\nservice crond status\n\n`vim /etc/cron.deny`  # 系统定时循环任务\n`ls /etc/cron*`  # 系统定时任务\n\ncrontab [选项]\n- e # 编辑crontab定时任务\n- l # 查询crontab定时任务\n- r # 删除当前用户所有的crontab定时任务\n\ncrontab -e # 默认绑定当前用户权限的命令；\n# 即普通用户不能执行root用户权限，命令无效\n\n* * * * *\nm h D M W\n\n# 没有精确到秒,最小单位为分钟\nm -> 0-59  # 每小时的第几分钟\nh -> 0-23  # 每天的第几小时\nD -> 1-31  # 每月的第几天\nM -> 1-12  # 每年的第几月\nW -> 0,7-6 # 一周当中的星期几 (0,7 表示星期日)\n\n- * # 表示任何时候都匹配\n- A,B,C,D # 表示A或B或C或D时执行任务\n- 1-8 # 表示1到8连续时间段执行命令任务\n- */A # 表示每A分钟(小时|周|月)执行一次命令\n\n\n"crontab -e"   # 命令行执行\n"0 */2 * * *  执行命令(绝对路径)"  # vim编辑内容\n\nps: */5 * 1-5 * 2,3 date\n# D和W同时存在是 "或" 的关系\nps: 1-20/2 * * * * date\nps: 0 */2 * * * echo \'hello...\'\n\n\n# contab通过编辑配置文件添加定时任务\nvim /etc/crontab  # vim手动编辑配置文件添加定时循环任务\nls /etc/cron.*   # 将需要定时执行的脚本复制到任意一个目录下\n\n"0 */2 * * *  用户名  执行命令(绝对路径)"  # vim编辑内容\nps: 0 */2 * * * user1 echo \'hello...\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n# 基本权限\n * 文件类型( - 普通文件 | d 目录 | l 软连接文件 )\n * u 所有者 | g 所属组 | o 其他人\n * r-4 读 | w-2 写 | x-1 执行\n\nr : 读   # 对文件的查看.例：cat、more等;对目录下文件名的查看.例：ls\n\nw : 写  # 对文件的编辑,新增,修改数据的功能;但不能删除该文件本身.\n        # 修改目录结构的权限.例：删除该目录及目录下所有文件(rm、touch、mv、cp)\n\nx : 执行 # 对文件的可执行权限;可进入目录的权限.例：cd\n\n\n1\n2\n3\n4\n5\n6\n# 新建用户\n * adduser xyz 创建用户\n   \n   \n * passwd xyz 修改密码\n   \n   \n * chown 用户:群组 文件/目录 对文件或目录赋予用户和用户组\n   \n   \n * usermod -c +用户备注+用户名 给用户名添加备注\n   \n   \n * usermod -l newUsr oldUsr 更改用户名\n   \n   \n * gpasswd -a 用户名 群组 将用户加入到用户组\n   \n   \n * useradd 用户名 创建用户\n   \n   \n * chown 用户名 文件名 修改所有者(u)\n   \n   \n * umask 查看 mask 权限\n   \n   \n * /etc/profile 修改使命令永久生效\n   \n   \n * useradd -g test1 yxz1 创建 yxz1 用户加入到 test1 用户组\n   \n   \n * useradd -d /home/ddd xyz 创建 xyz 用户并指定创建的 ddd 为 xyz 用户目录\n   \n   \n * usermod -g newGroup oldGroup 更改用户组\n   \n   \n * userdel 用户名 删除用户名\n   \n   \n * userdel -r 用户名 删除用户的同时用户目录也一并删除\n   \n   \n * touch /etc/nologin 禁用其他账户登录系统(root 除外)\n   \n   \n * passwd -l 用户名 锁定用户名\n   \n   \n * passwd -u 用户名 解决用户名锁定\n   \n   \n * passwd -d 用户名 清除用户名密码\n   \n   \n * gpasswd -a 用户名 用户组 添加用户名的副所属组\n   \n   \n * gpasswd -d 用户名 用户组 删除用户名的副所属组\n   \n   \n\n# 加入相应用户组群拥有权限\nsudo gpasswd -a xyz wheel  # 将xyz用户加入到wheel组\n\n# 查看用户群组\ngroups xyz  # 查看用户所属的群组\n\n# 用户群组\nsudo groupadd test # 创建test用户群组\n/etc/group\n\nsudo usermod -a -G test xyz  # 把xyz这个用户放到test这个群组里\ngroups xyz\nxyz test wheel\n\nsudo usermod -g test xyz   # 把 xyz 用户的主群组修改成 test组\ngroups xyz\ntest wheel\n\n# 移除用户组\nsudo gpasswd -d xyz wheel  # 把xyz用户移除wheel组\n\n# 删除用户：\nuserdel -r xyz  # 用于删除用户帐号及相关档案\nuserdel xyz\ngroupdel xyz\nusermod –G xyz xyz # 强制删除该用户的主目录和目录下的所有文件和子目录\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 用户组\n * chgrp 群组 文件名 修改群组\n * groupadd 群组 创建用户组\n * groups + 用户名 用户名的所属组\n * gpasswd 用户组 设置用户组密码\n * newgrp 副所属组 切换副所属组\n * chown 用户:群组 文件/目录 对文件或目录赋予用户和用户组\n * useradd -g Mgroup -G group1,group2 abc Mgroup 主 -- group1 副\n * su + 用户名 切换用户\n * whoami 显示当期用户\n * id + 用户名 用户名资料\n * chfn + 用户名 设置用户名详细资料\n * finger + 用户名 显示用户名详细资料\n * 更改用户组名 groupmod -n + 新组名 + 组名 ps: groupmod -n test2 test1\n * 组编号 groupmod -g + 编号 + 组名 ps: groupmod -g 666 test2\n * groupadd -g 888 test3 创建组号 888 组名 test3\n * groupdel test1 删除用户组\n * /etc/shadow 存储当前系统中所有用户的密码信息\n * /etc/group 存储当前系统中所有用户组信息\n\n  Group :       X         :  123   :  abc,def,xyz\n# 组名称:   组密码占位符      : 组编号  : 组中用户名列表\n\n\n1\n2\n * /etc/gshadow 存储当前系统中用户组的密码信息\n\n  Group :   *    :          :  abc,def,xyz\n# 组名称: 组密码   : 组管理者   : 组中用户名列表\n\n\n1\n2\n * /etc/passwd 存储当前系统中用户的信息\n\n  user  :  x       :   123  :    456   :    xxxx    :/home/user:/bin/bash\n# 用户名 :密码占位符  :用户编号  :用户组编号  :用户注释信息  :用户组目录:shell类型\n\n\n1\n2\n# chown 修改文件与目录的所有权\n# chown 用户:群组 文件/目录\nchown xyz:czh test\nls -l\n\n# 修改某个目录以及它里面包含的所有的子目录的所有权\nchown -R 用户:群组 目录\n\n\n1\n2\n3\n4\n5\n6\n# 文件权限(rwx)\n# 字母\nr:read（读取）\nw：write（写入）\nx：excute（执行）\n\n# 第一位：\n-(常规文件)、d(目录)、l(符号链接)、c(字符特殊设备)、b(模块特殊设备)、p(FIFO)、s(套接字)\n\n# 用户列表：\n# 拥有者（owner），用户组（group），其它人（others）\n\ntouch a.txt\nls -l\n-rw-rw-r--\n\n# 数字表示的权限：\nr：4  # 读\nw：2  # 写\nx：1  # 执行\n\n\n# 例如：\n7：r + w + x # 表示所有权限\n6：r + w # 表示读取与写入权限\n4：r # 表示读取权限\n\n# 例：drwxrwxr-x\n# 第一位d表示目录\n# 从左到右每三个一组，依次表示所有者权限、组权限、其他用户权限\nd     # dir\nrwx   # 所有者拥有读、写、执行\nrwx   # 组权拥有读、写、执行\nrwx   # 其他拥有读、执行  (-表示没有)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# chmod 修改文件与目录的权限\n * chmod 选项 模式 文件名 修改文件权限\n\n# 选项 ：\n-R  # 递归\n\n# 模式 ：\nu+x | u-x | 755 | a=wrx\n\n\n1\n2\n3\n4\n5\n# chmod 权限 目录/文件\n\n# 数字：\n# 4 是读取，2 是写入，1 是执行\nchmod 755 目录\nchmod 644 文件\n\n# 字母：\nr 是读取，w 是写入，x 是执行\n\nu 表示拥有者，g 表示所属用户组，o 表示其它人，a 表示所有人\n\n# 配合使用 + 与 - 号，去添加或去掉权限\nchmod u+x 文件\nchmod g+w 目录\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * ACL 权限\n\n# sudo 权限命令\n * sudo -l 查看可用的 sudo 命令\n * vim /etc/sudoers 赋予用户权限命令\n\n  root      ALL         =   (ALL)       ALL\n# 用户名  被管理主机的地址 = (可使用的身份)  授权命令(绝对路径)\nuser1       ALL         = (ALL)         /sbin/shutdown -r now\n\nuser2 ALL=/usr/sbin/useradd\nuser2 ALL=/usr/bin/passwd [A-Za-z]*, !/usr/bin/passwd "", !/usr/bin/passwd root\n\n%wheel        ALL       =   (ALL)       ALL\n# %组名  被管理主机的地址 = (可使用的身份)  授权命令(绝对路径)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * sudo /sbin/shutdown -r now 普通用户自行 sudo 赋予的命令\n\n# IP 常用网段\n# 网络类别 |            IP范围            | 主机数  | 私有内网IP范围\n    A     | 1.0.0.0 - 126.255.255.255   | 2^24-2 | 10.0.0.0 - 10.255.255.255\n    B     | 128.0.0.0 - 191.255.255.255 | 2^16-2 | 172.16.0.0 - 172.31.255.255\n    C     | 192.0.0.0 - 223.255.255.255 | 2^8-2  | 192.168.0.0- 192.168.255.255\n\n\n1\n2\n3\n4\n * ip address 查看 ip 地址\n   \n   \n * TCP/UDP\n   \n   \n * netstat -an 查看端口\n   \n   \n * 常见端口号\n   \n    * FTP ： 文件传输 ： 20 21\n    * SSH ： 安全 shell 协议 ： 22\n    * telnet ： 远程登录协议 ： 23\n    * DNS ： 域名系统 ： 53\n    * http ： 超文本传输协议 ： 80\n    * SMTP ： 简单邮件传输协议 ： 25\n    * POP3 ： 邮局协议 3 代 ： 110\n   \n   \n * DNS 域名与服务器 IP 进行转换\n   \n   \n * 默认网关 在内网中进行通信以及使内网 IP 与公网 IP 进行互相转换通信\n   \n   \n * 配置 linux 的 ip\n   \n   \n\n# virtualBox (桥接模式):\n\nvim /etc/sysconfig/network-scripts/ifcfg-eth0\nifcfg-eth0  # 对应的网卡名\n\n# 配置说明\n  DEVICE = "eth0"   # 对应网卡设备名\n  BOOTPROTO = "none"  # 是否自动获取ip (none/static/dhcp)\n  HWADDR = XXXX    # 对应的MAC地址\n  USERCTL = "no"  # 不允许非root用户控制此网卡\n  ONBOOT = "yes"    #  是否随网络服务启动\n  IPADDR = 192.168.1.102  # 本机的IP (勿于pc机冲突)\n  NETMASK = 255.255.255.0  # 子网掩码\n  GATEWAY = 192.168.1.1   # 网关 (与pc机默认网关一致)\n  DNS1 = 114.114.114.114  # DNS\nservice network restart  # 重启网络服务\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 新建.sh 脚本\n * demo.sh\n\n#!/bin/bash;\n#上一句话不可省略!!!\n#This is a Test Program\necho \'Hello\';\n\n\n1\n2\n3\n4\n# bash 变量\n * 变量可以是数字,下划线和字母; 但是不能以数字开头\n * 变量默认都是字符串类型\n\n# bash 执行方法\n# 执行方式1：\nbash demo.sh\n\n# 执行方式2：\nchmod +x demo.sh   # 附加执行权限\n./demo.bash        # 运行脚本\n\n\n1\n2\n3\n4\n5\n6\n# shell\n * $? 上一行命令是否正确\n * $# 输入参数有多少个\n * $* 输出所有输入的参数\n * $n $1 $2... 输入的参数\n\n# 环境变量\n * export 变量=赋值\n * set 显示系统中已经存在的 shell 变量\n * unset 删除变量\n * env\n * PATH\n * locale 语系变量\n * source source 配置文件 | . 配置文件 使配置文件直接生效\n * 登录系统时执行的命令文件\n\n/etc/profile\n/etc/profile.d/*.sh\n~/.bash_profile\n~/.bashrc\n/etc/bashrc\n\n\n1\n2\n3\n4\n5\n * 退出系统时执行的命令文件\n\n~/.bash_logout\n\n\n1\n * /etc/issue 本地显示登录信息\n * /etc/issue.net 远程终端显示登录信息\n\n# 加入 "Banner /etc/issue.net" 行,重启ssh服务\n/etc/ssh/sshd_config\n\n\n1\n2\n * /etc/motd 登录后欢迎信息(支持本地和远程)\n\n# 其他\n * 释放网页缓存，目录项和索引\n\nsync; echo 3 > /proc/sys/vm/drop_caches\n\n\n1\n# 文件搜索\n * locate\n\n`locate + 文件名` # 查找`/var/lib/mlocate`中的数据,默认一天一更新\n\nupdatedb  # 用户更新/var/lib/mlocate数据\nyum install mlocate # 安装\n\n\n1\n2\n3\n4\n * whereis / which\n\nwhereis + 参数 + 查找系统命令\n-b  # 只查找可执行文件位置\n-m  # 只查找帮助文件\nwhereis ls\n\n\n1\n2\n3\n4\n * find\n\n`find + 搜索范围 + 搜索条件 + 搜索内容` # 搜索符合条件的文件\n\n# 搜索条件\n-i   # 不区分大小写\n-user # 用户\n-name # 名称\n-nouser\n-size  # 文件大小\nfind . -size +20k # 当前文件夹大于20k文件\nfind . -size -20K # 当前文件夹小于20k文件\n-atime  # 文件访问事件\nfind . -atime +10 # 10天前修改文件\nfind . -atime -10 # 10天内修改文件\nfind . -atime 10  # 10天当天内修改文件\n-ctime  # 改变文件属性\n-mtime  # 修改文件内容\n-inum   # i节点\n-a  # 逻辑与\n-o  # 逻辑或\n-exec # 对搜索结果进行处理\n\nfind /home -name "test.txt*"\nfind /home -size +20k -a -100k\nfind /home -size +20k -a -100k -exec ls -lh {} \\;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * grep\n\n`grep + 参数 + 字符串 + 文件名` # 搜索文件中的符合内容的字符串\n\n-i # 忽略大小写\n-v # 排除指定字符串\n\ngrep -i \'size\' text.txt  # 查找text.txt中包含size的行\n\n\n1\n2\n3\n4\n5\n6\n# 相关链接\n * Linux 命令大全\n * Linux rpm 命令参数使用详解［介绍和应用］\n * linux kill 命令详解\n * Linux 软件安装管理\n * iptables 命令\n * iptables INPUT 链使用实例说明\n * judasn/Linux-Tutorial\n * ping.pe',normalizedContent:' * https://www.kernel.org 内核发布网址\n * uname -r 内核版本\n * linux 严格区分大小写,扩展名非必须\n\n# 常见命令\n * 禁用网卡: ifdown\n * 启用网卡: ifup\n * netstat\n * nslookup\n * tcpdump -i eth0 -nnx port 21\n * 链接远程 linux 服务器: ssh 用户名@服务器ip\n * 下载文件: scp [-r] 用户名@服务器ip:文件路径 本地路径\n * 上传文件: scp [-r] 本地文件 用户名@服务器ip:上传路径\n * export path=/bin:/usr/bin:/usr/local/bin\n * ps -ef | grep nginx\n * 显示磁盘的占用率: df -ht\n\n-a：# 显示所有文件系统的磁盘使用情况\n-h：# 方便阅读方式显示\n-i：# 显示i节点信息，而不是磁盘块\n-t：# 显示各指定类型的文件系统的磁盘空间使用情况\n-x：# 列出不是某一指定类型文件系统的磁盘空间使用情况\n-t：# 显示文件系统类型\n--no-sync：# 忽略 sync 命令\n--sync：# 在取得磁盘信息前,先执行sync命令\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * du -sh /usr # 显示usr的大小\n\n-a：# 显示目录中个别文件的大小\n-s：# 仅显示总计，只列出最后加总的值\n-h：# 提高信息的可读性\n\n\n1\n2\n3\n * pwd 显示当前路径\n * tab 自动补全，连按两次会将所有匹配内容显示出来\n * history 查看操作历史\n * | 管道符\n * w / who 查看用户登录\n * last 登录信息和登录记录\n * lastlog 查看所有用户最后一次的登录信息\n * whoami\n\n# 标准输入输出\n * > --\x3e 命令 > 文件 这是将命令内容写入文件中\n\n netstat -an > txt.log\n\n\n1\n * < --\x3e 命令 < 文件 这是将文件作为命令输入\n\nmail -s "test" linux@163.com < aa\n# 就是将文件aa作为信件的内容主题为test给收信人发去\n\n\n1\n2\n# 输出重定向\n * 标准输入 (stdin) ：代码为 0 ,使用 < 或 <<\n * 标准输出 (stdout)：代码为 1 ,使用 > 或 >>\n * 标准错误输出(stderr)：代码为 2 ,使用 2> 或 2>>\n\n>  --\x3e ps: ifconfig > test.log    # 将结果保存在test.log\n>  --\x3e ps: ifconfig 2>test.log    # 将结果(包括错误信息)保存在test.log\n>> --\x3e ps: ifconfig >> test.log   # 将结果追加保存在test.log\n>> --\x3e ps: ifconfig 2>>test.log   # 将结果(包括错误信息)追加保存在test.log\n\n> --\x3e ps: ifconfig > test.log 2>&1  # 将结果(包括错误信息)保存在test.log\n>> --\x3e ps: ifconfig >> test.log 2>&1  # 将结果(包括错误信息)追加保存在test.log\n>> --\x3e ps: ifconfig &>>test.log  # 将结果(包括错误信息)追加保存在test.log\n>> --\x3e ps: ifconfig 1>>success.log 2>>error.log  # 将成功放入success,失败放入error.log\n> --\x3e ps: ifconfig &>/dev/null\n> --\x3e ps: ifconfig > /dev/null 2>&1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 关机\n * shutdown + 参数 + 时间\n\n-c  # 取消\n-h  # 关机\n-r  # 重启\n\n\n1\n2\n3\n * runlevel 运行级别\n * reboot 重启系统\n * logout 退出登录\n * init 0 关机\n\n# 常用快捷键\n * clear / ctrl+l 清屏\n * ctrl + u 从光标所在位置删除到行首\n * ctrl + a 从光标移动到命令行首\n * ctrl + e 从光标移动到命令行尾\n * ctrl + c 强制终止当前命令\n * ctrl + z 把命令放入后台\n * ctrl + r 在历史命令中搜索\n\n# alias 别名\nalias # 查看系统已拥有别名\nalias 别名=\'原命令\'  # 临时生效,关机重启无效\n\n# alias永久生效需要写入系统环境变量 \'./bashrc\'中\nsource ./bashrc  # 立即生效\n\n# 删掉别名：\n\'unalias 别名\'  # 然后去系统关系删掉对应的条件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 服务启动与关闭\n * /etc/init.d/服务名 start|stop|status|restart 启动服务 (推荐)\n * service 服务名 start|stop|status|restart 启动服务 (不推荐)\n * chkconfig --level 2345 服务名 on 启用自启动服务 (不推荐)\n * chkconfig --level 2345 服务名 off 停止自启动服务 (不推荐)\n * ntsysv 启用自启动服务 (不推荐)\n * /etc/rc.d/rc.local | /etc/rc.local 修改自启动服务 (推荐)\n * xinetd 服务的管理\n * yum install xinetd -y 安装 xinetd\n * /etc/xinetd.d/rsync vim 修改配置文件\n * service xinetd restart 启动服务\n\n# 创建文件夹\n * mkdir + 参数 + 文件夹名\n\n-p # 递归创建文件夹\n\nmkdir test\nmkdir -p test/demo/po\n\n\n1\n2\n3\n4\n# 创建文件\ntouch a.txt\nvi a.txt   # (没有相应文件)创建编辑\n# >表示覆盖, >>表示追加\nps: echo hello world! > readme.md ;\necho \'hello!!\' >> a.txt   # 文件追加内容\n\n\n1\n2\n3\n4\n5\n# 查看文件\n * more less 查看文件，如more /etc/passwd、less /etc/passwd\n * ls + 参数 + 文件\n\nls -a  # a隐藏\nls -l  # 详细\nls -d  # 目录属性\nls -h  # 文件大小\nls -i  # 显示inode\n\ncat a.txt\ncat test/a.txt\n\ntail a.txt   # 可以输出文件里的最后一小部分内容\ntail test/a.txt\n\nhead # 查看文件前几行\nhead -5 index.html\n\ntail # 查看文件后几行 –n –f\ntail index.html、tail -f -n 5 index.html\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 编辑文件\nvi a.txt\nvi text/a.txt\n\n\n1\n2\n# 复制\n * cp + 参数 + 源文件 + 目标文件\n\ncp -r # 复制目录\ncp -p # 文件属性\ncp -d # 源文件是链接文件则复制链接属性\ncp -a # 拷贝源文件后的所有属性一致\n\n- cp test1/a.txt test2/app/   # 复制文件\n- cp -r test1 test1-bak       # 复制文件夹test1下所有文件\n\n\n1\n2\n3\n4\n5\n6\n7\n# 重命名与移动\n- mv a.txt home/   # 移动 a.text 到该目录下的home文件夹\n- mv test1 test2   # 重命名\n\n\n1\n2\n# 删除\n * rm -rf 文件\n\nr # 删除\nf # 强制删除\n\n- rm text/a.txt # 删除文件\n- rm -rf text   # 删除非空目录\n- rmdir (remove directory) # 删除文件夹，只能删除空文件夹\n\n\n1\n2\n3\n4\n5\n6\n# 软连接和硬链接 ln\n * ln -s 源文件绝对路径 目标文件 创建软连接 (删掉源文件,无法使用)\n * ln 源文件 目标文件 硬链接 相当于把源文件拷贝一份(删掉源文件,也可以正常使用不影响)\n\n# 通配符\n * * 匹配任意一个或多个内容\n * ? 匹配任意一个内容\n * [] 匹配中括号中的一个字符\n\n# 逻辑链接符\n * ; 顺序执行,没有逻辑关系\n * && 逻辑与\n * || 逻辑非\n\n# 工作进程\n * 运行程序 & | ctrl + z (暂停) 将进程放入到后台\n * jobs -l 查看\n * fg %工作号 将后台暂停的工作回复到前台执行\n * bg %工作号 将后台暂停的工作回复到后台执行\n * /etc/rc.local 将需要后台执行的命令加入开机启动(脱离终端执行)(推荐)\n * nohup 命令 & 将进程放入到后台执行(脱离终端执行)\n\n# 系统资源查看\n * vmstat 刷新延迟 刷新次数 ps:vmstat 1 3 监控系统资源\n * 缓存 cache 用来加速数据从硬盘读取的速度\n * 缓冲 buffer 用来加速数据的写入速度\n * dmesg ps: dmesg | grep cup 开机时内核检测信息\n * free [-b|-k|-m|g] 查看内存使用状态\n * cat /proc/cpuinfo 查看 cpu 信息\n * uptime\n * uname -a\n * lsof\n\n# 帮助命令\n * man\n\nman ls  # 查看ls的帮助信息\n-f -> ps: man -f passwd   # 查看命令拥有的什么级别的帮助\nman -f + 命令 # 相当于 whatis + 命令\n-k -> ps: man -k passwd   # 查看和命令相关的所有帮助\nman -k + 命令 # 相当于 apropos + 命令\n\n\n1\n2\n3\n4\n5\n * 命令 + --help 查看该命令的帮助信息\n\n# 压缩/解压\ntar 参数\n-c：打包\n-v：显示过程\n-f：指定打包后的文件名\n-x：解压\n-t：查看内容\n-r：向压缩归档文件末尾追加文件\n-u：更新原压缩包中的文件\n-z：有gzip属性的\n-j：有bz2属性的\n\ntar -zcvf 压缩包名.tar.gz 源文件  # 压缩\ntar -zxvf 压缩包名.tar.gz         # 解压缩\ntar -jcvf 压缩包名.tar.bz2 源文件 # 压缩\ntar -jxvf 压缩包名.tar.bz2        # 解压缩\n\ntar -jtvf 压缩包名.tar.bz2        # 查看压缩文件\ntar -ztvf 压缩包名.tar.gz         # 查看压缩文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# wc 统计\n * wc 统计用来计算数字,并将统计结果显示输出\n\n-c # 统计字节数\n-l # 统计行数\n-m # 统计字符数。这个标志不能与 -c 标志一起使用\n-w # 统计字数。一个字被定义为由空白、跳格或换行字符分隔的字符串\n-l # 打印最长行的长度\n\nwc -l test.txt > test.log`\nwc < test.log\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 挂载命令\n * 挂载命令mount\n\n\'mount\'     # 查看当前已挂载设备\n\'mount -a\'  # 挂载 "/etc/fstab" 里写入数据的设备\n\'mount [-t文件系统][-o特殊选项] + 设备文件名 + 挂载点\'\n\n\n1\n2\n3\n * 挂载光盘mount\n\nmkdir /mnt/cdrom\nmount -t iso9660 /dev/sr0 /mnt/cdrom/\n\n\n1\n2\n * 卸载光盘umount /mnt/cdrom/\n * fdisk -l 查看设备名\n * 挂载 u 盘：mount -t vfat /dev/sdb1/mnt/usb/\n\n# 运行级别\n * 运行系统级别 init 3\n * 查看运行级别 runlevel\n * 修改默认运行级别 /etc/inittab\n\n0 # 关机\n1 # 单用户模式,主要用户系统修复\n2 # 不完全的命令模式,不含nfs服务\n3 # 完全的命令模式,就是标准的字符界面\n4 # 系统保留\n5 # 图形模式\n6 # 重启\n\n\n1\n2\n3\n4\n5\n6\n7\n# 查询已安装的服务\n * rpm 包安装的服务\n\n# 查看服务自启动服务状态,可以看到所有rpm安装包的服务\nchkconfig --list   # 自启动服务\n\n\n1\n2\n * 源码包安装的服务: 查看服务安装位置,一般是在 /usr/local/\n\n# 服务与端口号\n * etc/services\n * 查看服务 ps aux\n * 查看系统开启端口号 netstat\n\n# 安装 net-tools 服务\n\nnetstat -tlunp   # 启动服务(监听的服务)\n-t # 列出tcp数据\n-u # 列出udp数据\n-l # 列出正在监听的网络服务(不包含已经连接的网络服务)\n-n # 用端口号来显示服务,而不是用服务名\n-p # 列出该服务的进程id(pid)\n\nnetstat -an  # 已经启动的服务\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# rpm 包服务\n * rpm 常用命令组合\n\n－ivh：# 安装显示安装进度--install--verbose--hash\n－uvh：# 升级软件包--update\n－qpl：# 列出rpm软件包内的文件信息[query package list]\n－qpi：# 列出rpm软件包的描述信息[query package install package(s)]\n－qf：# 查找指定文件属于哪个rpm软件包[query file]\n－va：# 校验所有的 rpm软件包，查找丢失的文件[view lost]\n－e：# 删除包\n\nrpm -q samba # 查询程序是否安装\n\nrpm -ivh  /media/cdrom/redhat/rpms/samba-3.0.10-1.4e.i386.rpm # 按路径安装并显示进度\nrpm -ivh --relocate /=/opt/gaim gaim-1.3.0-1.fc4.i386.rpm    # 指定安装目录\n\nrpm -ivh --test gaim-1.3.0-1.fc4.i386.rpm　　　 # 用来检查依赖关系；并不是真正的安装；\nrpm -uvh --oldpackage gaim-1.3.0-1.fc4.i386.rpm # 新版本降级为旧版本\n\nrpm -qa | grep httpd　# [搜索指定rpm包是否安装]--all搜索*httpd*\nrpm -ql httpd　　　# [搜索rpm包]--list所有文件安装目录\n\nrpm -qpi linux-1.4-6.i368.rpm　# [查看rpm包]--query--package--install package信息\nrpm -qpf linux-1.4-6.i368.rpm　# [查看rpm包]--file\nrpm -qpr file.rpm　　　　　　　# [查看包]依赖关系\nrpm2cpio file.rpm |cpio -div    # [抽出文件]\n\nrpm -ivh file.rpm 　# [安装新的rpm]--install--verbose--hash\nrpm -ivh\n\nrpm -uvh file.rpm    # [升级一个rpm]--upgrade\nrpm -e file.rpm      # [删除一个rpm包]--erase\n\n# .src.rpm 结尾的文件，这些文件是由软件的源代码包装而成的，用户要安装这类rpm软件包\nrpm　--recompile　vim-4.6-4.src.rpm  # 这个命令会把源代码解包并编译、安装它\nrpm　--rebuild　vim-4.6-4.src.rpm　# 在安装完成后，还会把编译生成的可执行文件重新包装成i386.rpm的rpm软件包\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n * 独立服务安装位置(一般)\n\n/etc/init.d/  # 启动脚本位置\n/etc/sysconfig/ # 初始化环境配置文件位置\n/etc/ # 配置文件位置\n/etc/xinetd.conf # xinetd配置文件\n/etc/xinetd.d/ # 基于xinetd服务的启动脚本\n/var/lib/ # 服务产生的数据放在这里\n/var/log/ # 日志文件\n\n\n1\n2\n3\n4\n5\n6\n7\n# 源码包服务\n * /usr/local/ 一般安装目录\n * 源码包安装绝对路径 start|stop|restart|status 开启服务 (推荐)\n * /etc/rc.local | /etc/rc.d/rc.local 开启自启动 (推荐)\n\n/usr/local/apache2/bin/apachectl start\n\n\n1\n * ln -s 源码包安装绝对路径 /etc/init.d/服务名 软连接使该服务支持 service 服务方式启动 (不推荐)\n\nln -s /usr/local/apache2/bin/apachectl /etc/init.d/apache3\nservice apache3 restart  启动apache3服务\n\n\n1\n2\n * 让源码包的 apache3 服务能被 chkconfig 与 ntsysv 命令管理自启动 (不推荐)\n\n# chkconfig:运行级别　启动顺序　关闭顺序\n# 启动顺序、关闭顺序:可以去"/etc/rc3.d/"查看,找没有的数字填写\nvi /etc/init.d/appache3\n  #chkconfig:35 86 76\n  #description:source package apache3\nchkconfig --add apche3\n\n\n1\n2\n3\n4\n5\n6\n# 进程\n * ps aux 查看系统所有进程\n * ps -le 查看系统所有进程\n\n-a # 显示一个终端的所有进程,处理会话引线\n-u # 显示进程的归属用户及内存的使用情况\n-x # 显示没有控制终端的进程\n-l # 长格式显示 显示更加详细的信息\n-e # 显示所有进程,和-a作用一致\n\n\n1\n2\n3\n4\n5\n * pstree [选项] 进程树\n\n# 选项\n-p # 显示进程的pid\n-u # 显示进程的所属用户\n\n\n1\n2\n3\n * top 查看进程健康状态\n\n- p # 以cpu使用率排序\n- m # 以内存的使用率排序\n- n # 以pid排序\n- q # 退出top\n\n\n1\n2\n3\n4\n * kill(选项) 进程或作业识别号 杀死单一进程\n\n-l：# 列出所有信号名称\n-a：# 当处理当前进程时，不限制命令名和进程号的对应关系\n-p：# 指定kill 命令只打印相关进程的进程号，而不发送任何信号；\n-s <信息名称或编号>：# 指定要送出的信息\n-u：# 指定用户\n\n-hup    1     # 终端断线\n-int    2     # 中断（同 ctrl + c）\n-quit   3     # 退出（同 ctrl + \\）\n-term   15    # 终止\n-kill   9     # 强制终止\n-cont   18    # 继续（与stop相反， fg/bg命令）\n-stop   19    # 暂停（同 ctrl + z）\n\nps: kill -hup 进程号 | kill -1 进程号  # 重启进程\nps: kill -9 进程号  # 强制杀死进程\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * killall [选项i/i] [信号] 进程号\n\n-e：# 对长名称进行精确匹配\n-l：# 忽略大小写的不同\n-p：# 杀死进程所属的进程组\n-i：# 交互式杀死进程，杀死进程前需要进行确认\n-l：# 打印所有已知信号列表\n-q：# 如果没有进程被杀死。则不输出任何信息\n-r：# 使用正规表达式匹配要杀死的进程名称\n-s：# 用指定的进程号代替默认信号“sigterm”\n-u：# 杀死指定用户的进程\n\ni ：# 交互式,询问是否要杀死进程\ni ：# 忽略进程名的大小写\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * pkill (选项) 进程名称\n\n-o：# 仅向找到的最小（起始）进程号发送信号\n-n：# 仅向找到的最大（结束）进程号发送信号\n-p：# 指定父进程号发送信号\n-g：# 指定进程组\n-t：# 指定开启进程的终端\n\npkill -9 -t pts/1\n\n\n1\n2\n3\n4\n5\n6\n7\n# 系统定时任务\n * at\n * cron\n * anacron\n * crontab\n\nyum install vixie-cron -y\nyum install crontab -y\ncrontab -l\n"no crontab for root -> crontab -e   -> wq "\nservice crond status\n\n`vim /etc/cron.deny`  # 系统定时循环任务\n`ls /etc/cron*`  # 系统定时任务\n\ncrontab [选项]\n- e # 编辑crontab定时任务\n- l # 查询crontab定时任务\n- r # 删除当前用户所有的crontab定时任务\n\ncrontab -e # 默认绑定当前用户权限的命令；\n# 即普通用户不能执行root用户权限，命令无效\n\n* * * * *\nm h d m w\n\n# 没有精确到秒,最小单位为分钟\nm -> 0-59  # 每小时的第几分钟\nh -> 0-23  # 每天的第几小时\nd -> 1-31  # 每月的第几天\nm -> 1-12  # 每年的第几月\nw -> 0,7-6 # 一周当中的星期几 (0,7 表示星期日)\n\n- * # 表示任何时候都匹配\n- a,b,c,d # 表示a或b或c或d时执行任务\n- 1-8 # 表示1到8连续时间段执行命令任务\n- */a # 表示每a分钟(小时|周|月)执行一次命令\n\n\n"crontab -e"   # 命令行执行\n"0 */2 * * *  执行命令(绝对路径)"  # vim编辑内容\n\nps: */5 * 1-5 * 2,3 date\n# d和w同时存在是 "或" 的关系\nps: 1-20/2 * * * * date\nps: 0 */2 * * * echo \'hello...\'\n\n\n# contab通过编辑配置文件添加定时任务\nvim /etc/crontab  # vim手动编辑配置文件添加定时循环任务\nls /etc/cron.*   # 将需要定时执行的脚本复制到任意一个目录下\n\n"0 */2 * * *  用户名  执行命令(绝对路径)"  # vim编辑内容\nps: 0 */2 * * * user1 echo \'hello...\'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n# 基本权限\n * 文件类型( - 普通文件 | d 目录 | l 软连接文件 )\n * u 所有者 | g 所属组 | o 其他人\n * r-4 读 | w-2 写 | x-1 执行\n\nr : 读   # 对文件的查看.例：cat、more等;对目录下文件名的查看.例：ls\n\nw : 写  # 对文件的编辑,新增,修改数据的功能;但不能删除该文件本身.\n        # 修改目录结构的权限.例：删除该目录及目录下所有文件(rm、touch、mv、cp)\n\nx : 执行 # 对文件的可执行权限;可进入目录的权限.例：cd\n\n\n1\n2\n3\n4\n5\n6\n# 新建用户\n * adduser xyz 创建用户\n   \n   \n * passwd xyz 修改密码\n   \n   \n * chown 用户:群组 文件/目录 对文件或目录赋予用户和用户组\n   \n   \n * usermod -c +用户备注+用户名 给用户名添加备注\n   \n   \n * usermod -l newusr oldusr 更改用户名\n   \n   \n * gpasswd -a 用户名 群组 将用户加入到用户组\n   \n   \n * useradd 用户名 创建用户\n   \n   \n * chown 用户名 文件名 修改所有者(u)\n   \n   \n * umask 查看 mask 权限\n   \n   \n * /etc/profile 修改使命令永久生效\n   \n   \n * useradd -g test1 yxz1 创建 yxz1 用户加入到 test1 用户组\n   \n   \n * useradd -d /home/ddd xyz 创建 xyz 用户并指定创建的 ddd 为 xyz 用户目录\n   \n   \n * usermod -g newgroup oldgroup 更改用户组\n   \n   \n * userdel 用户名 删除用户名\n   \n   \n * userdel -r 用户名 删除用户的同时用户目录也一并删除\n   \n   \n * touch /etc/nologin 禁用其他账户登录系统(root 除外)\n   \n   \n * passwd -l 用户名 锁定用户名\n   \n   \n * passwd -u 用户名 解决用户名锁定\n   \n   \n * passwd -d 用户名 清除用户名密码\n   \n   \n * gpasswd -a 用户名 用户组 添加用户名的副所属组\n   \n   \n * gpasswd -d 用户名 用户组 删除用户名的副所属组\n   \n   \n\n# 加入相应用户组群拥有权限\nsudo gpasswd -a xyz wheel  # 将xyz用户加入到wheel组\n\n# 查看用户群组\ngroups xyz  # 查看用户所属的群组\n\n# 用户群组\nsudo groupadd test # 创建test用户群组\n/etc/group\n\nsudo usermod -a -g test xyz  # 把xyz这个用户放到test这个群组里\ngroups xyz\nxyz test wheel\n\nsudo usermod -g test xyz   # 把 xyz 用户的主群组修改成 test组\ngroups xyz\ntest wheel\n\n# 移除用户组\nsudo gpasswd -d xyz wheel  # 把xyz用户移除wheel组\n\n# 删除用户：\nuserdel -r xyz  # 用于删除用户帐号及相关档案\nuserdel xyz\ngroupdel xyz\nusermod –g xyz xyz # 强制删除该用户的主目录和目录下的所有文件和子目录\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# 用户组\n * chgrp 群组 文件名 修改群组\n * groupadd 群组 创建用户组\n * groups + 用户名 用户名的所属组\n * gpasswd 用户组 设置用户组密码\n * newgrp 副所属组 切换副所属组\n * chown 用户:群组 文件/目录 对文件或目录赋予用户和用户组\n * useradd -g mgroup -g group1,group2 abc mgroup 主 -- group1 副\n * su + 用户名 切换用户\n * whoami 显示当期用户\n * id + 用户名 用户名资料\n * chfn + 用户名 设置用户名详细资料\n * finger + 用户名 显示用户名详细资料\n * 更改用户组名 groupmod -n + 新组名 + 组名 ps: groupmod -n test2 test1\n * 组编号 groupmod -g + 编号 + 组名 ps: groupmod -g 666 test2\n * groupadd -g 888 test3 创建组号 888 组名 test3\n * groupdel test1 删除用户组\n * /etc/shadow 存储当前系统中所有用户的密码信息\n * /etc/group 存储当前系统中所有用户组信息\n\n  group :       x         :  123   :  abc,def,xyz\n# 组名称:   组密码占位符      : 组编号  : 组中用户名列表\n\n\n1\n2\n * /etc/gshadow 存储当前系统中用户组的密码信息\n\n  group :   *    :          :  abc,def,xyz\n# 组名称: 组密码   : 组管理者   : 组中用户名列表\n\n\n1\n2\n * /etc/passwd 存储当前系统中用户的信息\n\n  user  :  x       :   123  :    456   :    xxxx    :/home/user:/bin/bash\n# 用户名 :密码占位符  :用户编号  :用户组编号  :用户注释信息  :用户组目录:shell类型\n\n\n1\n2\n# chown 修改文件与目录的所有权\n# chown 用户:群组 文件/目录\nchown xyz:czh test\nls -l\n\n# 修改某个目录以及它里面包含的所有的子目录的所有权\nchown -r 用户:群组 目录\n\n\n1\n2\n3\n4\n5\n6\n# 文件权限(rwx)\n# 字母\nr:read（读取）\nw：write（写入）\nx：excute（执行）\n\n# 第一位：\n-(常规文件)、d(目录)、l(符号链接)、c(字符特殊设备)、b(模块特殊设备)、p(fifo)、s(套接字)\n\n# 用户列表：\n# 拥有者（owner），用户组（group），其它人（others）\n\ntouch a.txt\nls -l\n-rw-rw-r--\n\n# 数字表示的权限：\nr：4  # 读\nw：2  # 写\nx：1  # 执行\n\n\n# 例如：\n7：r + w + x # 表示所有权限\n6：r + w # 表示读取与写入权限\n4：r # 表示读取权限\n\n# 例：drwxrwxr-x\n# 第一位d表示目录\n# 从左到右每三个一组，依次表示所有者权限、组权限、其他用户权限\nd     # dir\nrwx   # 所有者拥有读、写、执行\nrwx   # 组权拥有读、写、执行\nrwx   # 其他拥有读、执行  (-表示没有)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# chmod 修改文件与目录的权限\n * chmod 选项 模式 文件名 修改文件权限\n\n# 选项 ：\n-r  # 递归\n\n# 模式 ：\nu+x | u-x | 755 | a=wrx\n\n\n1\n2\n3\n4\n5\n# chmod 权限 目录/文件\n\n# 数字：\n# 4 是读取，2 是写入，1 是执行\nchmod 755 目录\nchmod 644 文件\n\n# 字母：\nr 是读取，w 是写入，x 是执行\n\nu 表示拥有者，g 表示所属用户组，o 表示其它人，a 表示所有人\n\n# 配合使用 + 与 - 号，去添加或去掉权限\nchmod u+x 文件\nchmod g+w 目录\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * acl 权限\n\n# sudo 权限命令\n * sudo -l 查看可用的 sudo 命令\n * vim /etc/sudoers 赋予用户权限命令\n\n  root      all         =   (all)       all\n# 用户名  被管理主机的地址 = (可使用的身份)  授权命令(绝对路径)\nuser1       all         = (all)         /sbin/shutdown -r now\n\nuser2 all=/usr/sbin/useradd\nuser2 all=/usr/bin/passwd [a-za-z]*, !/usr/bin/passwd "", !/usr/bin/passwd root\n\n%wheel        all       =   (all)       all\n# %组名  被管理主机的地址 = (可使用的身份)  授权命令(绝对路径)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * sudo /sbin/shutdown -r now 普通用户自行 sudo 赋予的命令\n\n# ip 常用网段\n# 网络类别 |            ip范围            | 主机数  | 私有内网ip范围\n    a     | 1.0.0.0 - 126.255.255.255   | 2^24-2 | 10.0.0.0 - 10.255.255.255\n    b     | 128.0.0.0 - 191.255.255.255 | 2^16-2 | 172.16.0.0 - 172.31.255.255\n    c     | 192.0.0.0 - 223.255.255.255 | 2^8-2  | 192.168.0.0- 192.168.255.255\n\n\n1\n2\n3\n4\n * ip address 查看 ip 地址\n   \n   \n * tcp/udp\n   \n   \n * netstat -an 查看端口\n   \n   \n * 常见端口号\n   \n    * ftp ： 文件传输 ： 20 21\n    * ssh ： 安全 shell 协议 ： 22\n    * telnet ： 远程登录协议 ： 23\n    * dns ： 域名系统 ： 53\n    * http ： 超文本传输协议 ： 80\n    * smtp ： 简单邮件传输协议 ： 25\n    * pop3 ： 邮局协议 3 代 ： 110\n   \n   \n * dns 域名与服务器 ip 进行转换\n   \n   \n * 默认网关 在内网中进行通信以及使内网 ip 与公网 ip 进行互相转换通信\n   \n   \n * 配置 linux 的 ip\n   \n   \n\n# virtualbox (桥接模式):\n\nvim /etc/sysconfig/network-scripts/ifcfg-eth0\nifcfg-eth0  # 对应的网卡名\n\n# 配置说明\n  device = "eth0"   # 对应网卡设备名\n  bootproto = "none"  # 是否自动获取ip (none/static/dhcp)\n  hwaddr = xxxx    # 对应的mac地址\n  userctl = "no"  # 不允许非root用户控制此网卡\n  onboot = "yes"    #  是否随网络服务启动\n  ipaddr = 192.168.1.102  # 本机的ip (勿于pc机冲突)\n  netmask = 255.255.255.0  # 子网掩码\n  gateway = 192.168.1.1   # 网关 (与pc机默认网关一致)\n  dns1 = 114.114.114.114  # dns\nservice network restart  # 重启网络服务\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 新建.sh 脚本\n * demo.sh\n\n#!/bin/bash;\n#上一句话不可省略!!!\n#this is a test program\necho \'hello\';\n\n\n1\n2\n3\n4\n# bash 变量\n * 变量可以是数字,下划线和字母; 但是不能以数字开头\n * 变量默认都是字符串类型\n\n# bash 执行方法\n# 执行方式1：\nbash demo.sh\n\n# 执行方式2：\nchmod +x demo.sh   # 附加执行权限\n./demo.bash        # 运行脚本\n\n\n1\n2\n3\n4\n5\n6\n# shell\n * $? 上一行命令是否正确\n * $# 输入参数有多少个\n * $* 输出所有输入的参数\n * $n $1 $2... 输入的参数\n\n# 环境变量\n * export 变量=赋值\n * set 显示系统中已经存在的 shell 变量\n * unset 删除变量\n * env\n * path\n * locale 语系变量\n * source source 配置文件 | . 配置文件 使配置文件直接生效\n * 登录系统时执行的命令文件\n\n/etc/profile\n/etc/profile.d/*.sh\n~/.bash_profile\n~/.bashrc\n/etc/bashrc\n\n\n1\n2\n3\n4\n5\n * 退出系统时执行的命令文件\n\n~/.bash_logout\n\n\n1\n * /etc/issue 本地显示登录信息\n * /etc/issue.net 远程终端显示登录信息\n\n# 加入 "banner /etc/issue.net" 行,重启ssh服务\n/etc/ssh/sshd_config\n\n\n1\n2\n * /etc/motd 登录后欢迎信息(支持本地和远程)\n\n# 其他\n * 释放网页缓存，目录项和索引\n\nsync; echo 3 > /proc/sys/vm/drop_caches\n\n\n1\n# 文件搜索\n * locate\n\n`locate + 文件名` # 查找`/var/lib/mlocate`中的数据,默认一天一更新\n\nupdatedb  # 用户更新/var/lib/mlocate数据\nyum install mlocate # 安装\n\n\n1\n2\n3\n4\n * whereis / which\n\nwhereis + 参数 + 查找系统命令\n-b  # 只查找可执行文件位置\n-m  # 只查找帮助文件\nwhereis ls\n\n\n1\n2\n3\n4\n * find\n\n`find + 搜索范围 + 搜索条件 + 搜索内容` # 搜索符合条件的文件\n\n# 搜索条件\n-i   # 不区分大小写\n-user # 用户\n-name # 名称\n-nouser\n-size  # 文件大小\nfind . -size +20k # 当前文件夹大于20k文件\nfind . -size -20k # 当前文件夹小于20k文件\n-atime  # 文件访问事件\nfind . -atime +10 # 10天前修改文件\nfind . -atime -10 # 10天内修改文件\nfind . -atime 10  # 10天当天内修改文件\n-ctime  # 改变文件属性\n-mtime  # 修改文件内容\n-inum   # i节点\n-a  # 逻辑与\n-o  # 逻辑或\n-exec # 对搜索结果进行处理\n\nfind /home -name "test.txt*"\nfind /home -size +20k -a -100k\nfind /home -size +20k -a -100k -exec ls -lh {} \\;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * grep\n\n`grep + 参数 + 字符串 + 文件名` # 搜索文件中的符合内容的字符串\n\n-i # 忽略大小写\n-v # 排除指定字符串\n\ngrep -i \'size\' text.txt  # 查找text.txt中包含size的行\n\n\n1\n2\n3\n4\n5\n6\n# 相关链接\n * linux 命令大全\n * linux rpm 命令参数使用详解［介绍和应用］\n * linux kill 命令详解\n * linux 软件安装管理\n * iptables 命令\n * iptables input 链使用实例说明\n * judasn/linux-tutorial\n * ping.pe',charsets:{cjk:!0}},{title:"manjaro命令参数",frontmatter:{title:"manjaro命令参数",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["manjaro"],categories:["server"],readingShow:"top"},regularPath:"/linux/manjaro.html",relativePath:"linux/manjaro.md",key:"v-54bc546a",path:"/linux/manjaro.html",headers:[{level:2,title:"manjaro 命令",slug:"manjaro-命令",normalizedTitle:"manjaro 命令",charIndex:41},{level:2,title:"Manjaro 配置",slug:"manjaro-配置",normalizedTitle:"manjaro 配置",charIndex:309},{level:2,title:"常用软件安装",slug:"常用软件安装",normalizedTitle:"常用软件安装",charIndex:1370},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:1486}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"manjaro 命令 Manjaro 配置 常用软件安装 相关链接",content:' * manjaro 官网\n * 中科大镜像\n * 清华大学开源软件镜像站\n\n# manjaro 命令\npacman -S   # 安装\npacman -R   # 删除\npacman -Rs  # 移除已安装不需要软件包\npacman -Rsc # 删除一个包,所有依赖\npacman -Syu # 升级包\npacman -Ss  # 查询包数据库\npacman -Qs  # 搜索以安装的包\npacman -Si  # 显示包大量信息\npacman -Qi  # 本地安装包\npacman -Sc  # 清理包缓存\npacman -Syyu  # 更新系统\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# Manjaro 配置\n * 配置中国的 mirrors sudo pacman-mirrors -i -c China -m rank\n * 安装 geditsudo pacman -S gedit\n * 在 /etc/pacman.conf中添加archlinuxcn源 sudo gedit /etc/pacman.conf\n\n[archlinuxcn]\nSigLevel = Optional TrustedOnly\nServer = https://mirrors.ustc.edu.cn/archlinuxcn/$arch\n[arch4edu]\nSigLevel = Never\nServer = http://mirrors.tuna.tsinghua.edu.cn/arch4edu/$arch\n\n\n1\n2\n3\n4\n5\n6\n * 更新源列表 sudo pacman -Syyu\n * 安装 yaourt,使用 AUR 源里的软件 sudo pacman -S yaourt pacaur\n * 修改配置文件后，执行命令sudo pacman -Syy && sudo pacman -S archlinuxcn-keyring\n * 将本地数据包与远程数据包同步 sudo pacman -Syy\n * 安装 vim sudo pacman -S vim\n * 安装 gitsudo pacman -S git\n * 安装 ZSH sudo pacman -S zsh\n * 配置 oh-my-zsh sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"\n * 更换默认的 shell chsh -s /bin/zsh\n * 安装搜狗输入法\n\nsudo pacman -S fcitx-sogoupinyin\nsudo pacman -S fcitx-im         # 全部安装\nsudo pacman -S fcitx-configtool # 图形化配置工具\n\n\n1\n2\n3\n * 设置中文输入法环境变量，编辑~/.xprofile文件，增加下面几行(如果文件不存在，则新建)\n\nexport GTK_IM_MODULE=fcitx\nexport QT_IM_MODULE=fcitx\nexport XMODIFIERS="@im=fcitx"\n\n\n1\n2\n3\n# 常用软件安装\n * 谷歌浏览器 (sudo pacman -S chromium)\n * 网易云音乐 (sudo pacman -S netease-cloud-music)\n * wine (pacman -S wine)\n\n# 相关链接\n * Manjaro 安装以及美化教程',normalizedContent:' * manjaro 官网\n * 中科大镜像\n * 清华大学开源软件镜像站\n\n# manjaro 命令\npacman -s   # 安装\npacman -r   # 删除\npacman -rs  # 移除已安装不需要软件包\npacman -rsc # 删除一个包,所有依赖\npacman -syu # 升级包\npacman -ss  # 查询包数据库\npacman -qs  # 搜索以安装的包\npacman -si  # 显示包大量信息\npacman -qi  # 本地安装包\npacman -sc  # 清理包缓存\npacman -syyu  # 更新系统\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# manjaro 配置\n * 配置中国的 mirrors sudo pacman-mirrors -i -c china -m rank\n * 安装 geditsudo pacman -s gedit\n * 在 /etc/pacman.conf中添加archlinuxcn源 sudo gedit /etc/pacman.conf\n\n[archlinuxcn]\nsiglevel = optional trustedonly\nserver = https://mirrors.ustc.edu.cn/archlinuxcn/$arch\n[arch4edu]\nsiglevel = never\nserver = http://mirrors.tuna.tsinghua.edu.cn/arch4edu/$arch\n\n\n1\n2\n3\n4\n5\n6\n * 更新源列表 sudo pacman -syyu\n * 安装 yaourt,使用 aur 源里的软件 sudo pacman -s yaourt pacaur\n * 修改配置文件后，执行命令sudo pacman -syy && sudo pacman -s archlinuxcn-keyring\n * 将本地数据包与远程数据包同步 sudo pacman -syy\n * 安装 vim sudo pacman -s vim\n * 安装 gitsudo pacman -s git\n * 安装 zsh sudo pacman -s zsh\n * 配置 oh-my-zsh sh -c "$(curl -fssl https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"\n * 更换默认的 shell chsh -s /bin/zsh\n * 安装搜狗输入法\n\nsudo pacman -s fcitx-sogoupinyin\nsudo pacman -s fcitx-im         # 全部安装\nsudo pacman -s fcitx-configtool # 图形化配置工具\n\n\n1\n2\n3\n * 设置中文输入法环境变量，编辑~/.xprofile文件，增加下面几行(如果文件不存在，则新建)\n\nexport gtk_im_module=fcitx\nexport qt_im_module=fcitx\nexport xmodifiers="@im=fcitx"\n\n\n1\n2\n3\n# 常用软件安装\n * 谷歌浏览器 (sudo pacman -s chromium)\n * 网易云音乐 (sudo pacman -s netease-cloud-music)\n * wine (pacman -s wine)\n\n# 相关链接\n * manjaro 安装以及美化教程',charsets:{cjk:!0}},{title:"ubuntu常见命名",frontmatter:{title:"ubuntu常见命名",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["ubuntu"],categories:["server"],readingShow:"top"},regularPath:"/linux/ubuntu.html",relativePath:"linux/ubuntu.md",key:"v-696b2493",path:"/linux/ubuntu.html",headers:[{level:2,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:2},{level:2,title:"连接工具",slug:"连接工具",normalizedTitle:"连接工具",charIndex:490},{level:2,title:"删除基本不用的自带软件",slug:"删除基本不用的自带软件",normalizedTitle:"删除基本不用的自带软件",charIndex:566},{level:2,title:"安装 chrome",slug:"安装-chrome",normalizedTitle:"安装 chrome",charIndex:872},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:1257}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"常用命令 连接工具 删除基本不用的自带软件 安装 chrome 相关链接",content:'# 常用命令\n * sudo apt-get -f install\n * sudo apt-get vim*\n * sudo apt-get install net-tools\n * sudo apt-get update\n * sudo apt-get upgrade\n * sudo apt-get install unity-tweak-tool\n * sudo dpkg --install atom-amd64.deb\n * sudo apt autoremove //删除为了满足其他软件包的依赖而安装的，但现在不再需要的软件包\n * apt-get clean // 删除包缓存中的所有包\n * apt-get autoclean //将已经删除了的软件包的 deb 安装文件从硬盘中删除掉\n * apt-get remove 软件包名称 //删除已安装的软件包(保留配置文件)\n * apt-get --purge remove 软件包名称 //删除已安装包(不保留配置文件)\n * sudo passwd //ubuntu 默认安装后修改 root 密码\n\n# 连接工具\n * sudo apt-get install openssh-server\n * xshell -- putty -- winscp\n\n# 删除基本不用的自带软件\n * sudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku landscape-client-ui-install onboard deja-dup libreoffice-common unity-webapps-common gnomine printer-driver*\n\n# 安装 chrome\n- https://askubuntu.com/questions/510056/how-to-install-google-chrome\n- wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -\n- sudo sh -c \'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list\n- sudo apt-get update\n- sudo apt-get install google-chrome-stable\n\n\n1\n2\n3\n4\n5\n# 相关链接\n * apt-get 指令的 autoclean,clean,autoremove 的区别\n * ubuntu12.04destdrop 删除不必要的软件',normalizedContent:'# 常用命令\n * sudo apt-get -f install\n * sudo apt-get vim*\n * sudo apt-get install net-tools\n * sudo apt-get update\n * sudo apt-get upgrade\n * sudo apt-get install unity-tweak-tool\n * sudo dpkg --install atom-amd64.deb\n * sudo apt autoremove //删除为了满足其他软件包的依赖而安装的，但现在不再需要的软件包\n * apt-get clean // 删除包缓存中的所有包\n * apt-get autoclean //将已经删除了的软件包的 deb 安装文件从硬盘中删除掉\n * apt-get remove 软件包名称 //删除已安装的软件包(保留配置文件)\n * apt-get --purge remove 软件包名称 //删除已安装包(不保留配置文件)\n * sudo passwd //ubuntu 默认安装后修改 root 密码\n\n# 连接工具\n * sudo apt-get install openssh-server\n * xshell -- putty -- winscp\n\n# 删除基本不用的自带软件\n * sudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku landscape-client-ui-install onboard deja-dup libreoffice-common unity-webapps-common gnomine printer-driver*\n\n# 安装 chrome\n- https://askubuntu.com/questions/510056/how-to-install-google-chrome\n- wget -q -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -\n- sudo sh -c \'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list\n- sudo apt-get update\n- sudo apt-get install google-chrome-stable\n\n\n1\n2\n3\n4\n5\n# 相关链接\n * apt-get 指令的 autoclean,clean,autoremove 的区别\n * ubuntu12.04destdrop 删除不必要的软件',charsets:{cjk:!0}},{title:"vim的简单使用",frontmatter:{title:"vim的简单使用",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["vim"],categories:["server"],readingShow:"top"},regularPath:"/linux/vim.html",relativePath:"linux/vim.md",key:"v-51221e6a",path:"/linux/vim.html",headers:[{level:2,title:"vim 模式",slug:"vim-模式",normalizedTitle:"vim 模式",charIndex:2},{level:2,title:"命令模式",slug:"命令模式",normalizedTitle:"命令模式",charIndex:42},{level:2,title:"底行模式",slug:"底行模式",normalizedTitle:"底行模式",charIndex:52},{level:2,title:"命令",slug:"命令",normalizedTitle:"命令",charIndex:42},{level:2,title:"vim 安装与配置",slug:"vim-安装与配置",normalizedTitle:"vim 安装与配置",charIndex:878},{level:2,title:"vim plugin",slug:"vim-plugin",normalizedTitle:"vim plugin",charIndex:1199},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:1264}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"vim 模式 命令模式 底行模式 命令 vim 安装与配置 vim plugin 相关链接",content:"# vim 模式\n * 使用 vi 编辑器:vi 编辑器提供了 3 种模式: 分别是命令模式、插入模式、底行模式\n\n# 命令模式\nvi 文件路径\nvim +  /home/xyz/test.txt  # 打开文件后定位到最后一行\nvim +5 /home/xyz/test.txt  # 打开文件后定位到第5行\n\n\n1\n2\n3\n# 底行模式\n:w      # 保存，:w fileName另存为\n:q      # 退出\n:wq     # 保存并退出\n:e!     # 撤销更改，返回到上一次保存的状态\n:q!     # 不保存强制退出\n:set nu # 设置行号\n/aaa    # 在该文件中查找aaa\n:noh    # 去掉高亮\n:3      # 定位到第3行\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 命令\ni # 进入编辑模式，当前光标处插入\nZZ（大写）# 保存并退出\nu # 辙销操作，可多次使用\ndd # 删除当前行\nyy # 复制当前行\np  # 粘贴内容\nn # 下一个\nN # 上一个\nI # 在当前 行首 插入\nA # 在当前 行尾 插入\ni # 在当前字符的 左边 插入\na # 在当前字符的 右边 插入\no # 在当前行 下面 插入一个新行\nO # 在当前行 上面 插入一个新行\nj # 下\nk # 上\nh # 左\nl # 右\nv # 按 v 之后按方向键可以选中你要选中的文字\ngg # 跳到第 1 行\nG # 跳到第最后行\n16G 或 :16 # 跳到第 16 行\n$ # 到本行 行尾\n0 # 到本行 行头\nw # 到下一个单词的 开头\ne # 到下一个单词的 结尾\nCtrl + u # 向文件 首翻 半屏\nCtrl + d # 向文件 尾翻 半屏\nCtrl + f # 向文件 尾翻 一屏\nCtrl + b # 向文件 首翻 一屏\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# vim 安装与配置\ncd ~\ntouch .vimrc\nvim .vimrc\n\nset nu         # 这是设置显示行号\nset showmode   # 设置在命令行界面最下面显示当前模式等。\nset ruler     # 在右下角显示光标所在的行数等信息\n# 设置每次单击Enter键后，光标移动到下一行时与上一行的起始字符对齐\nset autoindent\n# 即设置语法检测，当编辑C或者Shell脚本时，关键字会用特殊颜色显示\nsyntax on\nhi MatchParen ctermbg=blue ctermfg=white   # 匹配的括号颜色修改\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# vim plugin\n * vundle 插件管理工具\n * vim-plug 插件管理工具\n * vim-scripts\n\n# 相关链接\n * vim\n * Vim YouCompleteMe\n * 利用 vundle 工具来管理 vim 插件\n * spaceVim",normalizedContent:"# vim 模式\n * 使用 vi 编辑器:vi 编辑器提供了 3 种模式: 分别是命令模式、插入模式、底行模式\n\n# 命令模式\nvi 文件路径\nvim +  /home/xyz/test.txt  # 打开文件后定位到最后一行\nvim +5 /home/xyz/test.txt  # 打开文件后定位到第5行\n\n\n1\n2\n3\n# 底行模式\n:w      # 保存，:w filename另存为\n:q      # 退出\n:wq     # 保存并退出\n:e!     # 撤销更改，返回到上一次保存的状态\n:q!     # 不保存强制退出\n:set nu # 设置行号\n/aaa    # 在该文件中查找aaa\n:noh    # 去掉高亮\n:3      # 定位到第3行\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 命令\ni # 进入编辑模式，当前光标处插入\nzz（大写）# 保存并退出\nu # 辙销操作，可多次使用\ndd # 删除当前行\nyy # 复制当前行\np  # 粘贴内容\nn # 下一个\nn # 上一个\ni # 在当前 行首 插入\na # 在当前 行尾 插入\ni # 在当前字符的 左边 插入\na # 在当前字符的 右边 插入\no # 在当前行 下面 插入一个新行\no # 在当前行 上面 插入一个新行\nj # 下\nk # 上\nh # 左\nl # 右\nv # 按 v 之后按方向键可以选中你要选中的文字\ngg # 跳到第 1 行\ng # 跳到第最后行\n16g 或 :16 # 跳到第 16 行\n$ # 到本行 行尾\n0 # 到本行 行头\nw # 到下一个单词的 开头\ne # 到下一个单词的 结尾\nctrl + u # 向文件 首翻 半屏\nctrl + d # 向文件 尾翻 半屏\nctrl + f # 向文件 尾翻 一屏\nctrl + b # 向文件 首翻 一屏\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# vim 安装与配置\ncd ~\ntouch .vimrc\nvim .vimrc\n\nset nu         # 这是设置显示行号\nset showmode   # 设置在命令行界面最下面显示当前模式等。\nset ruler     # 在右下角显示光标所在的行数等信息\n# 设置每次单击enter键后，光标移动到下一行时与上一行的起始字符对齐\nset autoindent\n# 即设置语法检测，当编辑c或者shell脚本时，关键字会用特殊颜色显示\nsyntax on\nhi matchparen ctermbg=blue ctermfg=white   # 匹配的括号颜色修改\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# vim plugin\n * vundle 插件管理工具\n * vim-plug 插件管理工具\n * vim-scripts\n\n# 相关链接\n * vim\n * vim youcompleteme\n * 利用 vundle 工具来管理 vim 插件\n * spacevim",charsets:{cjk:!0}},{title:"react",frontmatter:{title:"react",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["react"],readingShow:"top"},regularPath:"/reactJs/",relativePath:"reactJs/README.md",key:"v-663c3184",path:"/reactJs/",headers:[{level:2,title:"cli",slug:"cli",normalizedTitle:"cli",charIndex:555},{level:2,title:"router",slug:"router",normalizedTitle:"router",charIndex:603},{level:2,title:"libs",slug:"libs",normalizedTitle:"libs",charIndex:629},{level:2,title:"hooks",slug:"hooks",normalizedTitle:"hooks",charIndex:763},{level:2,title:"custom cra",slug:"custom-cra",normalizedTitle:"custom cra",charIndex:988},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:1099},{level:2,title:"gatsby",slug:"gatsby",normalizedTitle:"gatsby",charIndex:1721}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"cli router libs hooks custom cra 参考文档 gatsby",content:"\n\n * facebook/react\n * react.js\n * 30-seconds-of-react\n\n * https://esprima.org/demo/parse.html#\n   \n   \n * https://astexplorer.net/\n   \n   \n * https://babeljs.io/repl\n   \n   \n * overreacted\n   \n   \n * useEffect 完整指南\n   \n   \n * 为什么 React 元素有一个$$typeof 属性？\n   \n   \n * 将 React 作为 UI 运行时\n   \n   \n\nReact15 架构可以分为两层：\n\n * Reconciler（协调器）—— 负责找出变化的组件\n   \n   \n * Renderer（渲染器）—— 负责将变化的组件渲染到页面上\n   \n   \n\nReact16 架构可以分为三层：\n\n * Scheduler（调度器）—— 调度任务的优先级，高优任务优先进入Reconciler\n   \n   \n * Reconciler（协调器）—— 负责找出变化的组件\n   \n   \n * Renderer（渲染器）—— 负责将变化的组件渲染到页面上\n   \n   \n\n\n\n# cli\n * create-react-app\n * react-app-rewired\n\n# router\n * react-router\n\n# libs\n * mobx\n * awesome-mobx\n * DvaJS\n * umiJS\n * nextjs\n * ramda\n * lodash\n * RxJS\n * react-loadable-visibility\n * react-spinkit/\n\n# hooks\n * awesome-react-hooks\n   \n   \n * hooks.umijs.org\n   \n   \n * React Hooks 最佳实践\n   \n   \n * React Hooks 完全指南，读 React 作者博文感悟（2W 字精华）\n   \n   \n * 10 分钟教你手写 8 个常用的自定义 hooks\n   \n   \n * 整理了 N 个实用案例帮你快速迁移到 React Hooks\n   \n   \n\n# custom cra\ncreate-react-app\ncustomize-cra\nreact-app-rewired\n\nconfig-overrides.js\n\npre-commit\n\n\n1\n2\n3\n4\n5\n6\n7\n# 参考文档\n * JedWatson/react-select Mobile support\n * react-transition-group\n * styled-components\n * hoist-non-react-statics\n * classnames\n * snabbdom\n * 异步组件\n\n\n\n\n * js.coach\n * apollo graphql\n * react-redux connect\n * async component / react-loadable\n * Reselect\n * React 源码解析\n\n\n\n\n * 8 年前端开发的知识点沉淀\n * webpack4 的 30 个步骤打造优化到极致的 react 开发环境，如约而至\n * 从零开始搭建一个 React + Mobx + React Router 脚手架\n * 十个案例学会 React Hooks\n * 你要的 React 面试知识点，都在这了\n * 从头开始，彻底理解服务端渲染原理(8 千字汇总长文)\n * 走进 React Fiber 架构\n\n\n\n\n * React SSR 详解【近 1W 字】+ 2 个项目实战\n * react ssr\n * react16 架构\n * React 技术揭秘\n * React 开发必须知道的 34 个技巧【近 1W 字】\n * 详解 requestIdleCallback\n\n\n\n\n# gatsby\n * gatsbyjs\n * 边写边学系列（四）—— Gatsby 搭建炫酷屌炸天的个人博客",normalizedContent:"\n\n * facebook/react\n * react.js\n * 30-seconds-of-react\n\n * https://esprima.org/demo/parse.html#\n   \n   \n * https://astexplorer.net/\n   \n   \n * https://babeljs.io/repl\n   \n   \n * overreacted\n   \n   \n * useeffect 完整指南\n   \n   \n * 为什么 react 元素有一个$$typeof 属性？\n   \n   \n * 将 react 作为 ui 运行时\n   \n   \n\nreact15 架构可以分为两层：\n\n * reconciler（协调器）—— 负责找出变化的组件\n   \n   \n * renderer（渲染器）—— 负责将变化的组件渲染到页面上\n   \n   \n\nreact16 架构可以分为三层：\n\n * scheduler（调度器）—— 调度任务的优先级，高优任务优先进入reconciler\n   \n   \n * reconciler（协调器）—— 负责找出变化的组件\n   \n   \n * renderer（渲染器）—— 负责将变化的组件渲染到页面上\n   \n   \n\n\n\n# cli\n * create-react-app\n * react-app-rewired\n\n# router\n * react-router\n\n# libs\n * mobx\n * awesome-mobx\n * dvajs\n * umijs\n * nextjs\n * ramda\n * lodash\n * rxjs\n * react-loadable-visibility\n * react-spinkit/\n\n# hooks\n * awesome-react-hooks\n   \n   \n * hooks.umijs.org\n   \n   \n * react hooks 最佳实践\n   \n   \n * react hooks 完全指南，读 react 作者博文感悟（2w 字精华）\n   \n   \n * 10 分钟教你手写 8 个常用的自定义 hooks\n   \n   \n * 整理了 n 个实用案例帮你快速迁移到 react hooks\n   \n   \n\n# custom cra\ncreate-react-app\ncustomize-cra\nreact-app-rewired\n\nconfig-overrides.js\n\npre-commit\n\n\n1\n2\n3\n4\n5\n6\n7\n# 参考文档\n * jedwatson/react-select mobile support\n * react-transition-group\n * styled-components\n * hoist-non-react-statics\n * classnames\n * snabbdom\n * 异步组件\n\n\n\n\n * js.coach\n * apollo graphql\n * react-redux connect\n * async component / react-loadable\n * reselect\n * react 源码解析\n\n\n\n\n * 8 年前端开发的知识点沉淀\n * webpack4 的 30 个步骤打造优化到极致的 react 开发环境，如约而至\n * 从零开始搭建一个 react + mobx + react router 脚手架\n * 十个案例学会 react hooks\n * 你要的 react 面试知识点，都在这了\n * 从头开始，彻底理解服务端渲染原理(8 千字汇总长文)\n * 走进 react fiber 架构\n\n\n\n\n * react ssr 详解【近 1w 字】+ 2 个项目实战\n * react ssr\n * react16 架构\n * react 技术揭秘\n * react 开发必须知道的 34 个技巧【近 1w 字】\n * 详解 requestidlecallback\n\n\n\n\n# gatsby\n * gatsbyjs\n * 边写边学系列（四）—— gatsby 搭建炫酷屌炸天的个人博客",charsets:{cjk:!0}},{title:"使用canvas生成poster",frontmatter:{title:"使用canvas生成poster",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["react"],readingShow:"top"},regularPath:"/reactJs/rc-canvas-poster.html",relativePath:"reactJs/rc-canvas-poster.md",key:"v-39a24c06",path:"/reactJs/rc-canvas-poster.html",headers:[{level:2,title:"poster",slug:"poster",normalizedTitle:"poster",charIndex:2},{level:2,title:"compress",slug:"compress",normalizedTitle:"compress",charIndex:8907},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:11365}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"poster compress 参考文档",content:'# poster\n * poster/util.js\n\n// 二维码\nimport QRCode from "qrcode";\n\nvar opts = {\n  errorCorrectionLevel: "H",\n  type: "image/jpeg",\n  quality: 0.3,\n  margin: 1\n  // color: {\n  //   dark: "#010599FF",\n  //   light: "#FFBF60FF"\n  // }\n};\n\nexport function GetQrCodeImages(link) {\n  return new Promise((resolve, reject) => {\n    QRCode.toDataURL(link, opts, function(err, url) {\n      if (err) throw err;\n      resolve(url);\n    });\n  });\n}\n\nconst PIXEL_RATIO = (function() {\n  var ctx = document.createElement("canvas").getContext("2d"),\n    dpr =\n      window.devicePixelRatio ||\n      window.webkitDevicePixelRatio ||\n      window.mozDevicePixelRatio ||\n      1,\n    bsr =\n      ctx.webkitBackingStorePixelRatio ||\n      ctx.mozBackingStorePixelRatio ||\n      ctx.msBackingStorePixelRatio ||\n      ctx.oBackingStorePixelRatio ||\n      ctx.backingStorePixelRatio ||\n      1;\n\n  return dpr / bsr;\n})();\n\nexport const createHiDPICanvas = function(w, h, ratio) {\n  if (!ratio) {\n    ratio = PIXEL_RATIO;\n  }\n  var can = document.createElement("canvas");\n  can.width = Math.round(w * ratio);\n  can.height = Math.round(h * ratio);\n  can.style.width = w + "px";\n  can.style.height = h + "px";\n  can.getContext("2d").setTransform(ratio, 0, 0, ratio, 0, 0);\n  return can;\n};\n\nexport function loadImg(imgUrl) {\n  return new Promise((resolve, reject) => {\n    const imgEl = new Image();\n    imgEl.crossOrigin = "Anonymous";\n    imgEl.onload = function() {\n      resolve(this);\n    };\n    imgEl.src = imgUrl;\n  });\n}\n\nexport function fetchImage(url) {\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest();\n    xhr.onload = function() {\n      let url = URL.createObjectURL(this.response);\n      let img = new Image();\n      img.onload = function() {\n        resolve(this);\n        console.log(this);\n        URL.revokeObjectURL(url);\n      };\n      img.src = url;\n    };\n    xhr.open("GET", url, true);\n    xhr.responseType = "blob";\n    xhr.send();\n  });\n}\n\nexport async function drawerImg(ctx, imgUrl, x, y, w, h) {\n  ctx.save();\n  let img = await loadImg(imgUrl);\n  ctx.drawImage(img, x, y, w, h);\n  ctx.restore();\n}\n\nexport function drawerTxt(ctx, option) {\n  var {\n    text,\n    width,\n    lineNum,\n    lineHeight,\n    left,\n    top,\n    fontSize,\n    fontFamily,\n    fontWeight,\n    opacity,\n    textAlign,\n    baseLine,\n    color\n  } = option;\n\n  ctx.save();\n  ctx.font = "normal "\n    .concat(fontWeight || "normal", " ")\n    .concat(fontSize || 14, "px ")\n    .concat(fontFamily || "Arial");\n\n  ctx.globalAlpha = opacity || 1;\n  ctx.textAlign = textAlign || "center";\n  ctx.textBaseline = baseLine || "middle";\n  ctx.fillStyle = color || "white";\n\n  var textWidth = ctx.measureText(text).width;\n  var textArr = [];\n\n  if (textWidth > width) {\n    var fillText = "";\n    var line = 1;\n    for (var i = 0; i <= text.length - 1; i += 1) {\n      // 将文字转为数组\n      fillText += text[i];\n      if (ctx.measureText(fillText).width >= width) {\n        if (line === lineNum) {\n          if (i !== text.length - 1) {\n            fillText = "".concat(\n              fillText.substring(0, fillText.length - 1),\n              "..."\n            );\n          }\n        }\n\n        if (line <= lineNum) {\n          textArr.push(fillText);\n        }\n        fillText = "";\n        line += 1;\n      } else if (line <= lineNum) {\n        if (i === text.length - 1) {\n          textArr.push(fillText);\n        }\n      }\n    }\n    textWidth = width;\n  } else {\n    textArr.push(text);\n  }\n\n  textArr.forEach(function(item, index) {\n    ctx.fillText(item, left, top + (lineHeight || fontSize) * index);\n  });\n\n  ctx.restore();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n * poster/create.js\n\nimport {\n  GetQrCodeImages,\n  createHiDPICanvas,\n  drawerImg,\n  drawerTxt\n} from "./util";\nimport BgPic from "./skin-1.png";\n\nexport async function DrawQRPoster(url, width, height) {\n  const imgWidth = 210;\n  const posY = 420;\n\n  const canvas = createHiDPICanvas(width, height);\n  const ctx = canvas.getContext("2d");\n\n  ctx.mozImageSmoothingEnabled = false;\n  ctx.webkitImageSmoothingEnabled = false;\n  ctx.msImageSmoothingEnabled = false;\n  ctx.imageSmoothingEnabled = false; //获取设备像素比\n\n  // 750 x 1094\n  const gap = 20;\n  await drawerImg(ctx, BgPic, gap, gap, width - gap * 2, height - gap * 2);\n\n  const qrCodeImg = await GetQrCodeImages(url);\n\n  await drawerImg(\n    ctx,\n    qrCodeImg,\n    (width - imgWidth) / 2,\n    154,\n    imgWidth,\n    imgWidth\n  );\n\n  drawerTxt(ctx, {\n    text: "xxx-xxx",\n    fontSize: 16,\n    color: "#f7f7f7",\n    textAlign: "center",\n    top: posY + 20,\n    left: width / 2,\n    width: 200,\n    lineNum: 2,\n    lineHeight: 20,\n    baseLine: "middle"\n  });\n\n  const imageBase64 = canvas.toDataURL();\n  return imageBase64;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n * /poster/download.js\n\nimport QRCode from "qrcode";\n\nfunction downloadBlob(url) {\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest();\n    xhr.open("GET", url);\n    xhr.responseType = "blob";\n\n    xhr.onload = () => {\n      resolve(xhr.response);\n    };\n    xhr.onerror = () => {\n      reject(new Error("Download failed."));\n    };\n    xhr.send();\n  });\n}\nexport function downloadFile(url, fileName = "") {\n  return downloadBlob(url, fileName)\n    .then(resp => {\n      if (resp.blob) {\n        return resp.blob();\n      }\n      return new Blob([resp]);\n    })\n    .then(blob => {\n      if ("msSaveOrOpenBlob" in navigator) {\n        window.navigator.msSaveOrOpenBlob(blob, fileName);\n      } else {\n        const obj = URL.createObjectURL(blob);\n        downloadURL(obj, fileName);\n        URL.revokeObjectURL(obj);\n      }\n    })\n    .catch(err => {\n      throw new Error(err.message);\n    });\n}\n\nexport function downloadURL(url, name = "") {\n  const link = document.createElement("a");\n  link.download = name;\n  link.href = url;\n  if ("download" in document.createElement("a")) {\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  } else {\n    // 对不支持download进行兼容\n    click(link, (link.target = "_blank"));\n  }\n}\n// clone https://github.com/eligrey/FileSaver.js/blob/master/src/FileSaver.js\nfunction click(node) {\n  try {\n    node.dispatchEvent(new MouseEvent("click"));\n  } catch (e) {\n    let evt = document.createEvent("MouseEvents");\n    evt.initMouseEvent(\n      "click",\n      true,\n      true,\n      window,\n      0,\n      0,\n      0,\n      80,\n      20,\n      false,\n      false,\n      false,\n      false,\n      0,\n      null\n    );\n    node.dispatchEvent(evt);\n  }\n}\n\nlet opts = {\n  errorCorrectionLevel: "H",\n  type: "image/jpeg",\n  quality: 0.3,\n  margin: 5\n  // color: {\n  //   dark: "#010599FF",\n  //   light: "#FFBF60FF"\n  // }\n};\n\nexport function GetQrCodeImages(link) {\n  return new Promise((resolve, reject) => {\n    QRCode.toDataURL(link, opts, (err, url) => {\n      if (err) throw err;\n      resolve(url);\n    });\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n * poster/index.js\n\nimport React, { useEffect, useState } from "react";\nimport { DrawQRPoster } from "./create";\nimport { downloadFile } from "./download";\n\nexport default function Poster() {\n  const [poster, setPoster] = useState();\n  const width = 375;\n  const height = 546;\n  useEffect(() => {\n    async function getPoster() {\n      const link = "https://www.baidu.com";\n      let imgUrl = await DrawQRPoster(link, width, height);\n      setPoster(imgUrl);\n    }\n    getPoster();\n  }, []);\n\n  const handleDownload = () => {\n    let image = new Image();\n    image.src = poster;\n    image.style.width = width + "px";\n    image.style.height = height + "px";\n    let fileName = `${+new Date()}.png`;\n    downloadFile(image.src, fileName);\n\n    // let fileName = `${+new Date()}.png`;\n    // downloadFile(poster.src, fileName);\n  };\n\n  return (\n    <div className="poster">\n      <img style={{ width, height }} src={poster} alt="" />\n      <p></p>\n      <button onClick={handleDownload}>download</button>\n    </div>\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n# compress\n// compress.js\nconst MAX_WIDTH = 800; // 图片最大宽度\n\nfunction compress(base64, quality, mimeType) {\n  let canvas = document.createElement("canvas");\n  let img = document.createElement("img");\n  img.crossOrigin = "anonymous";\n  return new Promise((resolve, reject) => {\n    img.src = base64;\n    img.onload = () => {\n      let targetWidth, targetHeight;\n      if (img.width > MAX_WIDTH) {\n        targetWidth = MAX_WIDTH;\n        targetHeight = (img.height * MAX_WIDTH) / img.width;\n      } else {\n        targetWidth = img.width;\n        targetHeight = img.height;\n      }\n      canvas.width = targetWidth;\n      canvas.height = targetHeight;\n      let ctx = canvas.getContext("2d");\n      ctx.clearRect(0, 0, targetWidth, targetHeight); // 清除画布\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      let imageData = canvas.toDataURL(mimeType, quality / 100);\n      resolve(imageData);\n    };\n  });\n}\n\nfunction dataUrlToBlob(base64, mimeType) {\n  //\n  let bytes = window.atob(base64.split(",")[1]);\n  //\n  let ab = new ArrayBuffer(bytes.length);\n  let ia = new Uint8Array(ab);\n\n  for (let i = 0; i < bytes.length; i++) {\n    ia[i] = bytes.charCodeAt(i);\n  }\n  return new Blob([ab], { type: mimeType });\n}\n\nfunction uploadFile(url, blob) {\n  let formData = new FormData();\n  let request = new XMLHttpRequest();\n  formData.append("image", blob);\n  request.open("POST", url, true);\n  request.send(formData);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n * use\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>本地图片压缩</title>\n  </head>\n  <body>\n    <input type="file" accept="image/*" onchange="loadFile(event)" />\n    <script src="./compress.js"><\/script>\n    <script>\n      const loadFile = function(event) {\n        const reader = new FileReader();\n        reader.onload = async function() {\n          let compressedDataURL = await compress(\n            reader.result,\n            90,\n            "image/jpeg"\n          );\n          let compressedImageBlob = dataUrlToBlob(compressedDataURL);\n          uploadFile("https://httpbin.org/post", compressedImageBlob);\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      };\n    <\/script>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 参考文档\n * how-do-i-fix-blurry-text-in-my-html5-canvas\n * node-qrcode\n * react-canvas-poster',normalizedContent:'# poster\n * poster/util.js\n\n// 二维码\nimport qrcode from "qrcode";\n\nvar opts = {\n  errorcorrectionlevel: "h",\n  type: "image/jpeg",\n  quality: 0.3,\n  margin: 1\n  // color: {\n  //   dark: "#010599ff",\n  //   light: "#ffbf60ff"\n  // }\n};\n\nexport function getqrcodeimages(link) {\n  return new promise((resolve, reject) => {\n    qrcode.todataurl(link, opts, function(err, url) {\n      if (err) throw err;\n      resolve(url);\n    });\n  });\n}\n\nconst pixel_ratio = (function() {\n  var ctx = document.createelement("canvas").getcontext("2d"),\n    dpr =\n      window.devicepixelratio ||\n      window.webkitdevicepixelratio ||\n      window.mozdevicepixelratio ||\n      1,\n    bsr =\n      ctx.webkitbackingstorepixelratio ||\n      ctx.mozbackingstorepixelratio ||\n      ctx.msbackingstorepixelratio ||\n      ctx.obackingstorepixelratio ||\n      ctx.backingstorepixelratio ||\n      1;\n\n  return dpr / bsr;\n})();\n\nexport const createhidpicanvas = function(w, h, ratio) {\n  if (!ratio) {\n    ratio = pixel_ratio;\n  }\n  var can = document.createelement("canvas");\n  can.width = math.round(w * ratio);\n  can.height = math.round(h * ratio);\n  can.style.width = w + "px";\n  can.style.height = h + "px";\n  can.getcontext("2d").settransform(ratio, 0, 0, ratio, 0, 0);\n  return can;\n};\n\nexport function loadimg(imgurl) {\n  return new promise((resolve, reject) => {\n    const imgel = new image();\n    imgel.crossorigin = "anonymous";\n    imgel.onload = function() {\n      resolve(this);\n    };\n    imgel.src = imgurl;\n  });\n}\n\nexport function fetchimage(url) {\n  return new promise((resolve, reject) => {\n    let xhr = new xmlhttprequest();\n    xhr.onload = function() {\n      let url = url.createobjecturl(this.response);\n      let img = new image();\n      img.onload = function() {\n        resolve(this);\n        console.log(this);\n        url.revokeobjecturl(url);\n      };\n      img.src = url;\n    };\n    xhr.open("get", url, true);\n    xhr.responsetype = "blob";\n    xhr.send();\n  });\n}\n\nexport async function drawerimg(ctx, imgurl, x, y, w, h) {\n  ctx.save();\n  let img = await loadimg(imgurl);\n  ctx.drawimage(img, x, y, w, h);\n  ctx.restore();\n}\n\nexport function drawertxt(ctx, option) {\n  var {\n    text,\n    width,\n    linenum,\n    lineheight,\n    left,\n    top,\n    fontsize,\n    fontfamily,\n    fontweight,\n    opacity,\n    textalign,\n    baseline,\n    color\n  } = option;\n\n  ctx.save();\n  ctx.font = "normal "\n    .concat(fontweight || "normal", " ")\n    .concat(fontsize || 14, "px ")\n    .concat(fontfamily || "arial");\n\n  ctx.globalalpha = opacity || 1;\n  ctx.textalign = textalign || "center";\n  ctx.textbaseline = baseline || "middle";\n  ctx.fillstyle = color || "white";\n\n  var textwidth = ctx.measuretext(text).width;\n  var textarr = [];\n\n  if (textwidth > width) {\n    var filltext = "";\n    var line = 1;\n    for (var i = 0; i <= text.length - 1; i += 1) {\n      // 将文字转为数组\n      filltext += text[i];\n      if (ctx.measuretext(filltext).width >= width) {\n        if (line === linenum) {\n          if (i !== text.length - 1) {\n            filltext = "".concat(\n              filltext.substring(0, filltext.length - 1),\n              "..."\n            );\n          }\n        }\n\n        if (line <= linenum) {\n          textarr.push(filltext);\n        }\n        filltext = "";\n        line += 1;\n      } else if (line <= linenum) {\n        if (i === text.length - 1) {\n          textarr.push(filltext);\n        }\n      }\n    }\n    textwidth = width;\n  } else {\n    textarr.push(text);\n  }\n\n  textarr.foreach(function(item, index) {\n    ctx.filltext(item, left, top + (lineheight || fontsize) * index);\n  });\n\n  ctx.restore();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n * poster/create.js\n\nimport {\n  getqrcodeimages,\n  createhidpicanvas,\n  drawerimg,\n  drawertxt\n} from "./util";\nimport bgpic from "./skin-1.png";\n\nexport async function drawqrposter(url, width, height) {\n  const imgwidth = 210;\n  const posy = 420;\n\n  const canvas = createhidpicanvas(width, height);\n  const ctx = canvas.getcontext("2d");\n\n  ctx.mozimagesmoothingenabled = false;\n  ctx.webkitimagesmoothingenabled = false;\n  ctx.msimagesmoothingenabled = false;\n  ctx.imagesmoothingenabled = false; //获取设备像素比\n\n  // 750 x 1094\n  const gap = 20;\n  await drawerimg(ctx, bgpic, gap, gap, width - gap * 2, height - gap * 2);\n\n  const qrcodeimg = await getqrcodeimages(url);\n\n  await drawerimg(\n    ctx,\n    qrcodeimg,\n    (width - imgwidth) / 2,\n    154,\n    imgwidth,\n    imgwidth\n  );\n\n  drawertxt(ctx, {\n    text: "xxx-xxx",\n    fontsize: 16,\n    color: "#f7f7f7",\n    textalign: "center",\n    top: posy + 20,\n    left: width / 2,\n    width: 200,\n    linenum: 2,\n    lineheight: 20,\n    baseline: "middle"\n  });\n\n  const imagebase64 = canvas.todataurl();\n  return imagebase64;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n * /poster/download.js\n\nimport qrcode from "qrcode";\n\nfunction downloadblob(url) {\n  return new promise((resolve, reject) => {\n    let xhr = new xmlhttprequest();\n    xhr.open("get", url);\n    xhr.responsetype = "blob";\n\n    xhr.onload = () => {\n      resolve(xhr.response);\n    };\n    xhr.onerror = () => {\n      reject(new error("download failed."));\n    };\n    xhr.send();\n  });\n}\nexport function downloadfile(url, filename = "") {\n  return downloadblob(url, filename)\n    .then(resp => {\n      if (resp.blob) {\n        return resp.blob();\n      }\n      return new blob([resp]);\n    })\n    .then(blob => {\n      if ("mssaveoropenblob" in navigator) {\n        window.navigator.mssaveoropenblob(blob, filename);\n      } else {\n        const obj = url.createobjecturl(blob);\n        downloadurl(obj, filename);\n        url.revokeobjecturl(obj);\n      }\n    })\n    .catch(err => {\n      throw new error(err.message);\n    });\n}\n\nexport function downloadurl(url, name = "") {\n  const link = document.createelement("a");\n  link.download = name;\n  link.href = url;\n  if ("download" in document.createelement("a")) {\n    document.body.appendchild(link);\n    link.click();\n    document.body.removechild(link);\n  } else {\n    // 对不支持download进行兼容\n    click(link, (link.target = "_blank"));\n  }\n}\n// clone https://github.com/eligrey/filesaver.js/blob/master/src/filesaver.js\nfunction click(node) {\n  try {\n    node.dispatchevent(new mouseevent("click"));\n  } catch (e) {\n    let evt = document.createevent("mouseevents");\n    evt.initmouseevent(\n      "click",\n      true,\n      true,\n      window,\n      0,\n      0,\n      0,\n      80,\n      20,\n      false,\n      false,\n      false,\n      false,\n      0,\n      null\n    );\n    node.dispatchevent(evt);\n  }\n}\n\nlet opts = {\n  errorcorrectionlevel: "h",\n  type: "image/jpeg",\n  quality: 0.3,\n  margin: 5\n  // color: {\n  //   dark: "#010599ff",\n  //   light: "#ffbf60ff"\n  // }\n};\n\nexport function getqrcodeimages(link) {\n  return new promise((resolve, reject) => {\n    qrcode.todataurl(link, opts, (err, url) => {\n      if (err) throw err;\n      resolve(url);\n    });\n  });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n * poster/index.js\n\nimport react, { useeffect, usestate } from "react";\nimport { drawqrposter } from "./create";\nimport { downloadfile } from "./download";\n\nexport default function poster() {\n  const [poster, setposter] = usestate();\n  const width = 375;\n  const height = 546;\n  useeffect(() => {\n    async function getposter() {\n      const link = "https://www.baidu.com";\n      let imgurl = await drawqrposter(link, width, height);\n      setposter(imgurl);\n    }\n    getposter();\n  }, []);\n\n  const handledownload = () => {\n    let image = new image();\n    image.src = poster;\n    image.style.width = width + "px";\n    image.style.height = height + "px";\n    let filename = `${+new date()}.png`;\n    downloadfile(image.src, filename);\n\n    // let filename = `${+new date()}.png`;\n    // downloadfile(poster.src, filename);\n  };\n\n  return (\n    <div classname="poster">\n      <img style={{ width, height }} src={poster} alt="" />\n      <p></p>\n      <button onclick={handledownload}>download</button>\n    </div>\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n# compress\n// compress.js\nconst max_width = 800; // 图片最大宽度\n\nfunction compress(base64, quality, mimetype) {\n  let canvas = document.createelement("canvas");\n  let img = document.createelement("img");\n  img.crossorigin = "anonymous";\n  return new promise((resolve, reject) => {\n    img.src = base64;\n    img.onload = () => {\n      let targetwidth, targetheight;\n      if (img.width > max_width) {\n        targetwidth = max_width;\n        targetheight = (img.height * max_width) / img.width;\n      } else {\n        targetwidth = img.width;\n        targetheight = img.height;\n      }\n      canvas.width = targetwidth;\n      canvas.height = targetheight;\n      let ctx = canvas.getcontext("2d");\n      ctx.clearrect(0, 0, targetwidth, targetheight); // 清除画布\n      ctx.drawimage(img, 0, 0, canvas.width, canvas.height);\n      let imagedata = canvas.todataurl(mimetype, quality / 100);\n      resolve(imagedata);\n    };\n  });\n}\n\nfunction dataurltoblob(base64, mimetype) {\n  //\n  let bytes = window.atob(base64.split(",")[1]);\n  //\n  let ab = new arraybuffer(bytes.length);\n  let ia = new uint8array(ab);\n\n  for (let i = 0; i < bytes.length; i++) {\n    ia[i] = bytes.charcodeat(i);\n  }\n  return new blob([ab], { type: mimetype });\n}\n\nfunction uploadfile(url, blob) {\n  let formdata = new formdata();\n  let request = new xmlhttprequest();\n  formdata.append("image", blob);\n  request.open("post", url, true);\n  request.send(formdata);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n * use\n\n<!doctype html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>本地图片压缩</title>\n  </head>\n  <body>\n    <input type="file" accept="image/*" onchange="loadfile(event)" />\n    <script src="./compress.js"><\/script>\n    <script>\n      const loadfile = function(event) {\n        const reader = new filereader();\n        reader.onload = async function() {\n          let compresseddataurl = await compress(\n            reader.result,\n            90,\n            "image/jpeg"\n          );\n          let compressedimageblob = dataurltoblob(compresseddataurl);\n          uploadfile("https://httpbin.org/post", compressedimageblob);\n        };\n        reader.readasdataurl(event.target.files[0]);\n      };\n    <\/script>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 参考文档\n * how-do-i-fix-blurry-text-in-my-html5-canvas\n * node-qrcode\n * react-canvas-poster',charsets:{cjk:!0}},{title:"react使用hooks案例",frontmatter:{title:"react使用hooks案例",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["react"],readingShow:"top"},regularPath:"/reactJs/rc-hooks-reducer.html",relativePath:"reactJs/rc-hooks-reducer.md",key:"v-69dc8923",path:"/reactJs/rc-hooks-reducer.html",headers:[{level:2,title:"asyncDelay",slug:"asyncdelay",normalizedTitle:"asyncdelay",charIndex:2},{level:2,title:"sleep",slug:"sleep",normalizedTitle:"sleep",charIndex:91},{level:2,title:"Portal",slug:"portal",normalizedTitle:"portal",charIndex:284},{level:2,title:"useModal",slug:"usemodal",normalizedTitle:"usemodal",charIndex:858},{level:2,title:"hooks-reducer",slug:"hooks-reducer",normalizedTitle:"hooks-reducer",charIndex:2470},{level:2,title:"hooks-redux",slug:"hooks-redux",normalizedTitle:"hooks-redux",charIndex:4331},{level:2,title:"hooks-unstated-next",slug:"hooks-unstated-next",normalizedTitle:"hooks-unstated-next",charIndex:7822}],lastUpdated:"2020/8/3 上午10:17:07",headersStr:"asyncDelay sleep Portal useModal hooks-reducer hooks-redux hooks-unstated-next",content:'# asyncDelay\n// 测试延迟\nconst asyncDelay = ms => new Promise(r => setTimeout(r, ms));\n\n\n1\n2\n# sleep\nfunction sleep(sleepTime){\n    var start=new Date().getTime();\n    while(true){\n        if(new Date().getTime()-start>sleepTime){\n            break;\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# Portal\nimport React from "react";\nimport { createPortal } from "react-dom";\n\nclass Dialog extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    const doc = window.document;\n    this.node = doc.createElement("div");\n    doc.body.appendChild(this.node);\n  }\n\n  render() {\n    return createPortal(\n      <div class="dialog">{this.props.children}</div>, //塞进传送门的JSX\n      this.node //传送门的另一端DOM node\n    );\n  }\n\n  componentWillUnmount() {\n    window.document.body.removeChild(this.node);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# useModal\n * create Modal.js\n\n// Modal.js\nimport React from \'react\'\nimport ReactDOM from \'react-dom\'\n\nconst Modal = React.memo(({ children, closeModal }) => {\n  const domEl = document.getElementById(\'modal-root\')\n\n  if (!domEl) return null\n  return ReactDOM.createPortal(\n    <div>\n      <button onClick={closeModal}>Close</button>\n      {children}\n    </div>,\n    domEl\n  )\n})\n\nexport default Modal\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * create useModal.js\n\n// useModal.js\nimport React, { useState } from "react";\n\nimport Modal from "./Modal";\n\n// Modal组件最基础的两个事件，show/hide\nexport const useModal = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const show = () => setIsVisible(true);\n  const hide = () => setIsVisible(false);\n\n  const RenderModal = ({ children }: { children: React.ReactChild }) => (\n    <React.Fragment>\n      {isVisible && <Modal closeModal={hide}>{children}</Modal>}\n    </React.Fragment>\n  );\n\n  return {\n    show,\n    hide,\n    RenderModal\n  };\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * use modal\n\nimport React from "react";\n\nimport { useModal } from "./useModal";\n\nconst App = React.memo(() => {\n  const { show, hide, RenderModal } = useModal();\n  return (\n    <div>\n      <div>\n        <p>some content...</p>\n        <button onClick={show}>打开</button>\n        <button onClick={hide}>关闭</button>\n        <RenderModal>\n          <p>这里面的内容将会被渲染到\'modal-root\'容器里.</p>\n        </RenderModal>\n      </div>\n      <div id="modal-root" />\n    </div>\n  );\n});\n\nexport default App;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# hooks-reducer\n * create store/context.js\n\nimport { createContext } from "react";\n\nconst Context = createContext();\n\nexport default Context;\n\n\n1\n2\n3\n4\n5\n * create store/redux.js\n\nimport React, { useReducer } from "react";\nimport ContextContainer from "./context";\n\nconst defaultState = {\n  count: 0\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case "increment":\n      return { ...state, count: state.count + 1 };\n    case "decrement":\n      return { ...state, count: state.count - 1 };\n    default:\n      return state;\n  }\n}\n\nconst ContextProvider = props => {\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  return (\n    <ContextContainer.Provider value={{ state, dispatch }}>\n      {props.children}\n    </ContextContainer.Provider>\n  );\n};\n\nexport { reducer, ContextProvider };\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n * use index.js\n\nimport React from "react";\nimport ReactDOM from "react-dom";\nimport { ContextProvider } from "./store/redux";\nimport App from "./App";\n\nconst rootElement = document.getElementById("root");\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  rootElement\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * use App.js\n\nimport React, { useContext } from "react";\nimport "./styles.css";\nimport CounterContext from "./store/context";\nexport default function App() {\n  const { state, dispatch } = useContext(CounterContext);\n  return (\n    <div className="App">\n      <h1>React Hooks</h1>\n      <h2>useContext and useReducer</h2>\n      <p>Count: {state.count}</p>\n      <button onClick={() => dispatch({ type: "increment" })}>+1</button>\n      <span> - </span>\n      <button onClick={() => dispatch({ type: "decrement" })}>-1</button>\n    </div>\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# hooks-redux\n * create store/index.js\n\nimport { combineReducer } from "./redux";\nimport User from "./userModule";\nimport Counter from "./counterModule";\n\nconst state = {\n  user: User.state,\n  counter: Counter.state\n};\n\nconst reducers = combineReducer({\n  user: User.reducer,\n  counter: Counter.reducer\n});\n\nexport default {\n  state,\n  reducers\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * create store/redux.js\n\nimport React, { useContext, useReducer } from "react";\n\nconst EMPTY = Symbol("store context");\nconst StoreContext = React.createContext(EMPTY);\n\nexport const Provider = ({ children, store }) => {\n  // console.log(store)\n  const [state, dispatch] = useReducer(store.reducers, store.state);\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport const useRedux = () => {\n  const store = useContext(StoreContext);\n  if (store === EMPTY) {\n    throw new Error("App Component must be wrapped with <Provider>");\n  } else {\n    const { state, dispatch } = store;\n    return { state, dispatch };\n  }\n};\n\nexport const combineReducer = reducers => {\n  return (state = {}, action) => {\n    let result = Object.keys(reducers).reduce((newState, key) => {\n      newState[key] = reducers[key](state[key], action);\n      return newState;\n    }, {});\n    return result;\n  };\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * create store/counterModule.js\n\nconst CounterModule = {\n  state: {\n    count: 0\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case "increment":\n        return { ...state, count: state.count + 1 };\n      case "decrement":\n        return { ...state, count: state.count - 1 };\n      default:\n        return state;\n    }\n  }\n};\n\nexport default CounterModule;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * create store/UserModule.js\n\nconst UserModule = {\n  state: {\n    login: "未登录"\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case "SET_TOKEN":\n        return { ...state, login: "已登录" };\n      case "RESET_TOKEN":\n        return { ...state, login: "未登录" };\n      default:\n        return state;\n    }\n  }\n};\n\nexport default UserModule;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * use index.js\n\nimport React from "react";\nimport ReactDOM from "react-dom";\nimport { Provider } from "./store/redux";\nimport store from "./store/index";\nimport App from "./App";\n\nconst rootElement = document.getElementById("root");\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  rootElement\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * use App.js\n\nimport React from "react";\nimport "./styles.css";\nimport { useRedux } from "./store/redux";\n\nexport default function App() {\n  const { state, dispatch } = useRedux();\n\n  return (\n    <div className="App">\n      <h1>React Hooks</h1>\n      <h2>useContext and useReducer</h2>\n      <p>Count:{state.counter.count}</p>\n      <button onClick={() => dispatch({ type: "increment" })}>+1</button>\n      <span> - </span>\n      <button onClick={() => dispatch({ type: "decrement" })}>-1</button>\n      <hr />\n      <p>login:{state.user.login}</p>\n      <button onClick={() => dispatch({ type: "SET_TOKEN" })}>登录</button>\n      <span> - </span>\n      <button onClick={() => dispatch({ type: "RESET_TOKEN" })}>退出</button>\n    </div>\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# hooks-unstated-next\n * create store/index.js\n\nimport { useState } from "react";\nimport { createContainer } from "./redux";\n\nconst defaultState = {\n  count: 0\n};\n\nfunction Store(initialState = defaultState) {\n  let [state, setState] = useState(initialState);\n  let increment = () => setState(pre => ({ count: pre.count + 1 }));\n  let decrement = () => setState(pre => ({ count: pre.count - 1 }));\n  return {\n    state,\n    increment,\n    decrement\n  };\n}\n\nexport default createContainer(Store);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * create store/redux.js\n\n// https://github.com/jamiebuilds/unstated-next\nimport React from "react";\n\nconst EMPTY = Symbol("unstated-next");\n\nexport function createContainer(useHook) {\n  let Context = React.createContext(EMPTY);\n\n  function Provider(props) {\n    let value = useHook(props.initialState);\n    return <Context.Provider value={value}>{props.children}</Context.Provider>;\n  }\n\n  // eslint-disable-next-line no-shadow\n  function useContainer() {\n    let value = React.useContext(Context);\n    if (value === EMPTY) {\n      throw new Error("Component must be wrapped with <Container.Provider>");\n    }\n    return value;\n  }\n\n  return { Provider, useContainer };\n}\n\nexport function useContainer(container) {\n  return container.useContainer();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n * use index.js\n\nimport React from "react";\nimport ReactDOM from "react-dom";\nimport Counter from "./store/index";\nimport App from "./App";\n\nconst rootElement = document.getElementById("root");\nReactDOM.render(\n  <React.StrictMode>\n    <Counter.Provider>\n      <App />\n    </Counter.Provider>\n  </React.StrictMode>,\n  rootElement\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * use App.js\n\nimport React from "react";\nimport "./styles.css";\nimport Counter from "./store/index";\n\nexport default function App() {\n  const store = Counter.useContainer();\n  return (\n    <div className="App">\n      <h1>React Hooks</h1>\n      <h2>use unstated-next</h2>\n      <p>Count: {store.state.count}</p>\n      <div>\n        <button onClick={store.increment}>+1</button> ~{" "}\n        <button onClick={store.decrement}>-1</button>\n      </div>\n    </div>\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18',normalizedContent:'# asyncdelay\n// 测试延迟\nconst asyncdelay = ms => new promise(r => settimeout(r, ms));\n\n\n1\n2\n# sleep\nfunction sleep(sleeptime){\n    var start=new date().gettime();\n    while(true){\n        if(new date().gettime()-start>sleeptime){\n            break;\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# portal\nimport react from "react";\nimport { createportal } from "react-dom";\n\nclass dialog extends react.component {\n  constructor() {\n    super(...arguments);\n\n    const doc = window.document;\n    this.node = doc.createelement("div");\n    doc.body.appendchild(this.node);\n  }\n\n  render() {\n    return createportal(\n      <div class="dialog">{this.props.children}</div>, //塞进传送门的jsx\n      this.node //传送门的另一端dom node\n    );\n  }\n\n  componentwillunmount() {\n    window.document.body.removechild(this.node);\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# usemodal\n * create modal.js\n\n// modal.js\nimport react from \'react\'\nimport reactdom from \'react-dom\'\n\nconst modal = react.memo(({ children, closemodal }) => {\n  const domel = document.getelementbyid(\'modal-root\')\n\n  if (!domel) return null\n  return reactdom.createportal(\n    <div>\n      <button onclick={closemodal}>close</button>\n      {children}\n    </div>,\n    domel\n  )\n})\n\nexport default modal\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * create usemodal.js\n\n// usemodal.js\nimport react, { usestate } from "react";\n\nimport modal from "./modal";\n\n// modal组件最基础的两个事件，show/hide\nexport const usemodal = () => {\n  const [isvisible, setisvisible] = usestate(false);\n\n  const show = () => setisvisible(true);\n  const hide = () => setisvisible(false);\n\n  const rendermodal = ({ children }: { children: react.reactchild }) => (\n    <react.fragment>\n      {isvisible && <modal closemodal={hide}>{children}</modal>}\n    </react.fragment>\n  );\n\n  return {\n    show,\n    hide,\n    rendermodal\n  };\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * use modal\n\nimport react from "react";\n\nimport { usemodal } from "./usemodal";\n\nconst app = react.memo(() => {\n  const { show, hide, rendermodal } = usemodal();\n  return (\n    <div>\n      <div>\n        <p>some content...</p>\n        <button onclick={show}>打开</button>\n        <button onclick={hide}>关闭</button>\n        <rendermodal>\n          <p>这里面的内容将会被渲染到\'modal-root\'容器里.</p>\n        </rendermodal>\n      </div>\n      <div id="modal-root" />\n    </div>\n  );\n});\n\nexport default app;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# hooks-reducer\n * create store/context.js\n\nimport { createcontext } from "react";\n\nconst context = createcontext();\n\nexport default context;\n\n\n1\n2\n3\n4\n5\n * create store/redux.js\n\nimport react, { usereducer } from "react";\nimport contextcontainer from "./context";\n\nconst defaultstate = {\n  count: 0\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case "increment":\n      return { ...state, count: state.count + 1 };\n    case "decrement":\n      return { ...state, count: state.count - 1 };\n    default:\n      return state;\n  }\n}\n\nconst contextprovider = props => {\n  const [state, dispatch] = usereducer(reducer, defaultstate);\n  return (\n    <contextcontainer.provider value={{ state, dispatch }}>\n      {props.children}\n    </contextcontainer.provider>\n  );\n};\n\nexport { reducer, contextprovider };\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n * use index.js\n\nimport react from "react";\nimport reactdom from "react-dom";\nimport { contextprovider } from "./store/redux";\nimport app from "./app";\n\nconst rootelement = document.getelementbyid("root");\nreactdom.render(\n  <react.strictmode>\n    <contextprovider>\n      <app />\n    </contextprovider>\n  </react.strictmode>,\n  rootelement\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * use app.js\n\nimport react, { usecontext } from "react";\nimport "./styles.css";\nimport countercontext from "./store/context";\nexport default function app() {\n  const { state, dispatch } = usecontext(countercontext);\n  return (\n    <div classname="app">\n      <h1>react hooks</h1>\n      <h2>usecontext and usereducer</h2>\n      <p>count: {state.count}</p>\n      <button onclick={() => dispatch({ type: "increment" })}>+1</button>\n      <span> - </span>\n      <button onclick={() => dispatch({ type: "decrement" })}>-1</button>\n    </div>\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# hooks-redux\n * create store/index.js\n\nimport { combinereducer } from "./redux";\nimport user from "./usermodule";\nimport counter from "./countermodule";\n\nconst state = {\n  user: user.state,\n  counter: counter.state\n};\n\nconst reducers = combinereducer({\n  user: user.reducer,\n  counter: counter.reducer\n});\n\nexport default {\n  state,\n  reducers\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * create store/redux.js\n\nimport react, { usecontext, usereducer } from "react";\n\nconst empty = symbol("store context");\nconst storecontext = react.createcontext(empty);\n\nexport const provider = ({ children, store }) => {\n  // console.log(store)\n  const [state, dispatch] = usereducer(store.reducers, store.state);\n  return (\n    <storecontext.provider value={{ state, dispatch }}>\n      {children}\n    </storecontext.provider>\n  );\n};\n\nexport const useredux = () => {\n  const store = usecontext(storecontext);\n  if (store === empty) {\n    throw new error("app component must be wrapped with <provider>");\n  } else {\n    const { state, dispatch } = store;\n    return { state, dispatch };\n  }\n};\n\nexport const combinereducer = reducers => {\n  return (state = {}, action) => {\n    let result = object.keys(reducers).reduce((newstate, key) => {\n      newstate[key] = reducers[key](state[key], action);\n      return newstate;\n    }, {});\n    return result;\n  };\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * create store/countermodule.js\n\nconst countermodule = {\n  state: {\n    count: 0\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case "increment":\n        return { ...state, count: state.count + 1 };\n      case "decrement":\n        return { ...state, count: state.count - 1 };\n      default:\n        return state;\n    }\n  }\n};\n\nexport default countermodule;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * create store/usermodule.js\n\nconst usermodule = {\n  state: {\n    login: "未登录"\n  },\n  reducer: (state, action) => {\n    switch (action.type) {\n      case "set_token":\n        return { ...state, login: "已登录" };\n      case "reset_token":\n        return { ...state, login: "未登录" };\n      default:\n        return state;\n    }\n  }\n};\n\nexport default usermodule;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * use index.js\n\nimport react from "react";\nimport reactdom from "react-dom";\nimport { provider } from "./store/redux";\nimport store from "./store/index";\nimport app from "./app";\n\nconst rootelement = document.getelementbyid("root");\nreactdom.render(\n  <react.strictmode>\n    <provider store={store}>\n      <app />\n    </provider>\n  </react.strictmode>,\n  rootelement\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * use app.js\n\nimport react from "react";\nimport "./styles.css";\nimport { useredux } from "./store/redux";\n\nexport default function app() {\n  const { state, dispatch } = useredux();\n\n  return (\n    <div classname="app">\n      <h1>react hooks</h1>\n      <h2>usecontext and usereducer</h2>\n      <p>count:{state.counter.count}</p>\n      <button onclick={() => dispatch({ type: "increment" })}>+1</button>\n      <span> - </span>\n      <button onclick={() => dispatch({ type: "decrement" })}>-1</button>\n      <hr />\n      <p>login:{state.user.login}</p>\n      <button onclick={() => dispatch({ type: "set_token" })}>登录</button>\n      <span> - </span>\n      <button onclick={() => dispatch({ type: "reset_token" })}>退出</button>\n    </div>\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# hooks-unstated-next\n * create store/index.js\n\nimport { usestate } from "react";\nimport { createcontainer } from "./redux";\n\nconst defaultstate = {\n  count: 0\n};\n\nfunction store(initialstate = defaultstate) {\n  let [state, setstate] = usestate(initialstate);\n  let increment = () => setstate(pre => ({ count: pre.count + 1 }));\n  let decrement = () => setstate(pre => ({ count: pre.count - 1 }));\n  return {\n    state,\n    increment,\n    decrement\n  };\n}\n\nexport default createcontainer(store);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * create store/redux.js\n\n// https://github.com/jamiebuilds/unstated-next\nimport react from "react";\n\nconst empty = symbol("unstated-next");\n\nexport function createcontainer(usehook) {\n  let context = react.createcontext(empty);\n\n  function provider(props) {\n    let value = usehook(props.initialstate);\n    return <context.provider value={value}>{props.children}</context.provider>;\n  }\n\n  // eslint-disable-next-line no-shadow\n  function usecontainer() {\n    let value = react.usecontext(context);\n    if (value === empty) {\n      throw new error("component must be wrapped with <container.provider>");\n    }\n    return value;\n  }\n\n  return { provider, usecontainer };\n}\n\nexport function usecontainer(container) {\n  return container.usecontainer();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n * use index.js\n\nimport react from "react";\nimport reactdom from "react-dom";\nimport counter from "./store/index";\nimport app from "./app";\n\nconst rootelement = document.getelementbyid("root");\nreactdom.render(\n  <react.strictmode>\n    <counter.provider>\n      <app />\n    </counter.provider>\n  </react.strictmode>,\n  rootelement\n);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * use app.js\n\nimport react from "react";\nimport "./styles.css";\nimport counter from "./store/index";\n\nexport default function app() {\n  const store = counter.usecontainer();\n  return (\n    <div classname="app">\n      <h1>react hooks</h1>\n      <h2>use unstated-next</h2>\n      <p>count: {store.state.count}</p>\n      <div>\n        <button onclick={store.increment}>+1</button> ~{" "}\n        <button onclick={store.decrement}>-1</button>\n      </div>\n    </div>\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18',charsets:{cjk:!0}},{title:"react生命周期",frontmatter:{title:"react生命周期",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["react"],readingShow:"top"},regularPath:"/reactJs/rc-lifecycle.html",relativePath:"reactJs/rc-lifecycle.md",key:"v-40d1a56d",path:"/reactJs/rc-lifecycle.html",headers:[{level:2,title:"lifecycle",slug:"lifecycle",normalizedTitle:"lifecycle",charIndex:2},{level:2,title:"static getDerivedStateFromProps",slug:"static-getderivedstatefromprops",normalizedTitle:"static getderivedstatefromprops",charIndex:2824},{level:2,title:"getSnapshotBeforeUpdate",slug:"getsnapshotbeforeupdate",normalizedTitle:"getsnapshotbeforeupdate",charIndex:4692}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"lifecycle static getDerivedStateFromProps getSnapshotBeforeUpdate",content:"# lifecycle\n * 原文：你真的了解 React 生命周期吗\n   \n   \n * react 生命周期图谱\n   \n   \n   \n   \n * 旧版\n   \n   \n   \n   \n * 代码\n   \n   \n\nimport React, { Component } from 'react'\n\nexport default class LifeCycle extends Component {\n  static defaultProps = {\n      name:'计数器'\n  }\n  constructor(props){\n    super();\n    this.state = {number:0,users:[]};//初始化默认的状态对象\n    console.log('1. constructor 初始化 props and state');\n\n  }\n  //componentWillMount在渲染过程中可能会执行多次\n  componentWillMount(){\n    console.log('2. componentWillMount 组件将要挂载');\n    //localStorage.get('userss');\n  }\n  //componentDidMount在渲染过程中永远只有执行一次\n  //一般是在componentDidMount执行副作用，进行异步操作\n  componentDidMount(){\n    console.log('4. componentDidMount 组件挂载完成');\n    fetch('https://api.github.com/users').then(res=>res.json()).then(users=>{\n        console.log(users);\n        this.setState({users});\n    });\n  }\n  shouldComponentUpdate(nextProps,nextState){\n    console.log('Counter',nextProps,nextState);\n    console.log('5. shouldComponentUpdate 询问组件是否需要更新');\n    return true;\n  }\n  componentWillUpdate(nextProps, nextState){\n    console.log('6. componentWillUpdate 组件将要更新');\n  }\n  componentDidUpdate(prevProps, prevState)){\n    console.log('7. componentDidUpdate 组件更新完毕');\n  }\n  add = ()=>{\n      this.setState({number:this.state.number});\n  };\n  render() {\n    console.log('3.render渲染，也就是挂载')\n    return (\n      <div style={{border:'5px solid red',padding:'5px'}}>\n        <p>{this.props.name}:{this.state.number}</p>\n        <button onClick={this.add}>+</button>\n        <ul>\n            {\n                this.state.users.map(user=>(<li>{user.login}</li>))\n            }\n        </ul>\n        {this.state.number%2==0&&<SubCounter number={this.state.number}/>}\n      </div>\n    )\n  }\n}\n\n// Sub Component\nclass SubCounter extends Component{\n    constructor(props){\n        super(props);\n        this.state = {number:0};\n    }\n    componentWillUnmount(){\n        console.log('SubCounter componentWillUnmount');\n    }\n    //调用此方法的时候会把新的属性对象和新的状态对象传过来\n    shouldComponentUpdate(nextProps,nextState){\n        console.log('SubCounter',nextProps,nextState);\n        if(nextProps.number%3==0){\n            return true;\n        }else{\n            return false;\n        }\n    }\n    //componentWillReceiveProp 组件收到新的属性对象\n    componentWillReceiveProps(){\n      console.log('SubCounter 1.componentWillReceiveProps')\n    }\n    render(){\n        console.log('SubCounter  2.render')\n        return(\n            <div style={{border:'5px solid green'}}>\n                <p>{this.props.number}</p>\n            </div>\n        )\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n * 父子组件触发示意图\n\n\n\n# static getDerivedStateFromProps\n * 接收父组件传递过来的 props 和组件之前的状态，返回一个对象来更新 state 或者返回 null 来表示接收到的 props 没有变化，不需要更新 state\n * 该生命周期钩子的作用： 将父组件传递过来的 props 映射 到子组件的 state 上面，这样组件内部就不用再通过 this.props.xxx 获取属性值了，统一通过 this.state.xxx 获取。映射就相当于拷贝了一份父组件传过来的 props ，作为子组件自己的状态。注意：子组件通过 setState 更新自身状态时，不会改变父组件的 props\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AAA />\n    </div>\n  );\n}\n\nclass AAA extends React.Component {\n  state = {\n    age: 666\n  };\n\n  add = () => {\n    this.setState({ age: this.state.age + 1 });\n  };\n\n  render() {\n    return (\n      <div>\n        <ChildA onChangeParent={this.add} age={this.state.age} />\n      </div>\n    );\n  }\n}\n\nclass ChildA extends React.Component {\n  state = {\n    num: 888\n  };\n  // 根据新的属性对象派生状态对象\n  // nextProps——新的属性对象 prevState——旧的状态对象\n  static getDerivedStateFromProps(nextprops, state) {\n    console.log(\"props\", nextprops);\n    // 返回一个对象来更新 state 或者返回 null 来表示接收到的 props 不需要更新 state\n    if (nextprops.age !== state.age) {\n      console.log(\"更新吧\");\n      return {\n        onChangeParent: nextprops.onChangeParent,\n        age: nextprops.age\n        // 注意：这里不需要把组件自身的状态也放进来\n        // num:state.num\n      };\n    }\n    return null;\n  }\n\n  add = () => {\n    this.setState({ num: this.state.num + 1 });\n  };\n  render() {\n    const { onChangeParent } = this.state;\n    console.log(\"state\", this.state);\n    return (\n      <>\n        <div onClick={onChangeParent}>change</div>\n        <div onClick={this.add}>add</div>\n      </>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n# getSnapshotBeforeUpdate\n * 接收父组件传递过来的 props 和组件之前的状态，此生命周期钩子必须有返回值，返回值将作为第三个参数传递给componentDidUpdate。\n * 该生命周期钩子触发的时机 ：被调用于 render 之后、更新 DOM 和 refs 之前\n * getSnapshotBeforeUpdate要与componentDidUpdate 一起使用，否则会报错\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GetSnapshotBeforeUpdate />\n    </div>\n  );\n}\n\nclass GetSnapshotBeforeUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.wrapper = React.createRef();\n    this.state = { messages: [] };\n  }\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        messages: [\"msg:\" + this.state.messages.length, ...this.state.messages]\n      });\n      //this.setState({messages:[...this.state.messages,this.state.messages.length]});\n    }, 1000);\n  }\n  getSnapshotBeforeUpdate() {\n    // 返回更新内容的高度 300px\n    return this.wrapper.current.scrollHeight;\n  }\n  componentDidUpdate(prevProps, prevState, prevScrollHeight) {\n    this.wrapper.current.scrollTop =\n      this.wrapper.current.scrollTop +\n      (this.wrapper.current.scrollHeight - prevScrollHeight);\n  }\n  render() {\n    let style = {\n      height: \"100px\",\n      width: \"200px\",\n      border: \"1px solid red\",\n      overflow: \"auto\"\n    };\n    return (\n      <ul style={style} ref={this.wrapper}>\n        {this.state.messages.map((message, index) => (\n          <li key={index}>{message}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55",normalizedContent:"# lifecycle\n * 原文：你真的了解 react 生命周期吗\n   \n   \n * react 生命周期图谱\n   \n   \n   \n   \n * 旧版\n   \n   \n   \n   \n * 代码\n   \n   \n\nimport react, { component } from 'react'\n\nexport default class lifecycle extends component {\n  static defaultprops = {\n      name:'计数器'\n  }\n  constructor(props){\n    super();\n    this.state = {number:0,users:[]};//初始化默认的状态对象\n    console.log('1. constructor 初始化 props and state');\n\n  }\n  //componentwillmount在渲染过程中可能会执行多次\n  componentwillmount(){\n    console.log('2. componentwillmount 组件将要挂载');\n    //localstorage.get('userss');\n  }\n  //componentdidmount在渲染过程中永远只有执行一次\n  //一般是在componentdidmount执行副作用，进行异步操作\n  componentdidmount(){\n    console.log('4. componentdidmount 组件挂载完成');\n    fetch('https://api.github.com/users').then(res=>res.json()).then(users=>{\n        console.log(users);\n        this.setstate({users});\n    });\n  }\n  shouldcomponentupdate(nextprops,nextstate){\n    console.log('counter',nextprops,nextstate);\n    console.log('5. shouldcomponentupdate 询问组件是否需要更新');\n    return true;\n  }\n  componentwillupdate(nextprops, nextstate){\n    console.log('6. componentwillupdate 组件将要更新');\n  }\n  componentdidupdate(prevprops, prevstate)){\n    console.log('7. componentdidupdate 组件更新完毕');\n  }\n  add = ()=>{\n      this.setstate({number:this.state.number});\n  };\n  render() {\n    console.log('3.render渲染，也就是挂载')\n    return (\n      <div style={{border:'5px solid red',padding:'5px'}}>\n        <p>{this.props.name}:{this.state.number}</p>\n        <button onclick={this.add}>+</button>\n        <ul>\n            {\n                this.state.users.map(user=>(<li>{user.login}</li>))\n            }\n        </ul>\n        {this.state.number%2==0&&<subcounter number={this.state.number}/>}\n      </div>\n    )\n  }\n}\n\n// sub component\nclass subcounter extends component{\n    constructor(props){\n        super(props);\n        this.state = {number:0};\n    }\n    componentwillunmount(){\n        console.log('subcounter componentwillunmount');\n    }\n    //调用此方法的时候会把新的属性对象和新的状态对象传过来\n    shouldcomponentupdate(nextprops,nextstate){\n        console.log('subcounter',nextprops,nextstate);\n        if(nextprops.number%3==0){\n            return true;\n        }else{\n            return false;\n        }\n    }\n    //componentwillreceiveprop 组件收到新的属性对象\n    componentwillreceiveprops(){\n      console.log('subcounter 1.componentwillreceiveprops')\n    }\n    render(){\n        console.log('subcounter  2.render')\n        return(\n            <div style={{border:'5px solid green'}}>\n                <p>{this.props.number}</p>\n            </div>\n        )\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n * 父子组件触发示意图\n\n\n\n# static getderivedstatefromprops\n * 接收父组件传递过来的 props 和组件之前的状态，返回一个对象来更新 state 或者返回 null 来表示接收到的 props 没有变化，不需要更新 state\n * 该生命周期钩子的作用： 将父组件传递过来的 props 映射 到子组件的 state 上面，这样组件内部就不用再通过 this.props.xxx 获取属性值了，统一通过 this.state.xxx 获取。映射就相当于拷贝了一份父组件传过来的 props ，作为子组件自己的状态。注意：子组件通过 setstate 更新自身状态时，不会改变父组件的 props\n\nimport react from \"react\";\nimport reactdom from \"react-dom\";\nimport \"./styles.css\";\n\nfunction app() {\n  return (\n    <div classname=\"app\">\n      <aaa />\n    </div>\n  );\n}\n\nclass aaa extends react.component {\n  state = {\n    age: 666\n  };\n\n  add = () => {\n    this.setstate({ age: this.state.age + 1 });\n  };\n\n  render() {\n    return (\n      <div>\n        <childa onchangeparent={this.add} age={this.state.age} />\n      </div>\n    );\n  }\n}\n\nclass childa extends react.component {\n  state = {\n    num: 888\n  };\n  // 根据新的属性对象派生状态对象\n  // nextprops——新的属性对象 prevstate——旧的状态对象\n  static getderivedstatefromprops(nextprops, state) {\n    console.log(\"props\", nextprops);\n    // 返回一个对象来更新 state 或者返回 null 来表示接收到的 props 不需要更新 state\n    if (nextprops.age !== state.age) {\n      console.log(\"更新吧\");\n      return {\n        onchangeparent: nextprops.onchangeparent,\n        age: nextprops.age\n        // 注意：这里不需要把组件自身的状态也放进来\n        // num:state.num\n      };\n    }\n    return null;\n  }\n\n  add = () => {\n    this.setstate({ num: this.state.num + 1 });\n  };\n  render() {\n    const { onchangeparent } = this.state;\n    console.log(\"state\", this.state);\n    return (\n      <>\n        <div onclick={onchangeparent}>change</div>\n        <div onclick={this.add}>add</div>\n      </>\n    );\n  }\n}\n\nconst rootelement = document.getelementbyid(\"root\");\nreactdom.render(<app />, rootelement);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n# getsnapshotbeforeupdate\n * 接收父组件传递过来的 props 和组件之前的状态，此生命周期钩子必须有返回值，返回值将作为第三个参数传递给componentdidupdate。\n * 该生命周期钩子触发的时机 ：被调用于 render 之后、更新 dom 和 refs 之前\n * getsnapshotbeforeupdate要与componentdidupdate 一起使用，否则会报错\n\nimport react, { component } from \"react\";\nimport reactdom from \"react-dom\";\n\nimport \"./styles.css\";\n\nfunction app() {\n  return (\n    <div classname=\"app\">\n      <getsnapshotbeforeupdate />\n    </div>\n  );\n}\n\nclass getsnapshotbeforeupdate extends component {\n  constructor(props) {\n    super(props);\n    this.wrapper = react.createref();\n    this.state = { messages: [] };\n  }\n  componentdidmount() {\n    setinterval(() => {\n      this.setstate({\n        messages: [\"msg:\" + this.state.messages.length, ...this.state.messages]\n      });\n      //this.setstate({messages:[...this.state.messages,this.state.messages.length]});\n    }, 1000);\n  }\n  getsnapshotbeforeupdate() {\n    // 返回更新内容的高度 300px\n    return this.wrapper.current.scrollheight;\n  }\n  componentdidupdate(prevprops, prevstate, prevscrollheight) {\n    this.wrapper.current.scrolltop =\n      this.wrapper.current.scrolltop +\n      (this.wrapper.current.scrollheight - prevscrollheight);\n  }\n  render() {\n    let style = {\n      height: \"100px\",\n      width: \"200px\",\n      border: \"1px solid red\",\n      overflow: \"auto\"\n    };\n    return (\n      <ul style={style} ref={this.wrapper}>\n        {this.state.messages.map((message, index) => (\n          <li key={index}>{message}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst rootelement = document.getelementbyid(\"root\");\nreactdom.render(<app />, rootelement);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55",charsets:{cjk:!0}},{title:"react redux",frontmatter:{title:"react redux",date:"2020-07-30T00:00:00.000Z",sidebar:"auto",tags:["react"],readingShow:"top"},regularPath:"/reactJs/rc-redux.html",relativePath:"reactJs/rc-redux.md",key:"v-d4461d4e",path:"/reactJs/rc-redux.html",headers:[{level:2,title:"Provider",slug:"provider",normalizedTitle:"provider",charIndex:147},{level:2,title:"reducer",slug:"reducer",normalizedTitle:"reducer",charIndex:488},{level:2,title:"combineReducers",slug:"combinereducers",normalizedTitle:"combinereducers",charIndex:830},{level:2,title:"createStore",slug:"createstore",normalizedTitle:"createstore",charIndex:1049},{level:2,title:"connect",slug:"connect",normalizedTitle:"connect",charIndex:1448},{level:2,title:"applyMiddleware",slug:"applymiddleware",normalizedTitle:"applymiddleware",charIndex:2264},{level:2,title:"Rematch",slug:"rematch",normalizedTitle:"rematch",charIndex:2549}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"Provider reducer combineReducers createStore connect applyMiddleware Rematch",content:"\n\n * redux\n * awesome-redux\n * redux-actions\n * redux-thunk\n * redux-immutable\n * react/rematch\n * redux-toolkit\n\n * Redux 关系图解\n   \n   \n   \n   \n\n# Provider\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport App from './App'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# reducer\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ]\n    default:\n      return state\n  }\n}\n\nexport default todos\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# combineReducers\nimport { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# createStore\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# connect\nimport { connect } from 'react-redux'\n\nconst increment = () => ({ type: 'INCREMENT' })\nconst decrement = () => ({ type: 'DECREMENT' })\nconst reset = () => ({ type: 'RESET' })\n\nfunction mapStateToProps(state, ownProps) {\n  const { visibilityFilter } = state\n  const { id } = ownProps\n  const todo = getTodoById(state, id)\n\n  // component receives additionally:\n  return { todo, visibilityFilter }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    toggleTodo: () => dispatch(toggleTodo(ownProps.todoId)),\n    increment: () => dispatch(increment()),\n    decrement: () => dispatch(decrement()),\n    reset: () => dispatch(reset())\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# applyMiddleware\n * redux-thunk\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\n// Note: this API requires redux@>=3.1.0\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n\n1\n2\n3\n4\n5\n6\n# Rematch\n * install\n\nyarn add @rematch/core\n\n\n1\n * step1: init\n\nimport { init } from '@rematch/core'\nimport * as models from './models'\n\nconst store = init({\n\tmodels,\n})\n\nexport default store\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * step2: models.js\n\nexport const count = {\n\tstate: 0, // initial state\n\treducers: {\n\t\t// handle state changes with pure functions\n\t\tincrement(state, payload) {\n\t\t\treturn state + payload\n\t\t},\n\t},\n\teffects: dispatch => ({\n\t\t// handle state changes with impure functions.\n\t\t// use async/await for async actions\n\t\tasync incrementAsync(payload, rootState) {\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 1000))\n\t\t\tdispatch.count.increment(payload)\n\t\t},\n\t}),\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * step3: dispatch\n\n// state = { count: 0 }\n// reducers\ndispatch({ type: 'count/increment', payload: 1 }) // state = { count: 1 }\ndispatch.count.increment(1) // state = { count: 2 }\n\n// effects\ndispatch({ type: 'count/incrementAsync', payload: 1 }) // state = { count: 3 } after delay\ndispatch.count.incrementAsync(1) // state = { count: 4 } after delay\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * step 4: View\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider, connect } from 'react-redux'\nimport store from './store'\n\nconst Count = props => (\n\t<div>\n\t\tThe count is {props.count}\n\t\t<button onClick={props.increment}>increment</button>\n\t\t<button onClick={props.incrementAsync}>incrementAsync</button>\n\t</div>\n)\n\nconst mapState = state => ({\n\tcount: state.count,\n})\n\nconst mapDispatch = ({ count: { increment, incrementAsync } }) => ({\n\tincrement: () => increment(1),\n\tincrementAsync: () => incrementAsync(1),\n})\n\nconst CountContainer = connect(\n\tmapState,\n\tmapDispatch\n)(Count)\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<CountContainer />\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33",normalizedContent:"\n\n * redux\n * awesome-redux\n * redux-actions\n * redux-thunk\n * redux-immutable\n * react/rematch\n * redux-toolkit\n\n * redux 关系图解\n   \n   \n   \n   \n\n# provider\nimport react from 'react'\nimport reactdom from 'react-dom'\n\nimport { provider } from 'react-redux'\nimport store from './store'\n\nimport app from './app'\n\nconst rootelement = document.getelementbyid('root')\nreactdom.render(\n  <provider store={store}>\n    <app />\n  </provider>,\n  rootelement\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# reducer\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case 'add_todo':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ]\n    default:\n      return state\n  }\n}\n\nexport default todos\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# combinereducers\nimport { combinereducers } from 'redux'\nimport todos from './todos'\nimport visibilityfilter from './visibilityfilter'\n\nexport default combinereducers({\n  todos,\n  visibilityfilter\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# createstore\nimport react from 'react'\nimport { render } from 'react-dom'\nimport { createstore } from 'redux'\nimport { provider } from 'react-redux'\nimport app from './components/app'\nimport rootreducer from './reducers'\n\nconst store = createstore(rootreducer)\n\nrender(\n  <provider store={store}>\n    <app />\n  </provider>,\n  document.getelementbyid('root')\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# connect\nimport { connect } from 'react-redux'\n\nconst increment = () => ({ type: 'increment' })\nconst decrement = () => ({ type: 'decrement' })\nconst reset = () => ({ type: 'reset' })\n\nfunction mapstatetoprops(state, ownprops) {\n  const { visibilityfilter } = state\n  const { id } = ownprops\n  const todo = gettodobyid(state, id)\n\n  // component receives additionally:\n  return { todo, visibilityfilter }\n}\n\nconst mapdispatchtoprops = (dispatch, ownprops) => {\n  return {\n    toggletodo: () => dispatch(toggletodo(ownprops.todoid)),\n    increment: () => dispatch(increment()),\n    decrement: () => dispatch(decrement()),\n    reset: () => dispatch(reset())\n  }\n}\n\nexport default connect(\n  mapstatetoprops,\n  mapdispatchtoprops\n)(counter)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# applymiddleware\n * redux-thunk\n\nimport { createstore, applymiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootreducer from './reducers/index';\n\n// note: this api requires redux@>=3.1.0\nconst store = createstore(rootreducer, applymiddleware(thunk));\n\n\n1\n2\n3\n4\n5\n6\n# rematch\n * install\n\nyarn add @rematch/core\n\n\n1\n * step1: init\n\nimport { init } from '@rematch/core'\nimport * as models from './models'\n\nconst store = init({\n\tmodels,\n})\n\nexport default store\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * step2: models.js\n\nexport const count = {\n\tstate: 0, // initial state\n\treducers: {\n\t\t// handle state changes with pure functions\n\t\tincrement(state, payload) {\n\t\t\treturn state + payload\n\t\t},\n\t},\n\teffects: dispatch => ({\n\t\t// handle state changes with impure functions.\n\t\t// use async/await for async actions\n\t\tasync incrementasync(payload, rootstate) {\n\t\t\tawait new promise(resolve => settimeout(resolve, 1000))\n\t\t\tdispatch.count.increment(payload)\n\t\t},\n\t}),\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * step3: dispatch\n\n// state = { count: 0 }\n// reducers\ndispatch({ type: 'count/increment', payload: 1 }) // state = { count: 1 }\ndispatch.count.increment(1) // state = { count: 2 }\n\n// effects\ndispatch({ type: 'count/incrementasync', payload: 1 }) // state = { count: 3 } after delay\ndispatch.count.incrementasync(1) // state = { count: 4 } after delay\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * step 4: view\n\nimport react from 'react'\nimport reactdom from 'react-dom'\nimport { provider, connect } from 'react-redux'\nimport store from './store'\n\nconst count = props => (\n\t<div>\n\t\tthe count is {props.count}\n\t\t<button onclick={props.increment}>increment</button>\n\t\t<button onclick={props.incrementasync}>incrementasync</button>\n\t</div>\n)\n\nconst mapstate = state => ({\n\tcount: state.count,\n})\n\nconst mapdispatch = ({ count: { increment, incrementasync } }) => ({\n\tincrement: () => increment(1),\n\tincrementasync: () => incrementasync(1),\n})\n\nconst countcontainer = connect(\n\tmapstate,\n\tmapdispatch\n)(count)\n\nreactdom.render(\n\t<provider store={store}>\n\t\t<countcontainer />\n\t</provider>,\n\tdocument.getelementbyid('root')\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33",charsets:{cjk:!0}},{title:"windows环境中的wsl使用",frontmatter:{title:"windows环境中的wsl使用",date:"2020-07-22T00:00:00.000Z",sidebar:"auto",readingShow:"top"},regularPath:"/serve/",relativePath:"serve/README.md",key:"v-56cbd6f0",path:"/serve/",headers:[{level:2,title:"windows dos",slug:"windows-dos",normalizedTitle:"windows dos",charIndex:2},{level:2,title:"windows wsl",slug:"windows-wsl",normalizedTitle:"windows wsl",charIndex:1283}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"windows dos windows wsl",content:'# windows dos\n * window常用DOS命令\n\n(1)cd..                         cd..       退到次一级目录\n   cd\\                          cd\\        退到根目录下的意思\n   cd 文件夹名字                cd windows 进入WINDOWS目录\n\n(2)md 文件夹名字     md win     建立名为win的文件夹\n\n(3)rd 文件夹名字     rd win     删除名为win的文件夹\n\n(4)copy 路径下文件 目标路径     拷贝文件\n\n(5)del 目标路径下文件           删除文件\n\n(6)dir 文件夹名字或盘符         dir c:\\windows  查看C盘windows里目录文件\n\ndir/W：宽屏显示，一排显示5个文件名，而不会显示修改时间，文件大小等信息；\ndir/S：显示当前目录及其子目录下所有的文件\ndir/a 查看所有文件包括隐藏文件\ndir/p 分页查看\n\n(7)format 盘符   格式化硬盘\n\n(8)ren 文件名 文件名  改名   ren 1.bat 2.bat\n\n(9)type 文件名  查看文件内容（一般用来看bat或txt文件）\n\n(10)cls  清屏\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * 常用网络DOS命令\n\n(1)fport                         查看系统端口和端口上运行的程序\n(2)netstat -an                    查看所有连接本机IP\n(3)ipconfig /all                  查看所有连接本机IP\n(4)telnet IP 端口                 连接对方机器某个端口\n(5)net user                       查看本机用户\n    net user 用户名 密码 /add      建立一个用户\n    net user 用户名 /del          删除一个用户\n(6)net localgroup administrators 用户名 /add   把用户添加到管理员\n   net localgroup administrators 用户名 /del   把用户从管理员组删除\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 查找所有运行的端口netstat -ano\n * 查看被占用的端口对应的 PID netstat -ano | findstr "8081"\n * 查看指定 PID 进程 tasklist | findstr "9088"\n * 结束进程 taskkill /T /F /PID 9088 强制(/F)杀死pid为9088的所有进程包括子进程(/T)\n\n# windows wsl\n * wsl/install-win10\n\n\n bcdedit /set hypervisorlaunchtype auto ；\n\n bcdedit /set hypervisorlaunchtype off ；\n\n# 管理员运行：\nEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux\n\n\n1\n2\n3\n4\n5\n6\n7\n * wslconfig 命令进行管理\n\n# wslconfig 查看安装的linux子系统\nwslconfig /list\n\n# 设置默认运行的linux系统\nwslconfig /setdefault <DistributionName>\n\n# 卸载linux系统\nwslconfig /unregister <DistributionName>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 设置默认 linux 登陆用户\n\nubuntu config --default-user root\n\nubuntu1804 config --default-user root\n\n\nubuntu config --default-user username\n\nhostname local-dev\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nWSL 中访问本地文件\n\n在“/mnt”目录下有“c”、“d”、“e”等文件夹，\n分别表示本地的C盘、D盘、E盘，直接cd到相应路径下即可\n\n\n1\n2\n * 修改 linux 密码\n\n# 在root用户下修改root密码\npasswd root\n\n# 切换用户\nsu root\n\n\n1\n2\n3\n4\n5\n * use node.js\n\ncurl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n\napt install nodejs\napt install npm\n\nwget https://npm.taobao.org/mirrors/node/v10.8.0/node-v10.8.0-linux-x64.tar.xz\n\nxz -d /node-v10.8.0-linux-x64.tar.xz\ntar -xvf /node-v10.8.0-linux-x64.tar\n\nsudo ln -s /node-v10.8.0-linux-x64/bin/node /usr/bin/node\nsudo ln -s /node-v10.8.0-linux-x64/bin/npm /usr/bin/npm\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * .bashrc\n\nexport PATH=$HOME/bin:/usr/local/bin:/usr/bin:$PATH\n\n\n1\n * mirrors\n\nsed -i "s@http://deb.debian.org@https://mirrors.xxx.com@g" /etc/apt/sources.list\n\nhttps://www.debian.org/mirror/list\n\nhttps://mirrors.tuna.tsinghua.edu.cn\nhttps://mirrors.huaweicloud.com\nhttp://mirrors.aliyun.com\nhttps://mirrors.ustc.edu.cn\nhttp://mirrors.163.com\n\napt-get install apt-transport-https && apt-get update\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11',normalizedContent:'# windows dos\n * window常用dos命令\n\n(1)cd..                         cd..       退到次一级目录\n   cd\\                          cd\\        退到根目录下的意思\n   cd 文件夹名字                cd windows 进入windows目录\n\n(2)md 文件夹名字     md win     建立名为win的文件夹\n\n(3)rd 文件夹名字     rd win     删除名为win的文件夹\n\n(4)copy 路径下文件 目标路径     拷贝文件\n\n(5)del 目标路径下文件           删除文件\n\n(6)dir 文件夹名字或盘符         dir c:\\windows  查看c盘windows里目录文件\n\ndir/w：宽屏显示，一排显示5个文件名，而不会显示修改时间，文件大小等信息；\ndir/s：显示当前目录及其子目录下所有的文件\ndir/a 查看所有文件包括隐藏文件\ndir/p 分页查看\n\n(7)format 盘符   格式化硬盘\n\n(8)ren 文件名 文件名  改名   ren 1.bat 2.bat\n\n(9)type 文件名  查看文件内容（一般用来看bat或txt文件）\n\n(10)cls  清屏\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * 常用网络dos命令\n\n(1)fport                         查看系统端口和端口上运行的程序\n(2)netstat -an                    查看所有连接本机ip\n(3)ipconfig /all                  查看所有连接本机ip\n(4)telnet ip 端口                 连接对方机器某个端口\n(5)net user                       查看本机用户\n    net user 用户名 密码 /add      建立一个用户\n    net user 用户名 /del          删除一个用户\n(6)net localgroup administrators 用户名 /add   把用户添加到管理员\n   net localgroup administrators 用户名 /del   把用户从管理员组删除\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 查找所有运行的端口netstat -ano\n * 查看被占用的端口对应的 pid netstat -ano | findstr "8081"\n * 查看指定 pid 进程 tasklist | findstr "9088"\n * 结束进程 taskkill /t /f /pid 9088 强制(/f)杀死pid为9088的所有进程包括子进程(/t)\n\n# windows wsl\n * wsl/install-win10\n\n\n bcdedit /set hypervisorlaunchtype auto ；\n\n bcdedit /set hypervisorlaunchtype off ；\n\n# 管理员运行：\nenable-windowsoptionalfeature -online -featurename microsoft-windows-subsystem-linux\n\n\n1\n2\n3\n4\n5\n6\n7\n * wslconfig 命令进行管理\n\n# wslconfig 查看安装的linux子系统\nwslconfig /list\n\n# 设置默认运行的linux系统\nwslconfig /setdefault <distributionname>\n\n# 卸载linux系统\nwslconfig /unregister <distributionname>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 设置默认 linux 登陆用户\n\nubuntu config --default-user root\n\nubuntu1804 config --default-user root\n\n\nubuntu config --default-user username\n\nhostname local-dev\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nwsl 中访问本地文件\n\n在“/mnt”目录下有“c”、“d”、“e”等文件夹，\n分别表示本地的c盘、d盘、e盘，直接cd到相应路径下即可\n\n\n1\n2\n * 修改 linux 密码\n\n# 在root用户下修改root密码\npasswd root\n\n# 切换用户\nsu root\n\n\n1\n2\n3\n4\n5\n * use node.js\n\ncurl -sl https://deb.nodesource.com/setup_12.x | sudo -e bash -\nsudo apt-get install -y nodejs\n\n\napt install nodejs\napt install npm\n\nwget https://npm.taobao.org/mirrors/node/v10.8.0/node-v10.8.0-linux-x64.tar.xz\n\nxz -d /node-v10.8.0-linux-x64.tar.xz\ntar -xvf /node-v10.8.0-linux-x64.tar\n\nsudo ln -s /node-v10.8.0-linux-x64/bin/node /usr/bin/node\nsudo ln -s /node-v10.8.0-linux-x64/bin/npm /usr/bin/npm\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * .bashrc\n\nexport path=$home/bin:/usr/local/bin:/usr/bin:$path\n\n\n1\n * mirrors\n\nsed -i "s@http://deb.debian.org@https://mirrors.xxx.com@g" /etc/apt/sources.list\n\nhttps://www.debian.org/mirror/list\n\nhttps://mirrors.tuna.tsinghua.edu.cn\nhttps://mirrors.huaweicloud.com\nhttp://mirrors.aliyun.com\nhttps://mirrors.ustc.edu.cn\nhttp://mirrors.163.com\n\napt-get install apt-transport-https && apt-get update\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11',charsets:{cjk:!0}},{title:"docker-compose命令",frontmatter:{title:"docker-compose命令",date:"2020-07-23T00:00:00.000Z",sidebar:"auto",tags:["docker"],categories:["server"],readingShow:"top"},regularPath:"/serve/docker-compose.html",relativePath:"serve/docker-compose.md",key:"v-68f2ea4d",path:"/serve/docker-compose.html",headers:[{level:2,title:"Compose 命令说明",slug:"compose-命令说明",normalizedTitle:"compose 命令说明",charIndex:2},{level:2,title:"Compose 模板文件",slug:"compose-模板文件",normalizedTitle:"compose 模板文件",charIndex:225},{level:2,title:"参考示例",slug:"参考示例",normalizedTitle:"参考示例",charIndex:3534}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"Compose 命令说明 Compose 模板文件 参考示例",content:'# Compose 命令说明\n# https://docs.docker.com/compose/reference/overview/\n# https://yeasy.gitbooks.io/docker_practice/compose/commands.html\n\ndocker-compose [-f=<arg>...] [options] [COMMAND] [ARGS...]\n选项：\n    -f, --file FILE 指定使用的 Compose 模板文件，默认为 docker-compose.yml，可以多次指定\n    -p, --project-name NAME 指定项目名称，默认将使用所在目录名称作为项目名\n    --x-networking 使用 Docker 的可拔插网络后端特性\n    --x-network-driver DRIVER 指定网络后端的驱动，默认为 bridge\n    --verbose 输出更多调试信息\n    -v, --version 打印版本并退出\n\n# 列出 Compose 文件中包含的镜像\ndocker-compose images\n\n# 进入指定的容器\ndocker-compose exec\n\n# 此命令将会停止 up 命令所启动的容器，并移除网络\ndocker-compose down\n\n# 验证 Compose 文件格式是否正确，若正确则显示配置，若格式错误显示错误原因\ndocker-compose config\n\n# 自动完成包括构建镜像，（重新）创建服务，启动服务\ndocker-compose up [options] [SERVICE...]\n选项：\n  -d 在后台运行服务容器\n  --no-color 不使用颜色来区分不同的服务的控制台输出\n  --no-deps 不启动服务所链接的容器\n  --force-recreate 强制重新创建容器，不能与 --no-recreate 同时使用\n  --no-recreate 如果容器已经存在了，则不重新创建，不能与 --force-recreate 同时使用\n  --no-build 不自动构建缺失的服务镜像\n  -t, --timeout TIMEOUT 停止容器时候的超时（默认为 10 秒）\n\n# 启动已经存在的服务容器\ndocker-compose start [SERVICE...]\n\n# 停止已经处于运行状态的容器，但不删除它。\n# 通过 docker-compose start 可以再次启动这些容器\ndocker-compose stop [options] [SERVICE...]\n\n# 通过发送 SIGKILL 信号来强制停止服务容器\ndocker-compose kill [options] [SERVICE...]\n# 例如: docker-compose kill -s SIGINT\n\n# 查看服务容器的输出\ndocker-compose logs [options] [SERVICE...]\n\n# 暂停一个服务容器\ndocker-compose pause [SERVICE...]\n\n# 恢复处于暂停状态中的服务\ndocker-compose unpause [SERVICE...]\n\n# 重启项目中的服务\ndocker-compose restart [options] [SERVICE...]\n选项：\n    -t, --timeout TIMEOUT 指定重启前停止容器的超时（默认为 10 秒）\n\n# 删除所有（停止状态的）服务容器。推荐先执行 docker-compose stop 命令来停止容器\ndocker-compose rm [options] [SERVICE...]\n选项：\n    -f, --force 强制直接删除，包括非停止状态的容器。一般尽量不要使用该选项\n    -v 删除容器所挂载的数据卷\n\n# 拉取服务依赖的镜像\ndocker-compose pull [options] [SERVICE...]\n选项：\n    --ignore-pull-failures 忽略拉取镜像过程中的错误\n\n# 推送服务依赖的镜像到 Docker 镜像仓库\ndocker-compose push\n\n# 打印某个容器端口所映射的公共端口\ndocker-compose port [options] SERVICE PRIVATE_PORT\n选项：\n    --protocol=proto 指定端口协议，tcp（默认值）或者 udp。\n    --index=index 如果同一服务存在多个容器，指定命令对象容器的序号（默认为 1）\n\n# 列出项目中目前的所有容器\ndocker-compose ps [options] [SERVICE...]\n选项：\n    -q 只打印容器的 ID 信息\n\n# 在指定服务上执行一个命令\ndocker-compose run [options] [-p PORT...] [-e KEY=VAL...] SERVICE [COMMAND] [ARGS...]\n# 例如: docker-compose run ubuntu ping www.baidu.com\n\n# 构建（重新构建）项目中的服务容器\ndocker-compose build [options] [SERVICE...]\n选项包括：\n    --force-rm 删除构建过程中的临时容器\n    --no-cache 构建镜像过程中不使用 cache（这将加长构建过程）\n    --pull 始终尝试通过 pull 来获取更新版本的镜像\n\n# 查看各个服务容器内运行的进程\ndocker-compose top\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n# Compose 模板文件\n * 默认的模板文件名称为 docker-compose.yml，格式为 YAML 格式\n\n# https://docs.docker.com/compose/compose-file/\n# https://yeasy.gitbooks.io/docker_practice/compose/compose_file.html\n\nversion\nservices\nbuild\ncapadd, capdrop\ncommand\nconfigs\ncgroup_parent\ncontainer_name\ndeploy\ndevices\ndepends_on\ndns\ndns_search\ntmpfs\nenv_file\nenvironment\nexpose\nexternal_links\nextra_hosts\nhealthcheck\nimage\nlabels\nlinks # v3不建议使用\nlogging\nnetwork_mode\nnetworks\npid\nports\nsecrets\nsecurity_opt\nstop_signal\nsysctls\nulimits\nvolumes\n\n# 其它指令\ndomainname, entrypoint, hostname, ipc, mac_address, privileged,\nread_only, shm_size, restart, stdin_open, tty, user, working_dir\n\n# 读取变量\nCompose 模板文件支持动态读取主机的系统环境变量和当前目录下的 .env 文件中的变量\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# 参考示例\nversion: \'2\'\n\nservices:\n  redis:\n    image: redis:latest\n    ports:\n      - "6379:6379"\n    networks:\n      - lognet\n\n  app:\n    container_name: web-app\n    build:\n      context: .\n      dockerfile: Dockerfile\n    ports:\n      - "3000:3000"\n    volumes:\n      - ".:/webapp"\n    depends_on:\n      - redis\n    networks:\n      - lognet\n\nnetworks:\n  lognet:\n    driver: bridge\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27',normalizedContent:'# compose 命令说明\n# https://docs.docker.com/compose/reference/overview/\n# https://yeasy.gitbooks.io/docker_practice/compose/commands.html\n\ndocker-compose [-f=<arg>...] [options] [command] [args...]\n选项：\n    -f, --file file 指定使用的 compose 模板文件，默认为 docker-compose.yml，可以多次指定\n    -p, --project-name name 指定项目名称，默认将使用所在目录名称作为项目名\n    --x-networking 使用 docker 的可拔插网络后端特性\n    --x-network-driver driver 指定网络后端的驱动，默认为 bridge\n    --verbose 输出更多调试信息\n    -v, --version 打印版本并退出\n\n# 列出 compose 文件中包含的镜像\ndocker-compose images\n\n# 进入指定的容器\ndocker-compose exec\n\n# 此命令将会停止 up 命令所启动的容器，并移除网络\ndocker-compose down\n\n# 验证 compose 文件格式是否正确，若正确则显示配置，若格式错误显示错误原因\ndocker-compose config\n\n# 自动完成包括构建镜像，（重新）创建服务，启动服务\ndocker-compose up [options] [service...]\n选项：\n  -d 在后台运行服务容器\n  --no-color 不使用颜色来区分不同的服务的控制台输出\n  --no-deps 不启动服务所链接的容器\n  --force-recreate 强制重新创建容器，不能与 --no-recreate 同时使用\n  --no-recreate 如果容器已经存在了，则不重新创建，不能与 --force-recreate 同时使用\n  --no-build 不自动构建缺失的服务镜像\n  -t, --timeout timeout 停止容器时候的超时（默认为 10 秒）\n\n# 启动已经存在的服务容器\ndocker-compose start [service...]\n\n# 停止已经处于运行状态的容器，但不删除它。\n# 通过 docker-compose start 可以再次启动这些容器\ndocker-compose stop [options] [service...]\n\n# 通过发送 sigkill 信号来强制停止服务容器\ndocker-compose kill [options] [service...]\n# 例如: docker-compose kill -s sigint\n\n# 查看服务容器的输出\ndocker-compose logs [options] [service...]\n\n# 暂停一个服务容器\ndocker-compose pause [service...]\n\n# 恢复处于暂停状态中的服务\ndocker-compose unpause [service...]\n\n# 重启项目中的服务\ndocker-compose restart [options] [service...]\n选项：\n    -t, --timeout timeout 指定重启前停止容器的超时（默认为 10 秒）\n\n# 删除所有（停止状态的）服务容器。推荐先执行 docker-compose stop 命令来停止容器\ndocker-compose rm [options] [service...]\n选项：\n    -f, --force 强制直接删除，包括非停止状态的容器。一般尽量不要使用该选项\n    -v 删除容器所挂载的数据卷\n\n# 拉取服务依赖的镜像\ndocker-compose pull [options] [service...]\n选项：\n    --ignore-pull-failures 忽略拉取镜像过程中的错误\n\n# 推送服务依赖的镜像到 docker 镜像仓库\ndocker-compose push\n\n# 打印某个容器端口所映射的公共端口\ndocker-compose port [options] service private_port\n选项：\n    --protocol=proto 指定端口协议，tcp（默认值）或者 udp。\n    --index=index 如果同一服务存在多个容器，指定命令对象容器的序号（默认为 1）\n\n# 列出项目中目前的所有容器\ndocker-compose ps [options] [service...]\n选项：\n    -q 只打印容器的 id 信息\n\n# 在指定服务上执行一个命令\ndocker-compose run [options] [-p port...] [-e key=val...] service [command] [args...]\n# 例如: docker-compose run ubuntu ping www.baidu.com\n\n# 构建（重新构建）项目中的服务容器\ndocker-compose build [options] [service...]\n选项包括：\n    --force-rm 删除构建过程中的临时容器\n    --no-cache 构建镜像过程中不使用 cache（这将加长构建过程）\n    --pull 始终尝试通过 pull 来获取更新版本的镜像\n\n# 查看各个服务容器内运行的进程\ndocker-compose top\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n# compose 模板文件\n * 默认的模板文件名称为 docker-compose.yml，格式为 yaml 格式\n\n# https://docs.docker.com/compose/compose-file/\n# https://yeasy.gitbooks.io/docker_practice/compose/compose_file.html\n\nversion\nservices\nbuild\ncapadd, capdrop\ncommand\nconfigs\ncgroup_parent\ncontainer_name\ndeploy\ndevices\ndepends_on\ndns\ndns_search\ntmpfs\nenv_file\nenvironment\nexpose\nexternal_links\nextra_hosts\nhealthcheck\nimage\nlabels\nlinks # v3不建议使用\nlogging\nnetwork_mode\nnetworks\npid\nports\nsecrets\nsecurity_opt\nstop_signal\nsysctls\nulimits\nvolumes\n\n# 其它指令\ndomainname, entrypoint, hostname, ipc, mac_address, privileged,\nread_only, shm_size, restart, stdin_open, tty, user, working_dir\n\n# 读取变量\ncompose 模板文件支持动态读取主机的系统环境变量和当前目录下的 .env 文件中的变量\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# 参考示例\nversion: \'2\'\n\nservices:\n  redis:\n    image: redis:latest\n    ports:\n      - "6379:6379"\n    networks:\n      - lognet\n\n  app:\n    container_name: web-app\n    build:\n      context: .\n      dockerfile: dockerfile\n    ports:\n      - "3000:3000"\n    volumes:\n      - ".:/webapp"\n    depends_on:\n      - redis\n    networks:\n      - lognet\n\nnetworks:\n  lognet:\n    driver: bridge\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27',charsets:{cjk:!0}},{title:"docker使用示例",frontmatter:{title:"docker使用示例",date:"2020-07-22T00:00:00.000Z",sidebar:"auto",tags:["docker"],categories:["server"],readingShow:"top"},regularPath:"/serve/docker-stu.html",relativePath:"serve/docker-stu.md",key:"v-13384609",path:"/serve/docker-stu.html",headers:[{level:2,title:"centos ssh",slug:"centos-ssh",normalizedTitle:"centos ssh",charIndex:2},{level:3,title:"方式一",slug:"方式一",normalizedTitle:"方式一",charIndex:15},{level:3,title:"方式二",slug:"方式二",normalizedTitle:"方式二",charIndex:1232},{level:2,title:"YApi",slug:"yapi",normalizedTitle:"yapi",charIndex:2298},{level:2,title:"nginx",slug:"nginx",normalizedTitle:"nginx",charIndex:2654},{level:2,title:"mongo",slug:"mongo",normalizedTitle:"mongo",charIndex:2360},{level:2,title:"mysql",slug:"mysql",normalizedTitle:"mysql",charIndex:3906},{level:2,title:"redis",slug:"redis",normalizedTitle:"redis",charIndex:5019},{level:2,title:"registry",slug:"registry",normalizedTitle:"registry",charIndex:2446}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"centos ssh 方式一 方式二 YApi nginx mongo mysql redis registry",content:"# centos ssh\n# 方式一\n * Dockerfile\n\n# Dockerfile\n# 生成的新镜像以centos镜像为基础\nFROM centos\n\n# 安装openssh-server\nRUN yum install passwd openssl openssh-server openssh-clients -y\n\nRUN ssh-keygen -q -t rsa -b 2048 -f /etc/ssh/ssh_host_rsa_key -N ''\nRUN ssh-keygen -q -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -N ''\nRUN ssh-keygen -t dsa -f /etc/ssh/ssh_host_ed25519_key  -N ''\n\nRUN sed -i \"s/#UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g\" /etc/ssh/sshd_config\nRUN sed -i \"s/UsePAM.*/UsePAM no/g\" /etc/ssh/sshd_config\n# 指定root密码\nRUN /bin/echo 'root:admin'|chpasswd\n\nEXPOSE 22\n\n# CMD /usr/sbin/sshd -D\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * docker - run\n\n# 进入Dockerfile所在文件夹运行如下\n\n# 构建Dockerfile\ndocker build -t ssh-centos .\n\n# 运行查看构建成功的image信息\ndocker images\n\n# 运行生成的image, containername为运行容器的名字, imageid为image的id\ndocker run -itd --name containername -p 10020:20  imageid\n\n# ssh连接centos\nssh root@127.0.0.1 -p 10020\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * docker-compose.yml\n\nversion: '2'\nservices:\n  centos-ssh:\n    build: .\n    image: 'czh/centos-ssh'\n    restart: always\n    container_name: centos-ssh\n    ports:\n      - '10020:22'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * ssh 连接 centos: ssh root@127.0.0.1 -p 10020\n\n# 方式二\n * Dockerfile\n\n# Dockerfile\n# 生成的新镜像以centos镜像为基础\nFROM centos\n\n# 安装openssh-server\nRUN yum install passwd openssl openssh-server openssh-clients -y\n\nRUN ssh-keygen -q -t rsa -b 2048 -f /etc/ssh/ssh_host_rsa_key -N ''\nRUN ssh-keygen -q -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -N ''\nRUN ssh-keygen -t dsa -f /etc/ssh/ssh_host_ed25519_key  -N ''\n\nRUN sed -i \"s/#UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g\" /etc/ssh/sshd_config\nRUN sed -i \"s/UsePAM.*/UsePAM no/g\" /etc/ssh/sshd_config\n\n# 指定root密码\nARG ROOTPWD\nRUN /bin/echo \"${ROOTPWD}\" |chpasswd\n\nEXPOSE 22\n\nCMD /usr/sbin/sshd -D\n# CMD [\"/usr/sbin/sshd\", \"-D\"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n * docker-compose.yml\n\nversion: '3'\nservices:\n  centos-ssh:\n    build:\n      context: .\n      dockerfile: ./Dockerfile\n      args:\n        ROOTPWD: root:admin\n    image: czh/centos-ssh\n    restart: always\n    container_name: centos-ssh\n    ports:\n      - '10010:22'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * docker-compose -f \"docker-compose.yml\" up -d --build\n * ssh root@127.0.0.1 -p 10020\n\n# YApi\n * YApi for Mac\n\n- docker run -d -p 27017:27017 --name mymongo -v /Users/pc/srv/mongodb/db:/data/db  mongo:latest\n\n- npm install -g yapi-cli --registry https://registry.npm.taobao.org\n\n- yapi server\n\n- http://0.0.0.0:9090/\n\n- node vendors/server/app.js\n\n- http://127.0.0.1:3000\n\n- 账号名：\"admin@admin.com\"，密码：\"ymfe.org\"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# nginx\ndocker run --name some-nginx -v E:\\huashu\\api911\\gaiban\\nginx.conf:/etc/nginx/nginx.conf:ro -v E:\\huashu\\api911\\gaiban:/usr/share/nginx/html:ro -p 80:80 -d  4610\n\n\n1\n# mongo\n# https://brickyang.github.io/2017/03/15/%E5%88%A9%E7%94%A8-Docker-%E8%BF%90%E8%A1%8C-MongoDB/\n\ndocker pull mongo\n\n# docker run --name some-mongo -p 27017:27017  -d mongo:tag\n\n# docker run --name <YOUR-NAME> -p 27017:27017 -v /data/db:/data/db -d mongo:3.4 --auth\n\n# docker run -d -p 27017:27017 -v mongo_configdb:/data/configdb -v mongo_db:/data/db --name mongo mongo:latest\n\n# docker run -d -p 27017:27017 -v ${PWD}/data:/data/db --name mongo mongo:latest\n\ndocker volume create my-mongo-db\ndocker volume create my-mongo-configdb\n\ndocker run -d -p 27017:27017 --name mymongo -v my-mongo-db:/data/db  -v my-mongo-configdb:/data/configdb mongo:latest\n\ndocker exec -it mymongo mongo\n\nuse admin\ndb.createUser({user: \"root\", pwd: \"root\", roles: [{role: \"userAdminAnyDatabase\", db: \"admin\"}]})\ndb.auth('root','root') // 1\n\nuse todos\ndb.createUser({user: \"czh\", pwd: \"czh\", roles: [{role: \"readWrite\", db: \"todos\"}]})\ndb.auth('czh', 'czh') // 1\n\nuse admin\n# 删除czh用户\ndb.dropUser('czh') // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# mysql\n# mysql版本\nmysql: 8\n\n# 下载\ndocker pull mysql\n\n# 启动容器\n# docker run -p 3306:3306 --name mymysql -v $PWD/conf:/etc/mysql/conf.d -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:latest\n\n# docker run -p 3306:3306 --name mymysql -v $PWD/logs:/logs -v $PWD/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=admin -d mysql:latest\n\n# docker run -p 3306:3306 --name mymysql -v E:/mysql/logs:/logs -v E:mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=admin -d mysql:latest\n\ndocker volume create my-vol-mysql\n\ndocker run -p 3306:3306 --name mymysql -v my-vol-mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=admin -d mysql:latest\n\n# 进入容器\ndocker exec -it mymysql bash\n\n# 登录mysql\nmysql -u root -p\n\nALTER USER 'root'@'localhost' IDENTIFIED BY 'admin';\n\n# 添加远程登录用户\nCREATE USER 'czh'@'%' IDENTIFIED WITH mysql_native_password BY 'admin@!123';\n\nGRANT ALL PRIVILEGES ON *.* TO 'czh'@'%';\n\n# 编码\nhttps://blog.csdn.net/m0_37639542/article/details/72852875\nhttps://www.cnblogs.com/jiangxiaobo/p/6110647.html\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# redis\ndocker pull redis\n\ndocker volume create my-vol-redis\n\n# docker run -p 6379:6379 -v $PWD/data:/data  -d redis redis-server --appendonly yes\ndocker run -p 6379:6379 --name myredis  -v my-vol-redis:/data  -d redis redis-server --appendonly yes\n\ndocker exec -it myredis redis-cli\n\ninfo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# registry\n\ndocker run -d -p 5000:5000 --restart always -v /Users/pc/srv/registry:/var/lib/registry --name registry registry:2\n\n# 用 curl 查看仓库中的镜像\ncurl 127.0.0.1:5000/v2/_catalog\n\n# pull\ndocker pull ubuntu\n\n# tag\ndocker tag ubuntu localhost:5000/ubuntu\n\n# push\ndocker push localhost:5000/ubuntu\n\n# rm image\ndocker image rm localhost:5000/ubuntu\n\n# pull\ndocker pull localhost:5000/ubuntu\n\n# ip 推送\n{\n  \"registry-mirror\": [\n    \"https://registry.docker-cn.com\"\n  ],\n  \"insecure-registries\": [\n    \"192.168.199.100:5000\"\n  ]\n}\n\n# webui\nhttps://github.com/mkuchin/docker-registry-web\nhttps://github.com/kwk/docker-registry-frontend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34",normalizedContent:"# centos ssh\n# 方式一\n * dockerfile\n\n# dockerfile\n# 生成的新镜像以centos镜像为基础\nfrom centos\n\n# 安装openssh-server\nrun yum install passwd openssl openssh-server openssh-clients -y\n\nrun ssh-keygen -q -t rsa -b 2048 -f /etc/ssh/ssh_host_rsa_key -n ''\nrun ssh-keygen -q -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -n ''\nrun ssh-keygen -t dsa -f /etc/ssh/ssh_host_ed25519_key  -n ''\n\nrun sed -i \"s/#useprivilegeseparation.*/useprivilegeseparation no/g\" /etc/ssh/sshd_config\nrun sed -i \"s/usepam.*/usepam no/g\" /etc/ssh/sshd_config\n# 指定root密码\nrun /bin/echo 'root:admin'|chpasswd\n\nexpose 22\n\n# cmd /usr/sbin/sshd -d\ncmd [\"/usr/sbin/sshd\", \"-d\"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * docker - run\n\n# 进入dockerfile所在文件夹运行如下\n\n# 构建dockerfile\ndocker build -t ssh-centos .\n\n# 运行查看构建成功的image信息\ndocker images\n\n# 运行生成的image, containername为运行容器的名字, imageid为image的id\ndocker run -itd --name containername -p 10020:20  imageid\n\n# ssh连接centos\nssh root@127.0.0.1 -p 10020\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * docker-compose.yml\n\nversion: '2'\nservices:\n  centos-ssh:\n    build: .\n    image: 'czh/centos-ssh'\n    restart: always\n    container_name: centos-ssh\n    ports:\n      - '10020:22'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * ssh 连接 centos: ssh root@127.0.0.1 -p 10020\n\n# 方式二\n * dockerfile\n\n# dockerfile\n# 生成的新镜像以centos镜像为基础\nfrom centos\n\n# 安装openssh-server\nrun yum install passwd openssl openssh-server openssh-clients -y\n\nrun ssh-keygen -q -t rsa -b 2048 -f /etc/ssh/ssh_host_rsa_key -n ''\nrun ssh-keygen -q -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -n ''\nrun ssh-keygen -t dsa -f /etc/ssh/ssh_host_ed25519_key  -n ''\n\nrun sed -i \"s/#useprivilegeseparation.*/useprivilegeseparation no/g\" /etc/ssh/sshd_config\nrun sed -i \"s/usepam.*/usepam no/g\" /etc/ssh/sshd_config\n\n# 指定root密码\narg rootpwd\nrun /bin/echo \"${rootpwd}\" |chpasswd\n\nexpose 22\n\ncmd /usr/sbin/sshd -d\n# cmd [\"/usr/sbin/sshd\", \"-d\"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n * docker-compose.yml\n\nversion: '3'\nservices:\n  centos-ssh:\n    build:\n      context: .\n      dockerfile: ./dockerfile\n      args:\n        rootpwd: root:admin\n    image: czh/centos-ssh\n    restart: always\n    container_name: centos-ssh\n    ports:\n      - '10010:22'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * docker-compose -f \"docker-compose.yml\" up -d --build\n * ssh root@127.0.0.1 -p 10020\n\n# yapi\n * yapi for mac\n\n- docker run -d -p 27017:27017 --name mymongo -v /users/pc/srv/mongodb/db:/data/db  mongo:latest\n\n- npm install -g yapi-cli --registry https://registry.npm.taobao.org\n\n- yapi server\n\n- http://0.0.0.0:9090/\n\n- node vendors/server/app.js\n\n- http://127.0.0.1:3000\n\n- 账号名：\"admin@admin.com\"，密码：\"ymfe.org\"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# nginx\ndocker run --name some-nginx -v e:\\huashu\\api911\\gaiban\\nginx.conf:/etc/nginx/nginx.conf:ro -v e:\\huashu\\api911\\gaiban:/usr/share/nginx/html:ro -p 80:80 -d  4610\n\n\n1\n# mongo\n# https://brickyang.github.io/2017/03/15/%e5%88%a9%e7%94%a8-docker-%e8%bf%90%e8%a1%8c-mongodb/\n\ndocker pull mongo\n\n# docker run --name some-mongo -p 27017:27017  -d mongo:tag\n\n# docker run --name <your-name> -p 27017:27017 -v /data/db:/data/db -d mongo:3.4 --auth\n\n# docker run -d -p 27017:27017 -v mongo_configdb:/data/configdb -v mongo_db:/data/db --name mongo mongo:latest\n\n# docker run -d -p 27017:27017 -v ${pwd}/data:/data/db --name mongo mongo:latest\n\ndocker volume create my-mongo-db\ndocker volume create my-mongo-configdb\n\ndocker run -d -p 27017:27017 --name mymongo -v my-mongo-db:/data/db  -v my-mongo-configdb:/data/configdb mongo:latest\n\ndocker exec -it mymongo mongo\n\nuse admin\ndb.createuser({user: \"root\", pwd: \"root\", roles: [{role: \"useradminanydatabase\", db: \"admin\"}]})\ndb.auth('root','root') // 1\n\nuse todos\ndb.createuser({user: \"czh\", pwd: \"czh\", roles: [{role: \"readwrite\", db: \"todos\"}]})\ndb.auth('czh', 'czh') // 1\n\nuse admin\n# 删除czh用户\ndb.dropuser('czh') // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# mysql\n# mysql版本\nmysql: 8\n\n# 下载\ndocker pull mysql\n\n# 启动容器\n# docker run -p 3306:3306 --name mymysql -v $pwd/conf:/etc/mysql/conf.d -v $pwd/logs:/logs -v $pwd/data:/var/lib/mysql -e mysql_root_password=123456 -d mysql:latest\n\n# docker run -p 3306:3306 --name mymysql -v $pwd/logs:/logs -v $pwd/data:/var/lib/mysql -e mysql_root_password=admin -d mysql:latest\n\n# docker run -p 3306:3306 --name mymysql -v e:/mysql/logs:/logs -v e:mysql/data:/var/lib/mysql -e mysql_root_password=admin -d mysql:latest\n\ndocker volume create my-vol-mysql\n\ndocker run -p 3306:3306 --name mymysql -v my-vol-mysql:/var/lib/mysql -e mysql_root_password=admin -d mysql:latest\n\n# 进入容器\ndocker exec -it mymysql bash\n\n# 登录mysql\nmysql -u root -p\n\nalter user 'root'@'localhost' identified by 'admin';\n\n# 添加远程登录用户\ncreate user 'czh'@'%' identified with mysql_native_password by 'admin@!123';\n\ngrant all privileges on *.* to 'czh'@'%';\n\n# 编码\nhttps://blog.csdn.net/m0_37639542/article/details/72852875\nhttps://www.cnblogs.com/jiangxiaobo/p/6110647.html\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# redis\ndocker pull redis\n\ndocker volume create my-vol-redis\n\n# docker run -p 6379:6379 -v $pwd/data:/data  -d redis redis-server --appendonly yes\ndocker run -p 6379:6379 --name myredis  -v my-vol-redis:/data  -d redis redis-server --appendonly yes\n\ndocker exec -it myredis redis-cli\n\ninfo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# registry\n\ndocker run -d -p 5000:5000 --restart always -v /users/pc/srv/registry:/var/lib/registry --name registry registry:2\n\n# 用 curl 查看仓库中的镜像\ncurl 127.0.0.1:5000/v2/_catalog\n\n# pull\ndocker pull ubuntu\n\n# tag\ndocker tag ubuntu localhost:5000/ubuntu\n\n# push\ndocker push localhost:5000/ubuntu\n\n# rm image\ndocker image rm localhost:5000/ubuntu\n\n# pull\ndocker pull localhost:5000/ubuntu\n\n# ip 推送\n{\n  \"registry-mirror\": [\n    \"https://registry.docker-cn.com\"\n  ],\n  \"insecure-registries\": [\n    \"192.168.199.100:5000\"\n  ]\n}\n\n# webui\nhttps://github.com/mkuchin/docker-registry-web\nhttps://github.com/kwk/docker-registry-frontend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34",charsets:{cjk:!0}},{title:"docker命令列表",frontmatter:{title:"docker命令列表",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["docker"],categories:["server"],readingShow:"top"},regularPath:"/serve/docker.html",relativePath:"serve/docker.md",key:"v-20211497",path:"/serve/docker.html",headers:[{level:2,title:"commands",slug:"commands",normalizedTitle:"commands",charIndex:2},{level:2,title:"基本命令",slug:"基本命令",normalizedTitle:"基本命令",charIndex:2467},{level:2,title:"参考示例",slug:"参考示例",normalizedTitle:"参考示例",charIndex:4807}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"commands 基本命令 参考示例",content:'# commands\n * .dockerignore\n\n.git\nnode_modules\nnpm-debug.log\n\n\n1\n2\n3\n * Dockerfile\n\nFROM, RUN, COPY, ADD, CMD, ENTRYPOINT, ENV, ARG,\nVOLUME, EXPOSE, WORKDIR, USER, HEALTHCHECK,\n\n# CMD\nshell 格式：CMD <命令>\nexec 格式：CMD ["可执行文件", "参数1", "参数2"...]\n\n\n1\n2\n3\n4\n5\n6\n * 编写Dockerfile文件\n\n# FROM node:8.4：该 image 文件继承官方的 node image，\n# 冒号表示标签，这里标签是8.4，即8.4版本的 node\nFROM node:8.4\n\n# COPY . /app：将当前目录下的所有文件（除了.dockerignore排除的路径），\n# 都拷贝进入 image 文件的/app目录\nCOPY . /app\n\n# WORKDIR /app：指定接下来的工作路径为/app\nWORKDIR /app\n\n# RUN npm install：在/app目录下，运行npm install命令安装依赖。\n# 注意，安装后所有的依赖，都将打包进入 image 文件\nRUN npm install --registry=https://registry.npm.taobao.org\n\n# EXPOSE 3000：将容器 3000 端口暴露出来， 允许外部连接这个端口\nEXPOSE 3000\n\n# 表示容器启动后自动执行node demos/01.js\nCMD node demos/01.js\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * RUN命令与CMD命令\n\n- RUN命令在 image 文件的构建阶段执行，执行结果都会打包进入 image 文件\n\n- CMD命令则是在容器启动后执行\n\n- 一个 Dockerfile 可以包含多个RUN命令,但是只能有一个CMD命令\n\n- 指定了CMD命令以后，docker run命令就不能附加命令了\n（比如前面的/bin/bash），否则它会覆盖CMD命令\n\n- docker run --rm -p 8000:3000 -it koa-demo:0.0.1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * docker image\n\n# 列出本机的所有 image 文件。\ndocker image ls\n\n# 删除 image 文件\ndocker image rm [imageName]\n\n# -f 表示Dockerfile所在路径\ndocker image build -f ./Dockerfile\n\n# 创建 image 文件 : docker image build\n# -t参数用来指定 image 文件的名字，后面还可以用冒号指定标签，\n# 点表示 Dockerfile 文件所在的路径\n\ndocker image build -t koa-demo .\ndocker image build -t koa-demo:0.0.1 .\n\n# 发布 image 文件\ndocker login  # 登录\n# 为本地的 image 标注用户名和版本\ndocker image tag [imageName] [username]/[repository]:[tag]\ndocker image tag koa-demos:0.0.1 test/koa-demos:0.0.1\n# 也可以不标注用户名，重新构建一下 image 文件\ndocker image build -t [username]/[repository]:[tag] .\n# 发布 image 文件\ndocker image push [username]/[repository]:[tag]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n * Docker Compose工具:管理多个容器的联动\n\n# https://yeasy.gitbooks.io/docker_practice/compose/commands.html\n\ndocker-compose --version # 查看版本\ndocker-compose up # 启动所有服务\ndocker-compose stop # 关闭所有服务\ndocker-compose rm  # 容器文件删除（容器必须已经停止运行）\n\n# 新建docker-compose.yml\nmysql:\n    image: mysql:5.7\n    environment:\n     - MYSQL_ROOT_PASSWORD=123456\n     - MYSQL_DATABASE=wordpress\nweb:\n    image: wordpress\n    links:\n     - mysql\n    environment:\n     - WORDPRESS_DB_PASSWORD=123456\n    ports:\n     - "127.0.0.3:8080:80"\n    working_dir: /var/www/html\n    volumes:\n     - wordpress:/var/www/html\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * 在容器的命令行，按下 Ctrl + c 停止 Node 进程，然后按下 Ctrl + d （或者输入 exit）退出容器\n\n# 基本命令\n * docker start与docker restart\n * docker logs\n * docker stop\n * docker exec\n * docker ps [-a]\n * docker attach 与 docker exec 进入容器\n * docker [-f] rm 删除容器\n * docker inspect\n * docker history 具体查看镜像内的历史记录\n * docker save 和 docker load\n * docker pull [选项] [Docker Registry url]<仓库名>:<标签>\n\ndocker pull ubuntu:14.04\n\nDocker Registry url：<域名/IP>[:端口号]。默认 Docker Hub\n仓库名： <用户名>/<软件名>。默认为 library，也就是官方镜像\n\n\n1\n2\n3\n4\n * docker run [选项]\n\ndocker run -it --rm ubuntu:14.04 bash\n\n# 参数说明\n-it：这是两个参数，一个是 -i：交互式操作，一个是 -t 终端\n--rm：这个参数是说容器退出后随之将其删除\nubuntu:14.04：这是指用 ubuntu:14.04 镜像为基础来启动容器。\nbash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 bash\n--name：给容器起了一个名字\n-d: 容器运行在后台\n-p: 8080:80 表示端口映射，将宿主机的8080端口转发到容器内的80端口\n-v：表示需要将本地哪个目录挂载到容器中\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * docker images 列出镜像\n\ndocker images -f dangling=true  #显示虚悬镜像\ndocker rmi $(docker images -q -f dangling=true) #删除虚悬镜像\ndocker images -a  #显示中间层镜像\ndocker images ubuntu #列出部分镜像\ndocker images ubuntu:16.04\ndocker images -f since=mongo:3.2\ndocker images -f before=mongo:3.2\ndocker images -f label=com.example.version=0.1\ndocker images -q\ndocker images --format "{{.ID}}: {{.Repository}}"\ndocker images --format "table {{.ID}}\\t{{.Repository}}\\t{{.Tag}}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * docker commit [选项] <容器ID或容器名> [<仓库名>[:<标签>]]\n\n# 这条命令会用 nginx 镜像启动一个容器，命名为 webserver，并且映射了 80 端口，\n# 这样我们可以用浏览器去访问这个 nginx 服务器\ndocker run --name webserver -d -p 80:80 nginx\n\n# 修改内容\ndocker exec -it webserver bash\necho \'<h1>Hello, Docker!</h1>\' > /usr/share/nginx/html/index.html\n\n# 显示容器文件系统的前后变化\ndocker diff webserver\n\ndocker commit \\\n    --author "Author <Author@gmail.com>" \\\n    --message "修改了默认网页" \\\n    webserver \\\n    nginx:v2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * docker rmi [选项] <镜像1> [<镜像2> ...] 删除本地镜像\n\ndocker rmi $(docker images -q -f dangling=true)\ndocker rmi $(docker images -q redis)\n\n\n1\n2\n * docker volume\n\ndocker volume help\n\n# 创建一个数据卷\ndocker volume create my-vol\n\n# 查看所有的 数据卷\ndocker volume ls\n\n# 删除数据卷\ndocker rm my-vol\n\n# 如果需要在删除容器的同时移除数据卷\n可以在删除容器的时候使用 docker rm -v 这个命令\n\n# 无主的数据卷可能会占据很多空间，要清理请使用以下命令\ndocker volume prune\n\n# 查看指定 数据卷 的信息\ndocker volume inspect my-vol\n\n# 启动一个挂载数据卷的容器\ndocker run -d -P \\\n    --name web \\\n    # -v my-vol:/wepapp \\\n    --mount source=my-vol,target=/webapp \\\n    training/webapp \\\n    python app.py\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 参考示例\n * Docker —— 从入门到实践\n * judasn/Linux-Tutorial\n * Docker Desktop\n * Get Docker CE for CentOS\n * daocloud/Docker 入门\n * 基于 Docker 打造前端持续集成开发环境\n * Windows 下使用 docker 部署 gitlab CI 服务\n * Centos7 创建支持 ssh 服务器的 docker 容器\n * cr.console.aliyun\n * mirrors.aliyun\n * Play with Docker',normalizedContent:'# commands\n * .dockerignore\n\n.git\nnode_modules\nnpm-debug.log\n\n\n1\n2\n3\n * dockerfile\n\nfrom, run, copy, add, cmd, entrypoint, env, arg,\nvolume, expose, workdir, user, healthcheck,\n\n# cmd\nshell 格式：cmd <命令>\nexec 格式：cmd ["可执行文件", "参数1", "参数2"...]\n\n\n1\n2\n3\n4\n5\n6\n * 编写dockerfile文件\n\n# from node:8.4：该 image 文件继承官方的 node image，\n# 冒号表示标签，这里标签是8.4，即8.4版本的 node\nfrom node:8.4\n\n# copy . /app：将当前目录下的所有文件（除了.dockerignore排除的路径），\n# 都拷贝进入 image 文件的/app目录\ncopy . /app\n\n# workdir /app：指定接下来的工作路径为/app\nworkdir /app\n\n# run npm install：在/app目录下，运行npm install命令安装依赖。\n# 注意，安装后所有的依赖，都将打包进入 image 文件\nrun npm install --registry=https://registry.npm.taobao.org\n\n# expose 3000：将容器 3000 端口暴露出来， 允许外部连接这个端口\nexpose 3000\n\n# 表示容器启动后自动执行node demos/01.js\ncmd node demos/01.js\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * run命令与cmd命令\n\n- run命令在 image 文件的构建阶段执行，执行结果都会打包进入 image 文件\n\n- cmd命令则是在容器启动后执行\n\n- 一个 dockerfile 可以包含多个run命令,但是只能有一个cmd命令\n\n- 指定了cmd命令以后，docker run命令就不能附加命令了\n（比如前面的/bin/bash），否则它会覆盖cmd命令\n\n- docker run --rm -p 8000:3000 -it koa-demo:0.0.1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * docker image\n\n# 列出本机的所有 image 文件。\ndocker image ls\n\n# 删除 image 文件\ndocker image rm [imagename]\n\n# -f 表示dockerfile所在路径\ndocker image build -f ./dockerfile\n\n# 创建 image 文件 : docker image build\n# -t参数用来指定 image 文件的名字，后面还可以用冒号指定标签，\n# 点表示 dockerfile 文件所在的路径\n\ndocker image build -t koa-demo .\ndocker image build -t koa-demo:0.0.1 .\n\n# 发布 image 文件\ndocker login  # 登录\n# 为本地的 image 标注用户名和版本\ndocker image tag [imagename] [username]/[repository]:[tag]\ndocker image tag koa-demos:0.0.1 test/koa-demos:0.0.1\n# 也可以不标注用户名，重新构建一下 image 文件\ndocker image build -t [username]/[repository]:[tag] .\n# 发布 image 文件\ndocker image push [username]/[repository]:[tag]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n * docker compose工具:管理多个容器的联动\n\n# https://yeasy.gitbooks.io/docker_practice/compose/commands.html\n\ndocker-compose --version # 查看版本\ndocker-compose up # 启动所有服务\ndocker-compose stop # 关闭所有服务\ndocker-compose rm  # 容器文件删除（容器必须已经停止运行）\n\n# 新建docker-compose.yml\nmysql:\n    image: mysql:5.7\n    environment:\n     - mysql_root_password=123456\n     - mysql_database=wordpress\nweb:\n    image: wordpress\n    links:\n     - mysql\n    environment:\n     - wordpress_db_password=123456\n    ports:\n     - "127.0.0.3:8080:80"\n    working_dir: /var/www/html\n    volumes:\n     - wordpress:/var/www/html\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * 在容器的命令行，按下 ctrl + c 停止 node 进程，然后按下 ctrl + d （或者输入 exit）退出容器\n\n# 基本命令\n * docker start与docker restart\n * docker logs\n * docker stop\n * docker exec\n * docker ps [-a]\n * docker attach 与 docker exec 进入容器\n * docker [-f] rm 删除容器\n * docker inspect\n * docker history 具体查看镜像内的历史记录\n * docker save 和 docker load\n * docker pull [选项] [docker registry url]<仓库名>:<标签>\n\ndocker pull ubuntu:14.04\n\ndocker registry url：<域名/ip>[:端口号]。默认 docker hub\n仓库名： <用户名>/<软件名>。默认为 library，也就是官方镜像\n\n\n1\n2\n3\n4\n * docker run [选项]\n\ndocker run -it --rm ubuntu:14.04 bash\n\n# 参数说明\n-it：这是两个参数，一个是 -i：交互式操作，一个是 -t 终端\n--rm：这个参数是说容器退出后随之将其删除\nubuntu:14.04：这是指用 ubuntu:14.04 镜像为基础来启动容器。\nbash：放在镜像名后的是命令，这里我们希望有个交互式 shell，因此用的是 bash\n--name：给容器起了一个名字\n-d: 容器运行在后台\n-p: 8080:80 表示端口映射，将宿主机的8080端口转发到容器内的80端口\n-v：表示需要将本地哪个目录挂载到容器中\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * docker images 列出镜像\n\ndocker images -f dangling=true  #显示虚悬镜像\ndocker rmi $(docker images -q -f dangling=true) #删除虚悬镜像\ndocker images -a  #显示中间层镜像\ndocker images ubuntu #列出部分镜像\ndocker images ubuntu:16.04\ndocker images -f since=mongo:3.2\ndocker images -f before=mongo:3.2\ndocker images -f label=com.example.version=0.1\ndocker images -q\ndocker images --format "{{.id}}: {{.repository}}"\ndocker images --format "table {{.id}}\\t{{.repository}}\\t{{.tag}}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * docker commit [选项] <容器id或容器名> [<仓库名>[:<标签>]]\n\n# 这条命令会用 nginx 镜像启动一个容器，命名为 webserver，并且映射了 80 端口，\n# 这样我们可以用浏览器去访问这个 nginx 服务器\ndocker run --name webserver -d -p 80:80 nginx\n\n# 修改内容\ndocker exec -it webserver bash\necho \'<h1>hello, docker!</h1>\' > /usr/share/nginx/html/index.html\n\n# 显示容器文件系统的前后变化\ndocker diff webserver\n\ndocker commit \\\n    --author "author <author@gmail.com>" \\\n    --message "修改了默认网页" \\\n    webserver \\\n    nginx:v2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * docker rmi [选项] <镜像1> [<镜像2> ...] 删除本地镜像\n\ndocker rmi $(docker images -q -f dangling=true)\ndocker rmi $(docker images -q redis)\n\n\n1\n2\n * docker volume\n\ndocker volume help\n\n# 创建一个数据卷\ndocker volume create my-vol\n\n# 查看所有的 数据卷\ndocker volume ls\n\n# 删除数据卷\ndocker rm my-vol\n\n# 如果需要在删除容器的同时移除数据卷\n可以在删除容器的时候使用 docker rm -v 这个命令\n\n# 无主的数据卷可能会占据很多空间，要清理请使用以下命令\ndocker volume prune\n\n# 查看指定 数据卷 的信息\ndocker volume inspect my-vol\n\n# 启动一个挂载数据卷的容器\ndocker run -d -p \\\n    --name web \\\n    # -v my-vol:/wepapp \\\n    --mount source=my-vol,target=/webapp \\\n    training/webapp \\\n    python app.py\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 参考示例\n * docker —— 从入门到实践\n * judasn/linux-tutorial\n * docker desktop\n * get docker ce for centos\n * daocloud/docker 入门\n * 基于 docker 打造前端持续集成开发环境\n * windows 下使用 docker 部署 gitlab ci 服务\n * centos7 创建支持 ssh 服务器的 docker 容器\n * cr.console.aliyun\n * mirrors.aliyun\n * play with docker',charsets:{cjk:!0}},{title:"gitlab的服务部署",frontmatter:{title:"gitlab的服务部署",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["gitlab"],categories:["server"],readingShow:"top"},regularPath:"/serve/gitlab.html",relativePath:"serve/gitlab.md",key:"v-498c77a1",path:"/serve/gitlab.html",headers:[{level:2,title:"gitlab-ce",slug:"gitlab-ce",normalizedTitle:"gitlab-ce",charIndex:75},{level:2,title:"gitlab-runner",slug:"gitlab-runner",normalizedTitle:"gitlab-runner",charIndex:2019},{level:3,title:"docker",slug:"docker",normalizedTitle:"docker",charIndex:160},{level:3,title:"docker-compose",slug:"docker-compose",normalizedTitle:"docker-compose",charIndex:160},{level:3,title:"windows",slug:"windows",normalizedTitle:"windows",charIndex:661},{level:2,title:"jenkins docker",slug:"jenkins-docker",normalizedTitle:"jenkins docker",charIndex:5788},{level:2,title:"jenkins docker-compose",slug:"jenkins-docker-compose",normalizedTitle:"jenkins docker-compose",charIndex:6541},{level:3,title:"jenkins for mac",slug:"jenkins-for-mac",normalizedTitle:"jenkins for mac",charIndex:5806},{level:3,title:"jenkins for windows",slug:"jenkins-for-windows",normalizedTitle:"jenkins for windows",charIndex:6133},{level:2,title:"GitLab-CI",slug:"gitlab-ci",normalizedTitle:"gitlab-ci",charIndex:7354}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"gitlab-ce gitlab-runner docker docker-compose windows jenkins docker jenkins docker-compose jenkins for mac jenkins for windows GitLab-CI",content:" * hosts\n\n127.0.0.1\tjenkins.chenio.com\n127.0.0.1\tgitlab.chenio.com\n\n\n1\n2\n# gitlab-ce\n * gitlab-ce for window\n\n# local hosts add: 127.0.0.1  gitlab.chenio.com\n# docker-compose.yml\n\nversion: '2'\nservices:\n  web:\n    image: 'gitlab/gitlab-ce:latest'\n    restart: always\n    hostname: 'gitlab.chenio.com'\n    environment:\n      GITLAB_OMNIBUS_CONFIG: |\n        external_url 'http://gitlab.chenio.com:9090'\n        gitlab_rails['gitlab_shell_ssh_port'] = 2224\n    ports:\n      - '9090:9090'\n      - '2224:22'\n    volumes:\n      - 'd:/docker/gitlab/config:/etc/gitlab'\n      - 'd:/docker/gitlab/logs:/var/log/gitlab'\n\n# run docker-compose.yml\ndocker-compose up -d\n\n# windows10\ndocker run -d --hostname localhost -p 9090:80 -p 10443:443 --name gitlab -v d:/docker/gitlab/config:/etc/gitlab -v d:/docker/gitlab/logs:/var/log/gitlab gitlab/gitlab-ce:latest\n\nhttp://localhost:10080/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n * gitlab-ce for Mac\n\n# https://docs.gitlab.com/omnibus/docker/#run-the-image\n\n# docker run\nsudo docker run --detach \\\n\t--hostname 0.0.0.0 \\\n\t--publish 443:443 --publish 9090:80 --publish 22:22 \\\n\t--name gitlab \\\n\t--restart always \\\n\t--volume /Users/pc/srv/gitlab/config:/etc/gitlab \\\n\t--volume /Users/pc/srv/gitlab/logs:/var/log/gitlab \\\n\t--volume /Users/pc/srv/gitlab/data:/var/opt/gitlab \\\n\tgitlab/gitlab-ce:latest\n\n# docker-compose.yml文件\nweb:\n  image: 'gitlab/gitlab-ce:latest'\n  restart: always\n  hostname: 'gitlab.example.com'\n  environment:\n    GITLAB_OMNIBUS_CONFIG: |\n      external_url 'http://gitlab.example.com:9090'\n      gitlab_rails['gitlab_shell_ssh_port'] = 2224\n  ports:\n    - '9090:9090'\n    - '2224:22'\n  volumes:\n    - '/Users/pc/srv/gitlab/config:/etc/gitlab'\n    - '/Users/pc/srv/gitlab/logs:/var/log/gitlab'\n    - '/Users/pc/srv/gitlab/data:/var/opt/gitlab'\n\n# run docker-compose.yml\ndocker-compose up -d\ndocker-compose down\n\nhttp://localhost:9090\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n# gitlab-runner\n# docker\n# test rep\nhttps://gitlab.com/chengzao/gitlab-test.git\n\n# Windows下使用docker部署gitlab CI服务\nhttps://www.jianshu.com/p/0abe441d5d3c\n\n# docker之CI/CD持续集成—GitLab CI服务器\nhttps://zhuanlan.zhihu.com/p/54064430\nhttps://idig8.com/2018/11/20/987/\n\n# 在docker中执行gitlab-runner\nhttps://segmentfault.com/a/1190000012279248\n\nhttps://docs.gitlab.com/runner/\nhttps://docs.gitlab.com/runner/install/docker.html\nhttps://docs.gitlab.com/runner/register/\n\n# start\ndocker run -d --name gitlab-runner --restart always \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v /etc/gitlab-runner \\\n  gitlab/gitlab-runner:latest\n\n# register\ndocker exec -it gitlab-runner gitlab-ci-multi-runner register\n\nsudo docker run --rm -t -i -v /Users/pc/srv/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner register\n\n# config\ndocker\nalpine:latest\n\n# log\ndocker logs gitlab-runner\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# docker-compose\n * gitab-runner\n\n# Dockerfile\nFROM gitlab/gitlab-runner:latest\n\nRUN apt-get update -y\n\n# https://github.com/nodesource/distributions/blob/master/README.md\nRUN curl -sL https://deb.nodesource.com/setup_11.x | bash -\n\nRUN apt-get install -y nodejs\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * docker-compose.yml\n\nversion: '2'\nservices:\n  web:\n    build: .\n    image: 'czh/gitlab-runner'\n    restart: always\n    container_name: gitlab-runner\n    extra_hosts:\n      - \"gitlab.chenio.com:192.168.137.138\"\n      - \"jenkins.chenio.com:192.168.137.138\"\n    volumes:\n      - '/var/run/docker.sock:/var/run/docker.sock'\n      - '/Users/pc/srv/gitlab-runner/config:/etc/gitlab-runner'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * docker-compose -f \"docker-compose.yml\" up -d --build\n   \n   \n * docker exec -it gitlab-runner gitlab-ci-multi-runner register\n   \n   \n\n# step1: Please enter the gitlab-ci coordinator URL (e.g. https://gitlab.com/):\nhttp://gitlab.chenio.com:9090/\n# step2: Please enter the gitlab-ci token for this runner:\nraQ5xxxxxxxxxxxxWQ\n# step3: Please enter the gitlab-ci description for this runner:\nrunner-name\n# step4: Please enter the gitlab-ci tags for this runner (comma separated):\ntest, build, deploy\n# step5: Please enter the executor: parallels, shell, ssh, virtualbox, docker+machine, docker-ssh+machine, docker, docker-ssh, kubernetes:\nshell\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * gitlab-ci.yml\n\n# This file is a template, and might need editing before it works on your project.\n# see https://docs.gitlab.com/ce/ci/yaml/README.html for all available options\n# react simple demo\n# you can delete this line if you're not using Docker\nimage: node:latest\n\nbefore_script:\n  - echo \"Before script installing package\"\n  - node -v\n  - npm -v\n  - npm install\n\nafter_script:\n  - echo \"After script section\"\n\nbuild:\n  stage: build\n  script:\n    - npm run build\n\ntest:\n  stage: test\n  script:\n    - npm run test\n\ndeploy:\n  stage: deploy\n  script:\n    - echo \"Do your deploy here\"\n\ncache:\n  paths:\n  - node_modules/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# windows\n# runner安装下载\nhttps://docs.gitlab.com/runner/install/windows.html\n- C盘新建GitLab-Runner文件夹\n- 将下载好的文件exe文件放进GitLab-Runner， 重命名为gitlab-runner.exe\n- Windows PowerShell Run as administrator\n\n# 注册\nhttps://docs.gitlab.com/runner/register/index.html\n- ./gitlab-runner.exe register\n\n# Install the Runner as a service and start it\n- gitlab-runner install\n- gitlab-runner start\n\n# stop\n- cd C:\\GitLab-Runner\n- gitlab-runner stop\n\n# update\n- cd C:\\GitLab-Runner\n- gitlab-runner stop\n- 重复runner安装下载\n- gitlab-runner start\n\n# Uninstall\n- cd C:\\GitLab-Runner\n- gitlab-runner stop\n- gitlab-runner uninstall\n- cd ..\n- rmdir /s GitLab-Runner\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# jenkins docker\n * jenkins for mac\n\n# https://github.com/jenkinsci/docker/blob/master/README.md\n\n# step1\ndocker pull jenkins/jenkins:latest\n\n# step2\ndocker run -d -p 8080:8080 -p 50000:50000 --name devops-jenkins -v /Users/pc/srv/jenkins_home:/var/jenkins_home jenkins/jenkins:latest\n\n# 查看log\ndocker logs devops-jenkins\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * jenkins for windows\n\n# https://github.com/jenkinsci/docker/blob/master/README.md\n\n# step1\ndocker pull jenkins/jenkins:latest\n\n# step2\ndocker run -d -p 8080:8080 -p 50000:50000 --name devops-jenkins -v d:/docker/jenkins_home:/var/jenkins_home jenkins/jenkins:latest\n\n# 初始密码位置\nD:/docker/jenkins_home/secrets/initialAdminPassword\n\n# local hosts add: 127.0.0.1  jenkins.chenio.com\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# jenkins docker-compose\n# jenkins for mac\n * docker-compose.yml\n\n# docker-compose.yml\nversion: '2'\nservices:\n  web:\n    image: 'jenkins/jenkins:latest'\n    restart: always\n    hostname: 'jenkins.chenio.com'\n    pid: \"host\"\n    ports:\n      - '8080:8080'\n      - '50000:50000'\n    volumes:\n      - '/Users/pc/srv/jenkins_home:/var/jenkins_home'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * 运行：docker-compose up -d\n\n# jenkins for windows\n * docker-compose.yml\n\n# local hosts add: 127.0.0.1  jenkins.chenio.com\nversion: '3'\nservices:\n  web:\n    image: 'jenkins/jenkins:latest'\n    restart: always\n    hostname: 'jenkins.chenio.com'\n    pid: \"host\"\n    ports:\n      - '8080:8080'\n      - '50000:50000'\n    volumes:\n      - 'd:/docker/jenkins_home:/var/jenkins_home'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * 运行：docker-compose up -d\n\n# GitLab-CI\n * Configuration of your jobs with .gitlab-ci.yml\n * 原文：Gitlab-CI job 配置文件 .gitlab-ci.yml 配置方式(翻译)\n * gitlab-ci 使用 YAML 文件管理配置 job\n * Job: YAML 文件定义了一系列带有约束说明的 job, job 至少需要要包含 script * script 可以直接执行系统命令(如：./configure;make;make install)或者直接执行脚本(test.sh)\n    * 任务是由 CI 接管并且在服务器执行, 并且每一个任务的执行都是独立的\n   \n   \n * job 的名称具有唯一性在文件中只能出现一次; 下列词汇是保留字段，不能被使用命名为 job 名称\n * 关键字: 不可以被用于 Job 名 的保留字\n\n关键字             是否必须   描述                   \nimage           no     用于 docker 镜像         \nservices        no     用于 docker 服务         \nstages          no     定义构建阶段               \ntypes           no     stages 的别名(已废除)      \nbefore_script   no     定义在每个 job 之前运行的命令    \nafter_script    no     定义在每个 job 之后运行的命令    \nvariables       no     定义构建变量               \ncache           no     定义一组文件列表，可在后续运行中使用   \n\n * only and except 保留字\n\n关键字         描述                                                                   \nbranches    当一个分支被 push 上来                                                       \ntags        当一个打了 tag 的分支被 push 上来                                               \napi         当一个 pipline 被 piplines api 所触发调起                                     \nexternal    当使用了 GitLab 以外的 CI 服务                                                \npipelines   针对多项目触发器而言，当使用 CI_JOB_TOKEN 并使用 gitlab 所提供的 api 创建多个 pipelines 的时候   \npushes      当 pipeline 被用户的 git push 操作所触发的时候                                    \nschedules   针对预定好的 pipline 而言（每日构建一类）                                            \ntriggers    用 token 创建 piplines 的时候                                              \nweb         在 GitLab 页面上 Pipelines 标签页下，你按了 run pipline 的时候                      \n\n * job 可以配置的参数列表\n\n参数名称            是否必须   参数说明                                                            \nscript          yes    需要在 docker 容器中运行的脚本                                             \nimage           no     所使用的 docker 镜像                                                  \nservices        no     需要关联的 docker 服务                                                 \nstage           no     定义当前 job 运行在那个阶段 (默认: test)                                     \nvariables       no     定义 job 级别的变量                                                    \nonly            no     定义一列 git 分支，并为其创建 job                                           \nexcept          no     定义一列 git 分支，不创建 job                                             \ntags            no     通过 tags 确定使用指定还是使用通用部署程序                                        \nallow_failure   no     允许 job 失败， job 失败不会影响最终结果                                       \nwhen            no     定义 job 在什么时候运行， 支持参数 on_success, on_failure, always 或者 manual   \ndependencies    no     定义 job 依赖关系，这样他们就可以互相传递 artifacts                               \nartifacts       no     Define list of job artifacts                                    \ncache           no     定义应在后续运行之间缓存的文件列表                                               \nbefore_script   no     覆盖 job 执行前需要执行的脚本设置                                             \nafter_script    no     覆盖 job 执行后需要执行的脚本设置                                             \nenvironment     no     定义此作业完成部署的环境名称                                                  \ncoverage        no     定义给定作业的代码覆盖率设置                                                  \nretry           no     job 执行发生故障时自动重试次数                                               \n\n# job示例\n\nimage: ruby:2.1\nservices:\n  - postgres\n\nbefore_script:\n  - bundle install\n\nafter_script:\n  - rm secrets\n\nstages:\n  - build\n  - test\n  - deploy\n\njob1:\n  stage: build\n  script:\n    - execute-script-for-job1\n  only:\n    - master\n  tags:\n    - docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n * image and services: 这两个关键字允许使用一个自定义的 Docker 镜像和一系列的服务，并且可以用于整个 job 周期\n * before_script: * 必须是数组或多行字符串\n    * 支持定义为 global 和 job 类型， job 类型会覆盖掉 global 类型的值\n    * 定义在所有 job（包括 deploy job）之前运行的命令。（在 artifacts 运行之后）\n   \n   \n * after_script * 必须是数组或多行字符串\n    * 支持定义为 global 和 job 类型， job 类型会覆盖掉 global 类型的值\n    * 定义在所有 job（包括失败的 job）之后运行的命令\n   \n   \n\n# script示例\n\nbefore_script:\n  - global before script\n\njob:\n  before_script:\n    - execute this instead of global before script\n  script:\n    - my command\n  after_script:\n    - execute this after my script\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * stages * 只支持 global 类型\n    * 定义了 job 支持的执行阶段和顺序\n    * stages 中的元素顺序决定了对应 job 的执行顺序\n    * 下一个 阶段 的 job 只会在前一个 阶段 的 job 执行成功后开始执行\n   \n   \n\n# stages示例\nstages:\n  - build\n  - test\n  - deploy\n\n# 运行顺序：\n1. 运行所有的 build\n2. 如果所有作业都 build 运行成功，那么开始运行所有的 test\n3. 如果所有作业都 test 运行成功，那么开始运行所有的 deploy\n4. 如果所有作业都 deploy 成功，则标记 job 为 passed\n5. 如果在之前动作中有任何失败，则标记 job 为 failed 并终止 job 执行\n\n# 没有定义stages时的默认动作\n如果 .gitlab-ci.yml 文件中没有定义 stages , stages 将会被设置成 build -> test -> deploy.\n如果 job 没有定义 stage, 则 job 的 stage 将会被设置成 test\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * stage * 相同 stage 的 job 会并行执行\n    * stage 的值必须定义在 stages 中，可以通过设置 stage 来对 job 进行分组，相同分组的 job 将会并行执行.\n   \n   \n\n# stage示例\nstages:\n  - build\n  - test\n  - deploy\n\njob 1:\n  stage: build\n  script: make build dependencies\n\njob 2:\n  stage: build\n  script: make build artifacts\n\njob 3:\n  stage: test\n  script: make test\n\njob 4:\n  stage: deploy\n  script: make deploy\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n * script * script 是 job 运行需要的唯一一个必须字段, 通过 script 来指定应该如何执行 job\n    * script 可以设置为 string 和 array 类型\n   \n   \n\n# script 设置为 string 来设置 job 执行什么命令\njob:\n  script: \"bundle exec rspec\"\n\n# script 设置为 array 来指定运行多个命令\njob:\n  script:\n    - uname -a\n    - bundle exec rspec\n\n# 如果命令中包含有特殊字符, 则需要用双引号将 script 括起来\njob:\nscript:\n  - make\n  - \"ps -aux | grep gcc\"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * YAML 中的特殊字符:: 、 { 、 } 、 [ 、 ] 、, 、 & 、 * 、 # 、 ? 、 | 、 - 、 < 、 > 、 = 、 ! 、 % 、@ 、`` ` 。\n   \n   \n * only and except\n   \n    * 只有满足 only 条件的 branches 和 tags 才会被运行\n    * except 和 only 相反, 满足 except 条件的 branches 和 tags 将 不会 被运行\n   \n   \n * refs 策略的使用规则:\n   \n    * only 和 except 支持使用正则表达式.\n    * only 和 except 支持使用特殊的关键字.\n    * only 和 except 支持同时设置, 当同时设置时 only 和 except 将会同时起作用.\n    * only 和 except 也可以用来指定 forks 作业的存储库路径\n   \n   \n\n# job 会跳过所有分支, 只在以 issue- 开头的 ref 时运行\n\njob:\n  # use regexp\n  only:\n    - /^issue-.*$/\n  # use special keyword\n  except:\n    - branches\n\n# job 只会执行有 tags 或者通过API触发器构建的 refs\n\njob:\n  # use special keywords\n  only:\n    - tags\n    - triggers\n    - schedules\n\n# 只会在除 gitlab-org/gitlab-ce 的 master 分支外的其他分支时才会运行\n\njob:\n  only:\n    - branches@gitlab-org/gitlab-ce\n  except:\n    - master@gitlab-org/gitlab-ce\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * artifacts: * 用于指定成功后应附加到 job 的文件和目录的列表\n    * 只能使用项目工作间内的文件或目录路径\n    * 定义一个空的 dependencies 数组可以禁用 artifact 传递\n   \n   \n\n# artifacts示例\njob:\n  stage: build\n  script: make build\n  dependencies: []\n\n\n1\n2\n3\n4\n5\n * variables: GitLab CI 允许你为.gitlab-ci.yml 增加变量，该变量将会被设置入任务环境\n\n# 变量\n\nvariables:\n    DATABASE_URL: \"postgres://postgres@postgres/my_database\"\n# 注意:整数和字符串一样，对于设置变量名和变量值来说都是合法的。但浮点数是非法的。\n\n\n1\n2\n3\n4\n5\n * tags：用来确定使用哪个 runner 运行当前任务，如果不设置的话将使用通用 runner 运行\n\n# 只有同时定义了 ruby 和 postgres 的 runner 才能运行这个 job\n\njob:\n  tags:\n    - ruby\n    - postgres\n\n\n1\n2\n3\n4\n5\n6\n * allow_failure: 允许 job 失败. job 失败不会影响最终结果\n\n#  当 job1 运行失败, 也不会打断 CI 执行，CI 会继续运行下一阶段\n\njob1:\n  stage: test\n  script:\n    - execute_script_that_will_fail\n  allow_failure: true\n\njob2:\n  stage: test\n  script:\n    - execute_script_that_will_succeed\n\njob3:\n  stage: deploy\n  script:\n    - deploy_to_staging\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * when 用来指示 job 应该在什么时候开始运行 * on_success - 只有之前的阶段全部成功时才会执行.(默认值)\n    * on_failure - 当之前的阶段执行过程中出现过任何错误时执行\n    * always - 无论之前的阶段是否执行成功都执行\n    * manual - 手动执行\n   \n   \n\nstages:\n  - build\n  - cleanup_build\n  - test\n  - deploy\n  - cleanup\n\nbuild_job:\n  stage: build\n  script:\n    - make build\n\ncleanup_build_job:\n  stage: cleanup_build\n  script:\n    - cleanup build when failed\n  when: on_failure\n\ntest_job:\n  stage: test\n  script:\n    - make test\n\ndeploy_job:\n  stage: deploy\n  script:\n    - make deploy\n  when: manual\n\ncleanup_job:\n  stage: cleanup\n  script:\n    - cleanup after jobs\n  when: always\n\n# 1 cleanup_build_job 只有在 build_job 失败时才会执行\n# 2 不论其他 job 是否执行成功, cleanup_job 总会在最后一个被执行\n# 3 可以通过 Gitlab 控制台手动执行 deploy_job\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n * GitLab-CI 中的 artifacts 使用研究",normalizedContent:" * hosts\n\n127.0.0.1\tjenkins.chenio.com\n127.0.0.1\tgitlab.chenio.com\n\n\n1\n2\n# gitlab-ce\n * gitlab-ce for window\n\n# local hosts add: 127.0.0.1  gitlab.chenio.com\n# docker-compose.yml\n\nversion: '2'\nservices:\n  web:\n    image: 'gitlab/gitlab-ce:latest'\n    restart: always\n    hostname: 'gitlab.chenio.com'\n    environment:\n      gitlab_omnibus_config: |\n        external_url 'http://gitlab.chenio.com:9090'\n        gitlab_rails['gitlab_shell_ssh_port'] = 2224\n    ports:\n      - '9090:9090'\n      - '2224:22'\n    volumes:\n      - 'd:/docker/gitlab/config:/etc/gitlab'\n      - 'd:/docker/gitlab/logs:/var/log/gitlab'\n\n# run docker-compose.yml\ndocker-compose up -d\n\n# windows10\ndocker run -d --hostname localhost -p 9090:80 -p 10443:443 --name gitlab -v d:/docker/gitlab/config:/etc/gitlab -v d:/docker/gitlab/logs:/var/log/gitlab gitlab/gitlab-ce:latest\n\nhttp://localhost:10080/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n * gitlab-ce for mac\n\n# https://docs.gitlab.com/omnibus/docker/#run-the-image\n\n# docker run\nsudo docker run --detach \\\n\t--hostname 0.0.0.0 \\\n\t--publish 443:443 --publish 9090:80 --publish 22:22 \\\n\t--name gitlab \\\n\t--restart always \\\n\t--volume /users/pc/srv/gitlab/config:/etc/gitlab \\\n\t--volume /users/pc/srv/gitlab/logs:/var/log/gitlab \\\n\t--volume /users/pc/srv/gitlab/data:/var/opt/gitlab \\\n\tgitlab/gitlab-ce:latest\n\n# docker-compose.yml文件\nweb:\n  image: 'gitlab/gitlab-ce:latest'\n  restart: always\n  hostname: 'gitlab.example.com'\n  environment:\n    gitlab_omnibus_config: |\n      external_url 'http://gitlab.example.com:9090'\n      gitlab_rails['gitlab_shell_ssh_port'] = 2224\n  ports:\n    - '9090:9090'\n    - '2224:22'\n  volumes:\n    - '/users/pc/srv/gitlab/config:/etc/gitlab'\n    - '/users/pc/srv/gitlab/logs:/var/log/gitlab'\n    - '/users/pc/srv/gitlab/data:/var/opt/gitlab'\n\n# run docker-compose.yml\ndocker-compose up -d\ndocker-compose down\n\nhttp://localhost:9090\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n# gitlab-runner\n# docker\n# test rep\nhttps://gitlab.com/chengzao/gitlab-test.git\n\n# windows下使用docker部署gitlab ci服务\nhttps://www.jianshu.com/p/0abe441d5d3c\n\n# docker之ci/cd持续集成—gitlab ci服务器\nhttps://zhuanlan.zhihu.com/p/54064430\nhttps://idig8.com/2018/11/20/987/\n\n# 在docker中执行gitlab-runner\nhttps://segmentfault.com/a/1190000012279248\n\nhttps://docs.gitlab.com/runner/\nhttps://docs.gitlab.com/runner/install/docker.html\nhttps://docs.gitlab.com/runner/register/\n\n# start\ndocker run -d --name gitlab-runner --restart always \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v /etc/gitlab-runner \\\n  gitlab/gitlab-runner:latest\n\n# register\ndocker exec -it gitlab-runner gitlab-ci-multi-runner register\n\nsudo docker run --rm -t -i -v /users/pc/srv/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner register\n\n# config\ndocker\nalpine:latest\n\n# log\ndocker logs gitlab-runner\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# docker-compose\n * gitab-runner\n\n# dockerfile\nfrom gitlab/gitlab-runner:latest\n\nrun apt-get update -y\n\n# https://github.com/nodesource/distributions/blob/master/readme.md\nrun curl -sl https://deb.nodesource.com/setup_11.x | bash -\n\nrun apt-get install -y nodejs\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * docker-compose.yml\n\nversion: '2'\nservices:\n  web:\n    build: .\n    image: 'czh/gitlab-runner'\n    restart: always\n    container_name: gitlab-runner\n    extra_hosts:\n      - \"gitlab.chenio.com:192.168.137.138\"\n      - \"jenkins.chenio.com:192.168.137.138\"\n    volumes:\n      - '/var/run/docker.sock:/var/run/docker.sock'\n      - '/users/pc/srv/gitlab-runner/config:/etc/gitlab-runner'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * docker-compose -f \"docker-compose.yml\" up -d --build\n   \n   \n * docker exec -it gitlab-runner gitlab-ci-multi-runner register\n   \n   \n\n# step1: please enter the gitlab-ci coordinator url (e.g. https://gitlab.com/):\nhttp://gitlab.chenio.com:9090/\n# step2: please enter the gitlab-ci token for this runner:\nraq5xxxxxxxxxxxxwq\n# step3: please enter the gitlab-ci description for this runner:\nrunner-name\n# step4: please enter the gitlab-ci tags for this runner (comma separated):\ntest, build, deploy\n# step5: please enter the executor: parallels, shell, ssh, virtualbox, docker+machine, docker-ssh+machine, docker, docker-ssh, kubernetes:\nshell\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * gitlab-ci.yml\n\n# this file is a template, and might need editing before it works on your project.\n# see https://docs.gitlab.com/ce/ci/yaml/readme.html for all available options\n# react simple demo\n# you can delete this line if you're not using docker\nimage: node:latest\n\nbefore_script:\n  - echo \"before script installing package\"\n  - node -v\n  - npm -v\n  - npm install\n\nafter_script:\n  - echo \"after script section\"\n\nbuild:\n  stage: build\n  script:\n    - npm run build\n\ntest:\n  stage: test\n  script:\n    - npm run test\n\ndeploy:\n  stage: deploy\n  script:\n    - echo \"do your deploy here\"\n\ncache:\n  paths:\n  - node_modules/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# windows\n# runner安装下载\nhttps://docs.gitlab.com/runner/install/windows.html\n- c盘新建gitlab-runner文件夹\n- 将下载好的文件exe文件放进gitlab-runner， 重命名为gitlab-runner.exe\n- windows powershell run as administrator\n\n# 注册\nhttps://docs.gitlab.com/runner/register/index.html\n- ./gitlab-runner.exe register\n\n# install the runner as a service and start it\n- gitlab-runner install\n- gitlab-runner start\n\n# stop\n- cd c:\\gitlab-runner\n- gitlab-runner stop\n\n# update\n- cd c:\\gitlab-runner\n- gitlab-runner stop\n- 重复runner安装下载\n- gitlab-runner start\n\n# uninstall\n- cd c:\\gitlab-runner\n- gitlab-runner stop\n- gitlab-runner uninstall\n- cd ..\n- rmdir /s gitlab-runner\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# jenkins docker\n * jenkins for mac\n\n# https://github.com/jenkinsci/docker/blob/master/readme.md\n\n# step1\ndocker pull jenkins/jenkins:latest\n\n# step2\ndocker run -d -p 8080:8080 -p 50000:50000 --name devops-jenkins -v /users/pc/srv/jenkins_home:/var/jenkins_home jenkins/jenkins:latest\n\n# 查看log\ndocker logs devops-jenkins\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * jenkins for windows\n\n# https://github.com/jenkinsci/docker/blob/master/readme.md\n\n# step1\ndocker pull jenkins/jenkins:latest\n\n# step2\ndocker run -d -p 8080:8080 -p 50000:50000 --name devops-jenkins -v d:/docker/jenkins_home:/var/jenkins_home jenkins/jenkins:latest\n\n# 初始密码位置\nd:/docker/jenkins_home/secrets/initialadminpassword\n\n# local hosts add: 127.0.0.1  jenkins.chenio.com\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# jenkins docker-compose\n# jenkins for mac\n * docker-compose.yml\n\n# docker-compose.yml\nversion: '2'\nservices:\n  web:\n    image: 'jenkins/jenkins:latest'\n    restart: always\n    hostname: 'jenkins.chenio.com'\n    pid: \"host\"\n    ports:\n      - '8080:8080'\n      - '50000:50000'\n    volumes:\n      - '/users/pc/srv/jenkins_home:/var/jenkins_home'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * 运行：docker-compose up -d\n\n# jenkins for windows\n * docker-compose.yml\n\n# local hosts add: 127.0.0.1  jenkins.chenio.com\nversion: '3'\nservices:\n  web:\n    image: 'jenkins/jenkins:latest'\n    restart: always\n    hostname: 'jenkins.chenio.com'\n    pid: \"host\"\n    ports:\n      - '8080:8080'\n      - '50000:50000'\n    volumes:\n      - 'd:/docker/jenkins_home:/var/jenkins_home'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * 运行：docker-compose up -d\n\n# gitlab-ci\n * configuration of your jobs with .gitlab-ci.yml\n * 原文：gitlab-ci job 配置文件 .gitlab-ci.yml 配置方式(翻译)\n * gitlab-ci 使用 yaml 文件管理配置 job\n * job: yaml 文件定义了一系列带有约束说明的 job, job 至少需要要包含 script * script 可以直接执行系统命令(如：./configure;make;make install)或者直接执行脚本(test.sh)\n    * 任务是由 ci 接管并且在服务器执行, 并且每一个任务的执行都是独立的\n   \n   \n * job 的名称具有唯一性在文件中只能出现一次; 下列词汇是保留字段，不能被使用命名为 job 名称\n * 关键字: 不可以被用于 job 名 的保留字\n\n关键字             是否必须   描述                   \nimage           no     用于 docker 镜像         \nservices        no     用于 docker 服务         \nstages          no     定义构建阶段               \ntypes           no     stages 的别名(已废除)      \nbefore_script   no     定义在每个 job 之前运行的命令    \nafter_script    no     定义在每个 job 之后运行的命令    \nvariables       no     定义构建变量               \ncache           no     定义一组文件列表，可在后续运行中使用   \n\n * only and except 保留字\n\n关键字         描述                                                                   \nbranches    当一个分支被 push 上来                                                       \ntags        当一个打了 tag 的分支被 push 上来                                               \napi         当一个 pipline 被 piplines api 所触发调起                                     \nexternal    当使用了 gitlab 以外的 ci 服务                                                \npipelines   针对多项目触发器而言，当使用 ci_job_token 并使用 gitlab 所提供的 api 创建多个 pipelines 的时候   \npushes      当 pipeline 被用户的 git push 操作所触发的时候                                    \nschedules   针对预定好的 pipline 而言（每日构建一类）                                            \ntriggers    用 token 创建 piplines 的时候                                              \nweb         在 gitlab 页面上 pipelines 标签页下，你按了 run pipline 的时候                      \n\n * job 可以配置的参数列表\n\n参数名称            是否必须   参数说明                                                            \nscript          yes    需要在 docker 容器中运行的脚本                                             \nimage           no     所使用的 docker 镜像                                                  \nservices        no     需要关联的 docker 服务                                                 \nstage           no     定义当前 job 运行在那个阶段 (默认: test)                                     \nvariables       no     定义 job 级别的变量                                                    \nonly            no     定义一列 git 分支，并为其创建 job                                           \nexcept          no     定义一列 git 分支，不创建 job                                             \ntags            no     通过 tags 确定使用指定还是使用通用部署程序                                        \nallow_failure   no     允许 job 失败， job 失败不会影响最终结果                                       \nwhen            no     定义 job 在什么时候运行， 支持参数 on_success, on_failure, always 或者 manual   \ndependencies    no     定义 job 依赖关系，这样他们就可以互相传递 artifacts                               \nartifacts       no     define list of job artifacts                                    \ncache           no     定义应在后续运行之间缓存的文件列表                                               \nbefore_script   no     覆盖 job 执行前需要执行的脚本设置                                             \nafter_script    no     覆盖 job 执行后需要执行的脚本设置                                             \nenvironment     no     定义此作业完成部署的环境名称                                                  \ncoverage        no     定义给定作业的代码覆盖率设置                                                  \nretry           no     job 执行发生故障时自动重试次数                                               \n\n# job示例\n\nimage: ruby:2.1\nservices:\n  - postgres\n\nbefore_script:\n  - bundle install\n\nafter_script:\n  - rm secrets\n\nstages:\n  - build\n  - test\n  - deploy\n\njob1:\n  stage: build\n  script:\n    - execute-script-for-job1\n  only:\n    - master\n  tags:\n    - docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n * image and services: 这两个关键字允许使用一个自定义的 docker 镜像和一系列的服务，并且可以用于整个 job 周期\n * before_script: * 必须是数组或多行字符串\n    * 支持定义为 global 和 job 类型， job 类型会覆盖掉 global 类型的值\n    * 定义在所有 job（包括 deploy job）之前运行的命令。（在 artifacts 运行之后）\n   \n   \n * after_script * 必须是数组或多行字符串\n    * 支持定义为 global 和 job 类型， job 类型会覆盖掉 global 类型的值\n    * 定义在所有 job（包括失败的 job）之后运行的命令\n   \n   \n\n# script示例\n\nbefore_script:\n  - global before script\n\njob:\n  before_script:\n    - execute this instead of global before script\n  script:\n    - my command\n  after_script:\n    - execute this after my script\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * stages * 只支持 global 类型\n    * 定义了 job 支持的执行阶段和顺序\n    * stages 中的元素顺序决定了对应 job 的执行顺序\n    * 下一个 阶段 的 job 只会在前一个 阶段 的 job 执行成功后开始执行\n   \n   \n\n# stages示例\nstages:\n  - build\n  - test\n  - deploy\n\n# 运行顺序：\n1. 运行所有的 build\n2. 如果所有作业都 build 运行成功，那么开始运行所有的 test\n3. 如果所有作业都 test 运行成功，那么开始运行所有的 deploy\n4. 如果所有作业都 deploy 成功，则标记 job 为 passed\n5. 如果在之前动作中有任何失败，则标记 job 为 failed 并终止 job 执行\n\n# 没有定义stages时的默认动作\n如果 .gitlab-ci.yml 文件中没有定义 stages , stages 将会被设置成 build -> test -> deploy.\n如果 job 没有定义 stage, 则 job 的 stage 将会被设置成 test\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * stage * 相同 stage 的 job 会并行执行\n    * stage 的值必须定义在 stages 中，可以通过设置 stage 来对 job 进行分组，相同分组的 job 将会并行执行.\n   \n   \n\n# stage示例\nstages:\n  - build\n  - test\n  - deploy\n\njob 1:\n  stage: build\n  script: make build dependencies\n\njob 2:\n  stage: build\n  script: make build artifacts\n\njob 3:\n  stage: test\n  script: make test\n\njob 4:\n  stage: deploy\n  script: make deploy\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n * script * script 是 job 运行需要的唯一一个必须字段, 通过 script 来指定应该如何执行 job\n    * script 可以设置为 string 和 array 类型\n   \n   \n\n# script 设置为 string 来设置 job 执行什么命令\njob:\n  script: \"bundle exec rspec\"\n\n# script 设置为 array 来指定运行多个命令\njob:\n  script:\n    - uname -a\n    - bundle exec rspec\n\n# 如果命令中包含有特殊字符, 则需要用双引号将 script 括起来\njob:\nscript:\n  - make\n  - \"ps -aux | grep gcc\"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * yaml 中的特殊字符:: 、 { 、 } 、 [ 、 ] 、, 、 & 、 * 、 # 、 ? 、 | 、 - 、 < 、 > 、 = 、 ! 、 % 、@ 、`` ` 。\n   \n   \n * only and except\n   \n    * 只有满足 only 条件的 branches 和 tags 才会被运行\n    * except 和 only 相反, 满足 except 条件的 branches 和 tags 将 不会 被运行\n   \n   \n * refs 策略的使用规则:\n   \n    * only 和 except 支持使用正则表达式.\n    * only 和 except 支持使用特殊的关键字.\n    * only 和 except 支持同时设置, 当同时设置时 only 和 except 将会同时起作用.\n    * only 和 except 也可以用来指定 forks 作业的存储库路径\n   \n   \n\n# job 会跳过所有分支, 只在以 issue- 开头的 ref 时运行\n\njob:\n  # use regexp\n  only:\n    - /^issue-.*$/\n  # use special keyword\n  except:\n    - branches\n\n# job 只会执行有 tags 或者通过api触发器构建的 refs\n\njob:\n  # use special keywords\n  only:\n    - tags\n    - triggers\n    - schedules\n\n# 只会在除 gitlab-org/gitlab-ce 的 master 分支外的其他分支时才会运行\n\njob:\n  only:\n    - branches@gitlab-org/gitlab-ce\n  except:\n    - master@gitlab-org/gitlab-ce\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * artifacts: * 用于指定成功后应附加到 job 的文件和目录的列表\n    * 只能使用项目工作间内的文件或目录路径\n    * 定义一个空的 dependencies 数组可以禁用 artifact 传递\n   \n   \n\n# artifacts示例\njob:\n  stage: build\n  script: make build\n  dependencies: []\n\n\n1\n2\n3\n4\n5\n * variables: gitlab ci 允许你为.gitlab-ci.yml 增加变量，该变量将会被设置入任务环境\n\n# 变量\n\nvariables:\n    database_url: \"postgres://postgres@postgres/my_database\"\n# 注意:整数和字符串一样，对于设置变量名和变量值来说都是合法的。但浮点数是非法的。\n\n\n1\n2\n3\n4\n5\n * tags：用来确定使用哪个 runner 运行当前任务，如果不设置的话将使用通用 runner 运行\n\n# 只有同时定义了 ruby 和 postgres 的 runner 才能运行这个 job\n\njob:\n  tags:\n    - ruby\n    - postgres\n\n\n1\n2\n3\n4\n5\n6\n * allow_failure: 允许 job 失败. job 失败不会影响最终结果\n\n#  当 job1 运行失败, 也不会打断 ci 执行，ci 会继续运行下一阶段\n\njob1:\n  stage: test\n  script:\n    - execute_script_that_will_fail\n  allow_failure: true\n\njob2:\n  stage: test\n  script:\n    - execute_script_that_will_succeed\n\njob3:\n  stage: deploy\n  script:\n    - deploy_to_staging\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * when 用来指示 job 应该在什么时候开始运行 * on_success - 只有之前的阶段全部成功时才会执行.(默认值)\n    * on_failure - 当之前的阶段执行过程中出现过任何错误时执行\n    * always - 无论之前的阶段是否执行成功都执行\n    * manual - 手动执行\n   \n   \n\nstages:\n  - build\n  - cleanup_build\n  - test\n  - deploy\n  - cleanup\n\nbuild_job:\n  stage: build\n  script:\n    - make build\n\ncleanup_build_job:\n  stage: cleanup_build\n  script:\n    - cleanup build when failed\n  when: on_failure\n\ntest_job:\n  stage: test\n  script:\n    - make test\n\ndeploy_job:\n  stage: deploy\n  script:\n    - make deploy\n  when: manual\n\ncleanup_job:\n  stage: cleanup\n  script:\n    - cleanup after jobs\n  when: always\n\n# 1 cleanup_build_job 只有在 build_job 失败时才会执行\n# 2 不论其他 job 是否执行成功, cleanup_job 总会在最后一个被执行\n# 3 可以通过 gitlab 控制台手动执行 deploy_job\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n * gitlab-ci 中的 artifacts 使用研究",charsets:{cjk:!0}},{title:"网络协议记录",frontmatter:{title:"网络协议记录",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["网络协议"],categories:["server"],readingShow:"top"},regularPath:"/serve/http.html",relativePath:"serve/http.md",key:"v-57d0c947",path:"/serve/http.html",headers:[{level:2,title:"OSI 模型",slug:"osi-模型",normalizedTitle:"osi 模型",charIndex:2},{level:2,title:"网络中常用协议以及层次关系",slug:"网络中常用协议以及层次关系",normalizedTitle:"网络中常用协议以及层次关系",charIndex:203},{level:2,title:"TCP / IP 概念层模型",slug:"tcp-ip-概念层模型",normalizedTitle:"tcp / ip 概念层模型",charIndex:306},{level:2,title:"五层因特尔协议栈",slug:"五层因特尔协议栈",normalizedTitle:"五层因特尔协议栈",charIndex:386},{level:2,title:"HTTP 状态码",slug:"http-状态码",normalizedTitle:"http 状态码",charIndex:568},{level:2,title:"HTTP 常见状态码",slug:"http-常见状态码",normalizedTitle:"http 常见状态码",charIndex:719},{level:3,title:"200",slug:"_200",normalizedTitle:"200",charIndex:732},{level:3,title:"300",slug:"_300",normalizedTitle:"300",charIndex:825},{level:3,title:"400",slug:"_400",normalizedTitle:"400",charIndex:917},{level:3,title:"500",slug:"_500",normalizedTitle:"500",charIndex:1015}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"OSI 模型 网络中常用协议以及层次关系 TCP / IP 概念层模型 五层因特尔协议栈 HTTP 状态码 HTTP 常见状态码 200 300 400 500",content:"# OSI 模型\n * 物理层: 实现计算机系统与网络间的物理连接\n * 数据链路层: 进行数据打包与解包，形成信息帧\n * 网络层: 提供数据通过的路由: IP / ICMP / RIP ...\n * 传输层: 提供传输顺序信息与响应: TCP / UDP\n * 会话层: 建立和中止连接\n * 表示层: 数据转换、确认数据格式\n * 应用层: 提供用户程序接口 : HTTP / DNS ...\n\n# 网络中常用协议以及层次关系\n * 网络层 IP / ICMP / ARP\n * 主机-主机层 TCP / UDP\n * 进程/应用层 Telnet / FTP / SMTP / HTTP / DNS\n\n# TCP / IP 概念层模型\n * 应用层: 应用层 表示层 会话层\n * 传输层: 传输层\n * 网络层: 网络层\n * 链路层: 数据链路层 物理层\n\n# 五层因特尔协议栈\n * 1.应用层(dns,http) DNS 解析成 IP 并发送 http 请求\n * 2.传输层(tcp,udp) 建立 tcp 连接（三次握手）\n * 3.网络层(IP,ARP) IP 寻址\n * 4.数据链路层(PPP) 封装成帧\n * 5.物理层(利用物理介质传输比特流) 物理传输（然后传输的时候通过双绞线，电磁波等各种介质）\n\n# HTTP 状态码\n * 1xx消息: 请求已被服务器接收，继续处理\n * 2xx成功: 请求已成功被服务器接收、理解、并接受\n * 3xx重定向: 需要后续操作才能完成这一请求\n * 4xx请求错误: 请求含有词法错误或者无法被执行\n * 5xx服务器错误: 服务器在处理某个正确请求时发生错误\n\n# HTTP 常见状态码\n# 200\n * 200 :表明该请求被成功地完成，所请求的资源发送回客户端\n * 201 :表示请求成功且服务器创建了新的资源\n * 202 :表示服务器已经接受了请求，但还未处理\n\n# 300\n * 301 :表示永久重定向，请求的网页已经永久移动到新位置\n * 302 :表示临时重定向\n * 304 :自从上次请求后，请求的网页未修改过，请客户端使用本地缓存\n\n# 400\n * 400 :客户端请求有错（譬如可以是安全模块拦截）\n * 401 :服务器无法理解请求的格式\n * 402 :请求未授权\n * 403 :禁止访问\n * 404 :资源未找到\n\n# 500\n * 500 :服务器内部错误\n * 503 :服务不可用",normalizedContent:"# osi 模型\n * 物理层: 实现计算机系统与网络间的物理连接\n * 数据链路层: 进行数据打包与解包，形成信息帧\n * 网络层: 提供数据通过的路由: ip / icmp / rip ...\n * 传输层: 提供传输顺序信息与响应: tcp / udp\n * 会话层: 建立和中止连接\n * 表示层: 数据转换、确认数据格式\n * 应用层: 提供用户程序接口 : http / dns ...\n\n# 网络中常用协议以及层次关系\n * 网络层 ip / icmp / arp\n * 主机-主机层 tcp / udp\n * 进程/应用层 telnet / ftp / smtp / http / dns\n\n# tcp / ip 概念层模型\n * 应用层: 应用层 表示层 会话层\n * 传输层: 传输层\n * 网络层: 网络层\n * 链路层: 数据链路层 物理层\n\n# 五层因特尔协议栈\n * 1.应用层(dns,http) dns 解析成 ip 并发送 http 请求\n * 2.传输层(tcp,udp) 建立 tcp 连接（三次握手）\n * 3.网络层(ip,arp) ip 寻址\n * 4.数据链路层(ppp) 封装成帧\n * 5.物理层(利用物理介质传输比特流) 物理传输（然后传输的时候通过双绞线，电磁波等各种介质）\n\n# http 状态码\n * 1xx消息: 请求已被服务器接收，继续处理\n * 2xx成功: 请求已成功被服务器接收、理解、并接受\n * 3xx重定向: 需要后续操作才能完成这一请求\n * 4xx请求错误: 请求含有词法错误或者无法被执行\n * 5xx服务器错误: 服务器在处理某个正确请求时发生错误\n\n# http 常见状态码\n# 200\n * 200 :表明该请求被成功地完成，所请求的资源发送回客户端\n * 201 :表示请求成功且服务器创建了新的资源\n * 202 :表示服务器已经接受了请求，但还未处理\n\n# 300\n * 301 :表示永久重定向，请求的网页已经永久移动到新位置\n * 302 :表示临时重定向\n * 304 :自从上次请求后，请求的网页未修改过，请客户端使用本地缓存\n\n# 400\n * 400 :客户端请求有错（譬如可以是安全模块拦截）\n * 401 :服务器无法理解请求的格式\n * 402 :请求未授权\n * 403 :禁止访问\n * 404 :资源未找到\n\n# 500\n * 500 :服务器内部错误\n * 503 :服务不可用",charsets:{cjk:!0}},{title:"nginx在centos7中的使用",frontmatter:{title:"nginx在centos7中的使用",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["centos7","nginx"],categories:["server"],readingShow:"top"},regularPath:"/serve/nginx-centos7.html",relativePath:"serve/nginx-centos7.md",key:"v-cd67ccaa",path:"/serve/nginx-centos7.html",headers:[{level:2,title:"nginx 安装",slug:"nginx-安装",normalizedTitle:"nginx 安装",charIndex:280},{level:3,title:"nginx",slug:"nginx",normalizedTitle:"nginx",charIndex:280},{level:2,title:"配置 ssl",slug:"配置-ssl",normalizedTitle:"配置 ssl",charIndex:3763},{level:2,title:"配置 nginx",slug:"配置-nginx",normalizedTitle:"配置 nginx",charIndex:4402}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"nginx 安装 nginx 配置 ssl 配置 nginx",content:' * centos7\n\nsudo yum update -y\nsudo yum install wget -y\nsudo yum install epel-release -y\nsudo yum install gcc gcc-c++ make libtool zlib zlib-devel openssl openssl-devel pcre pcre-devel -y\nsudo yum install vim -y\nsudo yum install net-tools -y\nsudo yum upgrade -y\n\n\n1\n2\n3\n4\n5\n6\n7\n# nginx 安装\n * 当前 nginx 版本: nginx -V\n\nnginx version: nginx/1.15.12\n\n\n1\n * step1: nginx\n\nsudo yum install yum-utils\n\n\n1\n * step2: 编辑vim /etc/yum.repos.d/nginx.repo\n\n[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/7/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/7/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * step3: sudo yum-config-manager --enable nginx-mainline\n * step4: sudo yum install nginx\n * 查看安装 nginx 信息: rpm -ql nginx\n * step5: systemctl enable nginx.service\n * nginx service: servce nginx start|stop|restart\n * yum 安装的 nginx 目录位置: /etc/nginx/\n * yum 安装的 nginx 后 html 文件位置: /usr/share/nginx/html\n * nginx 配置 conf: /etc/nginx/nginx.conf和/etc/nginx/conf/\n\n# nginx\n * vim /etc/nginx/nginx.conf\n\nuser  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    include /etc/nginx/conf.d/*.conf;\n\n    log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n        \'$status $body_bytes_sent "$http_referer" \'\n        \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    server_tokens   off;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    fastcgi_intercept_errors on;\n\n    #开启gzip压缩\n    gzip  on;\n    #IE6的某些版本对gzip的压缩支持很不好,故关闭\n    gzip_disable "MSIE [1-6]\\.(?!.*SV1)";\n    #HTTP1.0以上的版本都启动gzip\n    gzip_http_version 1.0;\n    #指定哪些类型的相应才启用gzip压缩，多个用空格分隔\n    gzip_types\n    application/javascript\n    application/json\n    text/css\n    text/plain;\n\n    gzip_comp_level 5;\n\n    server {\n        listen 80 default;\n        server_name _;\n        return 500;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n * vim /etc/nginx/conf.d/default.conf\n\nserver {\n    listen       80;\n    server_name  www.domain.cn domain.cn;\n\n    #charset koi8-r;\n    #access_log  /var/log/nginx/host.access.log  main;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ {\n    #    proxy_pass   http://127.0.0.1;\n    #}\n\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ {\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #}\n\n    # deny access to .htaccess files, if Apache\'s document root\n    # concurs with nginx\'s one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n    #}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n * 检查 nginx 配置文件: nginx -t\n * 重启 nginx 服务: service nginx restart\n * 购买域名, 配置 dns 后， 访问域名网址\n\n# 配置 ssl\n * Neilpang/acme.sh\n * 安装 acme.sh\n\ncurl  https://get.acme.sh | sh\n\n# 安装到你的 home 目录\n~/.acme.sh/\n\n# 创建 一个 bash 的 alias\nalias acme.sh=~/.acme.sh/acme.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n * 生成证书\n\n# 方式1\nacme.sh  --issue  -d domain.cn -d www.domain.cn  --webroot  /usr/share/nginx/html/\n# 方式2\nacme.sh --issue  -d domain.cn   --nginx\n\n\n1\n2\n3\n4\n * 安装证书\n\nmkdir /etc/nginx/ssl\n\nacme.sh  --installcert  -d  domain.cn   \\\n        --key-file   /etc/nginx/ssl/domain.cn.key \\\n        --fullchain-file /etc/nginx/ssl/fullchain.cer \\\n        --reloadcmd  "service nginx force-reload"\n\n\n1\n2\n3\n4\n5\n6\n * 更新 acme.sh\n\n# 开启自动升级\nacme.sh  --upgrade  --auto-upgrade\n\n\n1\n2\n# 配置 nginx\n * step1: cp default.conf chenio_cn.conf 和 mv default.conf default.conf.bak\n * step2: vim /etc/nginx/conf.d/chenio_cn.conf\n\nserver {\n    listen 80;\n    server_name  www.domain.cn domain.cn;\n    rewrite ^(.*) https://$http_host$request_uri? permanent;\n}\n\nserver {\n    listen  443 ssl;\n    server_name  www.domain.cn domain.cn;\n\n    root  /usr/share/nginx/html;\n\n    error_page 404 /404/404.html;\n\n    # ssl on;\n    ssl_certificate /etc/nginx/ssl/fullchain.cer;\n    ssl_certificate_key /etc/nginx/ssl/domain.cn.key;\n\n    keepalive_timeout   70;\n    fastcgi_param   HTTPS               on;\n    fastcgi_param   HTTP_SCHEME         https;\n\n    server_tokens off;\n\n    location / {\n        index  index.html index.htm;\n    }\n\n    location /xxx {\n        autoindex on;\n        autoindex_exact_size off;\n        autoindex_localtime on;\n    }\n\n    location = /50x.html {\n        root /usr/share/nginx/html;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n * step3: nginx -t\n * step4: service nginx restart\n * step5: 访问域名网址',normalizedContent:' * centos7\n\nsudo yum update -y\nsudo yum install wget -y\nsudo yum install epel-release -y\nsudo yum install gcc gcc-c++ make libtool zlib zlib-devel openssl openssl-devel pcre pcre-devel -y\nsudo yum install vim -y\nsudo yum install net-tools -y\nsudo yum upgrade -y\n\n\n1\n2\n3\n4\n5\n6\n7\n# nginx 安装\n * 当前 nginx 版本: nginx -v\n\nnginx version: nginx/1.15.12\n\n\n1\n * step1: nginx\n\nsudo yum install yum-utils\n\n\n1\n * step2: 编辑vim /etc/yum.repos.d/nginx.repo\n\n[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/7/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/7/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * step3: sudo yum-config-manager --enable nginx-mainline\n * step4: sudo yum install nginx\n * 查看安装 nginx 信息: rpm -ql nginx\n * step5: systemctl enable nginx.service\n * nginx service: servce nginx start|stop|restart\n * yum 安装的 nginx 目录位置: /etc/nginx/\n * yum 安装的 nginx 后 html 文件位置: /usr/share/nginx/html\n * nginx 配置 conf: /etc/nginx/nginx.conf和/etc/nginx/conf/\n\n# nginx\n * vim /etc/nginx/nginx.conf\n\nuser  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    include /etc/nginx/conf.d/*.conf;\n\n    log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n        \'$status $body_bytes_sent "$http_referer" \'\n        \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    server_tokens   off;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    fastcgi_intercept_errors on;\n\n    #开启gzip压缩\n    gzip  on;\n    #ie6的某些版本对gzip的压缩支持很不好,故关闭\n    gzip_disable "msie [1-6]\\.(?!.*sv1)";\n    #http1.0以上的版本都启动gzip\n    gzip_http_version 1.0;\n    #指定哪些类型的相应才启用gzip压缩，多个用空格分隔\n    gzip_types\n    application/javascript\n    application/json\n    text/css\n    text/plain;\n\n    gzip_comp_level 5;\n\n    server {\n        listen 80 default;\n        server_name _;\n        return 500;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n * vim /etc/nginx/conf.d/default.conf\n\nserver {\n    listen       80;\n    server_name  www.domain.cn domain.cn;\n\n    #charset koi8-r;\n    #access_log  /var/log/nginx/host.access.log  main;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n\n    # proxy the php scripts to apache listening on 127.0.0.1:80\n    #\n    #location ~ \\.php$ {\n    #    proxy_pass   http://127.0.0.1;\n    #}\n\n    # pass the php scripts to fastcgi server listening on 127.0.0.1:9000\n    #\n    #location ~ \\.php$ {\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n    #    fastcgi_index  index.php;\n    #    fastcgi_param  script_filename  /scripts$fastcgi_script_name;\n    #    include        fastcgi_params;\n    #}\n\n    # deny access to .htaccess files, if apache\'s document root\n    # concurs with nginx\'s one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n    #}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n * 检查 nginx 配置文件: nginx -t\n * 重启 nginx 服务: service nginx restart\n * 购买域名, 配置 dns 后， 访问域名网址\n\n# 配置 ssl\n * neilpang/acme.sh\n * 安装 acme.sh\n\ncurl  https://get.acme.sh | sh\n\n# 安装到你的 home 目录\n~/.acme.sh/\n\n# 创建 一个 bash 的 alias\nalias acme.sh=~/.acme.sh/acme.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n * 生成证书\n\n# 方式1\nacme.sh  --issue  -d domain.cn -d www.domain.cn  --webroot  /usr/share/nginx/html/\n# 方式2\nacme.sh --issue  -d domain.cn   --nginx\n\n\n1\n2\n3\n4\n * 安装证书\n\nmkdir /etc/nginx/ssl\n\nacme.sh  --installcert  -d  domain.cn   \\\n        --key-file   /etc/nginx/ssl/domain.cn.key \\\n        --fullchain-file /etc/nginx/ssl/fullchain.cer \\\n        --reloadcmd  "service nginx force-reload"\n\n\n1\n2\n3\n4\n5\n6\n * 更新 acme.sh\n\n# 开启自动升级\nacme.sh  --upgrade  --auto-upgrade\n\n\n1\n2\n# 配置 nginx\n * step1: cp default.conf chenio_cn.conf 和 mv default.conf default.conf.bak\n * step2: vim /etc/nginx/conf.d/chenio_cn.conf\n\nserver {\n    listen 80;\n    server_name  www.domain.cn domain.cn;\n    rewrite ^(.*) https://$http_host$request_uri? permanent;\n}\n\nserver {\n    listen  443 ssl;\n    server_name  www.domain.cn domain.cn;\n\n    root  /usr/share/nginx/html;\n\n    error_page 404 /404/404.html;\n\n    # ssl on;\n    ssl_certificate /etc/nginx/ssl/fullchain.cer;\n    ssl_certificate_key /etc/nginx/ssl/domain.cn.key;\n\n    keepalive_timeout   70;\n    fastcgi_param   https               on;\n    fastcgi_param   http_scheme         https;\n\n    server_tokens off;\n\n    location / {\n        index  index.html index.htm;\n    }\n\n    location /xxx {\n        autoindex on;\n        autoindex_exact_size off;\n        autoindex_localtime on;\n    }\n\n    location = /50x.html {\n        root /usr/share/nginx/html;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n * step3: nginx -t\n * step4: service nginx restart\n * step5: 访问域名网址',charsets:{cjk:!0}},{title:"nginx在windows和mac中使用示例",frontmatter:{title:"nginx在windows和mac中使用示例",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["centos7","nginx"],categories:["server"],readingShow:"top"},regularPath:"/serve/nginx-use.html",relativePath:"serve/nginx-use.md",key:"v-fd43afaa",path:"/serve/nginx-use.html",headers:[{level:2,title:"windows",slug:"windows",normalizedTitle:"windows",charIndex:2},{level:2,title:"mac",slug:"mac",normalizedTitle:"mac",charIndex:1279},{level:3,title:"nginx for mac",slug:"nginx-for-mac",normalizedTitle:"nginx for mac",charIndex:1285},{level:3,title:"nginx install",slug:"nginx-install",normalizedTitle:"nginx install",charIndex:1324}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"windows mac nginx for mac nginx install",content:"# windows\n * 在 nginx-1.12.1 目录下conf/nginx.conf 内容\n\n#user  nobody;\nworker_processes  1;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    sendfile        on;\n    keepalive_timeout  65;\n    server {\n        listen       80 default_server;\n        server_name  localhost default_server;\n        root   html;\n        location / {\n            index  index.html index.htm;\n        }\n}\n    include ../vhost/*.conf;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * vhost 目录下 a_com.conf 内容：\n\nserver {\n        listen       80;\n        server_name  www.a.com;\n        root   D:/test/;\n        location / {\n            index  index.html index.htm;\n        }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * vhost 目录下 b_com.conf 内容：\n\nserver {\n        listen       80;\n        server_name  www.b.com;\n        root   D:/test2/;\n        location / {\n            index  index.html index.htm;\n        }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 在本地磁盘 D 盘下 新建 test 和 test2 目录，并新建 index.html 文件\n   \n   \n * 在本地磁盘 C 盘中 C:\\Windows\\System32\\drivers\\etc 下修改 hosts 如下\n   \n   \n\n127.0.0.1       www.a.com\n127.0.0.1       www.b.com\n\n\n1\n2\n * 用 cmd 进入 nginx 安装目录下执行\n\nnginx.exe  # 开始\nnginx -t  # 检测语法\nnginx -s reload  # 重新启动\nnginx -s stop  # 停止\n\n\n1\n2\n3\n4\n * 打开浏览器输入网址\n\n# mac\n# nginx for mac\n * brew install nginx\n\n# nginx install\n * hosts\n\n127.0.0.1       jenkins.chenio.com\n127.0.0.1       gitlab.chenio.com\n127.0.0.1       www.chenio.com\n\n\n1\n2\n3\n * brew install wget\n\n# nginx下载页: http://nginx.org/en/download.html\nwget http://nginx.org/download/nginx-1.14.2.tar.gz\n# zlib下载页: http://zlib.net/\nwget http://zlib.net/zlib-1.2.11.tar.gz\n# pcre下载页: http://www.pcre.org/\nwget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.42.tar.gz\n\ntar zxvf zlib-1.2.11.tar.gz\ntar zxvf pcre-8.42.tar.gz\ntar zxvf nginx-1.14.2.tar.gz\n./configure --prefix=/usr/local/nginx --with-zlib=../zlib-1.2.11 --with-pcre=../pcre2-10.21\nmake\nsudo make install\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * start nginx\n\n# 进入nginx文件夹\ncd /usr/local/nginx\n\n#启动\nsudo sbin/nginx     #浏览器访问 127.0.0.1 测试是否成功启动\n\n#重启\nsudo sbin/nginx -s reload\n\n#停止\nsudo sbin/nginx -s stop\n\n# 检测语法\nsudo sbin/nginx -t\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * nginx config\n\n# nginx.conf, http里添加\ninclude ../vhost/*.conf;\n\n# nginx.conf, 禁用ip访问\nserver {\n    listen 80 default_server;\n    server_name _;\n    return 403;\n}\n\n# nginx.conf, 隐藏nginx版本显示\nserver_tokens off;\n\nmkdir vhost && cd vhost\n\n# gitlab_chenio_com.conf\nupstream gitlab {\n    server 127.0.0.1:9090;\n}\n\nserver {\n    listen  80;\n    index index index.htm index.py index.html;\n\n    server_name gitlab.chenio.com;\n\n    location / {\n        proxy_pass_header Server;\n        proxy_set_header Host $http_host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Scheme $scheme;\n        proxy_pass http://gitlab;\n    }\n}\n\n# jenkins_chenio_com.conf\nupstream jenkins {\n    server 127.0.0.1:8080;\n}\n\nserver {\n    listen  80;\n    index index index.htm index.py index.html;\n\n    server_name jenkins.chenio.com;\n\n    location / {\n        proxy_pass_header Server;\n        proxy_set_header Host $http_host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Scheme $scheme;\n        proxy_pass http://jenkins;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54",normalizedContent:"# windows\n * 在 nginx-1.12.1 目录下conf/nginx.conf 内容\n\n#user  nobody;\nworker_processes  1;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    sendfile        on;\n    keepalive_timeout  65;\n    server {\n        listen       80 default_server;\n        server_name  localhost default_server;\n        root   html;\n        location / {\n            index  index.html index.htm;\n        }\n}\n    include ../vhost/*.conf;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * vhost 目录下 a_com.conf 内容：\n\nserver {\n        listen       80;\n        server_name  www.a.com;\n        root   d:/test/;\n        location / {\n            index  index.html index.htm;\n        }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * vhost 目录下 b_com.conf 内容：\n\nserver {\n        listen       80;\n        server_name  www.b.com;\n        root   d:/test2/;\n        location / {\n            index  index.html index.htm;\n        }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 在本地磁盘 d 盘下 新建 test 和 test2 目录，并新建 index.html 文件\n   \n   \n * 在本地磁盘 c 盘中 c:\\windows\\system32\\drivers\\etc 下修改 hosts 如下\n   \n   \n\n127.0.0.1       www.a.com\n127.0.0.1       www.b.com\n\n\n1\n2\n * 用 cmd 进入 nginx 安装目录下执行\n\nnginx.exe  # 开始\nnginx -t  # 检测语法\nnginx -s reload  # 重新启动\nnginx -s stop  # 停止\n\n\n1\n2\n3\n4\n * 打开浏览器输入网址\n\n# mac\n# nginx for mac\n * brew install nginx\n\n# nginx install\n * hosts\n\n127.0.0.1       jenkins.chenio.com\n127.0.0.1       gitlab.chenio.com\n127.0.0.1       www.chenio.com\n\n\n1\n2\n3\n * brew install wget\n\n# nginx下载页: http://nginx.org/en/download.html\nwget http://nginx.org/download/nginx-1.14.2.tar.gz\n# zlib下载页: http://zlib.net/\nwget http://zlib.net/zlib-1.2.11.tar.gz\n# pcre下载页: http://www.pcre.org/\nwget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.42.tar.gz\n\ntar zxvf zlib-1.2.11.tar.gz\ntar zxvf pcre-8.42.tar.gz\ntar zxvf nginx-1.14.2.tar.gz\n./configure --prefix=/usr/local/nginx --with-zlib=../zlib-1.2.11 --with-pcre=../pcre2-10.21\nmake\nsudo make install\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * start nginx\n\n# 进入nginx文件夹\ncd /usr/local/nginx\n\n#启动\nsudo sbin/nginx     #浏览器访问 127.0.0.1 测试是否成功启动\n\n#重启\nsudo sbin/nginx -s reload\n\n#停止\nsudo sbin/nginx -s stop\n\n# 检测语法\nsudo sbin/nginx -t\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * nginx config\n\n# nginx.conf, http里添加\ninclude ../vhost/*.conf;\n\n# nginx.conf, 禁用ip访问\nserver {\n    listen 80 default_server;\n    server_name _;\n    return 403;\n}\n\n# nginx.conf, 隐藏nginx版本显示\nserver_tokens off;\n\nmkdir vhost && cd vhost\n\n# gitlab_chenio_com.conf\nupstream gitlab {\n    server 127.0.0.1:9090;\n}\n\nserver {\n    listen  80;\n    index index index.htm index.py index.html;\n\n    server_name gitlab.chenio.com;\n\n    location / {\n        proxy_pass_header server;\n        proxy_set_header host $http_host;\n        proxy_set_header x-real-ip $remote_addr;\n        proxy_set_header x-scheme $scheme;\n        proxy_pass http://gitlab;\n    }\n}\n\n# jenkins_chenio_com.conf\nupstream jenkins {\n    server 127.0.0.1:8080;\n}\n\nserver {\n    listen  80;\n    index index index.htm index.py index.html;\n\n    server_name jenkins.chenio.com;\n\n    location / {\n        proxy_pass_header server;\n        proxy_set_header host $http_host;\n        proxy_set_header x-real-ip $remote_addr;\n        proxy_set_header x-scheme $scheme;\n        proxy_pass http://jenkins;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54",charsets:{cjk:!0}},{title:"nginx的简单使用",frontmatter:{title:"nginx的简单使用",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["nginx"],categories:["server"],readingShow:"top"},regularPath:"/serve/nginx.html",relativePath:"serve/nginx.md",key:"v-bf44082a",path:"/serve/nginx.html",headers:[{level:2,title:"nginx 结构",slug:"nginx-结构",normalizedTitle:"nginx 结构",charIndex:2},{level:2,title:"upstream",slug:"upstream",normalizedTitle:"upstream",charIndex:1866},{level:2,title:"location 配置",slug:"location-配置",normalizedTitle:"location 配置",charIndex:3044},{level:2,title:"Nginx Rewrite",slug:"nginx-rewrite",normalizedTitle:"nginx rewrite",charIndex:3711},{level:2,title:"demo",slug:"demo",normalizedTitle:"demo",charIndex:5252},{level:2,title:"nginx 安装",slug:"nginx-安装",normalizedTitle:"nginx 安装",charIndex:5800},{level:2,title:"ssl",slug:"ssl",normalizedTitle:"ssl",charIndex:6170},{level:2,title:"DEMO",slug:"demo-2",normalizedTitle:"demo",charIndex:7303},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:11273}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"nginx 结构 upstream location 配置 Nginx Rewrite demo nginx 安装 ssl DEMO 相关链接",content:'# nginx 结构\n * 主要结构\n\n##定义Nginx运行的用户和用户组用user指令\nuser nginx;\n\n##定义nginx进程数,建议设置为等于CPU总核心数\nworker_processes  8;\n\n##全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]用error_log指令\nerror_log  /var/log/nginx/error.log info;\n\n##定义进程文件用pid指令\npid /var/run/nginx.pid;\n\n##描述nginx进程打开的最多文件描述符的数目\nworker_rlimit_nofile 65535;\n\n##Main段，定义全局属性\nevents {\n  ##定义不同IO模型下的工作机制\n  ##参考事件模型指令：use [ kqueue | rtsig | epoll | /dev/poll | select | poll ];\n  use epoll;\n\n  ##设置单个进程最大连接数用指令：(最大连接数=连接数*进程数)\n  worker_connections 1024;\n\n}\nhttp {\n    ##定义作为web服务器的相关属性\n\n    ##设定mime类型,类型由mime.type文件定义 用include指令\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    ##开启gzip压缩指令\n    gzip on;\n    gzip_disable "MSIE [1-6]\\.(?!.*SV1)";\n\n    server {\n        ##定义一个虚拟主机的属性，所有web服务必须定义成一个虚拟主机，与httpd不同\n        ##侦听80端口\n        listen       80;\n\n        ##定义使用www.xx.com访问\n        server_name  www.xx.com;\n\n        ##设定本虚拟主机的访问日志\n        access_log  logs/www.xx.com.access.log  main;\n\n        ##定义服务器的默认网站根目录位置\n        root   /root;\n\n        ##默认请求\n        location / {\n\n            index index.php index.html index.htm;   ##定义首页索引文件的名称\n\n            fastcgi_pass  www.xx.com;\n\n            fastcgi_param  SCRIPT_FILENAME $document_root/$fastcgi_script_name;\n\n            include /etc/nginx/fastcgi_params;\n        }\n\n        ##定义错误提示页面\n        error_page   500 502 503 504 /50x.html;\n        location = /50x.html {\n          root   /root;\n        }\n\n        location / {\n          ##反向代理\n          ##proxy_pass请求转向指令\n          ##proxy_set_header允许重新定义或添加字段传递给代理服务器的请求头\n          proxy_set_header Host $host:$server_port;\n          proxy_set_header X-Real-IP $remote_addr;\n          proxy_set_header X-Real-PORT $remote_port;\n          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n          proxy_pass https://www.baidu.com;\n        }\n\n    }\n    upstream mysvr {\n      ##weigth参数表示权值，权值越高被分配到的几率越大\n      ##本机上的Squid开启3128端口\n        server 192.168.8.1:3128 weight=5;\n        server 192.168.8.2:80  weight=1;\n        server 192.168.8.3:80  weight=6;\n    }\n }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n# upstream\n# nginx的upstream目前支持4种方式的分配\n\n# 轮询（默认） 每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除\n# weight  指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况\n# ip_hash  每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题\n# fair（第三方  按后端服务器的响应时间来分配请求，响应时间短的优先分配\n\n# down  表示单前的server暂时不参与负载\n# weight  默认为1.weight越大，负载的权重就越大\n# max_fails  允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误\n# fail_timeout  max_fails次失败后，暂停的时间\n# backup  其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻\n\nupstream mysvr{\n    ip_hash;\n    server 192.168.12.133:80;\n    server 192.168.12.134:80  down;\n    server 192.168.12.135:8009  max_fails=3  fail_timeout=20s;\n    server 192.168.12.136:8080;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# location 配置\n# 语法规则： location [=|~|~*|^~] /uri/ { … }\n\n# 首先匹配 =，其次匹配^~, 其次是按文件中顺序的正则匹配，最后是交给 / 通用匹配。\n# 当有匹配成功时候，停止匹配，按当前匹配规则处理请求\n\n# =\t  开头表示精确匹配\n# ^~\t开头表示uri以某个常规字符串开头，理解为匹配 url路径即可\n# ~\t  开头表示区分大小写的正则匹配\n# !~\t区分大小写不匹配\n# !~*\t不区分大小写不匹配\n# ~*\t开头表示不区分大小写的正则匹配\n# / \t通用匹配，任何请求都会匹配到\n\nlocation = / {\n   #规则A\n}\nlocation = /login {\n   #规则B\n}\nlocation ^~ /static/ {\n   #规则C\n}\nlocation ~ \\.(gif|jpg|png|js|css)$ {\n   #规则D\n}\n# 访问根目录/ 比如http://localhost/ 将匹配规则A;\n# 访问 http://localhost/login 将匹配规则B;\n# 访问 http://localhost/static/a.html 将匹配规则C;\n# 访问 http://localhost/a.gif, http://localhost/b.jpg 将匹配规则D\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# Nginx Rewrite\n * 规则相关指令有 if,rewrite,set,return,break\n * 全局变量\n\n$args ： 这个变量等于请求行中的参数，同$query_string\n$content_length ： 请求头中的Content-length字段\n$content_type ： 请求头中的Content-Type字段\n$document_root ： 当前请求在root指令中指定的值\n$host ： 请求主机头字段，否则为服务器名称\n$http_user_agent ： 客户端agent信息\n$http_cookie ： 客户端cookie信\n$limit_rate ： 这个变量可以限制连接速率\n$request_method ： 客户端请求的动作，通常为GET或POST\n$remote_addr ： 客户端的IP地址\n$remote_port ： 客户端的端口\n$remote_user ： 已经经过Auth Basic Module验证的用户名\n$request_filename ： 当前请求的文件路径，由root或alias指令与URI请求生成\n$scheme ： HTTP方法（如http，https）\n$server_protocol ： 请求使用的协议，通常是HTTP/1.0或HTTP/1.1\n$server_addr ： 服务器地址，在完成一次系统调用后可以确定这个值\n$server_name ： 服务器名称\n$server_port ： 请求到达服务器的端口号\n$request_uri ： 包含请求参数的原始URI，不包含主机名，如："/foo/bar.php?arg=baz"\n$uri ： 不带请求参数的当前URI，$uri不包含主机名，如"/foo/bar.html"\n$document_uri ： 与$uri相同\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n * 常用正则\n\n. ： 匹配除换行符以外的任意字符\n? ： 重复0次或1次\n+ ： 重复1次或更多次\n* ： 重复0次或更多次\n\\d ：匹配数字\n^ ： 匹配字符串的开始\n$ ： 匹配字符串的介绍\n{n} ： 重复n次\n{n,} ： 重复n次或更多次\n[c] ： 匹配单个字符c\n[a-z] ： 匹配a-z小写字母的任意一个\n小括号()之间匹配的内容，可以在后面通过$1来引用，$2表示的是前面第二个()里的内容\n\n正则表达式匹配\n~ 为区分大小写匹配\n~* 为不区分大小写匹配\n!~和!~*分别为区分大小写不匹配及不区分大小写不匹配\n\n文件及目录匹配：\n-f和!-f用来判断是否存在文件\n-d和!-d用来判断是否存在目录\n-e和!-e用来判断是否存在文件或目录\n-x和!-x用来判断文件是否可执行\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n * flag 标记有\n\nlast    相当于Apache里的[L]标记，表示完成rewrite\nbreak   终止匹配, 不再匹配后面的规则\nredirect    返回302临时重定向 地址栏会显示跳转后的地址\npermanent   返回301永久重定向 地址栏会显示跳转后的地址\n\n\n1\n2\n3\n4\nlocation /baidu {\n    ##rewrite    <regex>   <replacement>   [flag];\n    rewrite (.*) http://www.baidu.com;\n}\n\n\n1\n2\n3\n4\n# demo\n# 直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理\n# 这里是直接转发给后端应用服务器了，也可以是一个静态首页\n# 第一个必选规则\n\nlocation = / {\n    proxy_pass http://tomcat:8080/index\n}\n\n# 第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项\n# 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用\n\nlocation ^~ /static/ {\n    root /webroot/static/;\n}\nlocation ~* \\.(gif|jpg|jpeg|png|css|js|ico)$ {\n    root /webroot/res/;\n}\n\n# 第三个规则就是通用规则，用来转发动态请求到后端应用服务器\n# 非静态文件请求就默认是动态请求，自己根据实际把握\n# 毕竟目前的一些框架的流行，带.php,.jsp后缀的情况很少了\n\nlocation / {\n    proxy_pass http://tomcat:8080/\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# nginx 安装\n# cd /etc/yum.repos.d\n# touch nginx.repo\n# vim nginx.repo\n\n# 写入如下：\n\n[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/centos/7/$basearch/\ngpgcheck=0\nenabled=1\n\n# yum makecache\n# yum install nginx\n# service nginx start|stop\n# systemctl enable nginx\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\nyum -y install gcc gcc-c++ make libtool zlib zlib-devel openssl openssl-devel pcre pcre-devel\nnginx url: http://nginx.org/en/download.html\nwget http://nginx.org/download/nginx-1.10.1.tar.gz\ntar -zxvf nginx-1.10.1.tar.gz\ncd nginx-1.10.1\n./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre\nmake\nmake install\ncd /usr/local/nginx/sbin\n./nginx -V # 查看版本\nvim /etc/profile\nexport PATH=/usr/local/nginx/sbin:$PATH\nsource /etc/profile\nnginx -V #查看版本\n\n# server nginx: https://github.com/chengzao/note/blob/master/others/linux/nginx.txt\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nnginx server lib\n\n# ssl\n * https://freessl.org\n * https://certbot.eff.org/\n * https://github.com/Neilpang/acme.sh\n\n安装： curl  https://get.acme.sh | sh\n\n起别名：alias acme.sh=~/.acme.sh/acme.sh\n\n生成证书：acme.sh --issue -d www.domain.cn -d api.domain.cn -d blog.domain.cn  -d www.domain.top -w /usr/local/nginx/wwwroot\n\n拷贝证书： acme.sh  --installcert  -d  www.domain.cn --key-file   /usr/local/nginx/ssl/domain_cn.key  --fullchain-file /usr/local/nginx/ssl/fullchain.cer  --reloadcmd  "service nginx force-reload"\n\n自动更新 acme.sh： acme.sh  --upgrade  --auto-upgrade\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# DEMO\n * nginx.conf\n\n#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    include \t  /usr/local/nginx/vhost/*.conf;\n    #log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n    #                  \'$status $body_bytes_sent "$http_referer" \'\n    #                  \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if Apache\'s document root\n        # concurs with nginx\'s one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n    server {\n      listen 80 default;\n      server_name _;\n      return 500;\n    }\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n\n    # HTTPS server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n * server\n\nserver {\n    listen 80;\n    server_name www.domain.cn;\n    rewrite ^(.*) https://$http_host$request_uri? permanent;\n}\n\n\nserver {\n    listen  443 ssl;\n    server_name  www.domain.cn;\n    root  /usr/local/nginx/wwwroot;\n\n    ssl on;\n\n    ssl_certificate /usr/local/nginx/ssl/fullchain.cer;\n    ssl_certificate_key /usr/local/nginx/ssl/domain_cn.key;\n\n    keepalive_timeout   70;\n    fastcgi_param   HTTPS               on;\n    fastcgi_param   HTTP_SCHEME         https;\n    server_tokens off;\n\n\n    location / {\n        index  index.html index.htm;\n    }\n    # 开启文件夹访问\n    location /note {\n        autoindex on;\n        autoindex_exact_size off;\n        autoindex_localtime on;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# 相关链接\n * Nginx proxy_set_header 理解\n * Nginx 配置 upstream 实现负载均衡\n * nginx 配置 location 总结及 rewrite 规则写法\n * tengine\n * nginx 服务器详细安装过程\n * Mac OS 下安装及配置 nginx\n * acme.sh\n * Nginx 基本配置备忘',normalizedContent:'# nginx 结构\n * 主要结构\n\n##定义nginx运行的用户和用户组用user指令\nuser nginx;\n\n##定义nginx进程数,建议设置为等于cpu总核心数\nworker_processes  8;\n\n##全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]用error_log指令\nerror_log  /var/log/nginx/error.log info;\n\n##定义进程文件用pid指令\npid /var/run/nginx.pid;\n\n##描述nginx进程打开的最多文件描述符的数目\nworker_rlimit_nofile 65535;\n\n##main段，定义全局属性\nevents {\n  ##定义不同io模型下的工作机制\n  ##参考事件模型指令：use [ kqueue | rtsig | epoll | /dev/poll | select | poll ];\n  use epoll;\n\n  ##设置单个进程最大连接数用指令：(最大连接数=连接数*进程数)\n  worker_connections 1024;\n\n}\nhttp {\n    ##定义作为web服务器的相关属性\n\n    ##设定mime类型,类型由mime.type文件定义 用include指令\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    ##开启gzip压缩指令\n    gzip on;\n    gzip_disable "msie [1-6]\\.(?!.*sv1)";\n\n    server {\n        ##定义一个虚拟主机的属性，所有web服务必须定义成一个虚拟主机，与httpd不同\n        ##侦听80端口\n        listen       80;\n\n        ##定义使用www.xx.com访问\n        server_name  www.xx.com;\n\n        ##设定本虚拟主机的访问日志\n        access_log  logs/www.xx.com.access.log  main;\n\n        ##定义服务器的默认网站根目录位置\n        root   /root;\n\n        ##默认请求\n        location / {\n\n            index index.php index.html index.htm;   ##定义首页索引文件的名称\n\n            fastcgi_pass  www.xx.com;\n\n            fastcgi_param  script_filename $document_root/$fastcgi_script_name;\n\n            include /etc/nginx/fastcgi_params;\n        }\n\n        ##定义错误提示页面\n        error_page   500 502 503 504 /50x.html;\n        location = /50x.html {\n          root   /root;\n        }\n\n        location / {\n          ##反向代理\n          ##proxy_pass请求转向指令\n          ##proxy_set_header允许重新定义或添加字段传递给代理服务器的请求头\n          proxy_set_header host $host:$server_port;\n          proxy_set_header x-real-ip $remote_addr;\n          proxy_set_header x-real-port $remote_port;\n          proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;\n          proxy_pass https://www.baidu.com;\n        }\n\n    }\n    upstream mysvr {\n      ##weigth参数表示权值，权值越高被分配到的几率越大\n      ##本机上的squid开启3128端口\n        server 192.168.8.1:3128 weight=5;\n        server 192.168.8.2:80  weight=1;\n        server 192.168.8.3:80  weight=6;\n    }\n }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n# upstream\n# nginx的upstream目前支持4种方式的分配\n\n# 轮询（默认） 每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除\n# weight  指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况\n# ip_hash  每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题\n# fair（第三方  按后端服务器的响应时间来分配请求，响应时间短的优先分配\n\n# down  表示单前的server暂时不参与负载\n# weight  默认为1.weight越大，负载的权重就越大\n# max_fails  允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误\n# fail_timeout  max_fails次失败后，暂停的时间\n# backup  其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻\n\nupstream mysvr{\n    ip_hash;\n    server 192.168.12.133:80;\n    server 192.168.12.134:80  down;\n    server 192.168.12.135:8009  max_fails=3  fail_timeout=20s;\n    server 192.168.12.136:8080;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# location 配置\n# 语法规则： location [=|~|~*|^~] /uri/ { … }\n\n# 首先匹配 =，其次匹配^~, 其次是按文件中顺序的正则匹配，最后是交给 / 通用匹配。\n# 当有匹配成功时候，停止匹配，按当前匹配规则处理请求\n\n# =\t  开头表示精确匹配\n# ^~\t开头表示uri以某个常规字符串开头，理解为匹配 url路径即可\n# ~\t  开头表示区分大小写的正则匹配\n# !~\t区分大小写不匹配\n# !~*\t不区分大小写不匹配\n# ~*\t开头表示不区分大小写的正则匹配\n# / \t通用匹配，任何请求都会匹配到\n\nlocation = / {\n   #规则a\n}\nlocation = /login {\n   #规则b\n}\nlocation ^~ /static/ {\n   #规则c\n}\nlocation ~ \\.(gif|jpg|png|js|css)$ {\n   #规则d\n}\n# 访问根目录/ 比如http://localhost/ 将匹配规则a;\n# 访问 http://localhost/login 将匹配规则b;\n# 访问 http://localhost/static/a.html 将匹配规则c;\n# 访问 http://localhost/a.gif, http://localhost/b.jpg 将匹配规则d\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# nginx rewrite\n * 规则相关指令有 if,rewrite,set,return,break\n * 全局变量\n\n$args ： 这个变量等于请求行中的参数，同$query_string\n$content_length ： 请求头中的content-length字段\n$content_type ： 请求头中的content-type字段\n$document_root ： 当前请求在root指令中指定的值\n$host ： 请求主机头字段，否则为服务器名称\n$http_user_agent ： 客户端agent信息\n$http_cookie ： 客户端cookie信\n$limit_rate ： 这个变量可以限制连接速率\n$request_method ： 客户端请求的动作，通常为get或post\n$remote_addr ： 客户端的ip地址\n$remote_port ： 客户端的端口\n$remote_user ： 已经经过auth basic module验证的用户名\n$request_filename ： 当前请求的文件路径，由root或alias指令与uri请求生成\n$scheme ： http方法（如http，https）\n$server_protocol ： 请求使用的协议，通常是http/1.0或http/1.1\n$server_addr ： 服务器地址，在完成一次系统调用后可以确定这个值\n$server_name ： 服务器名称\n$server_port ： 请求到达服务器的端口号\n$request_uri ： 包含请求参数的原始uri，不包含主机名，如："/foo/bar.php?arg=baz"\n$uri ： 不带请求参数的当前uri，$uri不包含主机名，如"/foo/bar.html"\n$document_uri ： 与$uri相同\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n * 常用正则\n\n. ： 匹配除换行符以外的任意字符\n? ： 重复0次或1次\n+ ： 重复1次或更多次\n* ： 重复0次或更多次\n\\d ：匹配数字\n^ ： 匹配字符串的开始\n$ ： 匹配字符串的介绍\n{n} ： 重复n次\n{n,} ： 重复n次或更多次\n[c] ： 匹配单个字符c\n[a-z] ： 匹配a-z小写字母的任意一个\n小括号()之间匹配的内容，可以在后面通过$1来引用，$2表示的是前面第二个()里的内容\n\n正则表达式匹配\n~ 为区分大小写匹配\n~* 为不区分大小写匹配\n!~和!~*分别为区分大小写不匹配及不区分大小写不匹配\n\n文件及目录匹配：\n-f和!-f用来判断是否存在文件\n-d和!-d用来判断是否存在目录\n-e和!-e用来判断是否存在文件或目录\n-x和!-x用来判断文件是否可执行\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n * flag 标记有\n\nlast    相当于apache里的[l]标记，表示完成rewrite\nbreak   终止匹配, 不再匹配后面的规则\nredirect    返回302临时重定向 地址栏会显示跳转后的地址\npermanent   返回301永久重定向 地址栏会显示跳转后的地址\n\n\n1\n2\n3\n4\nlocation /baidu {\n    ##rewrite    <regex>   <replacement>   [flag];\n    rewrite (.*) http://www.baidu.com;\n}\n\n\n1\n2\n3\n4\n# demo\n# 直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理\n# 这里是直接转发给后端应用服务器了，也可以是一个静态首页\n# 第一个必选规则\n\nlocation = / {\n    proxy_pass http://tomcat:8080/index\n}\n\n# 第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项\n# 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用\n\nlocation ^~ /static/ {\n    root /webroot/static/;\n}\nlocation ~* \\.(gif|jpg|jpeg|png|css|js|ico)$ {\n    root /webroot/res/;\n}\n\n# 第三个规则就是通用规则，用来转发动态请求到后端应用服务器\n# 非静态文件请求就默认是动态请求，自己根据实际把握\n# 毕竟目前的一些框架的流行，带.php,.jsp后缀的情况很少了\n\nlocation / {\n    proxy_pass http://tomcat:8080/\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# nginx 安装\n# cd /etc/yum.repos.d\n# touch nginx.repo\n# vim nginx.repo\n\n# 写入如下：\n\n[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/centos/7/$basearch/\ngpgcheck=0\nenabled=1\n\n# yum makecache\n# yum install nginx\n# service nginx start|stop\n# systemctl enable nginx\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\nyum -y install gcc gcc-c++ make libtool zlib zlib-devel openssl openssl-devel pcre pcre-devel\nnginx url: http://nginx.org/en/download.html\nwget http://nginx.org/download/nginx-1.10.1.tar.gz\ntar -zxvf nginx-1.10.1.tar.gz\ncd nginx-1.10.1\n./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre\nmake\nmake install\ncd /usr/local/nginx/sbin\n./nginx -v # 查看版本\nvim /etc/profile\nexport path=/usr/local/nginx/sbin:$path\nsource /etc/profile\nnginx -v #查看版本\n\n# server nginx: https://github.com/chengzao/note/blob/master/others/linux/nginx.txt\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nnginx server lib\n\n# ssl\n * https://freessl.org\n * https://certbot.eff.org/\n * https://github.com/neilpang/acme.sh\n\n安装： curl  https://get.acme.sh | sh\n\n起别名：alias acme.sh=~/.acme.sh/acme.sh\n\n生成证书：acme.sh --issue -d www.domain.cn -d api.domain.cn -d blog.domain.cn  -d www.domain.top -w /usr/local/nginx/wwwroot\n\n拷贝证书： acme.sh  --installcert  -d  www.domain.cn --key-file   /usr/local/nginx/ssl/domain_cn.key  --fullchain-file /usr/local/nginx/ssl/fullchain.cer  --reloadcmd  "service nginx force-reload"\n\n自动更新 acme.sh： acme.sh  --upgrade  --auto-upgrade\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# demo\n * nginx.conf\n\n#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    include \t  /usr/local/nginx/vhost/*.conf;\n    #log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n    #                  \'$status $body_bytes_sent "$http_referer" \'\n    #                  \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the php scripts to apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the php scripts to fastcgi server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  script_filename  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if apache\'s document root\n        # concurs with nginx\'s one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n    server {\n      listen 80 default;\n      server_name _;\n      return 500;\n    }\n\n    # another virtual host using mix of ip-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n\n    # https server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:ssl:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  high:!anull:!md5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n * server\n\nserver {\n    listen 80;\n    server_name www.domain.cn;\n    rewrite ^(.*) https://$http_host$request_uri? permanent;\n}\n\n\nserver {\n    listen  443 ssl;\n    server_name  www.domain.cn;\n    root  /usr/local/nginx/wwwroot;\n\n    ssl on;\n\n    ssl_certificate /usr/local/nginx/ssl/fullchain.cer;\n    ssl_certificate_key /usr/local/nginx/ssl/domain_cn.key;\n\n    keepalive_timeout   70;\n    fastcgi_param   https               on;\n    fastcgi_param   http_scheme         https;\n    server_tokens off;\n\n\n    location / {\n        index  index.html index.htm;\n    }\n    # 开启文件夹访问\n    location /note {\n        autoindex on;\n        autoindex_exact_size off;\n        autoindex_localtime on;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# 相关链接\n * nginx proxy_set_header 理解\n * nginx 配置 upstream 实现负载均衡\n * nginx 配置 location 总结及 rewrite 规则写法\n * tengine\n * nginx 服务器详细安装过程\n * mac os 下安装及配置 nginx\n * acme.sh\n * nginx 基本配置备忘',charsets:{cjk:!0}},{title:"node.js的记录",frontmatter:{title:"node.js的记录",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["node.js"],categories:["server"],readingShow:"top"},regularPath:"/serve/nodejs.html",relativePath:"serve/nodejs.md",key:"v-19de71fe",path:"/serve/nodejs.html",headers:[{level:2,title:"nodejs",slug:"nodejs",normalizedTitle:"nodejs",charIndex:2},{level:2,title:"nvm",slug:"nvm",normalizedTitle:"nvm",charIndex:345},{level:3,title:"mac中nvm自动切换node版本",slug:"mac中nvm自动切换node版本",normalizedTitle:"mac中nvm自动切换node版本",charIndex:658},{level:2,title:"nrm",slug:"nrm",normalizedTitle:"nrm",charIndex:1514},{level:2,title:"package介绍",slug:"package介绍",normalizedTitle:"package介绍",charIndex:1663},{level:2,title:"npm",slug:"npm",normalizedTitle:"npm",charIndex:592},{level:2,title:"yarn",slug:"yarn",normalizedTitle:"yarn",charIndex:4849},{level:2,title:"私有的 npm 仓库",slug:"私有的-npm-仓库",normalizedTitle:"私有的 npm 仓库",charIndex:5513},{level:2,title:"常见许可证",slug:"常见许可证",normalizedTitle:"常见许可证",charIndex:5637},{level:3,title:"宽松式",slug:"宽松式",normalizedTitle:"宽松式",charIndex:5645},{level:3,title:"Copyleft",slug:"copyleft",normalizedTitle:"copyleft",charIndex:5870},{level:2,title:"express",slug:"express",normalizedTitle:"express",charIndex:6074},{level:2,title:"packages",slug:"packages",normalizedTitle:"packages",charIndex:6793},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:7294}],lastUpdated:"2021/1/7 上午4:26:40",headersStr:"nodejs nvm mac中nvm自动切换node版本 nrm package介绍 npm yarn 私有的 npm 仓库 常见许可证 宽松式 Copyleft express packages 相关链接",content:'# nodejs\n * Node.js是一个在浏览器之外可以解析和执行JavaScript代码的运行时环境\n\na) Node.js基于哪个JavaScript引擎？\n   Chrome 的 V8引擎\nb) 谁创建了Node.js？\n   Ryan Dahl\nc) Node.js的特性是什么？\n   事件驱动、非阻塞IO模型\n\n\n1\n2\n3\n4\n5\n6\n * https://github.com/nodejs/node\n * https://nodejs.org/en/\n * 调试：console.log()\n * 启动调试：node debug foo.js\n * node-inspector调试\n * vscode调试\n * time 和 timeEnd 测试程序执行时间\n\n# nvm\n * Node version Manager 这是一个Node.js的版本管理工具\n * creationix@nvm\n * coreybutler@nvm-windows\n * 安装一个指定版本 nvm install node_version\n * 使用一个指定版本 nvm use node_version\n * 指定默认版本 nvm alias default node_version\n * 卸载一个已安装的指定版本 nvm uninstall version\n * 查看 npm 全局安装包 npm list -g --depth=0\n * nvm（Node.js version manage）\n\n# mac中nvm自动切换node版本\n> zsh安装：https://ohmyz.sh/ ; nvm安装：https://github.com/nvm-sh/nvm\n\n\n * step1: 进入项目根目录：运行 node -v > .nvmrc\n   \n   \n * step2: 编辑.zshrc最后加入(前提是安装zsh)\n   \n   \n\n# place this after nvm initialization!\nautoload -U add-zsh-hook\nload-nvmrc() {\n  local node_version="$(nvm version)"\n  local nvmrc_path="$(nvm_find_nvmrc)"\n​\n  if [ -n "$nvmrc_path" ]; then\n    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")\n​\n    if [ "$nvmrc_node_version" = "N/A" ]; then\n      nvm install\n    elif [ "$nvmrc_node_version" != "$node_version" ]; then\n      nvm use\n    fi\n  elif [ "$node_version" != "$(nvm version default)" ]; then\n    echo "Reverting to nvm default version"\n    nvm use default\n  fi\n}\nadd-zsh-hook chpwd load-nvmrc\nload-nvmrc\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n * step3: 命令行运行\n\nsource ~/.zshrc  # 不报错即可\n\n\n1\n# nrm\n * 全局安装 npm install nrm -g\n * 查看 mirror 源 nrm ls\n * 使用 mirror 源 nrm use mirror_name\n * 添加源 nrm add mirror_name http://npm-registry.example.me\n\n# package介绍\n * package.json 介绍\n\npackage.json   包描述文件，说明文件\nbin \t\t   存放可执行二进制文件的目录\nlib\t\t\t   存放JavaScript代码的目录\ndoc            存放文档的目录\ntest\t\t   存放单元测试用例的代码\n\n# package.json:\nname\t\t包的名称\ndescription\t包的简介\nversion\t\t包的版本号\nkeywords\t关键词数组，用于在npm中分类搜索\nauthor\t\t包的作者\nmain \t\t配置包的入口，默认是模块根目录下的index.js\ndependencies 包的依赖项，npm会通过该属性自动加载依赖包\nscripts\t\t指定了运行脚本命令的npm命令行缩写，例如start\n\n# dependencies的package版本\n~ 会匹配最近的小版本依赖包，比如~1.2.3会匹配所有1.2.x版本，但是不包括1.3.0\n^ 会匹配最新的大版本依赖包，比如^1.2.3会匹配所有1.x.x的包，包括1.3.0，但是不包括2.0.0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# npm\n * npmjs\n   \n   \n * npm 淘宝国内镜像\n   \n   \n * npm scripts 使用指南\n   \n   \n * mac 上管理不同 node 版本\n   \n   \n * shields.io 徽章\n   \n   \n * packagephobia\n   \n   \n * config\n   \n   \n\nnpm config set prefix "C:\\dev\\nvm\\npm"\nnpm config set python python2.7\nnpm config set registry " https://registry.npm.taobao.org "\nnpm install phantomjs-prebuilt@2.1.14 --save-dev  --ignore-scripts\n\n\n1\n2\n3\n4\n * publish\n\nnpm login / npm adduser  # 登录npm账号\nnpm publish --access=public # 发布一个公开的package\n\n\n1\n2\n * use\n\n** 注意：package.json的 name 不要与npm install的包名一致 **\n\nhttps://docs.npmjs.com/cli-documentation/cli\n\n# 初始化\nnpm init 在项目中引导创建一个package.json文件\n\n# npm install 安装包\nnpm install (with no args, in package dir)\nnpm install [<@scope>/]<name>\nnpm install [<@scope>/]<name>@<tag>\nnpm install [<@scope>/]<name>@<version>\nnpm install [<@scope>/]<name>@<version range>\nnpm install <git-host>:<git-user>/<repo-name>\nnpm install <git repo url>\nnpm install <tarball file>\nnpm install <tarball url>\nnpm install <folder>\n\n\n# 安装github包\n# 指定安装某个版本\nnpm install git+ssh://git@github.com:npm/npm.git#v1.0.27\n# 直接安装\nnpm install git+https://isaacs@github.com/npm/npm.git\n# 指定安装某个版本\nnpm install git://github.com/npm/npm.git#v1.0.27\n\n# npm uninstall 卸载包\nnpm uninstall [<@scope>/]<pkg>[@<version>] [-S|--save| -D|--save-dev| -O|--save-optional|--no-save]\n\n# npm cache 管理模块的缓存\nnpm cache verify\nnpm cache clean\n\n# 管理你的模块\nnpm list -g --depth=0\nnpm list --depth=0\n\n# npm验证\nnpm login\nnpm adduser\n\n# 针对使用者的语义化版本\nPatch releases: 1.0 or 1.0.x or ~1.0.4\nMinor releases: 1 or 1.x or ^1.0.4\nMajor releases: * or x\n\n# 查看模块版本\n\nnpm version [major(主)| minor(次) | patch(补丁)]\n\n# ~和^的作用和区别\n~ 会匹配最近的小版本依赖包，比如~1.2.3会匹配所有1.2.x版本，但是不包括1.3.0\n^ 会匹配最新的大版本依赖包，比如^1.2.3会匹配所有1.x.x的包，包括1.3.0，但是不包括2.0.0\n\n# npm发布\nnpm publish [<tarball>|<folder>] [--tag <tag>] [--access <public|restricted>] [--otp otpcode] [--dry-run]\n\nnpm publish\nnpm publish [build path] --access=public\nnpm version patch && git push --follow-tags origin master && npm publish\n\n# npm包删除\nnpm unpublish [<@scope>/]<pkg>[@<version>]\n\nnpm unpublish package@version\n\n# npm link\nnpm link (in package dir)\nnpm link [<@scope>/]<pkg>[@<version>]\n\ncd ~/projects/node-redis    # go into the package directory\nnpm link                    # creates global link\n\n# npm其他常用命名\nnpm help # 查看某条命令的详细帮助\nnpm root # 查看包的安装路径\nnpm config # 管理npm的配置路径\nnpm view # 查看模块的注册信息\nnpm access # 在发布的包上设置访问级别\nnpm logout # 退出npm登录\nnpm whoami # 显示 npm 用户名\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n# yarn\n * yarn\n * yarn bootcss\n * 常见命令\n\n# 初始化包：\nyarn init\n\n# 新增一个依赖包：\nyarn add [package]\nyarn add [package]@[version]\nyarn add [package]@[tag]\n\nyarn add [package] # 添加到 dependencies\nyarn add [package] --dev/-D # 添加到 devDependencies\nyarn add [package] --exact/-E # 安装包的精确版本(例如：1.2.1)\nyarn add [package] --tilde/-T # 安装包的次要版本里的最新版(例如：1.2.x)\n\n# 操作系统上全局安装包\nyarn global <add/bin/list/remove/upgrade> [package]\n\n# 从当前包里移除包：\nyarn remove [package]\n\n# 安装所有依赖：\nyarn 或 yarn install\n\n# 安装一个包的单一版本：\nyarn install --flat\n\n# 强制重新下载所有包：\nyarn install --force\n\n# 只安装生产环境依赖：\nyarn install --production\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# 私有的 npm 仓库\n * 私有的 npm 仓库: sinopia, cpm, cnpmjs.org, verdaccio\n * 告诉你为何以及如何搭建一个私有的 npm 仓库\n * CPM\n * CPM - 轻量的 NPM 私有源程序搭建\n\n# 常见许可证\n# 宽松式\n * BSD 2-Clause Licence 分发软件时，必须保留原始的许可证声明\n * BSD 3-Clause Licence 分发软件时，必须保留原始的许可证声明。不得使用原始作者的名字为软件促销\n * MIT 分发软件时，必须保留原始的许可证声明，与 BSD（二条款版）基本一致\n * Apache 2 分发软件时，必须保留原始的许可证声明。凡是修改过的文件，必须向用户说明该文件修改过；没有修改过的文件，必须保持许可证不变\n\n# Copyleft\n * Affero GPL (AGPL): 如果云服务（即 SAAS）用到的代码是该许可证，那么云服务的代码也必须开源\n * GPL: 如果项目包含了 GPL 许可证的代码，那么整个项目都必须使用 GPL 许可证\n * LGPL: 如果项目采用动态链接调用该许可证的库，项目可以不用开源\n * Mozilla（MPL）: 只要该许可证的代码在单独的文件中，新增的其他文件可以不用开源\n\n# express\n * express cors\n\n/**\n *  处理跨域请求，有点重要喔\n *  如果不涉及跨域，请忽略\n **/\napp.all("*", function(req, res, next) {\n  res.header("Access-Control-Allow-Origin", req.headers.origin);\n  res.header("Access-Control-Allow-Credentials", true);\n  res.header(\n    "Access-Control-Allow-Headers",\n    "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-with, X_Requested_With"\n  );\n  res.header("Access-Control-Allow-Methods", "PUT, POST, GET, DELETE, OPTIONS");\n  res.header("X-Powered-By", "3.2.1");\n  res.header("Content-Type", "application/json; charset=utf-8");\n\n  if (req.method === "OPTIONS") {\n    res.end("options ok");\n  } else {\n    next();\n  }\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# packages\ncrypto-js\nchild_process  shelljs  spawn-shell\ncommitizen husky lint-staged prettier eslint commitlint\nnpm-run-all\nbetter-scripts\nquicklink\ninstant.page\n\nrimraf\ncross-env dotenv yargs commander env-cmd\ncolors chalk\nPath-to-RegExp\nfs-extra memory-fs\ncors http-proxy-middleware\nserve\nexpress-history-api-fallback\n\nbcrypt\njsonwebtoken\npassport\npassport-jwt\n\nnpm-check -u -g\n\ncrypto-browserify\nverdaccio\nwhistle\nlerna\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 相关链接\n * nvm\n * nodejs 中文\n * koa 中文\n * express 中文\n * Node.js 概述\n * .gitattributes\n * npm 模块管理器\n * npm scripts 使用指南\n * 开源许可证\n * node-sso redis\n * Sequelize mysql',normalizedContent:'# nodejs\n * node.js是一个在浏览器之外可以解析和执行javascript代码的运行时环境\n\na) node.js基于哪个javascript引擎？\n   chrome 的 v8引擎\nb) 谁创建了node.js？\n   ryan dahl\nc) node.js的特性是什么？\n   事件驱动、非阻塞io模型\n\n\n1\n2\n3\n4\n5\n6\n * https://github.com/nodejs/node\n * https://nodejs.org/en/\n * 调试：console.log()\n * 启动调试：node debug foo.js\n * node-inspector调试\n * vscode调试\n * time 和 timeend 测试程序执行时间\n\n# nvm\n * node version manager 这是一个node.js的版本管理工具\n * creationix@nvm\n * coreybutler@nvm-windows\n * 安装一个指定版本 nvm install node_version\n * 使用一个指定版本 nvm use node_version\n * 指定默认版本 nvm alias default node_version\n * 卸载一个已安装的指定版本 nvm uninstall version\n * 查看 npm 全局安装包 npm list -g --depth=0\n * nvm（node.js version manage）\n\n# mac中nvm自动切换node版本\n> zsh安装：https://ohmyz.sh/ ; nvm安装：https://github.com/nvm-sh/nvm\n\n\n * step1: 进入项目根目录：运行 node -v > .nvmrc\n   \n   \n * step2: 编辑.zshrc最后加入(前提是安装zsh)\n   \n   \n\n# place this after nvm initialization!\nautoload -u add-zsh-hook\nload-nvmrc() {\n  local node_version="$(nvm version)"\n  local nvmrc_path="$(nvm_find_nvmrc)"\n​\n  if [ -n "$nvmrc_path" ]; then\n    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")\n​\n    if [ "$nvmrc_node_version" = "n/a" ]; then\n      nvm install\n    elif [ "$nvmrc_node_version" != "$node_version" ]; then\n      nvm use\n    fi\n  elif [ "$node_version" != "$(nvm version default)" ]; then\n    echo "reverting to nvm default version"\n    nvm use default\n  fi\n}\nadd-zsh-hook chpwd load-nvmrc\nload-nvmrc\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n * step3: 命令行运行\n\nsource ~/.zshrc  # 不报错即可\n\n\n1\n# nrm\n * 全局安装 npm install nrm -g\n * 查看 mirror 源 nrm ls\n * 使用 mirror 源 nrm use mirror_name\n * 添加源 nrm add mirror_name http://npm-registry.example.me\n\n# package介绍\n * package.json 介绍\n\npackage.json   包描述文件，说明文件\nbin \t\t   存放可执行二进制文件的目录\nlib\t\t\t   存放javascript代码的目录\ndoc            存放文档的目录\ntest\t\t   存放单元测试用例的代码\n\n# package.json:\nname\t\t包的名称\ndescription\t包的简介\nversion\t\t包的版本号\nkeywords\t关键词数组，用于在npm中分类搜索\nauthor\t\t包的作者\nmain \t\t配置包的入口，默认是模块根目录下的index.js\ndependencies 包的依赖项，npm会通过该属性自动加载依赖包\nscripts\t\t指定了运行脚本命令的npm命令行缩写，例如start\n\n# dependencies的package版本\n~ 会匹配最近的小版本依赖包，比如~1.2.3会匹配所有1.2.x版本，但是不包括1.3.0\n^ 会匹配最新的大版本依赖包，比如^1.2.3会匹配所有1.x.x的包，包括1.3.0，但是不包括2.0.0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# npm\n * npmjs\n   \n   \n * npm 淘宝国内镜像\n   \n   \n * npm scripts 使用指南\n   \n   \n * mac 上管理不同 node 版本\n   \n   \n * shields.io 徽章\n   \n   \n * packagephobia\n   \n   \n * config\n   \n   \n\nnpm config set prefix "c:\\dev\\nvm\\npm"\nnpm config set python python2.7\nnpm config set registry " https://registry.npm.taobao.org "\nnpm install phantomjs-prebuilt@2.1.14 --save-dev  --ignore-scripts\n\n\n1\n2\n3\n4\n * publish\n\nnpm login / npm adduser  # 登录npm账号\nnpm publish --access=public # 发布一个公开的package\n\n\n1\n2\n * use\n\n** 注意：package.json的 name 不要与npm install的包名一致 **\n\nhttps://docs.npmjs.com/cli-documentation/cli\n\n# 初始化\nnpm init 在项目中引导创建一个package.json文件\n\n# npm install 安装包\nnpm install (with no args, in package dir)\nnpm install [<@scope>/]<name>\nnpm install [<@scope>/]<name>@<tag>\nnpm install [<@scope>/]<name>@<version>\nnpm install [<@scope>/]<name>@<version range>\nnpm install <git-host>:<git-user>/<repo-name>\nnpm install <git repo url>\nnpm install <tarball file>\nnpm install <tarball url>\nnpm install <folder>\n\n\n# 安装github包\n# 指定安装某个版本\nnpm install git+ssh://git@github.com:npm/npm.git#v1.0.27\n# 直接安装\nnpm install git+https://isaacs@github.com/npm/npm.git\n# 指定安装某个版本\nnpm install git://github.com/npm/npm.git#v1.0.27\n\n# npm uninstall 卸载包\nnpm uninstall [<@scope>/]<pkg>[@<version>] [-s|--save| -d|--save-dev| -o|--save-optional|--no-save]\n\n# npm cache 管理模块的缓存\nnpm cache verify\nnpm cache clean\n\n# 管理你的模块\nnpm list -g --depth=0\nnpm list --depth=0\n\n# npm验证\nnpm login\nnpm adduser\n\n# 针对使用者的语义化版本\npatch releases: 1.0 or 1.0.x or ~1.0.4\nminor releases: 1 or 1.x or ^1.0.4\nmajor releases: * or x\n\n# 查看模块版本\n\nnpm version [major(主)| minor(次) | patch(补丁)]\n\n# ~和^的作用和区别\n~ 会匹配最近的小版本依赖包，比如~1.2.3会匹配所有1.2.x版本，但是不包括1.3.0\n^ 会匹配最新的大版本依赖包，比如^1.2.3会匹配所有1.x.x的包，包括1.3.0，但是不包括2.0.0\n\n# npm发布\nnpm publish [<tarball>|<folder>] [--tag <tag>] [--access <public|restricted>] [--otp otpcode] [--dry-run]\n\nnpm publish\nnpm publish [build path] --access=public\nnpm version patch && git push --follow-tags origin master && npm publish\n\n# npm包删除\nnpm unpublish [<@scope>/]<pkg>[@<version>]\n\nnpm unpublish package@version\n\n# npm link\nnpm link (in package dir)\nnpm link [<@scope>/]<pkg>[@<version>]\n\ncd ~/projects/node-redis    # go into the package directory\nnpm link                    # creates global link\n\n# npm其他常用命名\nnpm help # 查看某条命令的详细帮助\nnpm root # 查看包的安装路径\nnpm config # 管理npm的配置路径\nnpm view # 查看模块的注册信息\nnpm access # 在发布的包上设置访问级别\nnpm logout # 退出npm登录\nnpm whoami # 显示 npm 用户名\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n# yarn\n * yarn\n * yarn bootcss\n * 常见命令\n\n# 初始化包：\nyarn init\n\n# 新增一个依赖包：\nyarn add [package]\nyarn add [package]@[version]\nyarn add [package]@[tag]\n\nyarn add [package] # 添加到 dependencies\nyarn add [package] --dev/-d # 添加到 devdependencies\nyarn add [package] --exact/-e # 安装包的精确版本(例如：1.2.1)\nyarn add [package] --tilde/-t # 安装包的次要版本里的最新版(例如：1.2.x)\n\n# 操作系统上全局安装包\nyarn global <add/bin/list/remove/upgrade> [package]\n\n# 从当前包里移除包：\nyarn remove [package]\n\n# 安装所有依赖：\nyarn 或 yarn install\n\n# 安装一个包的单一版本：\nyarn install --flat\n\n# 强制重新下载所有包：\nyarn install --force\n\n# 只安装生产环境依赖：\nyarn install --production\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# 私有的 npm 仓库\n * 私有的 npm 仓库: sinopia, cpm, cnpmjs.org, verdaccio\n * 告诉你为何以及如何搭建一个私有的 npm 仓库\n * cpm\n * cpm - 轻量的 npm 私有源程序搭建\n\n# 常见许可证\n# 宽松式\n * bsd 2-clause licence 分发软件时，必须保留原始的许可证声明\n * bsd 3-clause licence 分发软件时，必须保留原始的许可证声明。不得使用原始作者的名字为软件促销\n * mit 分发软件时，必须保留原始的许可证声明，与 bsd（二条款版）基本一致\n * apache 2 分发软件时，必须保留原始的许可证声明。凡是修改过的文件，必须向用户说明该文件修改过；没有修改过的文件，必须保持许可证不变\n\n# copyleft\n * affero gpl (agpl): 如果云服务（即 saas）用到的代码是该许可证，那么云服务的代码也必须开源\n * gpl: 如果项目包含了 gpl 许可证的代码，那么整个项目都必须使用 gpl 许可证\n * lgpl: 如果项目采用动态链接调用该许可证的库，项目可以不用开源\n * mozilla（mpl）: 只要该许可证的代码在单独的文件中，新增的其他文件可以不用开源\n\n# express\n * express cors\n\n/**\n *  处理跨域请求，有点重要喔\n *  如果不涉及跨域，请忽略\n **/\napp.all("*", function(req, res, next) {\n  res.header("access-control-allow-origin", req.headers.origin);\n  res.header("access-control-allow-credentials", true);\n  res.header(\n    "access-control-allow-headers",\n    "content-type, access-control-allow-headers, authorization, x-requested-with, x_requested_with"\n  );\n  res.header("access-control-allow-methods", "put, post, get, delete, options");\n  res.header("x-powered-by", "3.2.1");\n  res.header("content-type", "application/json; charset=utf-8");\n\n  if (req.method === "options") {\n    res.end("options ok");\n  } else {\n    next();\n  }\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# packages\ncrypto-js\nchild_process  shelljs  spawn-shell\ncommitizen husky lint-staged prettier eslint commitlint\nnpm-run-all\nbetter-scripts\nquicklink\ninstant.page\n\nrimraf\ncross-env dotenv yargs commander env-cmd\ncolors chalk\npath-to-regexp\nfs-extra memory-fs\ncors http-proxy-middleware\nserve\nexpress-history-api-fallback\n\nbcrypt\njsonwebtoken\npassport\npassport-jwt\n\nnpm-check -u -g\n\ncrypto-browserify\nverdaccio\nwhistle\nlerna\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 相关链接\n * nvm\n * nodejs 中文\n * koa 中文\n * express 中文\n * node.js 概述\n * .gitattributes\n * npm 模块管理器\n * npm scripts 使用指南\n * 开源许可证\n * node-sso redis\n * sequelize mysql',charsets:{cjk:!0}},{title:"持续部署环境travis-ci的使用介绍",frontmatter:{title:"持续部署环境travis-ci的使用介绍",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["travis-ci"],categories:["server"],readingShow:"top"},regularPath:"/serve/travis.html",relativePath:"serve/travis.md",key:"v-f757d046",path:"/serve/travis.html",headers:[{level:2,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:248},{level:2,title:"参考示例",slug:"参考示例",normalizedTitle:"参考示例",charIndex:1128}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"配置 参考示例",content:' * travis-ci 社区版\n * travis-ci: javascript-with-nodejs\n * 使用 Travis CI 自动部署 Hexo 到 GitHub\n * 使用 Travis CI 自动部署博客到 github pages 和 coding pages\n * 使用 Travis 自动部署 Hexo 到 Github 与 自己的服务器\n * 持续集成服务 Travis CI 教程\n * 前端持续集成解决方案\n * 在 github 中使用 travis CI\n\n# 配置\n# https://docs.travis-ci.com/user/job-lifecycle/\n\nsudo: false\nlanguage: node_js\nnode_js:\n  - "lts/*"\n\naddons\ncache # https://docs.travis-ci.com/user/caching/#arbitrary-directories\nbefore_install # install 阶段之前执行\ninstall # 字段用来指定安装脚本\nbefore_script # script 阶段之前执行\nscript # 字段用来指定构建或测试脚本\nbefore_cache # 用于清除cache https://docs.travis-ci.com/user/caching#before_cache-phase\nafter_success # script 阶段成功时执行\nafter_failure # script 阶段失败时执行\nbefore_deploy # deploy 部署之前执行\ndeploy # 部署 https://docs.travis-ci.com/user/deployment/pages/\nafter_deploy # deploy 部署之后执行\nafter_script # script 阶段之后执行\n\nenv # https://docs.travis-ci.com/user/environment-variables/\nbranches # https://docs.travis-ci.com/user/customizing-the-build/#safelisting-or-blocklisting-branches\nnotifications # https://docs.travis-ci.com/user/notifications/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# 参考示例\n * 项目根目录下创建：.travis.yml\n\nsudo: false\nlanguage: node_js\nnode_js: stable\n\ncache:\n  directories:\n    - node_modules\n\ninstall:\n  - npm install\nscript:\n  - npm run build # 项目打包命令\nafter_success:\n  - cd ./guide # 项目打包后的目录\n  - git init\n  - git config user.name "your name "\n  - git config user.email "your xxx@email.com"\n  - git add .\n  - git commit -m "Travis CI Auto Builder"\n  - git push --force --quiet "https://${GH_TOKEN}@${GH_REF}" master:gh-pages # Config Github "Personal access tokens"\nbranches:\n  only:\n    - master # 打包的分支\nenv:\n  global:\n    - GH_REF: github.com/chengzao/guide.git # Your github repo url\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26',normalizedContent:' * travis-ci 社区版\n * travis-ci: javascript-with-nodejs\n * 使用 travis ci 自动部署 hexo 到 github\n * 使用 travis ci 自动部署博客到 github pages 和 coding pages\n * 使用 travis 自动部署 hexo 到 github 与 自己的服务器\n * 持续集成服务 travis ci 教程\n * 前端持续集成解决方案\n * 在 github 中使用 travis ci\n\n# 配置\n# https://docs.travis-ci.com/user/job-lifecycle/\n\nsudo: false\nlanguage: node_js\nnode_js:\n  - "lts/*"\n\naddons\ncache # https://docs.travis-ci.com/user/caching/#arbitrary-directories\nbefore_install # install 阶段之前执行\ninstall # 字段用来指定安装脚本\nbefore_script # script 阶段之前执行\nscript # 字段用来指定构建或测试脚本\nbefore_cache # 用于清除cache https://docs.travis-ci.com/user/caching#before_cache-phase\nafter_success # script 阶段成功时执行\nafter_failure # script 阶段失败时执行\nbefore_deploy # deploy 部署之前执行\ndeploy # 部署 https://docs.travis-ci.com/user/deployment/pages/\nafter_deploy # deploy 部署之后执行\nafter_script # script 阶段之后执行\n\nenv # https://docs.travis-ci.com/user/environment-variables/\nbranches # https://docs.travis-ci.com/user/customizing-the-build/#safelisting-or-blocklisting-branches\nnotifications # https://docs.travis-ci.com/user/notifications/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n# 参考示例\n * 项目根目录下创建：.travis.yml\n\nsudo: false\nlanguage: node_js\nnode_js: stable\n\ncache:\n  directories:\n    - node_modules\n\ninstall:\n  - npm install\nscript:\n  - npm run build # 项目打包命令\nafter_success:\n  - cd ./guide # 项目打包后的目录\n  - git init\n  - git config user.name "your name "\n  - git config user.email "your xxx@email.com"\n  - git add .\n  - git commit -m "travis ci auto builder"\n  - git push --force --quiet "https://${gh_token}@${gh_ref}" master:gh-pages # config github "personal access tokens"\nbranches:\n  only:\n    - master # 打包的分支\nenv:\n  global:\n    - gh_ref: github.com/chengzao/guide.git # your github repo url\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26',charsets:{cjk:!0}},{title:"vagrant虚拟机的使用",frontmatter:{title:"vagrant虚拟机的使用",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["vagrant"],categories:["server"],readingShow:"top"},regularPath:"/serve/vagrant.html",relativePath:"serve/vagrant.md",key:"v-800333ea",path:"/serve/vagrant.html",headers:[{level:2,title:"command",slug:"command",normalizedTitle:"command",charIndex:57},{level:2,title:"vagrant 添加无版本号的 box",slug:"vagrant-添加无版本号的-box",normalizedTitle:"vagrant 添加无版本号的 box",charIndex:1172},{level:2,title:"vagrant 添加带版本号的 box",slug:"vagrant-添加带版本号的-box",normalizedTitle:"vagrant 添加带版本号的 box",charIndex:1376},{level:2,title:"SSH 登录 linux",slug:"ssh-登录-linux",normalizedTitle:"ssh 登录 linux",charIndex:1804},{level:2,title:"vagrant init",slug:"vagrant-init",normalizedTitle:"vagrant init",charIndex:134},{level:2,title:"plugin",slug:"plugin",normalizedTitle:"plugin",charIndex:970},{level:3,title:"vagrant-vbguest",slug:"vagrant-vbguest",normalizedTitle:"vagrant-vbguest",charIndex:6432},{level:3,title:"vagrant-hostmanager",slug:"vagrant-hostmanager",normalizedTitle:"vagrant-hostmanager",charIndex:7184},{level:3,title:"vagrant-bindfs",slug:"vagrant-bindfs",normalizedTitle:"vagrant-bindfs",charIndex:8037},{level:2,title:"packge",slug:"packge",normalizedTitle:"packge",charIndex:9209},{level:2,title:"multi Machine",slug:"multi-machine",normalizedTitle:"multi machine",charIndex:9313},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:10210}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"command vagrant 添加无版本号的 box vagrant 添加带版本号的 box SSH 登录 linux vagrant init plugin vagrant-vbguest vagrant-hostmanager vagrant-bindfs packge multi Machine 参考资料",content:' * vagrant\n * app.vagrantup\n * rubygems\n * virtualbox\n\n# command\nTables                  Are                                         \nvagrant init            初始化 box 的操作，会生成 vagrant 的配置文件 Vagrantfile   \nvagrant up              启动本地环境                                      \nvagrant ssh             通过 ssh 登录本地环境所在虚拟机                          \nvagrant halt            关闭本地环境                                      \nvagrant suspend         暂停本地环境                                      \nvagrant resume          恢复本地环境                                      \nvagrant reload          修改了 Vagrantfile 后，使之生效（相当于先 halt，再 up）      \nvagrant destroy         彻底移除本地环境                                    \nvagrant box list        显示当前已经添加的 box 列表                            \nvagrant box add         添加 box 到列表                                  \nvagrant box remove      删除相应的 box                                   \nvagrant package         打包命令，可以把当前的运行的虚拟机环境进行打包                     \nvagrant plugin          用于安装卸载插件                                    \nvagrant status          获取当前虚拟机的状态                                  \nvagrant global-status   显示当前用户 Vagrant 的所有环境状态                      \n\n# vagrant 添加无版本号的 box\n * vagrant box add centos/7\n\ncentos/7 # 表示 centos系统 和 centos的版本号7\n\n\n1\n * vagrant box add boxName ./downloadBoxName.box\n\nboxName # 添加之后的box 名称\n./downloadBoxName.box # 下载到本地的box\n\n\n1\n2\n# vagrant 添加带版本号的 box\n * 创建：metadata.json\n   \n    * name：添加的 box 名字\n    * version：版本号\n    * providers.name：虚拟主机类型\n    * providers.url：box 地址\n   \n   \n\n{\n  "name": "centos/7",\n  "versions": [\n    {\n      "version": "1809.01",\n      "providers": [\n        {\n          "name": "virtualbox",\n          "url": "./virtualbox.box"\n        }\n      ]\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * 运行创建: vagrant box add metadata.json\n\n# SSH 登录 linux\nssh: 127.0.0.1\n端口: 2222\n用户名: vagrant\n密码: vagrant\n\n\n1\n2\n3\n4\n# vagrant init\n * 初始化项目：vagrant init centos/7\n\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# All Vagrant configuration is done below. The "2" in Vagrant.configure\n# configures the configuration version (we support older styles for\n# backwards compatibility). Please don\'t change it unless you know what\n# you\'re doing.\nVagrant.configure("2") do |config|\n  # The most common configuration options are documented and commented below.\n  # For a complete reference, please see the online documentation at\n  # https://docs.vagrantup.com.\n\n  # Every Vagrant development environment requires a box. You can search for\n  # boxes at https://vagrantcloud.com/search.\n  config.vm.box = "centos/7"\n\n  # Disable automatic box update checking. If you disable this, then\n  # boxes will only be checked for updates when the user runs\n  # `vagrant box outdated`. This is not recommended.\n  config.vm.box_check_update = false\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine. In the example below,\n  # accessing "localhost:8080" will access port 80 on the guest machine.\n  # NOTE: This will enable public access to the opened port\n  # config.vm.network "forwarded_port", guest: 80, host: 8080\n\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine and only allow access\n  # via 127.0.0.1 to disable public access\n  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"\n\n  # set auto_update to false, if you do NOT want to check the correct\n  # additions version when booting this machine\n  # cmd: vagrant vbguest --status\n  config.vbguest.auto_update = false\n  # do NOT download the iso file from a webserver\n  config.vbguest.no_remote = true\n\n  # Create a private network, which allows host-only access to the machine\n  # using a specific IP.\n  config.vm.network "private_network", ip: "192.168.33.10"\n\n  # Create a public network, which generally matched to bridged network.\n  # Bridged networks make the machine appear as another physical device on\n  # your network.\n  # config.vm.network "public_network"\n\n  # Share an additional folder to the guest VM. The first argument is\n  # the path on the host to the actual folder. The second argument is\n  # the path on the guest to mount the folder. And the optional third\n  # argument is a set of non-required options.\n  config.vm.synced_folder "E:/boxs/centos7/data", "/vagrant_data",\n    create: true, owner: "root", group: "root"\n  # Provider-specific configuration so you can fine-tune various\n  # backing providers for Vagrant. These expose provider-specific options.\n  # Example for VirtualBox:\n  #\n  # config.vm.provider "virtualbox" do |vb|\n  #   # Display the VirtualBox GUI when booting the machine\n  #   vb.gui = true\n  #\n  #   # Customize the amount of memory on the VM:\n  #   vb.memory = "1024"\n  # end\n  #\n  # View the documentation for the provider you are using for more\n  # information on available options.\n\n  # Enable provisioning with a shell script. Additional provisioners such as\n  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the\n  # documentation for more information about their specific syntax and use.\n  # config.vm.provision "shell", inline: <<-SHELL\n  #   apt-get update\n  #   apt-get install -y apache2\n  # SHELL\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n# plugin\n * 列出插件: vagrant plugin list\n * 安装: vagrant plugin install\n\n# Installing a plugin from a known gem source\n  vagrant plugin install my-plugin\n\n# Installing a plugin from a local file source\n  vagrant plugin install /path/to/my-plugin.gem\n\n\n1\n2\n3\n4\n5\n * 更新: vagrant plugin update [my-plugin]\n   \n   \n * 卸载: vagrant plugin uninstall my-plugin\n   \n   \n * Vagrantfile\n   \n   \n\nVagrant.config(2) do |config|\n    config.vm.box = "centos/7"\n\n    config.vm.define "node1" do |node1|\n        node1.vm.network "private_network", ip: "192.168.33.11"\n        node1.vm.hostname = "node1"\n    end\n\n    config.vm.define "node2" do |node2|\n        node2.vm.network "private_network", ip: "192.168.33.22"\n        node2.vm.hostname = "node2"\n    end\n\n    config.vm.define "node3" do |node3|\n        node3.vm.network "private_network", ip: "192.168.33.33"\n        node3.vm.hostname = "node3"\n    end\n\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# vagrant-vbguest\n * vagrant plugin install vagrant-vbguest\n * vagrant vbguest --status\n * vagrant vbguest --do install node1\n\nVagrant.config(2) do |config|\n    config.vm.box = "centos/7"\n\n    # 不想自动更新\n    config.vbguest.auto_update = false\n\n    config.vm.define "node1" do |node1|\n        node1.vm.network "private_network", ip: "192.168.33.11"\n        node1.vm.hostname = "node1"\n    end\n\n    config.vm.define "node2" do |node2|\n        node2.vm.network "private_network", ip: "192.168.33.22"\n        node2.vm.hostname = "node2"\n    end\n\n    config.vm.define "node3" do |node3|\n        node3.vm.network "private_network", ip: "192.168.33.33"\n        node3.vm.hostname = "node3"\n    end\n\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# vagrant-hostmanager\n * vagrant plugin install vagrant-hostmanager\n * vagrant hostmanager\n\nVagrant.config(2) do |config|\n    config.vm.box = "centos/7"\n\n    config.hostmanager.enabled = true\n    config.hostmanager.manage_guest = true\n    config.hostmanager.manage_host = true\n\n    # 不想自动更新\n    config.vbguest.auto_update = false\n\n    config.vm.define "node1" do |node1|\n        node1.vm.network "private_network", ip: "192.168.33.11"\n        node1.vm.hostname = "node1"\n    end\n\n    config.vm.define "node2" do |node2|\n        node2.vm.network "private_network", ip: "192.168.33.22"\n        node2.vm.hostname = "node2"\n    end\n\n    config.vm.define "node3" do |node3|\n        node3.vm.network "private_network", ip: "192.168.33.33"\n        node3.vm.hostname = "node3"\n    end\n\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# vagrant-bindfs\n * vagrant plugin install vagrant-bindfs\n\nVagrant.config(2) do |config|\n    config.vm.box = "centos/7"\n\n    config.hostmanager.enabled = true\n    config.hostmanager.manage_guest = true\n    config.hostmanager.manage_host = true\n\n    # 不想自动更新\n    config.vbguest.auto_update = false\n\n    config.vm.define "node1" do |node1|\n        # set linux private network\n        node1.vm.network "private_network", ip: "192.168.33.11"\n        # set linux hostname\n        node1.vm.hostname="node1"\n        # set sync folder\n        node1.vm.synced_folder "./app", "/mnt/app-data", type: "nfs"\n        # use bindfs\n        node1.bindfs.bind_folder "/mnt/app-data", "/app",\n            # add roles\n            force_user: \'root\', force_group: \'root\', o: "nonempty"\n    end\n\n    config.vm.define "node2" do |node2|\n        node2.vm.network "private_network", ip: "192.168.33.22"\n        node2.vm.hostname = "node2"\n    end\n\n    config.vm.define "node3" do |node3|\n        node3.vm.network "private_network", ip: "192.168.33.33"\n        node3.vm.hostname = "node3"\n    end\n\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# packge\n# nginx： sudo rm -rf /etc/udev/rules.d/70-persistent-net.rules\n\n# 打包\nvagrant package\n\n\n1\n2\n3\n4\n# multi Machine\n * 初始化: vagrant init centos/7\n   \n   \n * Vagrantfile\n   \n   \n\nVagrant.configure("2") do |config|\n  # use centos/7 box\n  config.vm.box = "centos/7"\n\n  config.vm.box_check_update = false\n\n  config.vbguest.auto_update = false\n  config.vbguest.no_remote = true\n\n  config.vm.provision "shell", inline: "echo Hello"\n\n\n\n  # define: host is web , params is web\n  config.vm.define "web" do |web|\n    # config\n    web.vm.network "private_network", ip: "192.168.33.10"\n    web.vm.hostname = "nginx"\n    web.vm.synced_folder "./web", "/web"\n  end\n\n  config.vm.define "db" do |db|\n    # config\n    db.vm.network "private_network", ip: "192.168.33.11"\n    db.vm.hostname = "mysql"\n    db.vm.synced_folder "./db", "/db"\n  end\n\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n * ssh\n\nvagrant up # 启动主机\nvagrant status # 查看状态\nvagrant ssh web # ssh连接web主机\n\n\n1\n2\n3\n# 参考资料\n * 使用 Vagrant 打造跨平台开发环境',normalizedContent:' * vagrant\n * app.vagrantup\n * rubygems\n * virtualbox\n\n# command\ntables                  are                                         \nvagrant init            初始化 box 的操作，会生成 vagrant 的配置文件 vagrantfile   \nvagrant up              启动本地环境                                      \nvagrant ssh             通过 ssh 登录本地环境所在虚拟机                          \nvagrant halt            关闭本地环境                                      \nvagrant suspend         暂停本地环境                                      \nvagrant resume          恢复本地环境                                      \nvagrant reload          修改了 vagrantfile 后，使之生效（相当于先 halt，再 up）      \nvagrant destroy         彻底移除本地环境                                    \nvagrant box list        显示当前已经添加的 box 列表                            \nvagrant box add         添加 box 到列表                                  \nvagrant box remove      删除相应的 box                                   \nvagrant package         打包命令，可以把当前的运行的虚拟机环境进行打包                     \nvagrant plugin          用于安装卸载插件                                    \nvagrant status          获取当前虚拟机的状态                                  \nvagrant global-status   显示当前用户 vagrant 的所有环境状态                      \n\n# vagrant 添加无版本号的 box\n * vagrant box add centos/7\n\ncentos/7 # 表示 centos系统 和 centos的版本号7\n\n\n1\n * vagrant box add boxname ./downloadboxname.box\n\nboxname # 添加之后的box 名称\n./downloadboxname.box # 下载到本地的box\n\n\n1\n2\n# vagrant 添加带版本号的 box\n * 创建：metadata.json\n   \n    * name：添加的 box 名字\n    * version：版本号\n    * providers.name：虚拟主机类型\n    * providers.url：box 地址\n   \n   \n\n{\n  "name": "centos/7",\n  "versions": [\n    {\n      "version": "1809.01",\n      "providers": [\n        {\n          "name": "virtualbox",\n          "url": "./virtualbox.box"\n        }\n      ]\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * 运行创建: vagrant box add metadata.json\n\n# ssh 登录 linux\nssh: 127.0.0.1\n端口: 2222\n用户名: vagrant\n密码: vagrant\n\n\n1\n2\n3\n4\n# vagrant init\n * 初始化项目：vagrant init centos/7\n\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# all vagrant configuration is done below. the "2" in vagrant.configure\n# configures the configuration version (we support older styles for\n# backwards compatibility). please don\'t change it unless you know what\n# you\'re doing.\nvagrant.configure("2") do |config|\n  # the most common configuration options are documented and commented below.\n  # for a complete reference, please see the online documentation at\n  # https://docs.vagrantup.com.\n\n  # every vagrant development environment requires a box. you can search for\n  # boxes at https://vagrantcloud.com/search.\n  config.vm.box = "centos/7"\n\n  # disable automatic box update checking. if you disable this, then\n  # boxes will only be checked for updates when the user runs\n  # `vagrant box outdated`. this is not recommended.\n  config.vm.box_check_update = false\n  # create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine. in the example below,\n  # accessing "localhost:8080" will access port 80 on the guest machine.\n  # note: this will enable public access to the opened port\n  # config.vm.network "forwarded_port", guest: 80, host: 8080\n\n  # create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine and only allow access\n  # via 127.0.0.1 to disable public access\n  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"\n\n  # set auto_update to false, if you do not want to check the correct\n  # additions version when booting this machine\n  # cmd: vagrant vbguest --status\n  config.vbguest.auto_update = false\n  # do not download the iso file from a webserver\n  config.vbguest.no_remote = true\n\n  # create a private network, which allows host-only access to the machine\n  # using a specific ip.\n  config.vm.network "private_network", ip: "192.168.33.10"\n\n  # create a public network, which generally matched to bridged network.\n  # bridged networks make the machine appear as another physical device on\n  # your network.\n  # config.vm.network "public_network"\n\n  # share an additional folder to the guest vm. the first argument is\n  # the path on the host to the actual folder. the second argument is\n  # the path on the guest to mount the folder. and the optional third\n  # argument is a set of non-required options.\n  config.vm.synced_folder "e:/boxs/centos7/data", "/vagrant_data",\n    create: true, owner: "root", group: "root"\n  # provider-specific configuration so you can fine-tune various\n  # backing providers for vagrant. these expose provider-specific options.\n  # example for virtualbox:\n  #\n  # config.vm.provider "virtualbox" do |vb|\n  #   # display the virtualbox gui when booting the machine\n  #   vb.gui = true\n  #\n  #   # customize the amount of memory on the vm:\n  #   vb.memory = "1024"\n  # end\n  #\n  # view the documentation for the provider you are using for more\n  # information on available options.\n\n  # enable provisioning with a shell script. additional provisioners such as\n  # puppet, chef, ansible, salt, and docker are also available. please see the\n  # documentation for more information about their specific syntax and use.\n  # config.vm.provision "shell", inline: <<-shell\n  #   apt-get update\n  #   apt-get install -y apache2\n  # shell\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n# plugin\n * 列出插件: vagrant plugin list\n * 安装: vagrant plugin install\n\n# installing a plugin from a known gem source\n  vagrant plugin install my-plugin\n\n# installing a plugin from a local file source\n  vagrant plugin install /path/to/my-plugin.gem\n\n\n1\n2\n3\n4\n5\n * 更新: vagrant plugin update [my-plugin]\n   \n   \n * 卸载: vagrant plugin uninstall my-plugin\n   \n   \n * vagrantfile\n   \n   \n\nvagrant.config(2) do |config|\n    config.vm.box = "centos/7"\n\n    config.vm.define "node1" do |node1|\n        node1.vm.network "private_network", ip: "192.168.33.11"\n        node1.vm.hostname = "node1"\n    end\n\n    config.vm.define "node2" do |node2|\n        node2.vm.network "private_network", ip: "192.168.33.22"\n        node2.vm.hostname = "node2"\n    end\n\n    config.vm.define "node3" do |node3|\n        node3.vm.network "private_network", ip: "192.168.33.33"\n        node3.vm.hostname = "node3"\n    end\n\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# vagrant-vbguest\n * vagrant plugin install vagrant-vbguest\n * vagrant vbguest --status\n * vagrant vbguest --do install node1\n\nvagrant.config(2) do |config|\n    config.vm.box = "centos/7"\n\n    # 不想自动更新\n    config.vbguest.auto_update = false\n\n    config.vm.define "node1" do |node1|\n        node1.vm.network "private_network", ip: "192.168.33.11"\n        node1.vm.hostname = "node1"\n    end\n\n    config.vm.define "node2" do |node2|\n        node2.vm.network "private_network", ip: "192.168.33.22"\n        node2.vm.hostname = "node2"\n    end\n\n    config.vm.define "node3" do |node3|\n        node3.vm.network "private_network", ip: "192.168.33.33"\n        node3.vm.hostname = "node3"\n    end\n\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# vagrant-hostmanager\n * vagrant plugin install vagrant-hostmanager\n * vagrant hostmanager\n\nvagrant.config(2) do |config|\n    config.vm.box = "centos/7"\n\n    config.hostmanager.enabled = true\n    config.hostmanager.manage_guest = true\n    config.hostmanager.manage_host = true\n\n    # 不想自动更新\n    config.vbguest.auto_update = false\n\n    config.vm.define "node1" do |node1|\n        node1.vm.network "private_network", ip: "192.168.33.11"\n        node1.vm.hostname = "node1"\n    end\n\n    config.vm.define "node2" do |node2|\n        node2.vm.network "private_network", ip: "192.168.33.22"\n        node2.vm.hostname = "node2"\n    end\n\n    config.vm.define "node3" do |node3|\n        node3.vm.network "private_network", ip: "192.168.33.33"\n        node3.vm.hostname = "node3"\n    end\n\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# vagrant-bindfs\n * vagrant plugin install vagrant-bindfs\n\nvagrant.config(2) do |config|\n    config.vm.box = "centos/7"\n\n    config.hostmanager.enabled = true\n    config.hostmanager.manage_guest = true\n    config.hostmanager.manage_host = true\n\n    # 不想自动更新\n    config.vbguest.auto_update = false\n\n    config.vm.define "node1" do |node1|\n        # set linux private network\n        node1.vm.network "private_network", ip: "192.168.33.11"\n        # set linux hostname\n        node1.vm.hostname="node1"\n        # set sync folder\n        node1.vm.synced_folder "./app", "/mnt/app-data", type: "nfs"\n        # use bindfs\n        node1.bindfs.bind_folder "/mnt/app-data", "/app",\n            # add roles\n            force_user: \'root\', force_group: \'root\', o: "nonempty"\n    end\n\n    config.vm.define "node2" do |node2|\n        node2.vm.network "private_network", ip: "192.168.33.22"\n        node2.vm.hostname = "node2"\n    end\n\n    config.vm.define "node3" do |node3|\n        node3.vm.network "private_network", ip: "192.168.33.33"\n        node3.vm.hostname = "node3"\n    end\n\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# packge\n# nginx： sudo rm -rf /etc/udev/rules.d/70-persistent-net.rules\n\n# 打包\nvagrant package\n\n\n1\n2\n3\n4\n# multi machine\n * 初始化: vagrant init centos/7\n   \n   \n * vagrantfile\n   \n   \n\nvagrant.configure("2") do |config|\n  # use centos/7 box\n  config.vm.box = "centos/7"\n\n  config.vm.box_check_update = false\n\n  config.vbguest.auto_update = false\n  config.vbguest.no_remote = true\n\n  config.vm.provision "shell", inline: "echo hello"\n\n\n\n  # define: host is web , params is web\n  config.vm.define "web" do |web|\n    # config\n    web.vm.network "private_network", ip: "192.168.33.10"\n    web.vm.hostname = "nginx"\n    web.vm.synced_folder "./web", "/web"\n  end\n\n  config.vm.define "db" do |db|\n    # config\n    db.vm.network "private_network", ip: "192.168.33.11"\n    db.vm.hostname = "mysql"\n    db.vm.synced_folder "./db", "/db"\n  end\n\nend\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n * ssh\n\nvagrant up # 启动主机\nvagrant status # 查看状态\nvagrant ssh web # ssh连接web主机\n\n\n1\n2\n3\n# 参考资料\n * 使用 vagrant 打造跨平台开发环境',charsets:{cjk:!0}},{title:"rollup/parcel/lerna",frontmatter:{title:"rollup/parcel/lerna",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["ascii"],categories:["tools"],readingShow:"top"},regularPath:"/tools/",relativePath:"tools/README.md",key:"v-5df87458",path:"/tools/",lastUpdated:"2020/7/30 上午10:49:06",headersStr:null,content:" * lerna\n   \n   \n * https://cowtransfer.com/\n   \n   \n * https://send.firefox.com/\n   \n   \n * rollupjs en\n   \n   \n * rollupjs cn\n   \n   \n * parceljs\n   \n   \n * ASCII@wikipedia\n   \n   \n * ASCII 控制字符\n   \n   \n\n\n\n * ASCII 可显示字符",normalizedContent:" * lerna\n   \n   \n * https://cowtransfer.com/\n   \n   \n * https://send.firefox.com/\n   \n   \n * rollupjs en\n   \n   \n * rollupjs cn\n   \n   \n * parceljs\n   \n   \n * ascii@wikipedia\n   \n   \n * ascii 控制字符\n   \n   \n\n\n\n * ascii 可显示字符",charsets:{cjk:!0}},{title:"使用commitizen格式化提交规范",frontmatter:{title:"使用commitizen格式化提交规范",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["commitizen"],categories:["tools"],readingShow:"top"},regularPath:"/tools/commitizen.html",relativePath:"tools/commitizen.md",key:"v-5290c2e6",path:"/tools/commitizen.html",headers:[{level:2,title:"commitizen",slug:"commitizen",normalizedTitle:"commitizen",charIndex:70},{level:3,title:"Adapter",slug:"adapter",normalizedTitle:"adapter",charIndex:83},{level:3,title:"自定义 Adapter",slug:"自定义-adapter",normalizedTitle:"自定义 adapter",charIndex:1085},{level:2,title:"changelog",slug:"changelog",normalizedTitle:"changelog",charIndex:210},{level:2,title:"standard-version",slug:"standard-version",normalizedTitle:"standard-version",charIndex:2794},{level:2,title:"集成 npm",slug:"集成-npm",normalizedTitle:"集成 npm",charIndex:3528},{level:2,title:"Commitlint",slug:"commitlint",normalizedTitle:"commitlint",charIndex:4229},{level:2,title:"husky",slug:"husky",normalizedTitle:"husky",charIndex:6006},{level:2,title:"参考示例",slug:"参考示例",normalizedTitle:"参考示例",charIndex:6351},{level:3,title:"默认 Adapter",slug:"默认-adapter",normalizedTitle:"默认 adapter",charIndex:6358},{level:3,title:"自定义 Adapter",slug:"自定义-adapter-2",normalizedTitle:"自定义 adapter",charIndex:1085}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"commitizen Adapter 自定义 Adapter changelog standard-version 集成 npm Commitlint husky 参考示例 默认 Adapter 自定义 Adapter",content:' * git commit 、CHANGELOG 和版本发布的标准自动化\n * 优雅的提交你的 Git Commit Message\n\n# commitizen\n# Adapter\n * Commitizen: 替代你的 git commit\n\nnpm install -g commitizen\n\n\n1\n * 方式一：在全局安装适配器（Adapter)\n\nnpm install -g cz-conventional-changelog\n\n# 项目根目录下添加 .czrc 配置文件\n{ "path": "cz-conventional-changelog" }\n\n# 使用 git commit 替换为 git cz\ngit cz\n\n\n1\n2\n3\n4\n5\n6\n7\n * 方式二：在项目安装适配器（Adapter)\n\ncommitizen init cz-conventional-changelog --save-dev --save-exact --force\n\n# commitizen 工具会自动在package.json中添加配置相应的配置\n\n  "config": {\n      "commitizen": {\n          "path": "cz-conventional-changelog"\n      }\n  }\n\n# 使用： package.json配置\n\n  "script": {\n      "commit": "git-cz",\n  },\n  "config": {\n      "commitizen": {\n        "path": "node_modules/cz-conventional-changelog"\n      }\n  }\n\n# 命令运行\nnpm run commit\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n * Adapter options\n\nfeat    # 新功能\nfix Bug   # 修复\ndocs    # 文档更新\nstyle     # 代码的格式，标点符号的更新\nrefactor  # 代码重构\nperf    # 性能优化\ntest    # 测试更新\nbuild   # 构建系统或者包依赖更新\nci CI   # 配置，脚本文件等更新\nchore   # 非 src 或者 测试文件的更新\nrevert  # commit 回退\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 自定义 Adapter\n * 安装 cz-customizable\n\nnpm i -g cz-customizable / npm i -D cz-customizable\n\n\n1\n * 修改 .czrc 或 package.json 中的 config 为\n\n# .czrc\n{ "path": "cz-customizable" }\n\n# package.json\n"config": {\n    "commitizen": {\n      "path": "node_modules/cz-customizable"\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 同时在~/ 或项目目录下创建 .cz-config.js 文件\n\n"use strict";\n\nmodule.exports = {\n  types: [\n    {\n      value: "feat",\n      name: "✨  feat:     A new feature"\n    },\n    {\n      value: "fix",\n      name: "🐞  fix:      A bug fix"\n    },\n    {\n      value: "refactor",\n      name:\n        "🛠  refactor: A code change that neither fixes a bug nor adds a feature"\n    },\n    {\n      value: "docs",\n      name: "📚  docs:     Documentation only changes"\n    },\n    {\n      value: "test",\n      name: "🏁  test:     Add missing tests or correcting existing tests"\n    },\n    {\n      value: "chore",\n      name:\n        "🗯  chore:    Changes that don\'t modify src or test files. Such as updating build tasks, package manager"\n    },\n    {\n      value: "style",\n      name:\n        "💅  style:    Code Style, Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"\n    },\n    {\n      value: "revert",\n      name: "⏪  revert:   Revert to a commit"\n    }\n  ],\n  scopes: [],\n  allowCustomScopes: true,\n  allowBreakingChanges: ["feat", "fix"]\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# changelog\n * 安装 conventional-changelog-cli\n\nnpm install -g conventional-changelog-cli\n\n\n1\n * use\n\nconventional-changelog -p angular -i CHANGELOG.md -s\nconventional-changelog -p angular -i CHANGELOG.md -s -r 0\n\n\n1\n2\n# standard-version\n * standard-version\n * local\n\nnpm i --save-dev standard-version\n\n{\n  "scripts": {\n    "release": "standard-version"\n  }\n}\n\nnpm run release\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * global\n\nnpm i -g standard-version\n\nstandard-version\n\n\n1\n2\n3\n * release-as, -r 指定版本号\n\n主版本（major）,次版本（ minor） or 修订版（patch）\n\n$ standard-version -r minor\n# output 1.1.0\n$ standard-version -r 2.0.0\n# output 2.0.0\n$ standard-version -r 2.0.0-test\n# output 2.0.0-test\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * prerelease, -p 预发版本命名\n\n用来生成预发版本, 如果当期的版本号是 2.0.0，例如\n\n$ standard-version --prerelease alpha\n# output 2.0.0-alpha.0\n\n\n1\n2\n3\n4\n * tag-prefix, -t 版本 tag 前缀\n\n用来给生成 tag 标签添加前缀，例如如果前版本号为 2.0.0，则：\n\n$ standard-version --tag-prefix "stable-"\n# output tag: stable-v2.0.0\n\n\n1\n2\n3\n4\n# 集成 npm\n * package\n\n"scripts": {\n    "release": "./scripts/release.sh",\n    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md && npm run changeissueurl",\n    "changeissueurl": "replace \'https://github.com/myproject/issues/\' \'https://redmine.example.com/\' CHANGELOG.md"\n},\n\n\n1\n2\n3\n4\n5\n * release.sh\n\n#!/bin/bash\n\n# Release branch\nmaster="master"\nprefix="DTinsight_v"\n\ngit pull origin $master\necho "Current pull origin $master."\n\n# Auto generate version number and tag\nstandard-version -r $release --tag-prefix $prefix\n\ngit push --follow-tags origin $master\n\necho "Git push origin $master"\necho "Release finished."\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# Commitlint\n * Commitlint: 校验你的 message\n * 安装 @commitlint/config-conventional\n\nnpm i -D @commitlint/config-conventional @commitlint/cli\n\n\n1\n * 在项目目录下创建配置文件 .commitlintrc.js\n\nmodule.exports = {\n  extends: ["@commitlint/config-conventional"],\n  rules: {\n    "body-leading-blank": [1, "always"],\n    "footer-leading-blank": [1, "always"],\n    "header-max-length": [2, "always", 72],\n    "scope-case": [2, "always", "lower-case"],\n    "subject-case": [\n      2,\n      "never",\n      ["sentence-case", "start-case", "pascal-case", "upper-case"]\n    ],\n    "subject-empty": [2, "never"],\n    "subject-full-stop": [2, "never", "."],\n    "type-case": [2, "always", "lower-case"],\n    "type-empty": [2, "never"],\n    "type-enum": [\n      2,\n      "always",\n      [\n        "build",\n        "chore",\n        "ci",\n        "docs",\n        "feat",\n        "fix",\n        "perf",\n        "refactor",\n        "revert",\n        "style",\n        "test"\n      ]\n    ]\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n * 针对自定义的 Adapter 进行 Lint\n\nnpm i -D @commitlint/cli\n\n# .commitlintrc.js 中写入\nmodule.exports = {\n\trules: {\n\t\t\'body-leading-blank\': [1, \'always\'],\n\t\t\'footer-leading-blank\': [1, \'always\'],\n\t\t\'header-max-length\': [2, \'always\', 72],\n\t\t\'scope-case\': [2, \'always\', \'lower-case\'],\n\t\t\'subject-case\': [\n\t\t\t2,\n\t\t\t\'never\',\n\t\t\t[\'sentence-case\', \'start-case\', \'pascal-case\', \'upper-case\'],\n\t\t],\n\t\t\'subject-empty\': [2, \'never\'],\n\t\t\'subject-full-stop\': [2, \'never\', \'.\'],\n\t\t\'type-case\': [2, \'always\', \'lower-case\'],\n\t\t\'type-empty\': [2, \'never\'],\n\t\t\'type-enum\': [\n\t\t\t2,\n\t\t\t\'always\',\n\t\t\t[\'feat\', \'fix\', \'refactor\', \'docs\', \'test\', \'chore\', \'style\', \'revert\'],\n\t\t],\n\t},\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# husky\n * husky\n * 安装 npm install husky --save-dev\n * 使用\n\n// package.json\n{\n  "husky": {\n    "hooks": {\n      "pre-commit": "npm test",\n      "pre-push": "npm test",\n    }\n  }\n}\n\n// 例如：\n"husky": {\n  "hooks": {\n    "pre-commit": "lint-staged",\n    "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 参考示例\n# 默认 Adapter\n * package.json\n\n{\n  "name": "demo",\n  "version": "1.0.1",\n  "main": "index.js",\n  "scripts": {\n    "lint": "eslint --debug src/**/*.js",\n    "lint:write": "eslint src/**/*.js --fix",\n    "prettier": "prettier --write src/**/*.js",\n    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md",\n    "release": "standard-version"\n  },\n  "devDependencies": {\n    "@commitlint/cli": "^7.2.1",\n    "@commitlint/config-conventional": "^7.1.2",\n    "cz-conventional-changelog": "^2.1.0",\n    "eslint": "^5.12.0",\n    "eslint-config-standard": "^12.0.0",\n    "eslint-plugin-import": "^2.14.0",\n    "eslint-plugin-node": "^8.0.1",\n    "eslint-plugin-promise": "^4.0.1",\n    "eslint-plugin-standard": "^4.0.0",\n    "prettier": "^1.15.3",\n    "eslint-plugin-prettier": "^3.0.1",\n    "eslint-config-prettier": "^3.5.0",\n    "husky": "^1.3.1",\n    "lint-staged": "^8.1.0"\n  },\n  "config": {\n    "commitizen": {\n      "path": "./node_modules/cz-conventional-changelog"\n    }\n  },\n  "lint-staged": {\n    "*.(js|jsx)": ["npm run lint:write", "git add"]\n  },\n  "husky": {\n    "hooks": {\n      "pre-commit": "lint-staged",\n      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"\n    }\n  },\n  "dependencies": {\n    "standard-version": "^4.4.0"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n * .commitlintrc.js\n\nmodule.exports = {\n  extends: ["@commitlint/config-conventional"],\n  rules: {\n    "body-leading-blank": [1, "always"],\n    "footer-leading-blank": [1, "always"],\n    "header-max-length": [2, "always", 72],\n    "scope-case": [2, "always", "lower-case"],\n    "subject-case": [\n      2,\n      "never",\n      ["sentence-case", "start-case", "pascal-case", "upper-case"]\n    ],\n    "subject-empty": [2, "never"],\n    "subject-full-stop": [2, "never", "."],\n    "type-case": [2, "always", "lower-case"],\n    "type-empty": [2, "never"],\n    "type-enum": [\n      2,\n      "always",\n      [\n        "build",\n        "chore",\n        "ci",\n        "docs",\n        "feat",\n        "fix",\n        "perf",\n        "refactor",\n        "revert",\n        "style",\n        "test"\n      ]\n    ]\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n# 自定义 Adapter\n * package.json\n\n{\n  "name": "demo",\n  "version": "1.0.4",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo dev branch",\n    "lint": "eslint --debug src/**/*.js",\n    "lint:write": "eslint src/**/*.js --fix",\n    "prettier": "prettier --write src/**/*.js",\n    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md",\n    "release": "standard-version"\n  },\n  "devDependencies": {\n    "@commitlint/cli": "^7.2.1",\n    "cz-customizable": "^5.3.0",\n    "eslint": "^5.12.0",\n    "eslint-config-prettier": "^3.5.0",\n    "eslint-config-standard": "^12.0.0",\n    "eslint-plugin-import": "^2.14.0",\n    "eslint-plugin-node": "^8.0.1",\n    "eslint-plugin-prettier": "^3.0.1",\n    "eslint-plugin-promise": "^4.0.1",\n    "eslint-plugin-standard": "^4.0.0",\n    "husky": "^1.3.1",\n    "lint-staged": "^8.1.0",\n    "prettier": "^1.15.3"\n  },\n  "config": {\n    "commitizen": {\n      "path": "node_modules/cz-customizable"\n    }\n  },\n  "lint-staged": {\n    "*.(js|jsx)": ["npm run lint:write", "git add"]\n  },\n  "husky": {\n    "hooks": {\n      "pre-commit": "lint-staged",\n      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n * .cz-config.js\n\n"use strict";\n\nmodule.exports = {\n  types: [\n    {\n      value: "feat",\n      name: "✨  feat:     A new feature"\n    },\n    {\n      value: "fix",\n      name: "🐞  fix:      A bug fix"\n    },\n    {\n      value: "refactor",\n      name:\n        "🛠  refactor: A code change that neither fixes a bug nor adds a feature"\n    },\n    {\n      value: "docs",\n      name: "📚  docs:     Documentation only changes"\n    },\n    {\n      value: "test",\n      name: "🏁  test:     Add missing tests or correcting existing tests"\n    },\n    {\n      value: "chore",\n      name:\n        "🗯  chore:    Changes that don\'t modify src or test files. Such as updating build tasks, package manager"\n    },\n    {\n      value: "style",\n      name:\n        "💅  style:    Code Style, Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"\n    },\n    {\n      value: "revert",\n      name: "⏪  revert:   Revert to a commit"\n    }\n  ],\n  allowCustomScopes: true\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n * .commitlintrc.js\n\nmodule.exports = {\n  rules: {\n    "body-leading-blank": [1, "always"],\n    "footer-leading-blank": [1, "always"],\n    "header-max-length": [2, "always", 72],\n    "scope-case": [2, "always", "lower-case"],\n    "subject-case": [\n      2,\n      "never",\n      ["sentence-case", "start-case", "pascal-case", "upper-case"]\n    ],\n    "subject-empty": [2, "never"],\n    "subject-full-stop": [2, "never", "."],\n    "type-case": [2, "always", "lower-case"],\n    "type-empty": [2, "never"],\n    "type-enum": [\n      2,\n      "always",\n      ["feat", "fix", "refactor", "docs", "test", "chore", "style", "revert"]\n    ]\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22',normalizedContent:' * git commit 、changelog 和版本发布的标准自动化\n * 优雅的提交你的 git commit message\n\n# commitizen\n# adapter\n * commitizen: 替代你的 git commit\n\nnpm install -g commitizen\n\n\n1\n * 方式一：在全局安装适配器（adapter)\n\nnpm install -g cz-conventional-changelog\n\n# 项目根目录下添加 .czrc 配置文件\n{ "path": "cz-conventional-changelog" }\n\n# 使用 git commit 替换为 git cz\ngit cz\n\n\n1\n2\n3\n4\n5\n6\n7\n * 方式二：在项目安装适配器（adapter)\n\ncommitizen init cz-conventional-changelog --save-dev --save-exact --force\n\n# commitizen 工具会自动在package.json中添加配置相应的配置\n\n  "config": {\n      "commitizen": {\n          "path": "cz-conventional-changelog"\n      }\n  }\n\n# 使用： package.json配置\n\n  "script": {\n      "commit": "git-cz",\n  },\n  "config": {\n      "commitizen": {\n        "path": "node_modules/cz-conventional-changelog"\n      }\n  }\n\n# 命令运行\nnpm run commit\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n * adapter options\n\nfeat    # 新功能\nfix bug   # 修复\ndocs    # 文档更新\nstyle     # 代码的格式，标点符号的更新\nrefactor  # 代码重构\nperf    # 性能优化\ntest    # 测试更新\nbuild   # 构建系统或者包依赖更新\nci ci   # 配置，脚本文件等更新\nchore   # 非 src 或者 测试文件的更新\nrevert  # commit 回退\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 自定义 adapter\n * 安装 cz-customizable\n\nnpm i -g cz-customizable / npm i -d cz-customizable\n\n\n1\n * 修改 .czrc 或 package.json 中的 config 为\n\n# .czrc\n{ "path": "cz-customizable" }\n\n# package.json\n"config": {\n    "commitizen": {\n      "path": "node_modules/cz-customizable"\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 同时在~/ 或项目目录下创建 .cz-config.js 文件\n\n"use strict";\n\nmodule.exports = {\n  types: [\n    {\n      value: "feat",\n      name: "✨  feat:     a new feature"\n    },\n    {\n      value: "fix",\n      name: "🐞  fix:      a bug fix"\n    },\n    {\n      value: "refactor",\n      name:\n        "🛠  refactor: a code change that neither fixes a bug nor adds a feature"\n    },\n    {\n      value: "docs",\n      name: "📚  docs:     documentation only changes"\n    },\n    {\n      value: "test",\n      name: "🏁  test:     add missing tests or correcting existing tests"\n    },\n    {\n      value: "chore",\n      name:\n        "🗯  chore:    changes that don\'t modify src or test files. such as updating build tasks, package manager"\n    },\n    {\n      value: "style",\n      name:\n        "💅  style:    code style, changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"\n    },\n    {\n      value: "revert",\n      name: "⏪  revert:   revert to a commit"\n    }\n  ],\n  scopes: [],\n  allowcustomscopes: true,\n  allowbreakingchanges: ["feat", "fix"]\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# changelog\n * 安装 conventional-changelog-cli\n\nnpm install -g conventional-changelog-cli\n\n\n1\n * use\n\nconventional-changelog -p angular -i changelog.md -s\nconventional-changelog -p angular -i changelog.md -s -r 0\n\n\n1\n2\n# standard-version\n * standard-version\n * local\n\nnpm i --save-dev standard-version\n\n{\n  "scripts": {\n    "release": "standard-version"\n  }\n}\n\nnpm run release\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * global\n\nnpm i -g standard-version\n\nstandard-version\n\n\n1\n2\n3\n * release-as, -r 指定版本号\n\n主版本（major）,次版本（ minor） or 修订版（patch）\n\n$ standard-version -r minor\n# output 1.1.0\n$ standard-version -r 2.0.0\n# output 2.0.0\n$ standard-version -r 2.0.0-test\n# output 2.0.0-test\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * prerelease, -p 预发版本命名\n\n用来生成预发版本, 如果当期的版本号是 2.0.0，例如\n\n$ standard-version --prerelease alpha\n# output 2.0.0-alpha.0\n\n\n1\n2\n3\n4\n * tag-prefix, -t 版本 tag 前缀\n\n用来给生成 tag 标签添加前缀，例如如果前版本号为 2.0.0，则：\n\n$ standard-version --tag-prefix "stable-"\n# output tag: stable-v2.0.0\n\n\n1\n2\n3\n4\n# 集成 npm\n * package\n\n"scripts": {\n    "release": "./scripts/release.sh",\n    "changelog": "conventional-changelog -p angular -i changelog.md -s -r 0 && git add changelog.md && npm run changeissueurl",\n    "changeissueurl": "replace \'https://github.com/myproject/issues/\' \'https://redmine.example.com/\' changelog.md"\n},\n\n\n1\n2\n3\n4\n5\n * release.sh\n\n#!/bin/bash\n\n# release branch\nmaster="master"\nprefix="dtinsight_v"\n\ngit pull origin $master\necho "current pull origin $master."\n\n# auto generate version number and tag\nstandard-version -r $release --tag-prefix $prefix\n\ngit push --follow-tags origin $master\n\necho "git push origin $master"\necho "release finished."\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# commitlint\n * commitlint: 校验你的 message\n * 安装 @commitlint/config-conventional\n\nnpm i -d @commitlint/config-conventional @commitlint/cli\n\n\n1\n * 在项目目录下创建配置文件 .commitlintrc.js\n\nmodule.exports = {\n  extends: ["@commitlint/config-conventional"],\n  rules: {\n    "body-leading-blank": [1, "always"],\n    "footer-leading-blank": [1, "always"],\n    "header-max-length": [2, "always", 72],\n    "scope-case": [2, "always", "lower-case"],\n    "subject-case": [\n      2,\n      "never",\n      ["sentence-case", "start-case", "pascal-case", "upper-case"]\n    ],\n    "subject-empty": [2, "never"],\n    "subject-full-stop": [2, "never", "."],\n    "type-case": [2, "always", "lower-case"],\n    "type-empty": [2, "never"],\n    "type-enum": [\n      2,\n      "always",\n      [\n        "build",\n        "chore",\n        "ci",\n        "docs",\n        "feat",\n        "fix",\n        "perf",\n        "refactor",\n        "revert",\n        "style",\n        "test"\n      ]\n    ]\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n * 针对自定义的 adapter 进行 lint\n\nnpm i -d @commitlint/cli\n\n# .commitlintrc.js 中写入\nmodule.exports = {\n\trules: {\n\t\t\'body-leading-blank\': [1, \'always\'],\n\t\t\'footer-leading-blank\': [1, \'always\'],\n\t\t\'header-max-length\': [2, \'always\', 72],\n\t\t\'scope-case\': [2, \'always\', \'lower-case\'],\n\t\t\'subject-case\': [\n\t\t\t2,\n\t\t\t\'never\',\n\t\t\t[\'sentence-case\', \'start-case\', \'pascal-case\', \'upper-case\'],\n\t\t],\n\t\t\'subject-empty\': [2, \'never\'],\n\t\t\'subject-full-stop\': [2, \'never\', \'.\'],\n\t\t\'type-case\': [2, \'always\', \'lower-case\'],\n\t\t\'type-empty\': [2, \'never\'],\n\t\t\'type-enum\': [\n\t\t\t2,\n\t\t\t\'always\',\n\t\t\t[\'feat\', \'fix\', \'refactor\', \'docs\', \'test\', \'chore\', \'style\', \'revert\'],\n\t\t],\n\t},\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# husky\n * husky\n * 安装 npm install husky --save-dev\n * 使用\n\n// package.json\n{\n  "husky": {\n    "hooks": {\n      "pre-commit": "npm test",\n      "pre-push": "npm test",\n    }\n  }\n}\n\n// 例如：\n"husky": {\n  "hooks": {\n    "pre-commit": "lint-staged",\n    "commit-msg": "commitlint -e husky_git_params"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 参考示例\n# 默认 adapter\n * package.json\n\n{\n  "name": "demo",\n  "version": "1.0.1",\n  "main": "index.js",\n  "scripts": {\n    "lint": "eslint --debug src/**/*.js",\n    "lint:write": "eslint src/**/*.js --fix",\n    "prettier": "prettier --write src/**/*.js",\n    "changelog": "conventional-changelog -p angular -i changelog.md -s -r 0 && git add changelog.md",\n    "release": "standard-version"\n  },\n  "devdependencies": {\n    "@commitlint/cli": "^7.2.1",\n    "@commitlint/config-conventional": "^7.1.2",\n    "cz-conventional-changelog": "^2.1.0",\n    "eslint": "^5.12.0",\n    "eslint-config-standard": "^12.0.0",\n    "eslint-plugin-import": "^2.14.0",\n    "eslint-plugin-node": "^8.0.1",\n    "eslint-plugin-promise": "^4.0.1",\n    "eslint-plugin-standard": "^4.0.0",\n    "prettier": "^1.15.3",\n    "eslint-plugin-prettier": "^3.0.1",\n    "eslint-config-prettier": "^3.5.0",\n    "husky": "^1.3.1",\n    "lint-staged": "^8.1.0"\n  },\n  "config": {\n    "commitizen": {\n      "path": "./node_modules/cz-conventional-changelog"\n    }\n  },\n  "lint-staged": {\n    "*.(js|jsx)": ["npm run lint:write", "git add"]\n  },\n  "husky": {\n    "hooks": {\n      "pre-commit": "lint-staged",\n      "commit-msg": "commitlint -e husky_git_params"\n    }\n  },\n  "dependencies": {\n    "standard-version": "^4.4.0"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n * .commitlintrc.js\n\nmodule.exports = {\n  extends: ["@commitlint/config-conventional"],\n  rules: {\n    "body-leading-blank": [1, "always"],\n    "footer-leading-blank": [1, "always"],\n    "header-max-length": [2, "always", 72],\n    "scope-case": [2, "always", "lower-case"],\n    "subject-case": [\n      2,\n      "never",\n      ["sentence-case", "start-case", "pascal-case", "upper-case"]\n    ],\n    "subject-empty": [2, "never"],\n    "subject-full-stop": [2, "never", "."],\n    "type-case": [2, "always", "lower-case"],\n    "type-empty": [2, "never"],\n    "type-enum": [\n      2,\n      "always",\n      [\n        "build",\n        "chore",\n        "ci",\n        "docs",\n        "feat",\n        "fix",\n        "perf",\n        "refactor",\n        "revert",\n        "style",\n        "test"\n      ]\n    ]\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n# 自定义 adapter\n * package.json\n\n{\n  "name": "demo",\n  "version": "1.0.4",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo dev branch",\n    "lint": "eslint --debug src/**/*.js",\n    "lint:write": "eslint src/**/*.js --fix",\n    "prettier": "prettier --write src/**/*.js",\n    "changelog": "conventional-changelog -p angular -i changelog.md -s -r 0 && git add changelog.md",\n    "release": "standard-version"\n  },\n  "devdependencies": {\n    "@commitlint/cli": "^7.2.1",\n    "cz-customizable": "^5.3.0",\n    "eslint": "^5.12.0",\n    "eslint-config-prettier": "^3.5.0",\n    "eslint-config-standard": "^12.0.0",\n    "eslint-plugin-import": "^2.14.0",\n    "eslint-plugin-node": "^8.0.1",\n    "eslint-plugin-prettier": "^3.0.1",\n    "eslint-plugin-promise": "^4.0.1",\n    "eslint-plugin-standard": "^4.0.0",\n    "husky": "^1.3.1",\n    "lint-staged": "^8.1.0",\n    "prettier": "^1.15.3"\n  },\n  "config": {\n    "commitizen": {\n      "path": "node_modules/cz-customizable"\n    }\n  },\n  "lint-staged": {\n    "*.(js|jsx)": ["npm run lint:write", "git add"]\n  },\n  "husky": {\n    "hooks": {\n      "pre-commit": "lint-staged",\n      "commit-msg": "commitlint -e husky_git_params"\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n * .cz-config.js\n\n"use strict";\n\nmodule.exports = {\n  types: [\n    {\n      value: "feat",\n      name: "✨  feat:     a new feature"\n    },\n    {\n      value: "fix",\n      name: "🐞  fix:      a bug fix"\n    },\n    {\n      value: "refactor",\n      name:\n        "🛠  refactor: a code change that neither fixes a bug nor adds a feature"\n    },\n    {\n      value: "docs",\n      name: "📚  docs:     documentation only changes"\n    },\n    {\n      value: "test",\n      name: "🏁  test:     add missing tests or correcting existing tests"\n    },\n    {\n      value: "chore",\n      name:\n        "🗯  chore:    changes that don\'t modify src or test files. such as updating build tasks, package manager"\n    },\n    {\n      value: "style",\n      name:\n        "💅  style:    code style, changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"\n    },\n    {\n      value: "revert",\n      name: "⏪  revert:   revert to a commit"\n    }\n  ],\n  allowcustomscopes: true\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n * .commitlintrc.js\n\nmodule.exports = {\n  rules: {\n    "body-leading-blank": [1, "always"],\n    "footer-leading-blank": [1, "always"],\n    "header-max-length": [2, "always", 72],\n    "scope-case": [2, "always", "lower-case"],\n    "subject-case": [\n      2,\n      "never",\n      ["sentence-case", "start-case", "pascal-case", "upper-case"]\n    ],\n    "subject-empty": [2, "never"],\n    "subject-full-stop": [2, "never", "."],\n    "type-case": [2, "always", "lower-case"],\n    "type-empty": [2, "never"],\n    "type-enum": [\n      2,\n      "always",\n      ["feat", "fix", "refactor", "docs", "test", "chore", "style", "revert"]\n    ]\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22',charsets:{cjk:!0}},{title:"前端开发使用的代理工具",frontmatter:{title:"前端开发使用的代理工具",date:"2020-07-22T00:00:00.000Z",tags:["proxy"],categories:["tools"],readingShow:"top"},regularPath:"/tools/dev-proxy.html",relativePath:"tools/dev-proxy.md",key:"v-45d5daeb",path:"/tools/dev-proxy.html",lastUpdated:"2020/7/30 上午10:49:06",headersStr:null,content:' * fiddler: http://www.telerik.com/fiddler\n   \n   \n * fiddler/add-ons: http://www.telerik.com/fiddler/add-ons\n   \n   \n * fiddler 显示 server 的 ip\n   \n   \n\n- 首先 我们打开 `fiddler`\n- 点击 `Rules` -> `Customize Rules`\n- 然后会出现一个 `CustomRules.js` 文本,\n- `ctrl + f` 搜索 “`static function Main()`”\n- 将以下代码 替换掉原来的 `function`\n\n  static function Main() {\n      var today: Date = new Date();\n      FiddlerObject.StatusText = " CustomRules.js was loaded at: " + today;\n      // Uncomment to add a "Server" column containing the response "Server" header, if present\n      FiddlerObject.UI.lvSessions.AddBoundColumn("Server IP", 120, "X-HostIP");\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * fiddler 使用 mac\n\nmac fiddler :\nmono --arch=32  Downloads/fiddler-mac/Fiddler.exe\n\n\n1\n2\n * charlesproxy\n   \n    * Web 调试工具 Charles 使用心得\n   \n   \n\nhttps://www.charlesproxy.com/download/\n\n\n1\n * ngrok\n\nngrok.cc\nngrok.com\n\n\n1\n2\n * lightproxy: 代理开发接口\n   \n   \n * whistle: 代理开发接口\n   \n   \n * proxy dev terminal\n   \n   \n\nhttps://gist.github.com/moenn/2db47589724cf6c06ad9316ac57e2144\n\nhttps://gist.github.com/laispace/666dd7b27e9116faece6\n\nhttps://github.com/haad/proxychains\n\n# git config proxy\ngit config --global http.proxy \'socks5://127.0.0.1:1080\'\n\ngit config --global https.proxy \'socks5://127.0.0.1:1080\'\n\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:1086\n\ngit config --global --unset http.proxy\n\ngit config --global --unset https.proxy\n\n# socks5\nexport http_proxy="socks5://127.0.0.1:1080"\n\nexport https_proxy="socks5://127.0.0.1:1080"\n\n# http/https\nexport http_proxy="http://127.0.0.1:1080"\n\nexport https_proxy="http://127.0.0.1:1080"\n\n# proxychains\napt-get install proxychains\nvim /etc/proxychains.conf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30',normalizedContent:' * fiddler: http://www.telerik.com/fiddler\n   \n   \n * fiddler/add-ons: http://www.telerik.com/fiddler/add-ons\n   \n   \n * fiddler 显示 server 的 ip\n   \n   \n\n- 首先 我们打开 `fiddler`\n- 点击 `rules` -> `customize rules`\n- 然后会出现一个 `customrules.js` 文本,\n- `ctrl + f` 搜索 “`static function main()`”\n- 将以下代码 替换掉原来的 `function`\n\n  static function main() {\n      var today: date = new date();\n      fiddlerobject.statustext = " customrules.js was loaded at: " + today;\n      // uncomment to add a "server" column containing the response "server" header, if present\n      fiddlerobject.ui.lvsessions.addboundcolumn("server ip", 120, "x-hostip");\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * fiddler 使用 mac\n\nmac fiddler :\nmono --arch=32  downloads/fiddler-mac/fiddler.exe\n\n\n1\n2\n * charlesproxy\n   \n    * web 调试工具 charles 使用心得\n   \n   \n\nhttps://www.charlesproxy.com/download/\n\n\n1\n * ngrok\n\nngrok.cc\nngrok.com\n\n\n1\n2\n * lightproxy: 代理开发接口\n   \n   \n * whistle: 代理开发接口\n   \n   \n * proxy dev terminal\n   \n   \n\nhttps://gist.github.com/moenn/2db47589724cf6c06ad9316ac57e2144\n\nhttps://gist.github.com/laispace/666dd7b27e9116faece6\n\nhttps://github.com/haad/proxychains\n\n# git config proxy\ngit config --global http.proxy \'socks5://127.0.0.1:1080\'\n\ngit config --global https.proxy \'socks5://127.0.0.1:1080\'\n\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:1086\n\ngit config --global --unset http.proxy\n\ngit config --global --unset https.proxy\n\n# socks5\nexport http_proxy="socks5://127.0.0.1:1080"\n\nexport https_proxy="socks5://127.0.0.1:1080"\n\n# http/https\nexport http_proxy="http://127.0.0.1:1080"\n\nexport https_proxy="http://127.0.0.1:1080"\n\n# proxychains\napt-get install proxychains\nvim /etc/proxychains.conf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30',charsets:{cjk:!0}},{title:"editorConfig格式化插件",frontmatter:{title:"editorConfig格式化插件",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["editorConfig"],categories:["tools"],readingShow:"top"},regularPath:"/tools/editorConfig.html",relativePath:"tools/editorConfig.md",key:"v-74169cd1",path:"/tools/editorConfig.html",lastUpdated:"2020/7/30 上午10:49:06",headersStr:null,content:" * editorconfig\n * vscode 配合插件EditorConfig for VS Code一起使用\n * .editorconfig文件配置\n\n# 最顶层的配置文件\nroot = true\n# 指定作用文件格式\n[*]\n# 缩进的类型 [space | tab]\nindent_style = tab\n# 缩进的大小\nindent_size = 2\n# 定义换行符 [lf | cr | crlf]\nend_of_line = lf\n# 编码格式\ncharset = utf-8\n# 是否除去换行行首的任意空白字符\ntrim_trailing_whitespace = true\n# 文件是否以一个空白行结尾 [true | false]\ninsert_final_newline = true\n\n# Matches the exact files\n[{.*rc,*.yml,*.md,package.json,lerna.json,*.svg}]\nindent_style = space\n\n[*.md]\ntrim_trailing_whitespace = false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n * 通配符模式\n\n通配符            Are                                          \n*              匹配任意数量 string 类型的字符，' / ' 除外                 \n**             匹配任意数量 string 类型的字符                          \n？              匹配任意单个字符                                     \n[a-z]          匹配方括号规定范围内的任意单个字符                            \n[!a-z]         匹配不在方括号规定范围内的任意单个字符                          \n{s1,s2,s3}     匹配任意一个大括号内部美剧的字符(','分隔)                      \n{num1..num2}   匹配 num1 和 num2 之间的任意一个整数，num1 和 num2 正负都可以   \n\n * example\n\nroot = true\n\n[*]\nindent_style = tab\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.{json,yml}]\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15",normalizedContent:" * editorconfig\n * vscode 配合插件editorconfig for vs code一起使用\n * .editorconfig文件配置\n\n# 最顶层的配置文件\nroot = true\n# 指定作用文件格式\n[*]\n# 缩进的类型 [space | tab]\nindent_style = tab\n# 缩进的大小\nindent_size = 2\n# 定义换行符 [lf | cr | crlf]\nend_of_line = lf\n# 编码格式\ncharset = utf-8\n# 是否除去换行行首的任意空白字符\ntrim_trailing_whitespace = true\n# 文件是否以一个空白行结尾 [true | false]\ninsert_final_newline = true\n\n# matches the exact files\n[{.*rc,*.yml,*.md,package.json,lerna.json,*.svg}]\nindent_style = space\n\n[*.md]\ntrim_trailing_whitespace = false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n * 通配符模式\n\n通配符            are                                          \n*              匹配任意数量 string 类型的字符，' / ' 除外                 \n**             匹配任意数量 string 类型的字符                          \n？              匹配任意单个字符                                     \n[a-z]          匹配方括号规定范围内的任意单个字符                            \n[!a-z]         匹配不在方括号规定范围内的任意单个字符                          \n{s1,s2,s3}     匹配任意一个大括号内部美剧的字符(','分隔)                      \n{num1..num2}   匹配 num1 和 num2 之间的任意一个整数，num1 和 num2 正负都可以   \n\n * example\n\nroot = true\n\n[*]\nindent_style = tab\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.{json,yml}]\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15",charsets:{cjk:!0}},{title:"前端eslint的格式化解决方案",frontmatter:{title:"前端eslint的格式化解决方案",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["eslint","vue-cli"],categories:["tools"],readingShow:"top"},regularPath:"/tools/eslint.html",relativePath:"tools/eslint.md",key:"v-7b6d1e4d",path:"/tools/eslint.html",headers:[{level:2,title:"开始",slug:"开始",normalizedTitle:"开始",charIndex:2},{level:2,title:"rules",slug:"rules",normalizedTitle:"rules",charIndex:632},{level:2,title:"代码注释方式",slug:"代码注释方式",normalizedTitle:"代码注释方式",charIndex:852},{level:2,title:"eslintignore",slug:"eslintignore",normalizedTitle:"eslintignore",charIndex:1271},{level:2,title:"配置文件",slug:"配置文件",normalizedTitle:"配置文件",charIndex:508},{level:2,title:"example",slug:"example",normalizedTitle:"example",charIndex:1569},{level:2,title:"配置示例",slug:"配置示例",normalizedTitle:"配置示例",charIndex:3267}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"开始 rules 代码注释方式 eslintignore 配置文件 example 配置示例",content:'# 开始\n * eslint 中文网\n   \n   \n * Eslint 从入门到放弃\n   \n   \n * ESLint 里的规则教会我，无规矩 不编程\n   \n   \n * 【AST 篇】教你如何编写 Eslint 插件\n   \n   \n * install npm install -g eslint\n   \n   \n * 查看帮助 eslint -h\n   \n   \n * 初始化 eslint --init\n   \n   \n * 运行 eslint\n   \n   \n\neslint [options] [file|dir|glob]*\n  # file : eslint file1.js file2.js\n  # dir :  eslint lib/**\n  # glob : eslint "lib/**"\n\n\n1\n2\n3\n4\n * 修复会保存到文件系统中 eslnt *.js --fix\n   \n   \n * 修复不会保存到文件系统中 eslint *.js --fix-dry-run\n   \n   \n * 文件后缀 eslint . --ext .js and .js2\n   \n   \n * 配置文件 eslint -c ~/my-eslint.json file.js\n   \n   \n * 禁用.eslintrc.*和package.json文件中的配置 eslint --no-eslintrc file.js\n   \n   \n\n# rules\n * 开启规则和发生错误时报告的等级\n   \n   \n * 规则的错误等级有三种：0 1 2 | off warn error\n   \n   \n * "off" 或 0 关闭规则\n   \n   \n * "warn" 或 1 开启规则，使用警告级别的错误：warn (不会导致程序退出)\n   \n   \n * "error" 或 2 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)\n   \n   \n\n# 代码注释方式\n# 例：忽略 no-undef 检查 在js文件中写入如下\n/* eslint-disable no-undef */\n\n# 例：设置 ===检查 在js文件中写入如下\n/* eslint eqeqeq: off */\n/* eslint eqeqeq: 0 */\n\n# 例：用注释指定全局变量 在js文件中写入如下\n/* global var 1, var2 */\n/* globael var1:false, var2:false */\n\n# 行内禁用\nconsole.log // eslint-disable-line\n\n# 代码块禁用\n/* eslint-disable */\nexport function func(a,b) {\n  return a+b\n}\n/* eslint-enable */\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# eslintignore\n * .eslintignore文件来避免检测处理\n\n$ touch .eslintignore && vi .eslintignore\n$ node_modules/**\n\n\n1\n2\n# 配置文件\n * 如果同一个目录下有多个配置文件，ESLint 只会使用一个。优先级顺序如下:\n\n# 从上往下依次递减\n1. .eslintrc.js\n2. .eslintrc.yaml\n3. .eslintrc.yml\n4. .eslintrc.json\n5. package.json 创建一个 eslintConfig属性，在那里定义你的配置\n\n\n1\n2\n3\n4\n5\n6\n# example\n * .eslintrc.js\n\nmodule.exports = {\n  root: true,\n  extends: ["standard", "prettier"],\n  env: {\n    es6: true,\n    browser: true,\n    node: true\n  },\n  plugins: ["prettier"],\n  parserOptions: {\n    parser: "babel-eslint",\n    sourceType: "module",\n    ecmaFeatures: {\n      jsx: true\n    }\n  },\n  rules: {\n    "prettier/prettier": "error"\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * .eslintignore\n\n.vscode\n.git\nnode_modules\n\n\n1\n2\n3\n * webpack.config.js\n\nconst path = require(\'path\')\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(js|vue)$/,\n    \tloader: \'eslint-loader\',\n    \tenforce: \'pre\',\n    \tinclude: [path.join(__dirname, \'src\')],\n    \toptions: {\n          fix: true\n    \t}\n      }\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * vue-cli3 eslint\n\nmodule.exports = {\n  root: true,\n  parserOptions: {\n    parser: "babel-eslint"\n  },\n  env: {\n    browser: true,\n    es6: true\n  },\n  extends: [\n    // https://github.com/standard/standard/blob/master/docs/RULES-en.md\n    "standard",\n    // https://github.com/vuejs/eslint-plugin-vue#priority-a-essential-error-prevention\n    // consider switching to `plugin:vue/strongly-recommended` or `plugin:vue/recommended` for stricter rules.\n    "plugin:vue/essential",\n    "plugin:prettier/recommended"\n  ],\n  // required to lint *.vue files\n  plugins: ["vue"],\n  // add your custom rules here\n  rules: {\n    "prettier/prettier": "error",\n    // allow async-await\n    "generator-star-spacing": "off",\n    // allow debugger during development\n    "no-debugger": process.env.NODE_ENV === "production" ? "error" : "off"\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 配置示例\n// 作者：chenhongdong\n// 链接：https://juejin.im/post/5afede99f265da0b82630af8\n// .eslintrc.js\nmodule.exports = {\n  // 解析ES6\n  parser: "babel-eslint",\n  parserOptions: {\n    // 启用ES8语法支持\n    ecmaVersion: 2017,\n    // module表示ECMAScript模块\n    sourceType: "module",\n    // 使用额外的语言特性\n    ecmaFeatures: {\n      experimentalObjectRestSpread: true,\n      jsx: true,\n      modules: true\n    }\n  },\n  // 这些环境并不是互斥的，所以你可以同时定义多个\n  env: {\n    browser: true,\n    jquery: true,\n    node: true,\n    commonjs: true,\n    es6: true\n  },\n  root: true,\n  // 当访问当前源文件内未定义的变量时，no-undef 规则将发出警告\n  // 所以需要定义这些额外的全局变量\n  globals: {\n    OnlySVG: true,\n    monitor: true,\n    CanvasRender: true,\n    Vue: true,\n    VueRouter: true\n  },\n  rules: {\n    // 设置了 setter ，必须相应设置 getter ，反之不必须\n    "accessor-pairs": 2,\n\n    // 数组方括号前后的换行符使用规则\n    // @off 不关心\n    "array-bracket-newline": 0,\n\n    // 数组方括号前后的空格使用规则\n    // @off 不关心\n    "array-bracket-spacing": 0,\n\n    // 数组的 map、filter、sort 等方法，回调函数必须有返回值\n    "array-callback-return": 2,\n\n    // 每个数组项是否独占一行\n    // @off 不关心\n    "array-element-newline": 0,\n\n    // 箭头函数的书写规则\n    // @off 不限制\n    "arrow-body-style": 0,\n\n    // 箭头函数的圆括号使用规则\n    // @off 不限制\n    "arrow-parens": 0,\n\n    // 箭头函数的空格使用规则\n    // @off 不限制\n    "arrow-spacing": 0,\n\n    // 不能在块外使用块作用域内 var 定义的变量\n    "block-scoped-var": 2,\n\n    // 代码块花括号前后的空格规则\n    // @off 不关心\n    "block-spacing": 0,\n\n    // if else 的花括号换行规则\n    // @off 不关心\n    "brace-style": 0,\n\n    // callback 之后必须立即 return\n    // @off 没必要\n    "callback-return": 0,\n\n    // 变量名必须使用驼峰式\n    // @off 暂不限制\n    camelcase: 0,\n\n    // 注释的首字母应该大写\n    // @off 没必要\n    "capitalized-comments": 0,\n\n    // class 的非静态方法必须包含 this 关键字\n    "class-methods-use-this": 2,\n\n    // 对象的最后一项后面是否写逗号\n    // @off 此项目不关心\n    // @fixable 对于 PC 项目考虑兼容性时需要设置\n    "comma-dangle": 0,\n\n    // 逗号前后是否有空格\n    // @off 不关心\n    "comma-spacing": 0,\n\n    // 逗号写在行首还是行尾\n    // @off 不关心\n    "comma-style": 0,\n\n    // 禁止函数 if ... else if ... else 的复杂度超过 20\n    complexity: 2,\n\n    // 使用方括号访问对象属性时，方括号前后的空格规则\n    // @off 不关心\n    "computed-property-spacing": 0,\n\n    // 禁止函数在不同条件下返回不同类型的值\n    // @off 有时候会希望通过参数获取不同类型的返回值\n    "consistent-return": 0,\n\n    // this 的别名规则，只允许 self 或 that\n    "consistent-this": [2, "self", "that"],\n\n    // 构造函数中必须调用 super\n    // @off 没必要\n    "constructor-super": 0,\n\n    // if 后必须包含 { ，单行 if 除外\n    curly: [2, "multi-line", "consistent"],\n\n    // switch 语句必须包含 default\n    "default-case": 2,\n\n    // 链式操作时，点的位置，是在上一行结尾还是下一行开头\n    // @off 不关心\n    "dot-location": 0,\n\n    // 文件最后必须有空行\n    // @off 不限制\n    "eol-last": 0,\n\n    // 必须使用 === 和 !== ，和 null 对比时除外\n    eqeqeq: [2, "always", { null: "ignore" }],\n\n    // for 循环不得因方向错误造成死循环\n    "for-direction": 2,\n\n    // 执行函数的圆括号前后的空格规则\n    // @off 不关心\n    "func-call-spacing": 0,\n\n    // 把函数赋给变量或对象属性时，函数名和变量名或对象属性名必须一致\n    // @off 不限制\n    "func-name-matching": 0,\n\n    // 不允许匿名函数\n    // @off 不限制\n    "func-names": 0,\n\n    // 必须只使用函数申明或只使用函数表达式\n    // @off 不限制\n    "func-style": 0,\n\n    // generator 的 * 前后空格使用规则\n    // @off 不限制\n    "generator-star-spacing": 0,\n\n    // getter 必须有返回值，允许返回 undefined\n    "getter-return": [2, { allowImplicit: true }],\n\n    // require 必须在全局作用域下\n    // @off 条件加载很常见\n    "global-require": 0,\n\n    // for in 时需检测 hasOwnProperty\n    "guard-for-in": 2,\n\n    // callback 中的 err、error 参数和变量必须被处理\n    "handle-callback-err": 2,\n\n    // id 黑名单\n    // @off 暂时没有\n    "id-blacklist": 0,\n\n    // 变量名长度限制\n    // @off 长度不是重点，清晰易读才是关键\n    "id-length": 0,\n\n    // 限制变量名必须匹配指定的正则表达式\n    // @off 没必要限制变量名\n    "id-match": 0,\n\n    // 缩进使用 tab 还是空格\n    // @off 不关心\n    indent: 0,\n\n    // 变量必须在定义的时候赋值\n    // @off 先定义后赋值很常见\n    "init-declarations": 0,\n\n    // jsx 语法中，属性的值必须使用双引号\n    "jsx-quotes": [2, "prefer-double"],\n\n    // 对象字面量冒号前后的空格使用规则\n    // @off 不关心\n    "key-spacing": 0,\n\n    // 关键字前后必须有空格\n    "keyword-spacing": 2,\n\n    // 换行符使用规则\n    // @off 不关心\n    "linebreak-style": 0,\n\n    // 单行注释必须写在前一行还是行尾\n    // @off 不限制\n    "line-comment-position": 0,\n\n    // 注释前后是否要空一行\n    // @off 不限制\n    "lines-around-comment": 0,\n\n    // 最大块嵌套深度为 5 层\n    "max-depth": [2, 5],\n\n    // 限制单行代码的长度\n    // @off 不限制\n    "max-len": 0,\n\n    // 限制单个文件最大行数\n    // @off 不限制\n    "max-lines": 0,\n\n    // 最大回调深度为 3 层\n    "max-nested-callbacks": [2, 3],\n\n    // 函数的形参不能多于8个\n    "max-params": [2, 8],\n\n    // 限制一行中的语句数量\n    // @off 没必要限制\n    "max-statements-per-line": 0,\n\n    // 限制函数块中的语句数量\n    // @off 没必要限制\n    "max-statements": 0,\n\n    // 三元表达式的换行规则\n    // @off 不限制\n    "multiline-ternary": 0,\n\n    // new关键字后类名应首字母大写\n    "new-cap": [\n      2,\n      {\n        capIsNew: false // 允许大写开头的函数直接执行\n      }\n    ],\n\n    // new 关键字后类应包含圆括号\n    "new-parens": 2,\n\n    // 链式调用是否要换行\n    // @off 不限制\n    "newline-per-chained-call": 0,\n\n    // 禁止 alert，提醒开发者，上线时要去掉\n    "no-alert": 1,\n\n    // 禁止使用 Array 构造函数，使用 Array(num) 直接创建长度为 num 的数组时可以\n    "no-array-constructor": 2,\n\n    // 禁止将 await 写在循环里\n    "no-await-in-loop": 2,\n\n    // 禁止位运算\n    // @off 不限制\n    "no-bitwise": 0,\n\n    // 禁止在 Node.js 中直接调用 Buffer 构造函数\n    "no-buffer-constructor": 2,\n\n    // 禁止使用 arguments.caller 和 arguments.callee\n    "no-caller": 2,\n\n    // switch的条件中出现 var、let、const、function、class 等关键字，必须使用花括号把内容括起来\n    "no-case-declarations": 2,\n\n    // catch中不得使用已定义的变量名\n    "no-catch-shadow": 2,\n\n    // class定义的类名不得与其它变量重名\n    "no-class-assign": 2,\n\n    // 禁止与 -0 做比较\n    "no-compare-neg-zero": 2,\n\n    // 禁止在 if、for、while 中出现赋值语句，除非用圆括号括起来\n    "no-cond-assign": [2, "except-parens"],\n\n    // 禁止出现难以理解的箭头函数，除非用圆括号括起来\n    "no-confusing-arrow": [2, { allowParens: true }],\n\n    // 禁止使用 console，提醒开发者，上线时要去掉\n    "no-console": 1,\n\n    // 禁止使用常量作为判断条件\n    "no-constant-condition": [2, { checkLoops: false }],\n\n    // 禁止对 const 定义重新赋值\n    "no-const-assign": 2,\n\n    // 禁止 continue\n    // @off 很常用\n    "no-continue": 0,\n\n    // 禁止正则表达式中出现 Ctrl 键的 ASCII 表示，即/\\x1f/\n    "no-control-regex": 2,\n\n    // 禁止 debugger 语句，提醒开发者，上线时要去掉\n    "no-debugger": 1,\n\n    // 禁止对变量使用 delete 关键字，删除对象的属性不受限制\n    "no-delete-var": 2,\n\n    // 禁止在正则表达式中出现形似除法操作符的开头，如 let a = /=foo/\n    // @off 有代码高亮的话，在阅读这种代码时，也完全不会产生歧义或理解上的困难\n    "no-div-regex": 0,\n\n    // 函数参数禁止重名\n    "no-dupe-args": 2,\n\n    // 禁止对象出现重名键值\n    "no-dupe-keys": 2,\n\n    // 类方法禁止重名\n    "no-dupe-class-members": 2,\n\n    // 禁止 switch 中出现相同的 case\n    "no-duplicate-case": 2,\n\n    // 禁止重复 import\n    "no-duplicate-imports": 2,\n\n    // 禁止出现 if (cond) { return a } else { return b }，应该写为 if (cond) { return a } return b\n    // @off 有时前一种写法更清晰易懂\n    "no-else-return": 0,\n\n    // 正则表达式中禁止出现空的字符集[]\n    "no-empty-character-class": 2,\n\n    // 禁止空的 function\n    // 包含注释的情况下允许\n    "no-empty-function": 2,\n\n    // 禁止解构中出现空 {} 或 []\n    "no-empty-pattern": 2,\n\n    // 禁止出现空代码块\n    "no-empty": [2, { allowEmptyCatch: true }],\n\n    // 禁止 == 和 != 与 null 做比较，必须用 === 或 !==\n    // @off 非严格相等可以同时判断 null 和 undefined\n    "no-eq-null": 0,\n\n    // 禁止使用 eval\n    "no-eval": 2,\n\n    // catch 定义的参数禁止赋值\n    "no-ex-assign": 2,\n\n    // 禁止扩展原生对象\n    "no-extend-native": [2, { exceptions: ["Array", "Object"] }],\n\n    // 禁止额外的 bind\n    "no-extra-bind": 2,\n\n    // 禁止额外的布尔值转换\n    "no-extra-boolean-cast": 2,\n\n    // 禁止额外的 label\n    "no-extra-label": 2,\n\n    // 禁止额外的括号，仅针对函数体\n    "no-extra-parens": [2, "functions"],\n\n    // 禁止额外的分号\n    "no-extra-semi": 2,\n\n    // 每一个 switch 的 case 都需要有 break, return 或 throw\n    // 包含注释的情况下允许\n    "no-fallthrough": [2, { commentPattern: "." }],\n\n    // 不允许使用 2. 或 .5 来表示数字，需要用 2、2.0、0.5 的格式\n    "no-floating-decimal": 2,\n\n    // 禁止对函数声明重新赋值\n    "no-func-assign": 2,\n\n    // 禁止对全局变量赋值\n    "no-global-assign": 2,\n\n    // 禁止使用隐式类型转换\n    "no-implicit-coercion": [\n      2,\n      {\n        allow: ["+", "!!"] // 允许 + 转数值 \'\' + 转字符串和 !! 转布尔值\n      }\n    ],\n\n    // 禁止在 setTimeout 和 setInterval 中传入字符串，因会触发隐式 eval\n    "no-implied-eval": 2,\n\n    // 禁止隐式定义全局变量\n    "no-implicit-globals": 2,\n\n    // 禁止行内注释\n    // @off 很常用\n    "no-inline-comments": 0,\n\n    // 禁止在块作用域内使用 var 或函数声明\n    "no-inner-declarations": [2, "both"],\n\n    // 禁止使用非法的正则表达式\n    "no-invalid-regexp": 2,\n\n    // 禁止在类之外的地方使用 this\n    // @off this 的使用很灵活，事件回调中可以表示当前元素，函数也可以先用 this，等以后被调用的时候再 call\n    "no-invalid-this": 0,\n\n    // 禁止使用不规范空格\n    "no-irregular-whitespace": [\n      2,\n      {\n        skipStrings: true, // 允许在字符串中使用\n        skipComments: true, // 允许在注释中使用\n        skipRegExps: true, // 允许在正则表达式中使用\n        skipTemplates: true // 允许在模板字符串中使用\n      }\n    ],\n\n    // 禁止使用 __iterator__\n    "no-iterator": 2,\n\n    // label 不得与已定义的变量重名\n    "no-label-var": 2,\n\n    // 禁止使用 label\n    // @off 禁止了将很难 break 多重循环和多重 switch\n    "no-labels": 0,\n\n    // 禁止使用无效的块作用域\n    "no-lone-blocks": 2,\n\n    // 禁止 else 中只有一个单独的 if\n    // @off 单独的 if 可以把逻辑表达的更清楚\n    "no-lonely-if": 0,\n\n    // 禁止 for (var i) { function() { use i } }，使用 let 则可以\n    "no-loop-func": 2,\n\n    // 禁止魔法数字\n    "no-magic-numbers": 0,\n\n    // 禁止使用混合的逻辑判断，必须把不同的逻辑用圆括号括起来\n    "no-mixed-operators": [\n      2,\n      {\n        groups: [["&&", "||"]]\n      }\n    ],\n\n    // 相同类型的 require 必须放在一起\n    // @off 不限制\n    "no-mixed-requires": 0,\n\n    // 禁止混用空格和 tab 来做缩进，必须统一\n    "no-mixed-spaces-and-tabs": 2,\n\n    // 禁止连等赋值\n    "no-multi-assign": 2,\n\n    // 禁止使用连续的空格\n    "no-multi-spaces": 2,\n\n    // 禁止使用 \\ 来定义多行字符串，统一使用模板字符串来做\n    "no-multi-str": 2,\n\n    // 连续空行的数量限制\n    "no-multiple-empty-lines": [\n      2,\n      {\n        max: 3, // 文件内最多连续 3 个\n        maxEOF: 1, // 文件末尾最多连续 1 个\n        maxBOF: 1 // 文件头最多连续 1 个\n      }\n    ],\n\n    // 禁止 if 中出现否定表达式 !==\n    // @off 否定的表达式可以把逻辑表达的更清楚\n    "no-negated-condition": 0,\n\n    // 禁止嵌套的三元表达式\n    // @off 没有必要限制\n    "no-nested-ternary": 0,\n\n    // 禁止 new Function\n    // @off 有时会用它来解析非标准格式的 JSON 数据\n    "no-new-func": 0,\n\n    // 禁止使用 new Object\n    "no-new-object": 2,\n\n    // 禁止使用 new require\n    "no-new-require": 2,\n\n    // 禁止使用 new Symbol\n    "no-new-symbol": 2,\n\n    // 禁止 new Boolean、Number 或 String\n    "no-new-wrappers": 2,\n\n    // 禁止 new 一个类而不存储该实例\n    "no-new": 2,\n\n    // 禁止把原生对象 Math、JSON、Reflect 当函数使用\n    "no-obj-calls": 2,\n\n    // 禁止使用八进制转义符\n    "no-octal-escape": 2,\n\n    // 禁止使用0开头的数字表示八进制\n    "no-octal": 2,\n\n    // 禁止使用 __dirname + \'file\' 的形式拼接路径，应该使用 path.join 或 path.resolve 来代替\n    "no-path-concat": 2,\n\n    // 禁止对函数的参数重新赋值\n    "no-param-reassign": 2,\n\n    // 禁止 ++ 和 --\n    // @off 很常用\n    "no-plusplus": 0,\n\n    // 禁止使用 process.env.NODE_ENV\n    // @off 使用很常见\n    "no-process-env": 0,\n\n    // 禁止使用 process.exit(0)\n    // @off 使用很常见\n    "no-process-exit": 0,\n\n    // 禁止使用 hasOwnProperty, isPrototypeOf 或 propertyIsEnumerable\n    // @off 与 guard-for-in 规则冲突，且没有必要\n    "no-prototype-builtins": 0,\n\n    // 禁止使用 __proto__\n    "no-proto": 2,\n\n    // 禁止重复声明\n    "no-redeclare": 2,\n\n    // 禁止在正则表达式中出现连续空格\n    "no-regex-spaces": 2,\n\n    // 禁止特定的全局变量\n    // @off 暂时没有\n    "no-restricted-globals": 0,\n\n    // 禁止 import 特定的模块\n    // @off 暂时没有\n    "no-restricted-imports": 0,\n\n    // 禁止使用特定的模块\n    // @off 暂时没有\n    "no-restricted-modules": "off",\n\n    // 禁止特定的对象属性\n    // @off 暂时没有\n    "no-restricted-properties": 0,\n\n    // 禁止使用特定的语法\n    // @off 暂时没有\n    "no-restricted-syntax": 0,\n\n    // 禁止在return中赋值\n    "no-return-assign": 2,\n\n    // 禁止在 return 中使用 await\n    "no-return-await": 2,\n\n    // 禁止 location.href = \'javascript:void\'\n    "no-script-url": 2,\n\n    // 禁止将自己赋值给自己\n    "no-self-assign": 2,\n\n    // 禁止自己与自己作比较\n    "no-self-compare": 2,\n\n    // 禁止逗号操作符\n    "no-sequences": 2,\n\n    // 禁止使用保留字作为变量名\n    "no-shadow-restricted-names": 2,\n\n    // 禁止在嵌套作用域中出现重名的定义，如 let a; function b() { let a }\n    "no-shadow": 2,\n\n    // 禁止数组中出现连续逗号\n    "no-sparse-arrays": 2,\n\n    // 禁止使用 node 中的同步的方法，比如 fs.readFileSync\n    // @off 使用很常见\n    "no-sync": 0,\n\n    // 禁止使用 tabs\n    // @off 不限制\n    "no-tabs": 0,\n\n    // 禁止普通字符串中出现模板字符串语法\n    "no-template-curly-in-string": 2,\n\n    // 禁止三元表达式\n    // @off 很常用\n    "no-ternary": 0,\n\n    // 禁止在构造函数的 super 之前使用 this\n    "no-this-before-super": 2,\n\n    // 禁止 throw 字面量，必须 throw 一个 Error 对象\n    "no-throw-literal": 2,\n\n    // 禁止行尾空格\n    "no-trailing-spaces": [\n      2,\n      {\n        skipBlankLines: true, // 不检查空行\n        ignoreComments: true // 不检查注释\n      }\n    ],\n\n    // 禁止将 undefined 赋值给变量\n    "no-undef-init": 2,\n\n    // 禁止访问未定义的变量或方法\n    "no-undef": 2,\n\n    // 禁止使用 undefined，如需判断一个变量是否为 undefined，请使用 typeof a === \'undefined\'\n    "no-undefined": 2,\n\n    // 禁止变量名中使用下划线\n    // @off 暂不限制\n    "no-underscore-dangle": 0,\n\n    // 禁止出现难以理解的多行代码\n    "no-unexpected-multiline": 2,\n\n    // 循环体内必须对循环条件进行修改\n    "no-unmodified-loop-condition": 2,\n\n    // 禁止不必要的三元表达式\n    "no-unneeded-ternary": [2, { defaultAssignment: false }],\n\n    // 禁止出现不可到达的代码，如在 return、throw 之后的代码\n    "no-unreachable": 2,\n\n    // 禁止在finally块中出现 return、throw、break、continue\n    "no-unsafe-finally": 2,\n\n    // 禁止出现不安全的否定，如 for (!key in obj} {}，应该写为 for (!(key in obj)} {}\n    "no-unsafe-negation": 2,\n\n    // 禁止出现无用的表达式\n    "no-unused-expressions": [\n      2,\n      {\n        allowShortCircuit: true, // 允许使用 a() || b 或 a && b()\n        allowTernary: true, // 允许在表达式中使用三元运算符\n        allowTaggedTemplates: true // 允许标记模板字符串\n      }\n    ],\n\n    // 禁止定义不使用的 label\n    "no-unused-labels": 2,\n\n    // 禁止定义不使用的变量\n    "no-unused-vars": [\n      2,\n      {\n        vars: "all", // 变量定义必须被使用\n        args: "none", // 对于函数形参不检测\n        ignoreRestSiblings: true, // 忽略剩余子项 fn(...args)，{a, b, ...coords}\n        caughtErrors: "none" // 忽略 catch 语句的参数使用\n      }\n    ],\n\n    // 禁止在变量被定义之前使用它\n    "no-use-before-define": [\n      2,\n      {\n        functions: false, // 允许函数在定义之前被调用\n        classes: false // 允许类在定义之前被引用\n      }\n    ],\n\n    // 禁止不必要的 call 和 apply\n    "no-useless-call": 2,\n\n    // 禁止使用不必要计算的key，如 var a = { [\'0\']: 0 }\n    "no-useless-computed-key": 2,\n\n    // 禁止不必要的字符串拼接\n    "no-useless-concat": 2,\n\n    // 禁止无用的构造函数\n    "no-useless-constructor": 2,\n\n    // 禁止无用的转义\n    "no-useless-escape": 2,\n\n    // 禁止无效的重命名，如 import {a as a} from xxx\n    "no-useless-rename": 2,\n\n    // 禁止没有必要的 return\n    // @off 没有必要限制\n    "no-useless-return": 0,\n\n    // 禁止使用 var，必须用 let 或 const\n    "no-var": 2,\n\n    // 禁止使用void\n    "no-void": 2,\n\n    // 禁止注释中出现 TODO 或 FIXME，用这个来提醒开发者，写了 TODO 就一定要做完\n    "no-warning-comments": 1,\n\n    // 禁止属性前出现空格，如 foo. bar()\n    "no-whitespace-before-property": 2,\n\n    // 禁止 with\n    "no-with": 2,\n\n    // 禁止 if 语句在没有花括号的情况下换行\n    "nonblock-statement-body-position": 2,\n\n    // 定义对象的花括号前后是否要加空行\n    // @off 不关心\n    "object-curly-newline": 0,\n\n    // 定义对象的花括号前后是否要加空格\n    // @off 不关心\n    "object-curly-spacing": 0,\n\n    // 对象每个属性必须独占一行\n    // @off 不限制\n    "object-property-newline": 0,\n\n    // obj = { a: a } 必须转换成 obj = { a }\n    // @off 没必要\n    "object-shorthand": 0,\n\n    // 每个变量声明必须独占一行\n    // @off 有 one-var 就不需要此规则了\n    "one-var-declaration-per-line": 0,\n\n    // 是否允许使用逗号一次声明多个变量\n    "one-var": [\n      2,\n      {\n        const: "never" // 所有 const 声明必须独占一行，不允许用逗号定义多个\n      }\n    ],\n\n    // 必须使用 x = x + y 而不是 x += y\n    // @off 没必要限制\n    "operator-assignment": 0,\n\n    // 断行时操作符位于行首还是行尾\n    // @off 不关心\n    "operator-linebreak": 0,\n\n    // 代码块首尾必须要空行\n    // @off 没必要限制\n    "padded-blocks": 0,\n\n    // 限制语句之间的空行规则，比如变量定义完之后必须要空行\n    // @off 没必要限制\n    "padding-line-between-statements": 0,\n\n    // 必须使用箭头函数作为回调\n    // @off 没必要\n    "prefer-arrow-callback": 0,\n\n    // 声明后不再修改的变量必须使用 const\n    // @off 没必要\n    "prefer-const": 0,\n\n    // 必须使用解构\n    // @off 没必要\n    "prefer-destructuring": 0,\n\n    // 必须使用 0b11111011 而不是 parseInt(\'111110111\', 2)\n    // @off 没必要\n    "prefer-numeric-literals": 0,\n\n    // promise 的 reject 中必须传入 Error 对象，而不允许使用字面量\n    "prefer-promise-reject-errors": 2,\n\n    // 必须使用解构 ...args 来代替 arguments\n    "prefer-rest-params": 2,\n\n    // 必须使用 func(...args) 来代替 func.apply(args)\n    // @off 没必要\n    "prefer-spread": 0,\n\n    // 必须使用模板字符串来代替字符串拼接\n    // @off 不限制\n    "prefer-template": 0,\n\n    // 字符串必须使用单引号\n    quotes: [\n      2,\n      "single",\n      {\n        avoidEscape: true, // 允许包含单引号的字符串使用双引号\n        allowTemplateLiterals: true // 允许使用模板字符串\n      }\n    ],\n\n    // 对象字面量的键名禁止用引号括起来\n    // @off 没必要限制\n    "quote-props": 0,\n\n    // parseInt方法必须传进制参数\n    radix: 2,\n\n    // async 函数中必须存在 await 语句\n    // @off async function 中没有 await 的写法很常见，比如 koa 的示例中就有这种用法\n    "require-await": 0,\n\n    // 必须使用 jsdoc 风格的注释\n    // @off 暂不考虑开启\n    "require-jsdoc": 0,\n\n    // generator 函数内必须有 yield\n    "require-yield": 2,\n\n    // ...后面不允许有空格\n    "rest-spread-spacing": [2, "never"],\n\n    // 分号前后的空格规则\n    // @off 不限制\n    "semi-spacing": 0,\n\n    // 禁止行首出现分号\n    "semi-style": [2, "last"],\n\n    // 行尾必须使用分号结束\n    semi: 2,\n\n    // imports 必须排好序\n    // @off 没必要限制\n    "sort-imports": 0,\n\n    // 对象字面量的键名必须排好序\n    // @off 没必要限制\n    "sort-keys": 0,\n\n    // 变量声明必须排好序\n    // @off 没必要限制\n    "sort-vars": 0,\n\n    // function 等的花括号之前是否使用空格\n    // @off 不关心\n    "space-before-blocks": 0,\n\n    // function 的圆括号之前是否使用空格\n    // @off 不关心\n    "space-before-function-paren": 0,\n\n    // 圆括号内的空格使用规则\n    // @off 不关心\n    "space-in-parens": 0,\n\n    // 操作符前后要加空格\n    "space-infix-ops": 2,\n\n    // new, delete, typeof, void, yield 等表达式前后必须有空格，-, +, --, ++, !, !! 等表达式前后不许有空格\n    "space-unary-ops": [\n      2,\n      {\n        words: true,\n        nonwords: false\n      }\n    ],\n\n    // 注释的斜线和星号后要加空格\n    "spaced-comment": [\n      2,\n      "always",\n      {\n        block: {\n          exceptions: ["*"],\n          balanced: true\n        }\n      }\n    ],\n\n    // 禁用严格模式，禁止在任何地方出现 \'use strict\'\n    strict: [2, "never"],\n\n    // switch 中冒号前后的空格规则\n    // @off 不关心\n    "switch-colon-spacing": 0,\n\n    // 创建 Symbol 的时候必须传入描述\n    "symbol-description": 2,\n\n    // 模板字符串 ${} 前后的空格规则\n    // @off 不限制\n    "template-curly-spacing": 0,\n\n    // 模板字符串前后的空格规则\n    // @off 不限制\n    "template-tag-spacing": 0,\n\n    // 所有文件头禁止出现 BOM\n    "unicode-bom": 2,\n\n    // 禁止直接对 NaN 进行判断，必须使用 isNaN\n    "use-isnan": 2,\n\n    // 注释必须符合 jsdoc 的规范\n    // @off 暂不考虑开启\n    "valid-jsdoc": 0,\n\n    // typeof 判断条件只能是 "undefined", "object", "boolean", "number", "string", "function" 或 "symbol"\n    "valid-typeof": 2,\n\n    // var 必须在作用域的最前面\n    // @off var 不在最前面也是很常见的用法\n    "vars-on-top": 0,\n\n    // 自执行函数必须使用圆括号括起来，如 (function(){do something...})()\n    "wrap-iife": [2, "inside"],\n\n    // 正则表达式必须用圆括号括起来\n    // @off 不限制\n    "wrap-regex": 0,\n\n    // yield 的 * 前后空格规则\n    // @off 不限制\n    "yield-star-spacing": 0,\n\n    // 禁止Yoda格式的判断条件，如 if (true === a)，应使用 if (a === true)\n    yoda: 2\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956',normalizedContent:'# 开始\n * eslint 中文网\n   \n   \n * eslint 从入门到放弃\n   \n   \n * eslint 里的规则教会我，无规矩 不编程\n   \n   \n * 【ast 篇】教你如何编写 eslint 插件\n   \n   \n * install npm install -g eslint\n   \n   \n * 查看帮助 eslint -h\n   \n   \n * 初始化 eslint --init\n   \n   \n * 运行 eslint\n   \n   \n\neslint [options] [file|dir|glob]*\n  # file : eslint file1.js file2.js\n  # dir :  eslint lib/**\n  # glob : eslint "lib/**"\n\n\n1\n2\n3\n4\n * 修复会保存到文件系统中 eslnt *.js --fix\n   \n   \n * 修复不会保存到文件系统中 eslint *.js --fix-dry-run\n   \n   \n * 文件后缀 eslint . --ext .js and .js2\n   \n   \n * 配置文件 eslint -c ~/my-eslint.json file.js\n   \n   \n * 禁用.eslintrc.*和package.json文件中的配置 eslint --no-eslintrc file.js\n   \n   \n\n# rules\n * 开启规则和发生错误时报告的等级\n   \n   \n * 规则的错误等级有三种：0 1 2 | off warn error\n   \n   \n * "off" 或 0 关闭规则\n   \n   \n * "warn" 或 1 开启规则，使用警告级别的错误：warn (不会导致程序退出)\n   \n   \n * "error" 或 2 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)\n   \n   \n\n# 代码注释方式\n# 例：忽略 no-undef 检查 在js文件中写入如下\n/* eslint-disable no-undef */\n\n# 例：设置 ===检查 在js文件中写入如下\n/* eslint eqeqeq: off */\n/* eslint eqeqeq: 0 */\n\n# 例：用注释指定全局变量 在js文件中写入如下\n/* global var 1, var2 */\n/* globael var1:false, var2:false */\n\n# 行内禁用\nconsole.log // eslint-disable-line\n\n# 代码块禁用\n/* eslint-disable */\nexport function func(a,b) {\n  return a+b\n}\n/* eslint-enable */\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# eslintignore\n * .eslintignore文件来避免检测处理\n\n$ touch .eslintignore && vi .eslintignore\n$ node_modules/**\n\n\n1\n2\n# 配置文件\n * 如果同一个目录下有多个配置文件，eslint 只会使用一个。优先级顺序如下:\n\n# 从上往下依次递减\n1. .eslintrc.js\n2. .eslintrc.yaml\n3. .eslintrc.yml\n4. .eslintrc.json\n5. package.json 创建一个 eslintconfig属性，在那里定义你的配置\n\n\n1\n2\n3\n4\n5\n6\n# example\n * .eslintrc.js\n\nmodule.exports = {\n  root: true,\n  extends: ["standard", "prettier"],\n  env: {\n    es6: true,\n    browser: true,\n    node: true\n  },\n  plugins: ["prettier"],\n  parseroptions: {\n    parser: "babel-eslint",\n    sourcetype: "module",\n    ecmafeatures: {\n      jsx: true\n    }\n  },\n  rules: {\n    "prettier/prettier": "error"\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * .eslintignore\n\n.vscode\n.git\nnode_modules\n\n\n1\n2\n3\n * webpack.config.js\n\nconst path = require(\'path\')\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(js|vue)$/,\n    \tloader: \'eslint-loader\',\n    \tenforce: \'pre\',\n    \tinclude: [path.join(__dirname, \'src\')],\n    \toptions: {\n          fix: true\n    \t}\n      }\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * vue-cli3 eslint\n\nmodule.exports = {\n  root: true,\n  parseroptions: {\n    parser: "babel-eslint"\n  },\n  env: {\n    browser: true,\n    es6: true\n  },\n  extends: [\n    // https://github.com/standard/standard/blob/master/docs/rules-en.md\n    "standard",\n    // https://github.com/vuejs/eslint-plugin-vue#priority-a-essential-error-prevention\n    // consider switching to `plugin:vue/strongly-recommended` or `plugin:vue/recommended` for stricter rules.\n    "plugin:vue/essential",\n    "plugin:prettier/recommended"\n  ],\n  // required to lint *.vue files\n  plugins: ["vue"],\n  // add your custom rules here\n  rules: {\n    "prettier/prettier": "error",\n    // allow async-await\n    "generator-star-spacing": "off",\n    // allow debugger during development\n    "no-debugger": process.env.node_env === "production" ? "error" : "off"\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 配置示例\n// 作者：chenhongdong\n// 链接：https://juejin.im/post/5afede99f265da0b82630af8\n// .eslintrc.js\nmodule.exports = {\n  // 解析es6\n  parser: "babel-eslint",\n  parseroptions: {\n    // 启用es8语法支持\n    ecmaversion: 2017,\n    // module表示ecmascript模块\n    sourcetype: "module",\n    // 使用额外的语言特性\n    ecmafeatures: {\n      experimentalobjectrestspread: true,\n      jsx: true,\n      modules: true\n    }\n  },\n  // 这些环境并不是互斥的，所以你可以同时定义多个\n  env: {\n    browser: true,\n    jquery: true,\n    node: true,\n    commonjs: true,\n    es6: true\n  },\n  root: true,\n  // 当访问当前源文件内未定义的变量时，no-undef 规则将发出警告\n  // 所以需要定义这些额外的全局变量\n  globals: {\n    onlysvg: true,\n    monitor: true,\n    canvasrender: true,\n    vue: true,\n    vuerouter: true\n  },\n  rules: {\n    // 设置了 setter ，必须相应设置 getter ，反之不必须\n    "accessor-pairs": 2,\n\n    // 数组方括号前后的换行符使用规则\n    // @off 不关心\n    "array-bracket-newline": 0,\n\n    // 数组方括号前后的空格使用规则\n    // @off 不关心\n    "array-bracket-spacing": 0,\n\n    // 数组的 map、filter、sort 等方法，回调函数必须有返回值\n    "array-callback-return": 2,\n\n    // 每个数组项是否独占一行\n    // @off 不关心\n    "array-element-newline": 0,\n\n    // 箭头函数的书写规则\n    // @off 不限制\n    "arrow-body-style": 0,\n\n    // 箭头函数的圆括号使用规则\n    // @off 不限制\n    "arrow-parens": 0,\n\n    // 箭头函数的空格使用规则\n    // @off 不限制\n    "arrow-spacing": 0,\n\n    // 不能在块外使用块作用域内 var 定义的变量\n    "block-scoped-var": 2,\n\n    // 代码块花括号前后的空格规则\n    // @off 不关心\n    "block-spacing": 0,\n\n    // if else 的花括号换行规则\n    // @off 不关心\n    "brace-style": 0,\n\n    // callback 之后必须立即 return\n    // @off 没必要\n    "callback-return": 0,\n\n    // 变量名必须使用驼峰式\n    // @off 暂不限制\n    camelcase: 0,\n\n    // 注释的首字母应该大写\n    // @off 没必要\n    "capitalized-comments": 0,\n\n    // class 的非静态方法必须包含 this 关键字\n    "class-methods-use-this": 2,\n\n    // 对象的最后一项后面是否写逗号\n    // @off 此项目不关心\n    // @fixable 对于 pc 项目考虑兼容性时需要设置\n    "comma-dangle": 0,\n\n    // 逗号前后是否有空格\n    // @off 不关心\n    "comma-spacing": 0,\n\n    // 逗号写在行首还是行尾\n    // @off 不关心\n    "comma-style": 0,\n\n    // 禁止函数 if ... else if ... else 的复杂度超过 20\n    complexity: 2,\n\n    // 使用方括号访问对象属性时，方括号前后的空格规则\n    // @off 不关心\n    "computed-property-spacing": 0,\n\n    // 禁止函数在不同条件下返回不同类型的值\n    // @off 有时候会希望通过参数获取不同类型的返回值\n    "consistent-return": 0,\n\n    // this 的别名规则，只允许 self 或 that\n    "consistent-this": [2, "self", "that"],\n\n    // 构造函数中必须调用 super\n    // @off 没必要\n    "constructor-super": 0,\n\n    // if 后必须包含 { ，单行 if 除外\n    curly: [2, "multi-line", "consistent"],\n\n    // switch 语句必须包含 default\n    "default-case": 2,\n\n    // 链式操作时，点的位置，是在上一行结尾还是下一行开头\n    // @off 不关心\n    "dot-location": 0,\n\n    // 文件最后必须有空行\n    // @off 不限制\n    "eol-last": 0,\n\n    // 必须使用 === 和 !== ，和 null 对比时除外\n    eqeqeq: [2, "always", { null: "ignore" }],\n\n    // for 循环不得因方向错误造成死循环\n    "for-direction": 2,\n\n    // 执行函数的圆括号前后的空格规则\n    // @off 不关心\n    "func-call-spacing": 0,\n\n    // 把函数赋给变量或对象属性时，函数名和变量名或对象属性名必须一致\n    // @off 不限制\n    "func-name-matching": 0,\n\n    // 不允许匿名函数\n    // @off 不限制\n    "func-names": 0,\n\n    // 必须只使用函数申明或只使用函数表达式\n    // @off 不限制\n    "func-style": 0,\n\n    // generator 的 * 前后空格使用规则\n    // @off 不限制\n    "generator-star-spacing": 0,\n\n    // getter 必须有返回值，允许返回 undefined\n    "getter-return": [2, { allowimplicit: true }],\n\n    // require 必须在全局作用域下\n    // @off 条件加载很常见\n    "global-require": 0,\n\n    // for in 时需检测 hasownproperty\n    "guard-for-in": 2,\n\n    // callback 中的 err、error 参数和变量必须被处理\n    "handle-callback-err": 2,\n\n    // id 黑名单\n    // @off 暂时没有\n    "id-blacklist": 0,\n\n    // 变量名长度限制\n    // @off 长度不是重点，清晰易读才是关键\n    "id-length": 0,\n\n    // 限制变量名必须匹配指定的正则表达式\n    // @off 没必要限制变量名\n    "id-match": 0,\n\n    // 缩进使用 tab 还是空格\n    // @off 不关心\n    indent: 0,\n\n    // 变量必须在定义的时候赋值\n    // @off 先定义后赋值很常见\n    "init-declarations": 0,\n\n    // jsx 语法中，属性的值必须使用双引号\n    "jsx-quotes": [2, "prefer-double"],\n\n    // 对象字面量冒号前后的空格使用规则\n    // @off 不关心\n    "key-spacing": 0,\n\n    // 关键字前后必须有空格\n    "keyword-spacing": 2,\n\n    // 换行符使用规则\n    // @off 不关心\n    "linebreak-style": 0,\n\n    // 单行注释必须写在前一行还是行尾\n    // @off 不限制\n    "line-comment-position": 0,\n\n    // 注释前后是否要空一行\n    // @off 不限制\n    "lines-around-comment": 0,\n\n    // 最大块嵌套深度为 5 层\n    "max-depth": [2, 5],\n\n    // 限制单行代码的长度\n    // @off 不限制\n    "max-len": 0,\n\n    // 限制单个文件最大行数\n    // @off 不限制\n    "max-lines": 0,\n\n    // 最大回调深度为 3 层\n    "max-nested-callbacks": [2, 3],\n\n    // 函数的形参不能多于8个\n    "max-params": [2, 8],\n\n    // 限制一行中的语句数量\n    // @off 没必要限制\n    "max-statements-per-line": 0,\n\n    // 限制函数块中的语句数量\n    // @off 没必要限制\n    "max-statements": 0,\n\n    // 三元表达式的换行规则\n    // @off 不限制\n    "multiline-ternary": 0,\n\n    // new关键字后类名应首字母大写\n    "new-cap": [\n      2,\n      {\n        capisnew: false // 允许大写开头的函数直接执行\n      }\n    ],\n\n    // new 关键字后类应包含圆括号\n    "new-parens": 2,\n\n    // 链式调用是否要换行\n    // @off 不限制\n    "newline-per-chained-call": 0,\n\n    // 禁止 alert，提醒开发者，上线时要去掉\n    "no-alert": 1,\n\n    // 禁止使用 array 构造函数，使用 array(num) 直接创建长度为 num 的数组时可以\n    "no-array-constructor": 2,\n\n    // 禁止将 await 写在循环里\n    "no-await-in-loop": 2,\n\n    // 禁止位运算\n    // @off 不限制\n    "no-bitwise": 0,\n\n    // 禁止在 node.js 中直接调用 buffer 构造函数\n    "no-buffer-constructor": 2,\n\n    // 禁止使用 arguments.caller 和 arguments.callee\n    "no-caller": 2,\n\n    // switch的条件中出现 var、let、const、function、class 等关键字，必须使用花括号把内容括起来\n    "no-case-declarations": 2,\n\n    // catch中不得使用已定义的变量名\n    "no-catch-shadow": 2,\n\n    // class定义的类名不得与其它变量重名\n    "no-class-assign": 2,\n\n    // 禁止与 -0 做比较\n    "no-compare-neg-zero": 2,\n\n    // 禁止在 if、for、while 中出现赋值语句，除非用圆括号括起来\n    "no-cond-assign": [2, "except-parens"],\n\n    // 禁止出现难以理解的箭头函数，除非用圆括号括起来\n    "no-confusing-arrow": [2, { allowparens: true }],\n\n    // 禁止使用 console，提醒开发者，上线时要去掉\n    "no-console": 1,\n\n    // 禁止使用常量作为判断条件\n    "no-constant-condition": [2, { checkloops: false }],\n\n    // 禁止对 const 定义重新赋值\n    "no-const-assign": 2,\n\n    // 禁止 continue\n    // @off 很常用\n    "no-continue": 0,\n\n    // 禁止正则表达式中出现 ctrl 键的 ascii 表示，即/\\x1f/\n    "no-control-regex": 2,\n\n    // 禁止 debugger 语句，提醒开发者，上线时要去掉\n    "no-debugger": 1,\n\n    // 禁止对变量使用 delete 关键字，删除对象的属性不受限制\n    "no-delete-var": 2,\n\n    // 禁止在正则表达式中出现形似除法操作符的开头，如 let a = /=foo/\n    // @off 有代码高亮的话，在阅读这种代码时，也完全不会产生歧义或理解上的困难\n    "no-div-regex": 0,\n\n    // 函数参数禁止重名\n    "no-dupe-args": 2,\n\n    // 禁止对象出现重名键值\n    "no-dupe-keys": 2,\n\n    // 类方法禁止重名\n    "no-dupe-class-members": 2,\n\n    // 禁止 switch 中出现相同的 case\n    "no-duplicate-case": 2,\n\n    // 禁止重复 import\n    "no-duplicate-imports": 2,\n\n    // 禁止出现 if (cond) { return a } else { return b }，应该写为 if (cond) { return a } return b\n    // @off 有时前一种写法更清晰易懂\n    "no-else-return": 0,\n\n    // 正则表达式中禁止出现空的字符集[]\n    "no-empty-character-class": 2,\n\n    // 禁止空的 function\n    // 包含注释的情况下允许\n    "no-empty-function": 2,\n\n    // 禁止解构中出现空 {} 或 []\n    "no-empty-pattern": 2,\n\n    // 禁止出现空代码块\n    "no-empty": [2, { allowemptycatch: true }],\n\n    // 禁止 == 和 != 与 null 做比较，必须用 === 或 !==\n    // @off 非严格相等可以同时判断 null 和 undefined\n    "no-eq-null": 0,\n\n    // 禁止使用 eval\n    "no-eval": 2,\n\n    // catch 定义的参数禁止赋值\n    "no-ex-assign": 2,\n\n    // 禁止扩展原生对象\n    "no-extend-native": [2, { exceptions: ["array", "object"] }],\n\n    // 禁止额外的 bind\n    "no-extra-bind": 2,\n\n    // 禁止额外的布尔值转换\n    "no-extra-boolean-cast": 2,\n\n    // 禁止额外的 label\n    "no-extra-label": 2,\n\n    // 禁止额外的括号，仅针对函数体\n    "no-extra-parens": [2, "functions"],\n\n    // 禁止额外的分号\n    "no-extra-semi": 2,\n\n    // 每一个 switch 的 case 都需要有 break, return 或 throw\n    // 包含注释的情况下允许\n    "no-fallthrough": [2, { commentpattern: "." }],\n\n    // 不允许使用 2. 或 .5 来表示数字，需要用 2、2.0、0.5 的格式\n    "no-floating-decimal": 2,\n\n    // 禁止对函数声明重新赋值\n    "no-func-assign": 2,\n\n    // 禁止对全局变量赋值\n    "no-global-assign": 2,\n\n    // 禁止使用隐式类型转换\n    "no-implicit-coercion": [\n      2,\n      {\n        allow: ["+", "!!"] // 允许 + 转数值 \'\' + 转字符串和 !! 转布尔值\n      }\n    ],\n\n    // 禁止在 settimeout 和 setinterval 中传入字符串，因会触发隐式 eval\n    "no-implied-eval": 2,\n\n    // 禁止隐式定义全局变量\n    "no-implicit-globals": 2,\n\n    // 禁止行内注释\n    // @off 很常用\n    "no-inline-comments": 0,\n\n    // 禁止在块作用域内使用 var 或函数声明\n    "no-inner-declarations": [2, "both"],\n\n    // 禁止使用非法的正则表达式\n    "no-invalid-regexp": 2,\n\n    // 禁止在类之外的地方使用 this\n    // @off this 的使用很灵活，事件回调中可以表示当前元素，函数也可以先用 this，等以后被调用的时候再 call\n    "no-invalid-this": 0,\n\n    // 禁止使用不规范空格\n    "no-irregular-whitespace": [\n      2,\n      {\n        skipstrings: true, // 允许在字符串中使用\n        skipcomments: true, // 允许在注释中使用\n        skipregexps: true, // 允许在正则表达式中使用\n        skiptemplates: true // 允许在模板字符串中使用\n      }\n    ],\n\n    // 禁止使用 __iterator__\n    "no-iterator": 2,\n\n    // label 不得与已定义的变量重名\n    "no-label-var": 2,\n\n    // 禁止使用 label\n    // @off 禁止了将很难 break 多重循环和多重 switch\n    "no-labels": 0,\n\n    // 禁止使用无效的块作用域\n    "no-lone-blocks": 2,\n\n    // 禁止 else 中只有一个单独的 if\n    // @off 单独的 if 可以把逻辑表达的更清楚\n    "no-lonely-if": 0,\n\n    // 禁止 for (var i) { function() { use i } }，使用 let 则可以\n    "no-loop-func": 2,\n\n    // 禁止魔法数字\n    "no-magic-numbers": 0,\n\n    // 禁止使用混合的逻辑判断，必须把不同的逻辑用圆括号括起来\n    "no-mixed-operators": [\n      2,\n      {\n        groups: [["&&", "||"]]\n      }\n    ],\n\n    // 相同类型的 require 必须放在一起\n    // @off 不限制\n    "no-mixed-requires": 0,\n\n    // 禁止混用空格和 tab 来做缩进，必须统一\n    "no-mixed-spaces-and-tabs": 2,\n\n    // 禁止连等赋值\n    "no-multi-assign": 2,\n\n    // 禁止使用连续的空格\n    "no-multi-spaces": 2,\n\n    // 禁止使用 \\ 来定义多行字符串，统一使用模板字符串来做\n    "no-multi-str": 2,\n\n    // 连续空行的数量限制\n    "no-multiple-empty-lines": [\n      2,\n      {\n        max: 3, // 文件内最多连续 3 个\n        maxeof: 1, // 文件末尾最多连续 1 个\n        maxbof: 1 // 文件头最多连续 1 个\n      }\n    ],\n\n    // 禁止 if 中出现否定表达式 !==\n    // @off 否定的表达式可以把逻辑表达的更清楚\n    "no-negated-condition": 0,\n\n    // 禁止嵌套的三元表达式\n    // @off 没有必要限制\n    "no-nested-ternary": 0,\n\n    // 禁止 new function\n    // @off 有时会用它来解析非标准格式的 json 数据\n    "no-new-func": 0,\n\n    // 禁止使用 new object\n    "no-new-object": 2,\n\n    // 禁止使用 new require\n    "no-new-require": 2,\n\n    // 禁止使用 new symbol\n    "no-new-symbol": 2,\n\n    // 禁止 new boolean、number 或 string\n    "no-new-wrappers": 2,\n\n    // 禁止 new 一个类而不存储该实例\n    "no-new": 2,\n\n    // 禁止把原生对象 math、json、reflect 当函数使用\n    "no-obj-calls": 2,\n\n    // 禁止使用八进制转义符\n    "no-octal-escape": 2,\n\n    // 禁止使用0开头的数字表示八进制\n    "no-octal": 2,\n\n    // 禁止使用 __dirname + \'file\' 的形式拼接路径，应该使用 path.join 或 path.resolve 来代替\n    "no-path-concat": 2,\n\n    // 禁止对函数的参数重新赋值\n    "no-param-reassign": 2,\n\n    // 禁止 ++ 和 --\n    // @off 很常用\n    "no-plusplus": 0,\n\n    // 禁止使用 process.env.node_env\n    // @off 使用很常见\n    "no-process-env": 0,\n\n    // 禁止使用 process.exit(0)\n    // @off 使用很常见\n    "no-process-exit": 0,\n\n    // 禁止使用 hasownproperty, isprototypeof 或 propertyisenumerable\n    // @off 与 guard-for-in 规则冲突，且没有必要\n    "no-prototype-builtins": 0,\n\n    // 禁止使用 __proto__\n    "no-proto": 2,\n\n    // 禁止重复声明\n    "no-redeclare": 2,\n\n    // 禁止在正则表达式中出现连续空格\n    "no-regex-spaces": 2,\n\n    // 禁止特定的全局变量\n    // @off 暂时没有\n    "no-restricted-globals": 0,\n\n    // 禁止 import 特定的模块\n    // @off 暂时没有\n    "no-restricted-imports": 0,\n\n    // 禁止使用特定的模块\n    // @off 暂时没有\n    "no-restricted-modules": "off",\n\n    // 禁止特定的对象属性\n    // @off 暂时没有\n    "no-restricted-properties": 0,\n\n    // 禁止使用特定的语法\n    // @off 暂时没有\n    "no-restricted-syntax": 0,\n\n    // 禁止在return中赋值\n    "no-return-assign": 2,\n\n    // 禁止在 return 中使用 await\n    "no-return-await": 2,\n\n    // 禁止 location.href = \'javascript:void\'\n    "no-script-url": 2,\n\n    // 禁止将自己赋值给自己\n    "no-self-assign": 2,\n\n    // 禁止自己与自己作比较\n    "no-self-compare": 2,\n\n    // 禁止逗号操作符\n    "no-sequences": 2,\n\n    // 禁止使用保留字作为变量名\n    "no-shadow-restricted-names": 2,\n\n    // 禁止在嵌套作用域中出现重名的定义，如 let a; function b() { let a }\n    "no-shadow": 2,\n\n    // 禁止数组中出现连续逗号\n    "no-sparse-arrays": 2,\n\n    // 禁止使用 node 中的同步的方法，比如 fs.readfilesync\n    // @off 使用很常见\n    "no-sync": 0,\n\n    // 禁止使用 tabs\n    // @off 不限制\n    "no-tabs": 0,\n\n    // 禁止普通字符串中出现模板字符串语法\n    "no-template-curly-in-string": 2,\n\n    // 禁止三元表达式\n    // @off 很常用\n    "no-ternary": 0,\n\n    // 禁止在构造函数的 super 之前使用 this\n    "no-this-before-super": 2,\n\n    // 禁止 throw 字面量，必须 throw 一个 error 对象\n    "no-throw-literal": 2,\n\n    // 禁止行尾空格\n    "no-trailing-spaces": [\n      2,\n      {\n        skipblanklines: true, // 不检查空行\n        ignorecomments: true // 不检查注释\n      }\n    ],\n\n    // 禁止将 undefined 赋值给变量\n    "no-undef-init": 2,\n\n    // 禁止访问未定义的变量或方法\n    "no-undef": 2,\n\n    // 禁止使用 undefined，如需判断一个变量是否为 undefined，请使用 typeof a === \'undefined\'\n    "no-undefined": 2,\n\n    // 禁止变量名中使用下划线\n    // @off 暂不限制\n    "no-underscore-dangle": 0,\n\n    // 禁止出现难以理解的多行代码\n    "no-unexpected-multiline": 2,\n\n    // 循环体内必须对循环条件进行修改\n    "no-unmodified-loop-condition": 2,\n\n    // 禁止不必要的三元表达式\n    "no-unneeded-ternary": [2, { defaultassignment: false }],\n\n    // 禁止出现不可到达的代码，如在 return、throw 之后的代码\n    "no-unreachable": 2,\n\n    // 禁止在finally块中出现 return、throw、break、continue\n    "no-unsafe-finally": 2,\n\n    // 禁止出现不安全的否定，如 for (!key in obj} {}，应该写为 for (!(key in obj)} {}\n    "no-unsafe-negation": 2,\n\n    // 禁止出现无用的表达式\n    "no-unused-expressions": [\n      2,\n      {\n        allowshortcircuit: true, // 允许使用 a() || b 或 a && b()\n        allowternary: true, // 允许在表达式中使用三元运算符\n        allowtaggedtemplates: true // 允许标记模板字符串\n      }\n    ],\n\n    // 禁止定义不使用的 label\n    "no-unused-labels": 2,\n\n    // 禁止定义不使用的变量\n    "no-unused-vars": [\n      2,\n      {\n        vars: "all", // 变量定义必须被使用\n        args: "none", // 对于函数形参不检测\n        ignorerestsiblings: true, // 忽略剩余子项 fn(...args)，{a, b, ...coords}\n        caughterrors: "none" // 忽略 catch 语句的参数使用\n      }\n    ],\n\n    // 禁止在变量被定义之前使用它\n    "no-use-before-define": [\n      2,\n      {\n        functions: false, // 允许函数在定义之前被调用\n        classes: false // 允许类在定义之前被引用\n      }\n    ],\n\n    // 禁止不必要的 call 和 apply\n    "no-useless-call": 2,\n\n    // 禁止使用不必要计算的key，如 var a = { [\'0\']: 0 }\n    "no-useless-computed-key": 2,\n\n    // 禁止不必要的字符串拼接\n    "no-useless-concat": 2,\n\n    // 禁止无用的构造函数\n    "no-useless-constructor": 2,\n\n    // 禁止无用的转义\n    "no-useless-escape": 2,\n\n    // 禁止无效的重命名，如 import {a as a} from xxx\n    "no-useless-rename": 2,\n\n    // 禁止没有必要的 return\n    // @off 没有必要限制\n    "no-useless-return": 0,\n\n    // 禁止使用 var，必须用 let 或 const\n    "no-var": 2,\n\n    // 禁止使用void\n    "no-void": 2,\n\n    // 禁止注释中出现 todo 或 fixme，用这个来提醒开发者，写了 todo 就一定要做完\n    "no-warning-comments": 1,\n\n    // 禁止属性前出现空格，如 foo. bar()\n    "no-whitespace-before-property": 2,\n\n    // 禁止 with\n    "no-with": 2,\n\n    // 禁止 if 语句在没有花括号的情况下换行\n    "nonblock-statement-body-position": 2,\n\n    // 定义对象的花括号前后是否要加空行\n    // @off 不关心\n    "object-curly-newline": 0,\n\n    // 定义对象的花括号前后是否要加空格\n    // @off 不关心\n    "object-curly-spacing": 0,\n\n    // 对象每个属性必须独占一行\n    // @off 不限制\n    "object-property-newline": 0,\n\n    // obj = { a: a } 必须转换成 obj = { a }\n    // @off 没必要\n    "object-shorthand": 0,\n\n    // 每个变量声明必须独占一行\n    // @off 有 one-var 就不需要此规则了\n    "one-var-declaration-per-line": 0,\n\n    // 是否允许使用逗号一次声明多个变量\n    "one-var": [\n      2,\n      {\n        const: "never" // 所有 const 声明必须独占一行，不允许用逗号定义多个\n      }\n    ],\n\n    // 必须使用 x = x + y 而不是 x += y\n    // @off 没必要限制\n    "operator-assignment": 0,\n\n    // 断行时操作符位于行首还是行尾\n    // @off 不关心\n    "operator-linebreak": 0,\n\n    // 代码块首尾必须要空行\n    // @off 没必要限制\n    "padded-blocks": 0,\n\n    // 限制语句之间的空行规则，比如变量定义完之后必须要空行\n    // @off 没必要限制\n    "padding-line-between-statements": 0,\n\n    // 必须使用箭头函数作为回调\n    // @off 没必要\n    "prefer-arrow-callback": 0,\n\n    // 声明后不再修改的变量必须使用 const\n    // @off 没必要\n    "prefer-const": 0,\n\n    // 必须使用解构\n    // @off 没必要\n    "prefer-destructuring": 0,\n\n    // 必须使用 0b11111011 而不是 parseint(\'111110111\', 2)\n    // @off 没必要\n    "prefer-numeric-literals": 0,\n\n    // promise 的 reject 中必须传入 error 对象，而不允许使用字面量\n    "prefer-promise-reject-errors": 2,\n\n    // 必须使用解构 ...args 来代替 arguments\n    "prefer-rest-params": 2,\n\n    // 必须使用 func(...args) 来代替 func.apply(args)\n    // @off 没必要\n    "prefer-spread": 0,\n\n    // 必须使用模板字符串来代替字符串拼接\n    // @off 不限制\n    "prefer-template": 0,\n\n    // 字符串必须使用单引号\n    quotes: [\n      2,\n      "single",\n      {\n        avoidescape: true, // 允许包含单引号的字符串使用双引号\n        allowtemplateliterals: true // 允许使用模板字符串\n      }\n    ],\n\n    // 对象字面量的键名禁止用引号括起来\n    // @off 没必要限制\n    "quote-props": 0,\n\n    // parseint方法必须传进制参数\n    radix: 2,\n\n    // async 函数中必须存在 await 语句\n    // @off async function 中没有 await 的写法很常见，比如 koa 的示例中就有这种用法\n    "require-await": 0,\n\n    // 必须使用 jsdoc 风格的注释\n    // @off 暂不考虑开启\n    "require-jsdoc": 0,\n\n    // generator 函数内必须有 yield\n    "require-yield": 2,\n\n    // ...后面不允许有空格\n    "rest-spread-spacing": [2, "never"],\n\n    // 分号前后的空格规则\n    // @off 不限制\n    "semi-spacing": 0,\n\n    // 禁止行首出现分号\n    "semi-style": [2, "last"],\n\n    // 行尾必须使用分号结束\n    semi: 2,\n\n    // imports 必须排好序\n    // @off 没必要限制\n    "sort-imports": 0,\n\n    // 对象字面量的键名必须排好序\n    // @off 没必要限制\n    "sort-keys": 0,\n\n    // 变量声明必须排好序\n    // @off 没必要限制\n    "sort-vars": 0,\n\n    // function 等的花括号之前是否使用空格\n    // @off 不关心\n    "space-before-blocks": 0,\n\n    // function 的圆括号之前是否使用空格\n    // @off 不关心\n    "space-before-function-paren": 0,\n\n    // 圆括号内的空格使用规则\n    // @off 不关心\n    "space-in-parens": 0,\n\n    // 操作符前后要加空格\n    "space-infix-ops": 2,\n\n    // new, delete, typeof, void, yield 等表达式前后必须有空格，-, +, --, ++, !, !! 等表达式前后不许有空格\n    "space-unary-ops": [\n      2,\n      {\n        words: true,\n        nonwords: false\n      }\n    ],\n\n    // 注释的斜线和星号后要加空格\n    "spaced-comment": [\n      2,\n      "always",\n      {\n        block: {\n          exceptions: ["*"],\n          balanced: true\n        }\n      }\n    ],\n\n    // 禁用严格模式，禁止在任何地方出现 \'use strict\'\n    strict: [2, "never"],\n\n    // switch 中冒号前后的空格规则\n    // @off 不关心\n    "switch-colon-spacing": 0,\n\n    // 创建 symbol 的时候必须传入描述\n    "symbol-description": 2,\n\n    // 模板字符串 ${} 前后的空格规则\n    // @off 不限制\n    "template-curly-spacing": 0,\n\n    // 模板字符串前后的空格规则\n    // @off 不限制\n    "template-tag-spacing": 0,\n\n    // 所有文件头禁止出现 bom\n    "unicode-bom": 2,\n\n    // 禁止直接对 nan 进行判断，必须使用 isnan\n    "use-isnan": 2,\n\n    // 注释必须符合 jsdoc 的规范\n    // @off 暂不考虑开启\n    "valid-jsdoc": 0,\n\n    // typeof 判断条件只能是 "undefined", "object", "boolean", "number", "string", "function" 或 "symbol"\n    "valid-typeof": 2,\n\n    // var 必须在作用域的最前面\n    // @off var 不在最前面也是很常见的用法\n    "vars-on-top": 0,\n\n    // 自执行函数必须使用圆括号括起来，如 (function(){do something...})()\n    "wrap-iife": [2, "inside"],\n\n    // 正则表达式必须用圆括号括起来\n    // @off 不限制\n    "wrap-regex": 0,\n\n    // yield 的 * 前后空格规则\n    // @off 不限制\n    "yield-star-spacing": 0,\n\n    // 禁止yoda格式的判断条件，如 if (true === a)，应使用 if (a === true)\n    yoda: 2\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899\n900\n901\n902\n903\n904\n905\n906\n907\n908\n909\n910\n911\n912\n913\n914\n915\n916\n917\n918\n919\n920\n921\n922\n923\n924\n925\n926\n927\n928\n929\n930\n931\n932\n933\n934\n935\n936\n937\n938\n939\n940\n941\n942\n943\n944\n945\n946\n947\n948\n949\n950\n951\n952\n953\n954\n955\n956',charsets:{cjk:!0}},{title:"git裸仓库的使用",frontmatter:{title:"git裸仓库的使用",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["git"],categories:["tools"],readingShow:"top"},regularPath:"/tools/git-bare.html",relativePath:"tools/git-bare.md",key:"v-36067c56",path:"/tools/git-bare.html",lastUpdated:"2020/7/30 上午10:49:06",headersStr:null,content:" * 安装: INSTALL\n * git 的源码包下载地址\n\n# 系统环境 centos7  源码安装版git --\x3e prefix=/usr/local/git\n\nyum install autoconf libcurl-devel expat-devel gcc gettext-devel kernel-headers openssl-devel perl-devel zlib-devel -y\ncurl -O -L https://github.com/git/git/archive/v2.22.0.tar.gz\ntar -zxvf v2.22.0.tar.gz\n\n# 安装git\ncd git-v2.22.0\nmake clean\nmake configure\n./configure --prefix=/usr/local/git\nmake prefix=/usr/local/git\nmake install prefix=/usr/local/git\n\n# 写入git的环境变量\nvim /etc/profile\n# 在profile中配置\nexport PATH=/usr/local/git/bin:$PATH\n# 或者写入配置文件\necho 'export PATH=/usr/local/git/bin:$PATH' >> /etc/bashrc\n\n# 使配置文件生效\nsource /etc/profile\n\n# 检测git是否安装生效\ngit --version\n\n# 删除下载的git压缩包\ncd ~\nrm -rf git-v2.22.0 v2.22.0.tar.gz\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n * 配置用户\n\n# 使用git用户\nuseradd -m git\npasswd git\n\n# 创建文件\nmkdir -p /home/git/rep\ncd /home/git/rep/ && git init --bare test.git\n\n# 修改权限\nchown -R git:git /home/git/rep\nchmod 755 /home/git/rep\n\n# 编辑passwd\n/etc/passwd\ngit:x:1001:1001::/home/git:/usr/local/git/bin/git-shell\n\n# 克隆仓库\ngit clone git@ip:/home/git/rep/test.git\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 使用登录用户\n在git用户目录下新建 `project` 用作裸仓库\n\n在git用户目录下新建 `deloy`   用作发布地址仓库\n\n进入`project`目录中运行如下创建一个`demo`的裸仓库:\n  `git init --bare demo.git`\n\n然后进入`demo.git`目录中，在centos7中命令行输入运行 `pwd` 查看当前位置.\n  例：`/home/git/project/demo.git`\n\n在本地 `git clone 用户名@linux的ip:/home/czh/project/demo.git`\n\ngit clone完后，进入`demo`文件夹，第一次拉取成功后是一个空文件(`.git`除外),\n需要创建文件,再次上传服务器.然后在别的地方再次clone的时候就是有文件的仓库了\n\n提示：git上传的文件在centos7的git的裸仓库中不可见\n\n自动化发布git上传文件:其实就是在服务器中上传完文件后在\n服务器中执行拉取上传的文件到`deloy`文件夹中\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * 自动部署\n\n- 进入`demo.git`的`hooks`文件夹中,创建编辑 `post-receive` 文件,\n然后在该文件夹命令行中执行： `chmod +x post-receive` 赋予执行权限\n\n#!/bin/sh\nunset GIT_DIR\n# 发布文件的目录\ndeployPath='/home/czh/deloy/'\n\ncd $deployPath\n\necho '进入文件夹'\nsleep 2\ngit pull origin master\necho '拉取文件'\nsleep 10\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 使用\n\n# 进入deloy文件夹中执行\n\n# 初始化仓库\ngit init\n# 添加远程链接(直接写绝对路径,完整的 ‘用户名+服务器ip+文件夹地址’ 需要用户密码 )\ngit remote add origin /home/czh/project/demo.git\n\n#查看添加的origin\ngit remote -v\n\n# 修改remote的地址可以进入 .git 编辑 config 文件中的url\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n相关链接\n\n * CentOS7 搭建 Git 服务器\n * How to install GIT on CentOS",normalizedContent:" * 安装: install\n * git 的源码包下载地址\n\n# 系统环境 centos7  源码安装版git --\x3e prefix=/usr/local/git\n\nyum install autoconf libcurl-devel expat-devel gcc gettext-devel kernel-headers openssl-devel perl-devel zlib-devel -y\ncurl -o -l https://github.com/git/git/archive/v2.22.0.tar.gz\ntar -zxvf v2.22.0.tar.gz\n\n# 安装git\ncd git-v2.22.0\nmake clean\nmake configure\n./configure --prefix=/usr/local/git\nmake prefix=/usr/local/git\nmake install prefix=/usr/local/git\n\n# 写入git的环境变量\nvim /etc/profile\n# 在profile中配置\nexport path=/usr/local/git/bin:$path\n# 或者写入配置文件\necho 'export path=/usr/local/git/bin:$path' >> /etc/bashrc\n\n# 使配置文件生效\nsource /etc/profile\n\n# 检测git是否安装生效\ngit --version\n\n# 删除下载的git压缩包\ncd ~\nrm -rf git-v2.22.0 v2.22.0.tar.gz\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n * 配置用户\n\n# 使用git用户\nuseradd -m git\npasswd git\n\n# 创建文件\nmkdir -p /home/git/rep\ncd /home/git/rep/ && git init --bare test.git\n\n# 修改权限\nchown -r git:git /home/git/rep\nchmod 755 /home/git/rep\n\n# 编辑passwd\n/etc/passwd\ngit:x:1001:1001::/home/git:/usr/local/git/bin/git-shell\n\n# 克隆仓库\ngit clone git@ip:/home/git/rep/test.git\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 使用登录用户\n在git用户目录下新建 `project` 用作裸仓库\n\n在git用户目录下新建 `deloy`   用作发布地址仓库\n\n进入`project`目录中运行如下创建一个`demo`的裸仓库:\n  `git init --bare demo.git`\n\n然后进入`demo.git`目录中，在centos7中命令行输入运行 `pwd` 查看当前位置.\n  例：`/home/git/project/demo.git`\n\n在本地 `git clone 用户名@linux的ip:/home/czh/project/demo.git`\n\ngit clone完后，进入`demo`文件夹，第一次拉取成功后是一个空文件(`.git`除外),\n需要创建文件,再次上传服务器.然后在别的地方再次clone的时候就是有文件的仓库了\n\n提示：git上传的文件在centos7的git的裸仓库中不可见\n\n自动化发布git上传文件:其实就是在服务器中上传完文件后在\n服务器中执行拉取上传的文件到`deloy`文件夹中\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * 自动部署\n\n- 进入`demo.git`的`hooks`文件夹中,创建编辑 `post-receive` 文件,\n然后在该文件夹命令行中执行： `chmod +x post-receive` 赋予执行权限\n\n#!/bin/sh\nunset git_dir\n# 发布文件的目录\ndeploypath='/home/czh/deloy/'\n\ncd $deploypath\n\necho '进入文件夹'\nsleep 2\ngit pull origin master\necho '拉取文件'\nsleep 10\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 使用\n\n# 进入deloy文件夹中执行\n\n# 初始化仓库\ngit init\n# 添加远程链接(直接写绝对路径,完整的 ‘用户名+服务器ip+文件夹地址’ 需要用户密码 )\ngit remote add origin /home/czh/project/demo.git\n\n#查看添加的origin\ngit remote -v\n\n# 修改remote的地址可以进入 .git 编辑 config 文件中的url\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n相关链接\n\n * centos7 搭建 git 服务器\n * how to install git on centos",charsets:{cjk:!0}},{title:"git常见使用场景",frontmatter:{title:"git常见使用场景",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["git"],categories:["tools"],readingShow:"top"},regularPath:"/tools/git-example.html",relativePath:"tools/git-example.md",key:"v-331a0a4b",path:"/tools/git-example.html",headers:[{level:2,title:"如何使用分支",slug:"如何使用分支",normalizedTitle:"如何使用分支",charIndex:2},{level:2,title:"分支管理策略",slug:"分支管理策略",normalizedTitle:"分支管理策略",charIndex:368},{level:2,title:"Bug 分支",slug:"bug-分支",normalizedTitle:"bug 分支",charIndex:873},{level:2,title:"合并分支上特定文件",slug:"合并分支上特定文件",normalizedTitle:"合并分支上特定文件",charIndex:1676},{level:2,title:"rebase 合并多个 commit",slug:"rebase-合并多个-commit",normalizedTitle:"rebase 合并多个 commit",charIndex:2052},{level:2,title:"rebase 修改 commit",slug:"rebase-修改-commit",normalizedTitle:"rebase 修改 commit",charIndex:2988},{level:2,title:"rebase 合并非连续 commit",slug:"rebase-合并非连续-commit",normalizedTitle:"rebase 合并非连续 commit",charIndex:3471},{level:2,title:"使用 cherry-pick 合并 dev 分支的 commit 到 master 中",slug:"使用-cherry-pick-合并-dev-分支的-commit-到-master-中",normalizedTitle:"使用 cherry-pick 合并 dev 分支的 commit 到 master 中",charIndex:4160},{level:2,title:"example",slug:"example",normalizedTitle:"example",charIndex:4799},{level:2,title:"快速下载 github",slug:"快速下载-github",normalizedTitle:"快速下载 github",charIndex:5333}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"如何使用分支 分支管理策略 Bug 分支 合并分支上特定文件 rebase 合并多个 commit rebase 修改 commit rebase 合并非连续 commit 使用 cherry-pick 合并 dev 分支的 commit 到 master 中 example 快速下载 github",content:'# 如何使用分支\ngit checkout -b [branch]       # 新建一个分支，并切换到该分支\ngit branch           # 命令会列出所有分支，当前分支前面会标一个*号。\ngit add .\ngit commit -m "提交分支branch"\ngit checkout master        # 切换回master分支\ngit merge [branch]         # 把branch分支合并到master分支\ngit branch -d branch       # 合并完成后删除branch分支\n\ngit branch -r   # 查看远程分支\ngit checkout -b a origin/a  # 拉去远程分支到本地\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 分支管理策略\ngit checkout -b dev                                 # 首先，仍然创建并切换dev分支：\ngit add readme.txt                                  # 修改readme.txt文件，并提交一个新的commit\ngit checkout master                                 # 现在，我们切换回master分支\ngit merge --no-ff -m "merge with no-ff" dev         # 准备合并dev分支，请注意--no-ff参数，表示禁用Fast forward\ngit log --graph --pretty=oneline --abbrev-commit    # 合并后，我们用git log看看分支历史：\n\n# 合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，\n# 能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# Bug 分支\n------------                        # 我们在dev分支上，发现master分支上有代号101号bug\ngit stash                           # 冷冻现在在dev分支上的工作状态 冻结吧！\ngit checkout master            # 这个bug发生在master主分支上,我们切回master分支\ngit checkout -b issue-101       # 创建代号101的修复bug分支\n\n# 修改你的bug\ngit add readme.txt              # 提交到暂存区\ngit commit -m "fix bug 101"     # 注意填写信息，以免日后查证\ngit checkout master             # 切换回master分支\ngit merge --no-ff -m "merged bug fix 101" issue-101     # 合并分支，注意不使用fast forward模式\ngit branch -d issue-101         # 删除issue-101分支\ngit checkout dev                 # bug 改完了，是时候回到dev继续写bug了\ngit stash list                   # 查看刚刚的冻结现场\ngit stash pop                    # git stash pop，恢复的同时把stash内容也删了：\n# 一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 合并分支上特定文件\ngit checkout source_branch <path>...\n\n# 将a分支中的test文件合并到主分支b\n------------------------\n# 使用git checkout 将根据b分支创建一个b_tmp分支，避免影响b分支\ngit checkout -b b_tmp  # 新建b_tmp分支并切换\ngit checkout a test # 将a分支中的test文件覆盖到b_tmp中\ngit commit -am "merge branch a"\ngit checkout b  # 切换到b分支\ngit merge --no-ff b_tmp  # 合并b_tmp到b分支\ngit branch -d b_tmp # 删除b_tmp分支\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# rebase 合并多个 commit\ngit log --oneline\n-----------\n972c774 (HEAD -> master) mod readme.md content\n64b9edd add index.js\n7d7d42b add index.css\n7a5e790 add index.html\nba3849c add readme.md\n-----------\n\nstep1: git rebase -i ba3849c\n# 进入编辑界面如下，修改 pick  -> s\n-----------\npick 7a5e790 add index.html\ns 7d7d42b add index.css\ns b9edd add index.js\npick 972c774 mod readme.md content\n-----------\n\nstep1保存退出后，自动跳转到这里修改\n-----------\n# This is a combination of 3 commits.\n# 自己加的commit\nadd index static objects\n\n# This is the 1st commit message:\n\nadd index.html\n\n# This is the commit message #2:\n\nadd index.css\n\n# This is the commit message #3:\n\nadd index.js\n-----------\n\nstep2: git log --oneline # 查看日志\n-----------\n1e59df0 (HEAD -> master) mod readme.md content\nba3958e add index static objects\nba3849c add readme.md\n-----------\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n# rebase 修改 commit\n-----------\n1c08687 (HEAD -> master) mod readme.md content\n30fa507 add index\n0aa75f0 add readme.md\n-----------\n\ngit rebase -i 0aa75f0\n-----------\npick 30fa507 add index\nr 1c08687 mod readme.md content\n-----------\n\n-----------\n# mod readme.md content\n修改 readme.md 内容\n-----------\n\ngit log --oneline\n-----------\n26d1338 (HEAD -> master) 修改 readme.md 内容\n30fa507 add index\n0aa75f0 add readme.md\n-----------\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# rebase 合并非连续 commit\ngit log --oneline\n-----------\n26d1338 (HEAD -> master) 修改 readme.md 内容\n30fa507 add index\n0aa75f0 add readme.md\n-----------\n\ngit rebase -i 0aa75f0\n-----------\npick 0aa75f0 add readme.md\n# pick 30fa507 add index\ns 26d1338 修改 readme.md 内容\npick 30fa507 add index\n-----------\n\ngit rebase --continue\n-----------\n# This is a combination of 2 commits.\n合并非连续的commit\n# This is the 1st commit message:\n\nadd readme.md\n\n# This is the commit message #2:\n\n修改 readme.md 内容\n-----------\n\ngit log --oneline # 查看日志\n-----------\nde9b2eb (HEAD -> master) add index\nc5a0c7a 合并非连续的commit\n-----------\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# 使用 cherry-pick 合并 dev 分支的 commit 到 master 中\ngit log --oneline --all\n-----------\nc4570cf (dev) mod index.html content\n479e26c (HEAD -> master) mod readme.md content\n599b625 add index.js\n432febf add index.css\n8702882 add index.html\ncf5c910 add readme.md\n-----------\n\nstep1: git checkout master\nstep2: git cherry-pick c4570cf\n\ngit log --oneline --all\n-----------\n88ae02b (HEAD -> master) mod index.html content\nc4570cf (dev) mod index.html content\n479e26c mod readme.md content\n599b625 add index.js\n432febf add index.css\n8702882 add index.html\ncf5c910 add readme.md\n-----------\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# example\n# 如果git pull提示“no tracking information”，\n# 则说明本地分支和远程分支的链接关系没有创建，用命令\ngit branch --set-upstream branch-name origin/branch-name\n\n\n# git add一个错误文件,执行撤销命令:\ngit reset <file> # 撤销指定的文件\ngit reset # 撤销所有的文件\n\n# git rm删除指定文件:\ngit rm --cached .   # 删除文件\ngit rm -r --cached . # 删除文件和目录\n\n# git提交指定文件到gh-pages分支\ngit add dist\ngit subtree push --prefix=dist orgin gh-pages\n\n# git commit一个错误文件,执行命令:\n# 只撤销commit操作，保留文件\ngit reset HEAD~1\n\n# 撤销commit操作，删除变化\ngit reset --hard HEAD~1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 快速下载 github\ngit clone  https://github.com.cnpmjs.org/reactjs/zh-hans.reactjs.org.git\n\n\n1',normalizedContent:'# 如何使用分支\ngit checkout -b [branch]       # 新建一个分支，并切换到该分支\ngit branch           # 命令会列出所有分支，当前分支前面会标一个*号。\ngit add .\ngit commit -m "提交分支branch"\ngit checkout master        # 切换回master分支\ngit merge [branch]         # 把branch分支合并到master分支\ngit branch -d branch       # 合并完成后删除branch分支\n\ngit branch -r   # 查看远程分支\ngit checkout -b a origin/a  # 拉去远程分支到本地\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 分支管理策略\ngit checkout -b dev                                 # 首先，仍然创建并切换dev分支：\ngit add readme.txt                                  # 修改readme.txt文件，并提交一个新的commit\ngit checkout master                                 # 现在，我们切换回master分支\ngit merge --no-ff -m "merge with no-ff" dev         # 准备合并dev分支，请注意--no-ff参数，表示禁用fast forward\ngit log --graph --pretty=oneline --abbrev-commit    # 合并后，我们用git log看看分支历史：\n\n# 合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，\n# 能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# bug 分支\n------------                        # 我们在dev分支上，发现master分支上有代号101号bug\ngit stash                           # 冷冻现在在dev分支上的工作状态 冻结吧！\ngit checkout master            # 这个bug发生在master主分支上,我们切回master分支\ngit checkout -b issue-101       # 创建代号101的修复bug分支\n\n# 修改你的bug\ngit add readme.txt              # 提交到暂存区\ngit commit -m "fix bug 101"     # 注意填写信息，以免日后查证\ngit checkout master             # 切换回master分支\ngit merge --no-ff -m "merged bug fix 101" issue-101     # 合并分支，注意不使用fast forward模式\ngit branch -d issue-101         # 删除issue-101分支\ngit checkout dev                 # bug 改完了，是时候回到dev继续写bug了\ngit stash list                   # 查看刚刚的冻结现场\ngit stash pop                    # git stash pop，恢复的同时把stash内容也删了：\n# 一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 合并分支上特定文件\ngit checkout source_branch <path>...\n\n# 将a分支中的test文件合并到主分支b\n------------------------\n# 使用git checkout 将根据b分支创建一个b_tmp分支，避免影响b分支\ngit checkout -b b_tmp  # 新建b_tmp分支并切换\ngit checkout a test # 将a分支中的test文件覆盖到b_tmp中\ngit commit -am "merge branch a"\ngit checkout b  # 切换到b分支\ngit merge --no-ff b_tmp  # 合并b_tmp到b分支\ngit branch -d b_tmp # 删除b_tmp分支\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# rebase 合并多个 commit\ngit log --oneline\n-----------\n972c774 (head -> master) mod readme.md content\n64b9edd add index.js\n7d7d42b add index.css\n7a5e790 add index.html\nba3849c add readme.md\n-----------\n\nstep1: git rebase -i ba3849c\n# 进入编辑界面如下，修改 pick  -> s\n-----------\npick 7a5e790 add index.html\ns 7d7d42b add index.css\ns b9edd add index.js\npick 972c774 mod readme.md content\n-----------\n\nstep1保存退出后，自动跳转到这里修改\n-----------\n# this is a combination of 3 commits.\n# 自己加的commit\nadd index static objects\n\n# this is the 1st commit message:\n\nadd index.html\n\n# this is the commit message #2:\n\nadd index.css\n\n# this is the commit message #3:\n\nadd index.js\n-----------\n\nstep2: git log --oneline # 查看日志\n-----------\n1e59df0 (head -> master) mod readme.md content\nba3958e add index static objects\nba3849c add readme.md\n-----------\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n# rebase 修改 commit\n-----------\n1c08687 (head -> master) mod readme.md content\n30fa507 add index\n0aa75f0 add readme.md\n-----------\n\ngit rebase -i 0aa75f0\n-----------\npick 30fa507 add index\nr 1c08687 mod readme.md content\n-----------\n\n-----------\n# mod readme.md content\n修改 readme.md 内容\n-----------\n\ngit log --oneline\n-----------\n26d1338 (head -> master) 修改 readme.md 内容\n30fa507 add index\n0aa75f0 add readme.md\n-----------\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# rebase 合并非连续 commit\ngit log --oneline\n-----------\n26d1338 (head -> master) 修改 readme.md 内容\n30fa507 add index\n0aa75f0 add readme.md\n-----------\n\ngit rebase -i 0aa75f0\n-----------\npick 0aa75f0 add readme.md\n# pick 30fa507 add index\ns 26d1338 修改 readme.md 内容\npick 30fa507 add index\n-----------\n\ngit rebase --continue\n-----------\n# this is a combination of 2 commits.\n合并非连续的commit\n# this is the 1st commit message:\n\nadd readme.md\n\n# this is the commit message #2:\n\n修改 readme.md 内容\n-----------\n\ngit log --oneline # 查看日志\n-----------\nde9b2eb (head -> master) add index\nc5a0c7a 合并非连续的commit\n-----------\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# 使用 cherry-pick 合并 dev 分支的 commit 到 master 中\ngit log --oneline --all\n-----------\nc4570cf (dev) mod index.html content\n479e26c (head -> master) mod readme.md content\n599b625 add index.js\n432febf add index.css\n8702882 add index.html\ncf5c910 add readme.md\n-----------\n\nstep1: git checkout master\nstep2: git cherry-pick c4570cf\n\ngit log --oneline --all\n-----------\n88ae02b (head -> master) mod index.html content\nc4570cf (dev) mod index.html content\n479e26c mod readme.md content\n599b625 add index.js\n432febf add index.css\n8702882 add index.html\ncf5c910 add readme.md\n-----------\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# example\n# 如果git pull提示“no tracking information”，\n# 则说明本地分支和远程分支的链接关系没有创建，用命令\ngit branch --set-upstream branch-name origin/branch-name\n\n\n# git add一个错误文件,执行撤销命令:\ngit reset <file> # 撤销指定的文件\ngit reset # 撤销所有的文件\n\n# git rm删除指定文件:\ngit rm --cached .   # 删除文件\ngit rm -r --cached . # 删除文件和目录\n\n# git提交指定文件到gh-pages分支\ngit add dist\ngit subtree push --prefix=dist orgin gh-pages\n\n# git commit一个错误文件,执行命令:\n# 只撤销commit操作，保留文件\ngit reset head~1\n\n# 撤销commit操作，删除变化\ngit reset --hard head~1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 快速下载 github\ngit clone  https://github.com.cnpmjs.org/reactjs/zh-hans.reactjs.org.git\n\n\n1',charsets:{cjk:!0}},{title:"git常见命令列表",frontmatter:{title:"git常见命令列表",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["git"],categories:["tools"],readingShow:"top"},regularPath:"/tools/git.html",relativePath:"tools/git.md",key:"v-66e4e26b",path:"/tools/git.html",headers:[{level:2,title:"config",slug:"config",normalizedTitle:"config",charIndex:2},{level:2,title:"init",slug:"init",normalizedTitle:"init",charIndex:1128},{level:2,title:"clone",slug:"clone",normalizedTitle:"clone",charIndex:1251},{level:2,title:"add",slug:"add",normalizedTitle:"add",charIndex:1368},{level:2,title:".gitignore",slug:"gitignore",normalizedTitle:".gitignore",charIndex:1672},{level:2,title:".gitkeep",slug:"gitkeep",normalizedTitle:".gitkeep",charIndex:2258},{level:2,title:"commit",slug:"commit",normalizedTitle:"commit",charIndex:2306},{level:2,title:"status",slug:"status",normalizedTitle:"status",charIndex:2828},{level:2,title:"diff",slug:"diff",normalizedTitle:"diff",charIndex:2563},{level:2,title:"log",slug:"log",normalizedTitle:"log",charIndex:3478},{level:2,title:"blame",slug:"blame",normalizedTitle:"blame",charIndex:4178},{level:2,title:"alias",slug:"alias",normalizedTitle:"alias",charIndex:4256},{level:2,title:"tag",slug:"tag",normalizedTitle:"tag",charIndex:3194},{level:2,title:"文件恢复",slug:"文件恢复",normalizedTitle:"文件恢复",charIndex:5169},{level:2,title:"reflog",slug:"reflog",normalizedTitle:"reflog",charIndex:3951},{level:2,title:"revert",slug:"revert",normalizedTitle:"revert",charIndex:6168},{level:2,title:"show",slug:"show",normalizedTitle:"show",charIndex:4616},{level:2,title:"branch",slug:"branch",normalizedTitle:"branch",charIndex:1271},{level:2,title:"checkout",slug:"checkout",normalizedTitle:"checkout",charIndex:4649},{level:2,title:"merge",slug:"merge",normalizedTitle:"merge",charIndex:4034},{level:2,title:"stash",slug:"stash",normalizedTitle:"stash",charIndex:7993},{level:2,title:"remote",slug:"remote",normalizedTitle:"remote",charIndex:3055},{level:2,title:"pull 和 push",slug:"pull-和-push",normalizedTitle:"pull 和 push",charIndex:8453},{level:2,title:"archive",slug:"archive",normalizedTitle:"archive",charIndex:8712},{level:2,title:"rebase",slug:"rebase",normalizedTitle:"rebase",charIndex:8555},{level:2,title:"cat-file",slug:"cat-file",normalizedTitle:"cat-file",charIndex:9328},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:9443}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"config init clone add .gitignore .gitkeep commit status diff log blame alias tag 文件恢复 reflog revert show branch checkout merge stash remote pull 和 push archive rebase cat-file 相关链接",content:'# config\n * 配置生效优先级：local > global > system\n\n# 配置\ngit config --global user.name "用户名"          # 配置用户名\ngit config --global user.email "用户邮箱"       # 配置邮箱\ngit config --global core.editor 编辑器          # 配置编辑器，模式使用vi或者vim\n\n# 查看配置\ngit config --global user.name       # 查看配置的用户名\ngit config --global user.email      # 查看配置的邮箱\n\n# 查看所有配置列表\ngit config --global --list      # 查看全局设置相关参数列表\ngit config --local --list       # 查看本地设置相关参数列表\ngit config --system --list      # 查看系统配置参数列表\ngit config --list               # 查看所有Git的配置(全局+本地+系统)\n\ngit config --global https.proxy http://127.0.0.1:1080\ngit config --global https.proxy https://127.0.0.1:1080\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * ssh-keygen\n\n# 存放密钥的文件夹\n~/.ssh\n\n# 创建一个 SSH key\nssh-keygen -t rsa -C "your_email@example.com"\n# -t 指定密钥类型，默认是 rsa ，可以省略\n# -C 设置注释文字，比如邮箱\n# -f 指定密钥文件存储文件名\n\n# ~/.ssh中，默认情况下生成的文件\nid_dsa  # 私钥文件\nid_dsa.pub # 公钥文件\n\n# 添加公钥到指定服务器\n~/.ssh/id_rsa.pub\n\n# 测试一下该SSH key\nssh -T git@github.com\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * Connecting to GitHub with SSH\n\n# init\ngit init rep_name     # 创建一个新的带Git仓库的项目\ngit init            # 为已存在的项目生成一个Git仓库\ngit init --bare     # 初始化裸仓库\n\n\n1\n2\n3\n# clone\ngit clone [-b branchName] [--depth=number] url [filedirname]\ngit clone -b [branch] origin_url # 克隆远程分支\n\n\n1\n2\n# add\n * 添加文件到暂存区\n\ngit add fileName  # 将工作区的某个文件添加到暂存区。\ngit add -u     # 添加所有被tracked文件中被修改或删除的文件信息到暂存区，不处理untracked的文件\ngit add -A     # 添加所有被tracked文件中被修改或删除的文件信息到暂存区，包括untracked的文件\ngit add .      # 将当前工作区的所有文件都加入暂存区\ngit add -i     # 进入交互界面模式，按需添加文件到缓存区 (不常用)\n\n# 示例\ngit add A\ngit add B\n# 配置不跟踪A和B\ngit add .gitignore\n\n# 配置跟踪A和B, 先清除标记状态，然后先添加.gitignore\ngit rm -r --cached .    # 清除版本控制标记，.代表所有文件，也可指定具体文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# .gitignore\n*      # 匹配零个或多个任意字符\n[abc]  # 只匹配括号内中的任意一个字符\n[0-9]  # - 代表范围，匹配0-9之间的任何字符\n?      # 匹配任意一个字符\n**     # 匹配任意的中间目录，例如a/*/z可以匹配:a/z,a/b/z,a/b/c/z等\n\n\n1\n2\n3\n4\n5\n# 忽略所有以 .c结尾的文件\n*.c\n\n# 但是 stream.c 会被git追踪\n!stream.c\n\n# 只忽略当前文件夹下的TODO文件, 不包括其他文件夹下的TODO例如: subdir/TODO\n/TODO\n\n# 忽略所有在build文件夹下的文件\nbuild/\n\n# 忽略 doc/notes.txt, 但不包括多层下.txt例如: doc/server/arch.txt\ndoc/*.txt\n\n# 忽略所有在doc目录下的.pdf文件\ndoc/**/*.pdf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# .gitkeep\ngit 默认会忽略空的文件夹, 使用.gitkeep 来追踪空的文件夹\n\n# commit\ngit commit -m "提交说明"    # 将暂存区内容提交到本地仓库\ngit commit -a -m "提交说明" # 跳过缓存区操作，直接把工作区内容提交到本地仓库\n\n# 合并暂存区和最近的一次commit，生成新的commit并替换掉老的。如果缓存区没内容，\n# 利用amend可以修改上次commit的提交说明。\n#\n# 注：因为amend后生成的commit是一个全新的commit，旧的会被删除，所以别在公共的\n# commit上使用amend！切记！！！\n\n# 提交时显示所有diff信息\ngit commit -v\n\ngit commit --amend\ngit commit --amend --no-edit # 沿用上次commit的提交说明\n\n# 使用一次新的commit，替代上一次提交\ngit commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\ngit commit --amend [file1] [file2] ...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# status\ngit status      # 查看工作区与暂存区的当前情况\ngit status -s   # 让结果以更简短的形式输出\n\n\n1\n2\n# diff\ngit diff                     # 比较工作区与暂存区的区别\ngit diff --cached           # 比较暂存区与HEAD的区别\ngit diff branch_name              # 工作区与某分支的差异，远程分支这样写：remotes/origin/分支名\ngit diff HEAD               # 工作区与HEAD指针指向的内容差异\ngit diff <commit-id> filename-path     # 工作区某文件当前版本与历史版本的差异\ngit diff --stage           # 工作区文件与上次提交的差异(1.6 版本前用 --cached)\ngit diff 版本TAG           # 查看从某个版本后都改动内容\ngit diff 分支A 分支B       # 比较从分支A和分支B的差异(也支持比较两个TAG)\ngit diff 分支A...分支B    # 比较两分支在分开后各自的改动\ngit diff <commit-id> <commit-id>\n\n# 注：如果只想统计哪些文件被改动，多少行被改动，可以添加--stat参数\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# log\n * Git-Basics-Viewing-the-Commit-History\n\ngit log                 # 查看所有commit记录(SHA-A校验和，作者名称，邮箱，提交时间，提交说明)\ngit log -p -次数                # 查看最近多少次的提交记录\ngit log --stat                  # 简略显示每次提交的内容更改\ngit log --oneline               # 让提交记录以精简的一行输出\ngit log –graph –all --online    # 图形展示分支的合并历史\ngit log --author=作者           # 查询作者的提交记录(和grep同时使用要加一个--all--match参数)\ngit log --grep=过滤信息         # 列出提交信息中包含过滤信息的提交记录\ngit log fileName              # 查看某文件的修改记录，找背锅专用\ngit reflog      #用来记录你的每一次命令,显示当前分支的最近几次提交\ngit log -p filename #查看文件的详细变更\ngit log --no-merges master..  #查看尚未合并的变更\ngit log -p --no-merges master.. #查看尚未合并的文件变更\n\n–pretty # 可以通过 –pretty 对提交信息进行定制\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# blame\n * 查看某个文件是谁改动的\n\ngit blame filename # 查看某文件的每一行内容的作者，最新commit和提交时间\n\n\n1\n# alias\n# status改为st\ngit config --global alias.st status\n\n# git l 代替 git log –oneline –graph\ngit config --global alias.l "log --oneline --graph"\n\n\n1\n2\n3\n4\n5\n# tag\ngit tag           \t\t\t\t # 查看标签列表\ngit tag <tagname>                    # 轻量级标签\ngit tag -a <tagname> -m "附加信息"   # 带注释的标签\n\ngit tag -a <tagname> 版本id      # 某次commit打TAG. 比如：git tag -a v1.1 bcfed96\n\ngit show tagName   \t\t\t\t # 查看具体标签\ngit checkout tagName\t\t\t     # 切换到标签\ngit fetch origin tag <tagname>  # 获取远程tag\n\ngit push [remote] [tag]    # 推送某标签到远程仓库\ngit push origin --tags\t    # 推送全部标签\n\ngit checkout -b <branch> <tagname>          # 新建分支的时候打上TAG\ngit show <tagname>                     # 查看标签对应的信息\ngit tag -d <tagname>                   # 删除本地TAG\n\ngit push origin --delete tag <tagname>  # 删除远程分支\ngit push origin :refs/tags/<tagname>  # 从远程删除命令tag\n\ngit checkout -b [branch] [tag]  # 新建一个分支，指向某个tag\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# 文件恢复\n * 文件恢复（未commit）git checkout\n\n# 删除暂存区中的文件：\ngit rm 文件名\ngit commit -m "提交说明"\n\n# 删除工作区文件，并且将这次删除放入暂存区\ngit rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\ngit rm --cached [file]\n\ngit clean -f #把未跟踪的文件清理掉\n\n# 改名文件，并且将这个改名放入暂存区\ngit mv [file-original] [file-renamed]\n\n# 误删恢复文件（用暂存区的文件覆盖工作区的文件）\ngit checkout -- 文件名\n\n# Tip：git rm 等价于 git rm --cached 文件名 + rm 文件名\n# 务必注意：git checkout会抛弃当前工作区的更改!!!不可恢复！！！务必小心！！！\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * 文件恢复（已 add 未 commit）git reset HEAD\n\ngit reset HEAD -- filename # 暂存区恢复成HEAD\ngit checkout -- filename # 工作区恢复成暂存区\n\n\n1\n2\n * 版本回退（已 commit）git reset –hard\n\ngit reset HEAD^             # 恢复成上次提交的版本\ngit reset HEAD^^            # 恢复成上上次提交的版本，就是多个^，以此类推或用\ngit reset HEAD~3            # 也可以直接~次数\ngit reset --hard commitid      # git log查看到的Hash值，取前七位即可，根据版本号回退\n\n# reset提供了三个可选参数：\n# - soft：只是改变HEAD指针指向，缓存区和工作区不变\n# - mixed：修改HEAD指针指向，暂存区内容丢失，工作区不变\n# - hard：修改HEAD指针指向，暂存区内容丢失，工作区恢复以前状态\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# reflog\n * 查看输入过的指令记录\n\ngit reflog\n\n\n1\n# revert\n * 撤销某次提交: 撤销的只是文件变化，提交记录依旧存在\n\ngit revert HEAD          # 撤销最近的一个提交\ngit revert commitid     # 撤销某次commit\n\n\n1\n2\n# show\n * 查看某次提交的修改内容\n\ngit show commitid     # 查看某次commit的修改内容\ngit show --no-merges master..  #查看尚未合并的文件变更\ngit show some-branch:some-file.js  #查看其他分支中的文件\n\n\n1\n2\n3\n# branch\ngit branch [branch-name]   # 创建分支\ngit branch          # 查看本地分支\n\ngit branch -a   #查看分支\ngit branch -r   #查看远程分支\n\ngit branch -d 分支名    # 删除分支，分支上有未提交更改是不能删除的\ngit branch -D 分支名    # 强行删除分支，尽管这个分支上有未提交的更改\n\ngit log --branches="被删除的分支名"     # 找到被删分支最新的commit版本号\ngit branch 分支名 版本号(前七位即可)    # 恢复被删分支\ngit branch -m 老分支名 新分支名     # 分支重命名\n\ngit push origin --delete [branch-name]  #删除远程分支\n\ngit branch --track [branch] [remote-branch] #新建一个分支，与指定的远程分支建立追踪关系\ngit branch --set-uptream [branch] [remote-branch] #建立追踪关系，在现有分支和指定的远程分支之间\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# checkout\ngit checkout branch_name         # 切换分支\ngit checkout -b branch_name      # 创建分支同时切换到这个分支\ngit checkout -              # 切换到上一分支\n\ngit checkout -b local_branch remote_branch # 拉去远程分支到本地\ngit checkout -b dev origin/dev\n\ngit checkout remote_branch_name  # 拉取远程分支到本地并自动新建分支切换到origin_branch_name\n\ngit checkout -b [branch] [tag]  #新建一个分支，指向某个tag\n\n# 分离头指针，即HEAD不会指向任何branch，此时切换分支git不会自动保存所做的任何修改和提交的commit。\n# 如果需要保存修改需要保存到一个分支中，git branch newbranch commitid\ngit checkout commitid\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# merge\ngit merge [branch]      # 合并指定分支到当前分支\ngit cherry-pick [commit]    #选择一个commit，合并进当前分支\ngit merge -ff           # 快速合并，默认参数\ngit merge -ff-only      # 只有快速合并的情况才合并\ngit merge --no-ff       # 不使用快速合并\ngit merge -n 分支名     # 合并分支，不会在合并后显示合并前后的不同状态\ngit merge -stat 分支名  # 合并分支，合并结束后显示合并前后的不同状态\ngit merge -e 分支名     # 合并分支，合并前调用编辑器，可自行编写commit\n\ngit checkout master # 切换到master\ngit merge [branch_name] --no-ff #合并指定分支到当前分支master\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# stash\n * 切换分支时暂存未 commit 的更改\n\ngit stash   # 保存当前的改动\ngit stash apply     # 恢复保存改动, 不删除stash@{1}\ngit stash list      # 查看stash列表\ngit stash apply stash@{1}\ngit stash pop # 恢复并删除stash@{1}\n\n\n1\n2\n3\n4\n5\n# remote\ngit remote update   # 更新远程仓储\ngit remote -v   # 显示所有远程仓库\ngit remote show [remote]    # 显示某个远程仓库信息\ngit remote add [shortname] [url]    # 增加一个新的远程仓库，并命名\n# 修改remote的地址可以进入 .git 编辑 config 文件中的url\n\n# 删除不存在对应远程分支的本地分支\ngit remote prune origin\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# pull 和 push\ngit pull [remote] [branch]  # 取回远程仓库的变化，并与本地分支合并\n\ngit fetch remote branch\ngit merge | git rebase\n\ngit push [remote] [branch]    # 上传本地分支到远程仓库\ngit push [remote] --force   # 强行推送当前分支到远程仓库\ngit push [remote] --all    # 推送所有分支到远程仓库\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# archive\ngit archive     # 生成一个可供发布的压缩包\n\n\n1\n# rebase\n * 注意：不可用于多人线上操作，适用于自己开发的分支使用\n\n# 合并多个commit为一个完整commit\n\ngit rebase -i  [startpoint]  [endpoint]\ngit rebase -i 36224db\ngit rebase -i HEAD~3\n\ngit rebase --continue | --skip | --abort | --quit | --edit-todo | --show-current-patch\n\n# pick：保留该commit（缩写:p）\n# reword：保留该commit，但我需要修改该commit的注释（缩写:r）\n# edit：保留该commit, 但我要停下来修改该提交(不仅仅修改注释)（缩写:e）\n# squash：将该commit和前一个commit合并（缩写:s）\n# fixup：将该commit和前一个commit合并，但我不要保留该提交的注释信息（缩写:f）\n# exec：执行shell命令（缩写:x）\n# drop：我要丢弃该commit（缩写:d）\n\n# git rebase 内的commit可以手动添加commit和调整commit顺序\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# cat-file\n * 显示版本库对象的内容、类型及大小信息\n\ngit cat-file -t commitid # 显示对象的类型\ngit cat-file -p commitid # 根据对象的类型显示其内容\n\n\n1\n2\n# 相关链接\n * git install\n * .gitignore\n * 为 git 设置 http https 代理\n * Git 的奇技淫巧\n * error while loading shared libraries 的解決方法\n * 如何从 GitHub 上下载单个文件夹\n * 优雅的提交你的 Git Commit Message\n * git moji\n * git.plugin.zsh\n * learngitbranching\n * 三年 Git 使用心得 & 常见问题整理\n * 一份值得收藏的 Git 异常处理清单',normalizedContent:'# config\n * 配置生效优先级：local > global > system\n\n# 配置\ngit config --global user.name "用户名"          # 配置用户名\ngit config --global user.email "用户邮箱"       # 配置邮箱\ngit config --global core.editor 编辑器          # 配置编辑器，模式使用vi或者vim\n\n# 查看配置\ngit config --global user.name       # 查看配置的用户名\ngit config --global user.email      # 查看配置的邮箱\n\n# 查看所有配置列表\ngit config --global --list      # 查看全局设置相关参数列表\ngit config --local --list       # 查看本地设置相关参数列表\ngit config --system --list      # 查看系统配置参数列表\ngit config --list               # 查看所有git的配置(全局+本地+系统)\n\ngit config --global https.proxy http://127.0.0.1:1080\ngit config --global https.proxy https://127.0.0.1:1080\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * ssh-keygen\n\n# 存放密钥的文件夹\n~/.ssh\n\n# 创建一个 ssh key\nssh-keygen -t rsa -c "your_email@example.com"\n# -t 指定密钥类型，默认是 rsa ，可以省略\n# -c 设置注释文字，比如邮箱\n# -f 指定密钥文件存储文件名\n\n# ~/.ssh中，默认情况下生成的文件\nid_dsa  # 私钥文件\nid_dsa.pub # 公钥文件\n\n# 添加公钥到指定服务器\n~/.ssh/id_rsa.pub\n\n# 测试一下该ssh key\nssh -t git@github.com\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * connecting to github with ssh\n\n# init\ngit init rep_name     # 创建一个新的带git仓库的项目\ngit init            # 为已存在的项目生成一个git仓库\ngit init --bare     # 初始化裸仓库\n\n\n1\n2\n3\n# clone\ngit clone [-b branchname] [--depth=number] url [filedirname]\ngit clone -b [branch] origin_url # 克隆远程分支\n\n\n1\n2\n# add\n * 添加文件到暂存区\n\ngit add filename  # 将工作区的某个文件添加到暂存区。\ngit add -u     # 添加所有被tracked文件中被修改或删除的文件信息到暂存区，不处理untracked的文件\ngit add -a     # 添加所有被tracked文件中被修改或删除的文件信息到暂存区，包括untracked的文件\ngit add .      # 将当前工作区的所有文件都加入暂存区\ngit add -i     # 进入交互界面模式，按需添加文件到缓存区 (不常用)\n\n# 示例\ngit add a\ngit add b\n# 配置不跟踪a和b\ngit add .gitignore\n\n# 配置跟踪a和b, 先清除标记状态，然后先添加.gitignore\ngit rm -r --cached .    # 清除版本控制标记，.代表所有文件，也可指定具体文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# .gitignore\n*      # 匹配零个或多个任意字符\n[abc]  # 只匹配括号内中的任意一个字符\n[0-9]  # - 代表范围，匹配0-9之间的任何字符\n?      # 匹配任意一个字符\n**     # 匹配任意的中间目录，例如a/*/z可以匹配:a/z,a/b/z,a/b/c/z等\n\n\n1\n2\n3\n4\n5\n# 忽略所有以 .c结尾的文件\n*.c\n\n# 但是 stream.c 会被git追踪\n!stream.c\n\n# 只忽略当前文件夹下的todo文件, 不包括其他文件夹下的todo例如: subdir/todo\n/todo\n\n# 忽略所有在build文件夹下的文件\nbuild/\n\n# 忽略 doc/notes.txt, 但不包括多层下.txt例如: doc/server/arch.txt\ndoc/*.txt\n\n# 忽略所有在doc目录下的.pdf文件\ndoc/**/*.pdf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# .gitkeep\ngit 默认会忽略空的文件夹, 使用.gitkeep 来追踪空的文件夹\n\n# commit\ngit commit -m "提交说明"    # 将暂存区内容提交到本地仓库\ngit commit -a -m "提交说明" # 跳过缓存区操作，直接把工作区内容提交到本地仓库\n\n# 合并暂存区和最近的一次commit，生成新的commit并替换掉老的。如果缓存区没内容，\n# 利用amend可以修改上次commit的提交说明。\n#\n# 注：因为amend后生成的commit是一个全新的commit，旧的会被删除，所以别在公共的\n# commit上使用amend！切记！！！\n\n# 提交时显示所有diff信息\ngit commit -v\n\ngit commit --amend\ngit commit --amend --no-edit # 沿用上次commit的提交说明\n\n# 使用一次新的commit，替代上一次提交\ngit commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\ngit commit --amend [file1] [file2] ...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# status\ngit status      # 查看工作区与暂存区的当前情况\ngit status -s   # 让结果以更简短的形式输出\n\n\n1\n2\n# diff\ngit diff                     # 比较工作区与暂存区的区别\ngit diff --cached           # 比较暂存区与head的区别\ngit diff branch_name              # 工作区与某分支的差异，远程分支这样写：remotes/origin/分支名\ngit diff head               # 工作区与head指针指向的内容差异\ngit diff <commit-id> filename-path     # 工作区某文件当前版本与历史版本的差异\ngit diff --stage           # 工作区文件与上次提交的差异(1.6 版本前用 --cached)\ngit diff 版本tag           # 查看从某个版本后都改动内容\ngit diff 分支a 分支b       # 比较从分支a和分支b的差异(也支持比较两个tag)\ngit diff 分支a...分支b    # 比较两分支在分开后各自的改动\ngit diff <commit-id> <commit-id>\n\n# 注：如果只想统计哪些文件被改动，多少行被改动，可以添加--stat参数\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# log\n * git-basics-viewing-the-commit-history\n\ngit log                 # 查看所有commit记录(sha-a校验和，作者名称，邮箱，提交时间，提交说明)\ngit log -p -次数                # 查看最近多少次的提交记录\ngit log --stat                  # 简略显示每次提交的内容更改\ngit log --oneline               # 让提交记录以精简的一行输出\ngit log –graph –all --online    # 图形展示分支的合并历史\ngit log --author=作者           # 查询作者的提交记录(和grep同时使用要加一个--all--match参数)\ngit log --grep=过滤信息         # 列出提交信息中包含过滤信息的提交记录\ngit log filename              # 查看某文件的修改记录，找背锅专用\ngit reflog      #用来记录你的每一次命令,显示当前分支的最近几次提交\ngit log -p filename #查看文件的详细变更\ngit log --no-merges master..  #查看尚未合并的变更\ngit log -p --no-merges master.. #查看尚未合并的文件变更\n\n–pretty # 可以通过 –pretty 对提交信息进行定制\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# blame\n * 查看某个文件是谁改动的\n\ngit blame filename # 查看某文件的每一行内容的作者，最新commit和提交时间\n\n\n1\n# alias\n# status改为st\ngit config --global alias.st status\n\n# git l 代替 git log –oneline –graph\ngit config --global alias.l "log --oneline --graph"\n\n\n1\n2\n3\n4\n5\n# tag\ngit tag           \t\t\t\t # 查看标签列表\ngit tag <tagname>                    # 轻量级标签\ngit tag -a <tagname> -m "附加信息"   # 带注释的标签\n\ngit tag -a <tagname> 版本id      # 某次commit打tag. 比如：git tag -a v1.1 bcfed96\n\ngit show tagname   \t\t\t\t # 查看具体标签\ngit checkout tagname\t\t\t     # 切换到标签\ngit fetch origin tag <tagname>  # 获取远程tag\n\ngit push [remote] [tag]    # 推送某标签到远程仓库\ngit push origin --tags\t    # 推送全部标签\n\ngit checkout -b <branch> <tagname>          # 新建分支的时候打上tag\ngit show <tagname>                     # 查看标签对应的信息\ngit tag -d <tagname>                   # 删除本地tag\n\ngit push origin --delete tag <tagname>  # 删除远程分支\ngit push origin :refs/tags/<tagname>  # 从远程删除命令tag\n\ngit checkout -b [branch] [tag]  # 新建一个分支，指向某个tag\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# 文件恢复\n * 文件恢复（未commit）git checkout\n\n# 删除暂存区中的文件：\ngit rm 文件名\ngit commit -m "提交说明"\n\n# 删除工作区文件，并且将这次删除放入暂存区\ngit rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\ngit rm --cached [file]\n\ngit clean -f #把未跟踪的文件清理掉\n\n# 改名文件，并且将这个改名放入暂存区\ngit mv [file-original] [file-renamed]\n\n# 误删恢复文件（用暂存区的文件覆盖工作区的文件）\ngit checkout -- 文件名\n\n# tip：git rm 等价于 git rm --cached 文件名 + rm 文件名\n# 务必注意：git checkout会抛弃当前工作区的更改!!!不可恢复！！！务必小心！！！\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * 文件恢复（已 add 未 commit）git reset head\n\ngit reset head -- filename # 暂存区恢复成head\ngit checkout -- filename # 工作区恢复成暂存区\n\n\n1\n2\n * 版本回退（已 commit）git reset –hard\n\ngit reset head^             # 恢复成上次提交的版本\ngit reset head^^            # 恢复成上上次提交的版本，就是多个^，以此类推或用\ngit reset head~3            # 也可以直接~次数\ngit reset --hard commitid      # git log查看到的hash值，取前七位即可，根据版本号回退\n\n# reset提供了三个可选参数：\n# - soft：只是改变head指针指向，缓存区和工作区不变\n# - mixed：修改head指针指向，暂存区内容丢失，工作区不变\n# - hard：修改head指针指向，暂存区内容丢失，工作区恢复以前状态\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# reflog\n * 查看输入过的指令记录\n\ngit reflog\n\n\n1\n# revert\n * 撤销某次提交: 撤销的只是文件变化，提交记录依旧存在\n\ngit revert head          # 撤销最近的一个提交\ngit revert commitid     # 撤销某次commit\n\n\n1\n2\n# show\n * 查看某次提交的修改内容\n\ngit show commitid     # 查看某次commit的修改内容\ngit show --no-merges master..  #查看尚未合并的文件变更\ngit show some-branch:some-file.js  #查看其他分支中的文件\n\n\n1\n2\n3\n# branch\ngit branch [branch-name]   # 创建分支\ngit branch          # 查看本地分支\n\ngit branch -a   #查看分支\ngit branch -r   #查看远程分支\n\ngit branch -d 分支名    # 删除分支，分支上有未提交更改是不能删除的\ngit branch -d 分支名    # 强行删除分支，尽管这个分支上有未提交的更改\n\ngit log --branches="被删除的分支名"     # 找到被删分支最新的commit版本号\ngit branch 分支名 版本号(前七位即可)    # 恢复被删分支\ngit branch -m 老分支名 新分支名     # 分支重命名\n\ngit push origin --delete [branch-name]  #删除远程分支\n\ngit branch --track [branch] [remote-branch] #新建一个分支，与指定的远程分支建立追踪关系\ngit branch --set-uptream [branch] [remote-branch] #建立追踪关系，在现有分支和指定的远程分支之间\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# checkout\ngit checkout branch_name         # 切换分支\ngit checkout -b branch_name      # 创建分支同时切换到这个分支\ngit checkout -              # 切换到上一分支\n\ngit checkout -b local_branch remote_branch # 拉去远程分支到本地\ngit checkout -b dev origin/dev\n\ngit checkout remote_branch_name  # 拉取远程分支到本地并自动新建分支切换到origin_branch_name\n\ngit checkout -b [branch] [tag]  #新建一个分支，指向某个tag\n\n# 分离头指针，即head不会指向任何branch，此时切换分支git不会自动保存所做的任何修改和提交的commit。\n# 如果需要保存修改需要保存到一个分支中，git branch newbranch commitid\ngit checkout commitid\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# merge\ngit merge [branch]      # 合并指定分支到当前分支\ngit cherry-pick [commit]    #选择一个commit，合并进当前分支\ngit merge -ff           # 快速合并，默认参数\ngit merge -ff-only      # 只有快速合并的情况才合并\ngit merge --no-ff       # 不使用快速合并\ngit merge -n 分支名     # 合并分支，不会在合并后显示合并前后的不同状态\ngit merge -stat 分支名  # 合并分支，合并结束后显示合并前后的不同状态\ngit merge -e 分支名     # 合并分支，合并前调用编辑器，可自行编写commit\n\ngit checkout master # 切换到master\ngit merge [branch_name] --no-ff #合并指定分支到当前分支master\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# stash\n * 切换分支时暂存未 commit 的更改\n\ngit stash   # 保存当前的改动\ngit stash apply     # 恢复保存改动, 不删除stash@{1}\ngit stash list      # 查看stash列表\ngit stash apply stash@{1}\ngit stash pop # 恢复并删除stash@{1}\n\n\n1\n2\n3\n4\n5\n# remote\ngit remote update   # 更新远程仓储\ngit remote -v   # 显示所有远程仓库\ngit remote show [remote]    # 显示某个远程仓库信息\ngit remote add [shortname] [url]    # 增加一个新的远程仓库，并命名\n# 修改remote的地址可以进入 .git 编辑 config 文件中的url\n\n# 删除不存在对应远程分支的本地分支\ngit remote prune origin\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# pull 和 push\ngit pull [remote] [branch]  # 取回远程仓库的变化，并与本地分支合并\n\ngit fetch remote branch\ngit merge | git rebase\n\ngit push [remote] [branch]    # 上传本地分支到远程仓库\ngit push [remote] --force   # 强行推送当前分支到远程仓库\ngit push [remote] --all    # 推送所有分支到远程仓库\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# archive\ngit archive     # 生成一个可供发布的压缩包\n\n\n1\n# rebase\n * 注意：不可用于多人线上操作，适用于自己开发的分支使用\n\n# 合并多个commit为一个完整commit\n\ngit rebase -i  [startpoint]  [endpoint]\ngit rebase -i 36224db\ngit rebase -i head~3\n\ngit rebase --continue | --skip | --abort | --quit | --edit-todo | --show-current-patch\n\n# pick：保留该commit（缩写:p）\n# reword：保留该commit，但我需要修改该commit的注释（缩写:r）\n# edit：保留该commit, 但我要停下来修改该提交(不仅仅修改注释)（缩写:e）\n# squash：将该commit和前一个commit合并（缩写:s）\n# fixup：将该commit和前一个commit合并，但我不要保留该提交的注释信息（缩写:f）\n# exec：执行shell命令（缩写:x）\n# drop：我要丢弃该commit（缩写:d）\n\n# git rebase 内的commit可以手动添加commit和调整commit顺序\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# cat-file\n * 显示版本库对象的内容、类型及大小信息\n\ngit cat-file -t commitid # 显示对象的类型\ngit cat-file -p commitid # 根据对象的类型显示其内容\n\n\n1\n2\n# 相关链接\n * git install\n * .gitignore\n * 为 git 设置 http https 代理\n * git 的奇技淫巧\n * error while loading shared libraries 的解決方法\n * 如何从 github 上下载单个文件夹\n * 优雅的提交你的 git commit message\n * git moji\n * git.plugin.zsh\n * learngitbranching\n * 三年 git 使用心得 & 常见问题整理\n * 一份值得收藏的 git 异常处理清单',charsets:{cjk:!0}},{title:"github的actions使用",frontmatter:{title:"github的actions使用",date:"2020-07-19T00:00:00.000Z",sidebar:"auto",tags:["github"],categories:["faq"],readingShow:"top"},regularPath:"/tools/github-actions.html",relativePath:"tools/github-actions.md",key:"v-f1c651ee",path:"/tools/github-actions.html",lastUpdated:"2020/8/2 下午4:27:20",headersStr:null,content:" * ruanyifeng: getting-started-with-github-actions\n   \n   \n * workflow-syntax-for-github-actions\n   \n   \n * JamesIves/github-pages-deploy-action\n   \n   项目根目录创建：.github/workflows/publish.yml\n   \n   name: Build and Deploy\n   on:\n     push:\n       branches:\n         - master\n   jobs:\n     build-and-deploy:\n       runs-on: ubuntu-latest\n   \n       strategy:\n         matrix:\n           node-version: [12.x]\n   \n       steps:\n         - name: Checkout 🛎️\n           uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.\n           with:\n             persist-credentials: false\n             fetch-depth: 0\n   \n         - name: Use Node.js ${{ matrix.node-version }}\n           uses: actions/setup-node@v1\n           with:\n             node-version: ${{ matrix.node-version }}\n   \n         - name: Install and Build 🔧 # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.\n           run: |\n             npm install\n             npm run build\n   \n         - name: Deploy 🚀\n           uses: JamesIves/github-pages-deploy-action@3.5.7\n           with:\n             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} #\n             BRANCH: gh-pages # The branch the action should deploy to.\n             FOLDER: build # The folder the action should deploy.\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   \n * caching-dependencies-to-speed-up-workflows - actions/cache\n   \n   name: Caching with npm\n   \n   on: push\n   \n   jobs:\n     build:\n       runs-on: ubuntu-latest\n   \n       steps:\n         - uses: actions/checkout@v2\n   \n         - name: Cache node modules\n           uses: actions/cache@v2\n           env:\n             cache-name: cache-node-modules\n           with:\n             # npm cache files are stored in `~/.npm` on Linux/macOS\n             path: ~/.npm\n             key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}\n             restore-keys: |\n               ${{ runner.os }}-build-${{ env.cache-name }}-\n               ${{ runner.os }}-build-\n               ${{ runner.os }}-\n   \n         - name: Install Dependencies\n           run: npm install\n   \n         - name: Build\n           run: npm build\n   \n         - name: Test\n           run: npm tests\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   \n * schedule: events-that-trigger-workflows\n   \n   \n\n# example\non:\n  schedule:\n    # * is a special character in YAML so you have to quote this string\n    - cron:  '*/15 * * * *'\n\n\n┌───────────── minute (0 - 59)\n│ ┌───────────── hour (0 - 23)\n│ │ ┌───────────── day of the month (1 - 31)\n│ │ │ ┌───────────── month (1 - 12 or JAN-DEC)\n│ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)\n│ │ │ │ │\n│ │ │ │ │\n│ │ │ │ │\n* * * * *\n\n# online website generate cron\nhttps://crontab.guru/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19",normalizedContent:" * ruanyifeng: getting-started-with-github-actions\n   \n   \n * workflow-syntax-for-github-actions\n   \n   \n * jamesives/github-pages-deploy-action\n   \n   项目根目录创建：.github/workflows/publish.yml\n   \n   name: build and deploy\n   on:\n     push:\n       branches:\n         - master\n   jobs:\n     build-and-deploy:\n       runs-on: ubuntu-latest\n   \n       strategy:\n         matrix:\n           node-version: [12.x]\n   \n       steps:\n         - name: checkout 🛎️\n           uses: actions/checkout@v2.3.1 # if you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.\n           with:\n             persist-credentials: false\n             fetch-depth: 0\n   \n         - name: use node.js ${{ matrix.node-version }}\n           uses: actions/setup-node@v1\n           with:\n             node-version: ${{ matrix.node-version }}\n   \n         - name: install and build 🔧 # this example project is built using npm and outputs the result to the 'build' folder. replace with the commands required to build your project, or remove this step entirely if your site is pre-built.\n           run: |\n             npm install\n             npm run build\n   \n         - name: deploy 🚀\n           uses: jamesives/github-pages-deploy-action@3.5.7\n           with:\n             github_token: ${{ secrets.github_token }} #\n             branch: gh-pages # the branch the action should deploy to.\n             folder: build # the folder the action should deploy.\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   \n * caching-dependencies-to-speed-up-workflows - actions/cache\n   \n   name: caching with npm\n   \n   on: push\n   \n   jobs:\n     build:\n       runs-on: ubuntu-latest\n   \n       steps:\n         - uses: actions/checkout@v2\n   \n         - name: cache node modules\n           uses: actions/cache@v2\n           env:\n             cache-name: cache-node-modules\n           with:\n             # npm cache files are stored in `~/.npm` on linux/macos\n             path: ~/.npm\n             key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashfiles('**/package-lock.json') }}\n             restore-keys: |\n               ${{ runner.os }}-build-${{ env.cache-name }}-\n               ${{ runner.os }}-build-\n               ${{ runner.os }}-\n   \n         - name: install dependencies\n           run: npm install\n   \n         - name: build\n           run: npm build\n   \n         - name: test\n           run: npm tests\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   \n * schedule: events-that-trigger-workflows\n   \n   \n\n# example\non:\n  schedule:\n    # * is a special character in yaml so you have to quote this string\n    - cron:  '*/15 * * * *'\n\n\n┌───────────── minute (0 - 59)\n│ ┌───────────── hour (0 - 23)\n│ │ ┌───────────── day of the month (1 - 31)\n│ │ │ ┌───────────── month (1 - 12 or jan-dec)\n│ │ │ │ ┌───────────── day of the week (0 - 6 or sun-sat)\n│ │ │ │ │\n│ │ │ │ │\n│ │ │ │ │\n* * * * *\n\n# online website generate cron\nhttps://crontab.guru/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19",charsets:{cjk:!0}},{title:"前端prettier格式化插件",frontmatter:{title:"前端prettier格式化插件",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["prettier"],categories:["tools"],readingShow:"top"},regularPath:"/tools/prettier.html",relativePath:"tools/prettier.md",key:"v-1a60816e",path:"/tools/prettier.html",lastUpdated:"2020/7/30 上午10:49:06",headersStr:null,content:' * prettier/prettier\n   \n   \n * prettier.io/playground\n   \n   \n * 安装\n   \n   \n\nnpm i -D prettier\nnpm i -D eslint-plugin-prettier\nnpm i -D eslint-config-prettier\n\n\n1\n2\n3\n * .eslintrc.js\n\nmodule.exports = {\n  root: true,\n  extends: ["standard", "prettier"],\n  env: {\n    es6: true,\n    browser: true,\n    node: true\n  },\n  plugins: ["prettier"],\n  parserOptions: {\n    sourceType: "module",\n    ecmaFeatures: {\n      jsx: true\n    },\n    parser: "babel-eslint"\n  },\n  rules: {\n    "prettier/prettier": "error"\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * webpack.config.js\n\nconst path = require(\'path\')\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(js|vue)$/,\n    \tloader: \'eslint-loader\',\n    \tenforce: \'pre\',\n    \tinclude: [path.join(__dirname, \'src\')],\n    \toptions: {\n          fix: true\n    \t}\n      }\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * prettier.config.js\n\nmodule.exports = {\n  trailingComma: "all",\n  tabWidth: 2,\n  semi: false,\n  bracketSpacing: true,\n  singleQuote: true,\n  jsxBracketSameLine: true,\n  useTabs: true\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 配置说明\n\nmodule.exports = {\n  printWidth: 80, // 一行的字符数，如果超过会进行换行，默认为80\n  tabWidth: 2, // 一个tab代表几个空格数，默认为80\n  useTabs: false, // 是否使用tab进行缩进，默认为false，表示用空格进行缩减\n  singleQuote: false, // 字符串是否使用单引号，默认为false，使用双引号\n  semi: true, // 行位是否使用分号，默认为true\n  trailingComma: "none", // 是否使用尾逗号，有三个可选值"<none|es5|all>"\n  bracketSpacing: true, // 对象大括号直接是否有空格，默认为true，效果：{ foo: bar }\n  parser: "babylon", // 代码的解析引擎，默认为babylon，与babel相同。\n  jsxBracketSameLinte: "false", // 在多行JSX元素最后一行的末尾添加 > 而使 > 单独一行\n  alwaysParens: "always" // 为单行箭头函数的参数添加圆括号, 默认值"avoid"; 可选值"< avoid | always >", 示例： (x) => x\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * .prettierignore\n\npackage-lock.json\n.next\nnode_modules/\ndist\nbuild\n\n\n1\n2\n3\n4\n5',normalizedContent:' * prettier/prettier\n   \n   \n * prettier.io/playground\n   \n   \n * 安装\n   \n   \n\nnpm i -d prettier\nnpm i -d eslint-plugin-prettier\nnpm i -d eslint-config-prettier\n\n\n1\n2\n3\n * .eslintrc.js\n\nmodule.exports = {\n  root: true,\n  extends: ["standard", "prettier"],\n  env: {\n    es6: true,\n    browser: true,\n    node: true\n  },\n  plugins: ["prettier"],\n  parseroptions: {\n    sourcetype: "module",\n    ecmafeatures: {\n      jsx: true\n    },\n    parser: "babel-eslint"\n  },\n  rules: {\n    "prettier/prettier": "error"\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * webpack.config.js\n\nconst path = require(\'path\')\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(js|vue)$/,\n    \tloader: \'eslint-loader\',\n    \tenforce: \'pre\',\n    \tinclude: [path.join(__dirname, \'src\')],\n    \toptions: {\n          fix: true\n    \t}\n      }\n    ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * prettier.config.js\n\nmodule.exports = {\n  trailingcomma: "all",\n  tabwidth: 2,\n  semi: false,\n  bracketspacing: true,\n  singlequote: true,\n  jsxbracketsameline: true,\n  usetabs: true\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 配置说明\n\nmodule.exports = {\n  printwidth: 80, // 一行的字符数，如果超过会进行换行，默认为80\n  tabwidth: 2, // 一个tab代表几个空格数，默认为80\n  usetabs: false, // 是否使用tab进行缩进，默认为false，表示用空格进行缩减\n  singlequote: false, // 字符串是否使用单引号，默认为false，使用双引号\n  semi: true, // 行位是否使用分号，默认为true\n  trailingcomma: "none", // 是否使用尾逗号，有三个可选值"<none|es5|all>"\n  bracketspacing: true, // 对象大括号直接是否有空格，默认为true，效果：{ foo: bar }\n  parser: "babylon", // 代码的解析引擎，默认为babylon，与babel相同。\n  jsxbracketsamelinte: "false", // 在多行jsx元素最后一行的末尾添加 > 而使 > 单独一行\n  alwaysparens: "always" // 为单行箭头函数的参数添加圆括号, 默认值"avoid"; 可选值"< avoid | always >", 示例： (x) => x\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * .prettierignore\n\npackage-lock.json\n.next\nnode_modules/\ndist\nbuild\n\n\n1\n2\n3\n4\n5',charsets:{cjk:!0}},{title:"前端监控sentry使用",frontmatter:{title:"前端监控sentry使用",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["sentry"],categories:["tools"],readingShow:"top"},regularPath:"/tools/sentry.html",relativePath:"tools/sentry.md",key:"v-6da2cf71",path:"/tools/sentry.html",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:23},{level:2,title:"example",slug:"example",normalizedTitle:"example",charIndex:255},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:3976}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"安装 example 相关链接",content:'sentry\n\ndocs/docker\n\n# 安装\n * Step1\n\ngit clone git@github.com:getsentry/onpremise.git\n\n\n1\n * Step2: cd onpremise\n\n * Step3: 创建 name volume，持久化\n\ndocker volume create --name=sentry-data && docker volume create --name=sentry-postgres\n\n\n1\n * Step4: cp -n .env.example .env\n   \n   \n * Step5\n   \n   \n\n# onpremise下 创建目录\nmkdir -p data/{sentry,postgres}\n# 一定执行，不然报错，然后再生成key\ndocker-compose build\n\n\n1\n2\n3\n4\n * Step6: 生成 key 放到 .env 文件中\n\n# 获取项目的key\ndocker-compose run --rm web config generate-secret-key\n\n\n1\n2\n * Step7: 生成数据库，并在这一步设置超级用户\n\ndocker-compose run --rm web upgrade\n\n\n1\n * Step8: 开启 sentry 服务\n\ndocker-compose up -d\n\n\n1\n * Step9: http:://localhost:9000 即可进入sentry\n   \n   \n * DSN\n   \n   \n\n# DSN位置：项目 - 选择目标项目 - 设置 - 客户端密钥 (DSN) - 配置\n{PROTOCOL}://{PUBLIC_KEY}:{SECRET_KEY}@{HOST}/{PATH}{PROJECT_ID}\n\nPROTOCOL 使用的协议: http或https\nPUBLIC_KEY 验证sdk的公钥\nSECRET_KEY 验证sdk的密钥\nHOST 目标sentry服务器\nPATH 通常为空\nPROJECT_ID 验证用户绑定的项目id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 客户端中使用\n\nimport * as Sentry from "@sentry/browser";\n\nSentry.init({\n  dsn: "http://PUBLIC_KEY:SECRET_KEY@localhost:9000/PROJECT_ID",\n  release: "sentry_app@20190710",\n  environment: process.env.NODE_ENV\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n# example\n * 工程目录部分文件 示例\n\n.\n├── .gitignore\n├── .sentryclirc # sentry配置文件\n├── config-overrides.js # react-app-rewired配置文件\n├── README.md\n├── build # 打包后的文件\n│   └── static\n│       ├── js\n│       │   ├── main.28cb07aa.chunk.js\n│       │   └── main.28cb07aa.chunk.js.map\n├── package.json\n├── public\n│   └── index.html\n├── src\n│   ├── App.js\n│   ├── Button.js\n│   ├── index.js\n│   └── serviceWorker.js\n└── yarn.lock\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * package.json部分配置\n\n  "scripts": {\n    "start": "react-app-rewired start",\n    "build": "react-app-rewired build"\n  },\n  "devDependencies": {\n    "@sentry/webpack-plugin": "^1.7.0",\n    "react-app-rewired": "^2.1.3"\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * npx create-react-app react-sentry\n * .sentryclirc\n\n[defaults]\nurl = http://localhost:9000\norg = sentry\nproject = react-sentry\n\n[auth]\ntoken = 9210xxxxxxxx42b5823d8b0f6ebfdbb4\n\n\n1\n2\n3\n4\n5\n6\n7\n * Button.js\n\nimport React, { Component } from "react";\nclass Button extends Component {\n  constructor() {\n    this.methodDoesNotExist = this.methodDoesNotExist.bind(this);\n  }\n  methodDoesNotExist() {\n    throw new Error(`我是一个抛出的错误日志: ${new Date()}`);\n  }\n  render() {\n    return <button onClick={this.methodDoesNotExist}> Break the world</button>;\n  }\n}\nexport default Button;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * App.js\n\nimport React from "react";\nimport * as Sentry from "@sentry/browser";\nimport Button from "./Button";\n\n// 自建sentry服务的dsn组成部分\n// dsn: PROTOCOL://PUBLIC_KEY:SECRET_KEY@localhost:9000/PROJECT_ID\nSentry.init({\n  dsn: "http://05bdfb2xxxx77:00a40ae1bxxxxf0@localhost:9000/4",\n  release: "react-sentry@20190711",\n  environment: process.env.NODE_ENV\n});\nfunction App() {\n  return (\n    <div className="App">\n      <Button />\n    </div>\n  );\n}\nexport default App;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * 上传 sourcemap 文件：sentry-cli\n\n# sentry-cli releases -o 组织 -p 项目 files staging@1.0.1 upload-sourcemaps js文件所在目录 --url-prefix 线上资源URI\n\n# 运行如下命令\nsentry-cli releases files react-sentry@20190711 upload-sourcemaps ./build/ --url-prefix \'~/static/js/\'\n\n\n1\n2\n3\n4\n * 上传 sourcemap 文件：@sentry/webpack-plugin\n\n# 通过配置webpack： config-overrides.js\n# 安装：react-app-rewired\n$ `npm install react-app-rewired --save-dev`\n\n\n1\n2\n3\n * 配置config-overrides.js\n\nconst SentryCliPlugin = require("@sentry/webpack-plugin");\n\nmodule.exports = function override(config, env) {\n  //do stuff with the webpack config...\n  if (process.env.NODE_ENV === "production") {\n    config.plugins.push(\n      new SentryCliPlugin({\n        include: "./build",\n        urlPrefix: "~/static/js/",\n        ignoreFile: ".sentrycliignore",\n        ignore: ["node_modules", "webpack.config.js"],\n        configFile: "sentry.properties"\n      })\n    );\n  }\n  return config;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * 运行npm run build上传 sourcemap\n\n# 相关链接\n * 异常监控服务 Sentry 的部署\n * 前端异常监控之 Sentry 的部署和使用\n * 给你的项目装个探头 — Sentry\n * webfunny',normalizedContent:'sentry\n\ndocs/docker\n\n# 安装\n * step1\n\ngit clone git@github.com:getsentry/onpremise.git\n\n\n1\n * step2: cd onpremise\n\n * step3: 创建 name volume，持久化\n\ndocker volume create --name=sentry-data && docker volume create --name=sentry-postgres\n\n\n1\n * step4: cp -n .env.example .env\n   \n   \n * step5\n   \n   \n\n# onpremise下 创建目录\nmkdir -p data/{sentry,postgres}\n# 一定执行，不然报错，然后再生成key\ndocker-compose build\n\n\n1\n2\n3\n4\n * step6: 生成 key 放到 .env 文件中\n\n# 获取项目的key\ndocker-compose run --rm web config generate-secret-key\n\n\n1\n2\n * step7: 生成数据库，并在这一步设置超级用户\n\ndocker-compose run --rm web upgrade\n\n\n1\n * step8: 开启 sentry 服务\n\ndocker-compose up -d\n\n\n1\n * step9: http:://localhost:9000 即可进入sentry\n   \n   \n * dsn\n   \n   \n\n# dsn位置：项目 - 选择目标项目 - 设置 - 客户端密钥 (dsn) - 配置\n{protocol}://{public_key}:{secret_key}@{host}/{path}{project_id}\n\nprotocol 使用的协议: http或https\npublic_key 验证sdk的公钥\nsecret_key 验证sdk的密钥\nhost 目标sentry服务器\npath 通常为空\nproject_id 验证用户绑定的项目id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * 客户端中使用\n\nimport * as sentry from "@sentry/browser";\n\nsentry.init({\n  dsn: "http://public_key:secret_key@localhost:9000/project_id",\n  release: "sentry_app@20190710",\n  environment: process.env.node_env\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n# example\n * 工程目录部分文件 示例\n\n.\n├── .gitignore\n├── .sentryclirc # sentry配置文件\n├── config-overrides.js # react-app-rewired配置文件\n├── readme.md\n├── build # 打包后的文件\n│   └── static\n│       ├── js\n│       │   ├── main.28cb07aa.chunk.js\n│       │   └── main.28cb07aa.chunk.js.map\n├── package.json\n├── public\n│   └── index.html\n├── src\n│   ├── app.js\n│   ├── button.js\n│   ├── index.js\n│   └── serviceworker.js\n└── yarn.lock\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * package.json部分配置\n\n  "scripts": {\n    "start": "react-app-rewired start",\n    "build": "react-app-rewired build"\n  },\n  "devdependencies": {\n    "@sentry/webpack-plugin": "^1.7.0",\n    "react-app-rewired": "^2.1.3"\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * npx create-react-app react-sentry\n * .sentryclirc\n\n[defaults]\nurl = http://localhost:9000\norg = sentry\nproject = react-sentry\n\n[auth]\ntoken = 9210xxxxxxxx42b5823d8b0f6ebfdbb4\n\n\n1\n2\n3\n4\n5\n6\n7\n * button.js\n\nimport react, { component } from "react";\nclass button extends component {\n  constructor() {\n    this.methoddoesnotexist = this.methoddoesnotexist.bind(this);\n  }\n  methoddoesnotexist() {\n    throw new error(`我是一个抛出的错误日志: ${new date()}`);\n  }\n  render() {\n    return <button onclick={this.methoddoesnotexist}> break the world</button>;\n  }\n}\nexport default button;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * app.js\n\nimport react from "react";\nimport * as sentry from "@sentry/browser";\nimport button from "./button";\n\n// 自建sentry服务的dsn组成部分\n// dsn: protocol://public_key:secret_key@localhost:9000/project_id\nsentry.init({\n  dsn: "http://05bdfb2xxxx77:00a40ae1bxxxxf0@localhost:9000/4",\n  release: "react-sentry@20190711",\n  environment: process.env.node_env\n});\nfunction app() {\n  return (\n    <div classname="app">\n      <button />\n    </div>\n  );\n}\nexport default app;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * 上传 sourcemap 文件：sentry-cli\n\n# sentry-cli releases -o 组织 -p 项目 files staging@1.0.1 upload-sourcemaps js文件所在目录 --url-prefix 线上资源uri\n\n# 运行如下命令\nsentry-cli releases files react-sentry@20190711 upload-sourcemaps ./build/ --url-prefix \'~/static/js/\'\n\n\n1\n2\n3\n4\n * 上传 sourcemap 文件：@sentry/webpack-plugin\n\n# 通过配置webpack： config-overrides.js\n# 安装：react-app-rewired\n$ `npm install react-app-rewired --save-dev`\n\n\n1\n2\n3\n * 配置config-overrides.js\n\nconst sentrycliplugin = require("@sentry/webpack-plugin");\n\nmodule.exports = function override(config, env) {\n  //do stuff with the webpack config...\n  if (process.env.node_env === "production") {\n    config.plugins.push(\n      new sentrycliplugin({\n        include: "./build",\n        urlprefix: "~/static/js/",\n        ignorefile: ".sentrycliignore",\n        ignore: ["node_modules", "webpack.config.js"],\n        configfile: "sentry.properties"\n      })\n    );\n  }\n  return config;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n * 运行npm run build上传 sourcemap\n\n# 相关链接\n * 异常监控服务 sentry 的部署\n * 前端异常监控之 sentry 的部署和使用\n * 给你的项目装个探头 — sentry\n * webfunny',charsets:{cjk:!0}},{title:"plugins",frontmatter:{readingShow:"top"},regularPath:"/tools/vscode/plugins.html",relativePath:"tools/vscode/plugins.md",key:"v-47686c8e",path:"/tools/vscode/plugins.html",headers:[{level:2,title:"plugins",slug:"plugins",normalizedTitle:"plugins",charIndex:2}],lastUpdated:"2021/1/7 上午4:29:55",headersStr:"plugins",content:"# plugins\n- Bookmarks\n- Bracket Pair Colorizer\n- Debugger for Chrome\n- EditorConfig for VS Code\n- Error Gutters\n- ESLint\n- TSLint\n- filesize\n- Add jsdoc comments\n\n- open in browser\n- PicGo\n\n- Live Server\n- Material Theme\n- Material Icon Theme\n- One Dark Pro\n\n- WakaTime\n- Terminal\n\n- Docker\n- Settings Sync\n\n- Git History\n- GitLens — Git supercharged\n\n\n\n- Auto Close Tag\n- Auto Rename Tag\n- Mithril Emmet\n- HTML CSS Support\n- HTML Snippets\n- HTMLHint\n\n- Import Cost\n- markdownlint\n\n- Path Autocomplete\n- Path Intellisense\n\n- Prettier - Code formatter\n- stylelint\n\n- TODO Highlight\n\n- Autoprefixer\n- CSScomb\n- language-stylus\n- Sass\n\n- REST Client\n\n- Angular 1 JavaScript and TypeScript Snippets\n\n- Vetur\n- Vue 2 Snippets\n\n- JavaScript (ES6) code snippets\n- ES7 React/Redux/GraphQL/React-Native snippets\n- Reactjs code snippets\n\n- minapp\n\n- npm\n- npm Intellisense\n\n- any-rule\n- code spell checker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70",normalizedContent:"# plugins\n- bookmarks\n- bracket pair colorizer\n- debugger for chrome\n- editorconfig for vs code\n- error gutters\n- eslint\n- tslint\n- filesize\n- add jsdoc comments\n\n- open in browser\n- picgo\n\n- live server\n- material theme\n- material icon theme\n- one dark pro\n\n- wakatime\n- terminal\n\n- docker\n- settings sync\n\n- git history\n- gitlens — git supercharged\n\n\n\n- auto close tag\n- auto rename tag\n- mithril emmet\n- html css support\n- html snippets\n- htmlhint\n\n- import cost\n- markdownlint\n\n- path autocomplete\n- path intellisense\n\n- prettier - code formatter\n- stylelint\n\n- todo highlight\n\n- autoprefixer\n- csscomb\n- language-stylus\n- sass\n\n- rest client\n\n- angular 1 javascript and typescript snippets\n\n- vetur\n- vue 2 snippets\n\n- javascript (es6) code snippets\n- es7 react/redux/graphql/react-native snippets\n- reactjs code snippets\n\n- minapp\n\n- npm\n- npm intellisense\n\n- any-rule\n- code spell checker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70",charsets:{}},{title:"vscode",frontmatter:{title:"vscode",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["editor"],categories:["tools"],readingShow:"top"},regularPath:"/tools/vscode/",relativePath:"tools/vscode/readme.md",key:"v-75920260",path:"/tools/vscode/",headers:[{level:2,title:"plugins",slug:"plugins",normalizedTitle:"plugins",charIndex:28},{level:2,title:"vscode setting",slug:"vscode-setting",normalizedTitle:"vscode setting",charIndex:1127},{level:2,title:"vscode vue",slug:"vscode-vue",normalizedTitle:"vscode vue",charIndex:2530},{level:2,title:"vscode config",slug:"vscode-config",normalizedTitle:"vscode config",charIndex:3964}],lastUpdated:"2020/7/22 上午4:40:52",headersStr:"plugins vscode setting vscode vue vscode config",content:' * vscode-generator-code\n\n# plugins\n- Bookmarks\n- Bracket Pair Colorizer\n- Debugger for Chrome\n- EditorConfig for VS Code\n- Error Gutters\n- ESLint\n- TSLint\n- filesize\n- Add jsdoc comments\n\n- open in browser\n- PicGo\n\n- Live Server\n- Material Theme\n- Material Icon Theme\n- One Dark Pro\n\n- WakaTime\n- Terminal\n\n- Docker\n- Settings Sync\n\n- Git History\n- GitLens — Git supercharged\n\n\n\n- Auto Close Tag\n- Auto Rename Tag\n- Mithril Emmet\n- HTML CSS Support\n- HTML Snippets\n- HTMLHint\n\n- Import Cost\n- markdownlint\n\n- Path Autocomplete\n- Path Intellisense\n\n- Prettier - Code formatter\n- stylelint\n\n- TODO Highlight\n\n- Autoprefixer\n- CSScomb\n- language-stylus\n- Sass\n\n- REST Client\n\n- Angular 1 JavaScript and TypeScript Snippets\n\n- Vetur\n- Vue 2 Snippets\n\n- JavaScript (ES6) code snippets\n- ES7 React/Redux/GraphQL/React-Native snippets\n- Reactjs code snippets\n\n- minapp\n\n- npm\n- npm Intellisense\n\n- any-rule\n- code spell checker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n# vscode setting\n * vscode-user-setting.json\n\n...\n{\n  "workbench.iconTheme": "material-icon-theme",\n  "terminal.integrated.shell.osx": "/bin/zsh",\n  "workbench.settings.useSplitJSON": true,\n  "editor.tabSize": 4,\n  "files.associations": {\n    "*.js": "javascript",\n    "*.cjson": "jsonc",\n    "*.wxss": "css",\n    "*.wxs": "javascript",\n    "*.vue": "vue",\n    "*.tpl": "html"\n  },\n  "emmet.triggerExpansionOnTab": true,\n  "emmet.includeLanguages": {\n    "javascript": "javascriptreact",\n    "wxml": "html"\n  },\n  "eslint.enable": true,\n  "eslint.validate": [\n    "vue",\n    "vue-html",\n    "javascript",\n    "typescript",\n    "javascriptreact",\n    "typescriptreact"\n  ],\n  "editor.formatOnPaste": true,\n  "editor.formatOnSave": true,\n  "editor.codeActionsOnSave": {\n    "source.fixAll.eslint": true\n  },\n  "eslint.codeActionsOnSave.mode": "all",\n  "html.format.extraLiners": "",\n  "javascript.updateImportsOnFileMove.enabled": "always",\n  "javascript.format.insertSpaceBeforeFunctionParenthesis": false,\n  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,\n  "[html]": {\n    "editor.defaultFormatter": "vscode.html-language-features"\n  }\n  // "[javascript]": {\n  //   "editor.defaultFormatter": "vscode.typescript-language-features"\n  // },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n# vscode vue\n * vscode-user-setting-vue.json\n\n{\n  "eslint.enable": true,\n  "eslint.validate": [\n    "javascript",\n    "javascriptreact",\n    {\n      "language": "html",\n      "autoFix": true\n    },\n    {\n      "language": "vue",\n      "autoFix": true\n    },\n    "typescript",\n    "typescriptreact"\n  ],\n  "files.associations": {\n    "*.vue": "vue"\n  },\n\n  "eslint.autoFixOnSave": true,\n  // prettier\n  "prettier.singleQuote": true,\n  "prettier.semi": false,\n  "prettier.requireConfig": true,\n\n  // editor\n  "editor.formatOnPaste": true,\n  "editor.formatOnSave": false,\n\n  "editor.codeActionsOnSave": {\n    "source.fixAll.eslint": true\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * workspace config vue\n\n{\n  "editor.formatOnPaste": true,\n  "editor.formatOnSave": false,\n  "editor.codeActionsOnSave": {\n    "source.fixAll.eslint": true\n  },\n  "eslint.enable": true,\n  "eslint.validate": ["javascript", "javascriptreact", "vue-html", "vue"],\n  "files.autoSave": "off",\n  "eslint.codeActionsOnSave.mode": "all",\n  //"vetur.format.defaultFormatter.js": "vscode-typescript",\n  // "vetur.format.defaultFormatter.html": "prettier",\n  // "vetur.format.defaultFormatter.js": "prettier-eslint",\n  "javascript.format.insertSpaceBeforeFunctionParenthesis": false,\n  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# vscode config\n"workbench.activityBar.visible": false // 隐藏控制工作台中的活动栏\n\n"breadcrumbs.enabled": true,  // 启用导航路径\n"workbench.settings.useSplitJSON": true  // 打开默认设置配置JSON\n\n// 自定义tab栏样式\n"workbench.colorCustomizations": {\n  "[One Dark Pro]": {\n    // "tab.activeBackground": "#504141",\n    "tab.activeBorder": "#ff0000"\n  },\n},\n"window.titleBarStyle": "custom"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13',normalizedContent:' * vscode-generator-code\n\n# plugins\n- bookmarks\n- bracket pair colorizer\n- debugger for chrome\n- editorconfig for vs code\n- error gutters\n- eslint\n- tslint\n- filesize\n- add jsdoc comments\n\n- open in browser\n- picgo\n\n- live server\n- material theme\n- material icon theme\n- one dark pro\n\n- wakatime\n- terminal\n\n- docker\n- settings sync\n\n- git history\n- gitlens — git supercharged\n\n\n\n- auto close tag\n- auto rename tag\n- mithril emmet\n- html css support\n- html snippets\n- htmlhint\n\n- import cost\n- markdownlint\n\n- path autocomplete\n- path intellisense\n\n- prettier - code formatter\n- stylelint\n\n- todo highlight\n\n- autoprefixer\n- csscomb\n- language-stylus\n- sass\n\n- rest client\n\n- angular 1 javascript and typescript snippets\n\n- vetur\n- vue 2 snippets\n\n- javascript (es6) code snippets\n- es7 react/redux/graphql/react-native snippets\n- reactjs code snippets\n\n- minapp\n\n- npm\n- npm intellisense\n\n- any-rule\n- code spell checker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n# vscode setting\n * vscode-user-setting.json\n\n...\n{\n  "workbench.icontheme": "material-icon-theme",\n  "terminal.integrated.shell.osx": "/bin/zsh",\n  "workbench.settings.usesplitjson": true,\n  "editor.tabsize": 4,\n  "files.associations": {\n    "*.js": "javascript",\n    "*.cjson": "jsonc",\n    "*.wxss": "css",\n    "*.wxs": "javascript",\n    "*.vue": "vue",\n    "*.tpl": "html"\n  },\n  "emmet.triggerexpansionontab": true,\n  "emmet.includelanguages": {\n    "javascript": "javascriptreact",\n    "wxml": "html"\n  },\n  "eslint.enable": true,\n  "eslint.validate": [\n    "vue",\n    "vue-html",\n    "javascript",\n    "typescript",\n    "javascriptreact",\n    "typescriptreact"\n  ],\n  "editor.formatonpaste": true,\n  "editor.formatonsave": true,\n  "editor.codeactionsonsave": {\n    "source.fixall.eslint": true\n  },\n  "eslint.codeactionsonsave.mode": "all",\n  "html.format.extraliners": "",\n  "javascript.updateimportsonfilemove.enabled": "always",\n  "javascript.format.insertspacebeforefunctionparenthesis": false,\n  "javascript.format.insertspaceafterfunctionkeywordforanonymousfunctions": false,\n  "[html]": {\n    "editor.defaultformatter": "vscode.html-language-features"\n  }\n  // "[javascript]": {\n  //   "editor.defaultformatter": "vscode.typescript-language-features"\n  // },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n# vscode vue\n * vscode-user-setting-vue.json\n\n{\n  "eslint.enable": true,\n  "eslint.validate": [\n    "javascript",\n    "javascriptreact",\n    {\n      "language": "html",\n      "autofix": true\n    },\n    {\n      "language": "vue",\n      "autofix": true\n    },\n    "typescript",\n    "typescriptreact"\n  ],\n  "files.associations": {\n    "*.vue": "vue"\n  },\n\n  "eslint.autofixonsave": true,\n  // prettier\n  "prettier.singlequote": true,\n  "prettier.semi": false,\n  "prettier.requireconfig": true,\n\n  // editor\n  "editor.formatonpaste": true,\n  "editor.formatonsave": false,\n\n  "editor.codeactionsonsave": {\n    "source.fixall.eslint": true\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * workspace config vue\n\n{\n  "editor.formatonpaste": true,\n  "editor.formatonsave": false,\n  "editor.codeactionsonsave": {\n    "source.fixall.eslint": true\n  },\n  "eslint.enable": true,\n  "eslint.validate": ["javascript", "javascriptreact", "vue-html", "vue"],\n  "files.autosave": "off",\n  "eslint.codeactionsonsave.mode": "all",\n  //"vetur.format.defaultformatter.js": "vscode-typescript",\n  // "vetur.format.defaultformatter.html": "prettier",\n  // "vetur.format.defaultformatter.js": "prettier-eslint",\n  "javascript.format.insertspacebeforefunctionparenthesis": false,\n  "javascript.format.insertspaceafterfunctionkeywordforanonymousfunctions": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# vscode config\n"workbench.activitybar.visible": false // 隐藏控制工作台中的活动栏\n\n"breadcrumbs.enabled": true,  // 启用导航路径\n"workbench.settings.usesplitjson": true  // 打开默认设置配置json\n\n// 自定义tab栏样式\n"workbench.colorcustomizations": {\n  "[one dark pro]": {\n    // "tab.activebackground": "#504141",\n    "tab.activeborder": "#ff0000"\n  },\n},\n"window.titlebarstyle": "custom"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13',charsets:{cjk:!0}},{title:"vscode config",frontmatter:{readingShow:"top"},regularPath:"/tools/vscode/user.other.html",relativePath:"tools/vscode/user.other.md",key:"v-63739c6b",path:"/tools/vscode/user.other.html",headers:[{level:2,title:"vscode config",slug:"vscode-config",normalizedTitle:"vscode config",charIndex:2}],lastUpdated:"2019/12/27 上午6:06:49",headersStr:"vscode config",content:'# vscode config\n"workbench.activityBar.visible": false // 隐藏控制工作台中的活动栏\n\n"breadcrumbs.enabled": true,  // 启用导航路径\n"workbench.settings.useSplitJSON": true  // 打开默认设置配置JSON\n\n// 自定义tab栏样式\n"workbench.colorCustomizations": {\n  "[One Dark Pro]": {\n    // "tab.activeBackground": "#504141",\n    "tab.activeBorder": "#ff0000"\n  },\n},\n"window.titleBarStyle": "custom"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13',normalizedContent:'# vscode config\n"workbench.activitybar.visible": false // 隐藏控制工作台中的活动栏\n\n"breadcrumbs.enabled": true,  // 启用导航路径\n"workbench.settings.usesplitjson": true  // 打开默认设置配置json\n\n// 自定义tab栏样式\n"workbench.colorcustomizations": {\n  "[one dark pro]": {\n    // "tab.activebackground": "#504141",\n    "tab.activeborder": "#ff0000"\n  },\n},\n"window.titlebarstyle": "custom"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13',charsets:{cjk:!0}},{title:"vscode setting",frontmatter:{readingShow:"top"},regularPath:"/tools/vscode/user.setting.html",relativePath:"tools/vscode/user.setting.md",key:"v-cb23c32a",path:"/tools/vscode/user.setting.html",headers:[{level:2,title:"vscode setting",slug:"vscode-setting",normalizedTitle:"vscode setting",charIndex:2}],lastUpdated:"2020/7/22 上午4:40:52",headersStr:"vscode setting",content:'# vscode setting\n * vscode-user-setting.json\n\n...\n{\n  "workbench.iconTheme": "material-icon-theme",\n  "terminal.integrated.shell.osx": "/bin/zsh",\n  "workbench.settings.useSplitJSON": true,\n  "editor.tabSize": 4,\n  "files.associations": {\n    "*.js": "javascript",\n    "*.cjson": "jsonc",\n    "*.wxss": "css",\n    "*.wxs": "javascript",\n    "*.vue": "vue",\n    "*.tpl": "html"\n  },\n  "emmet.triggerExpansionOnTab": true,\n  "emmet.includeLanguages": {\n    "javascript": "javascriptreact",\n    "wxml": "html"\n  },\n  "eslint.enable": true,\n  "eslint.validate": [\n    "vue",\n    "vue-html",\n    "javascript",\n    "typescript",\n    "javascriptreact",\n    "typescriptreact"\n  ],\n  "editor.formatOnPaste": true,\n  "editor.formatOnSave": true,\n  "editor.codeActionsOnSave": {\n    "source.fixAll.eslint": true\n  },\n  "eslint.codeActionsOnSave.mode": "all",\n  "html.format.extraLiners": "",\n  "javascript.updateImportsOnFileMove.enabled": "always",\n  "javascript.format.insertSpaceBeforeFunctionParenthesis": false,\n  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,\n  "[html]": {\n    "editor.defaultFormatter": "vscode.html-language-features"\n  }\n  // "[javascript]": {\n  //   "editor.defaultFormatter": "vscode.typescript-language-features"\n  // },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45',normalizedContent:'# vscode setting\n * vscode-user-setting.json\n\n...\n{\n  "workbench.icontheme": "material-icon-theme",\n  "terminal.integrated.shell.osx": "/bin/zsh",\n  "workbench.settings.usesplitjson": true,\n  "editor.tabsize": 4,\n  "files.associations": {\n    "*.js": "javascript",\n    "*.cjson": "jsonc",\n    "*.wxss": "css",\n    "*.wxs": "javascript",\n    "*.vue": "vue",\n    "*.tpl": "html"\n  },\n  "emmet.triggerexpansionontab": true,\n  "emmet.includelanguages": {\n    "javascript": "javascriptreact",\n    "wxml": "html"\n  },\n  "eslint.enable": true,\n  "eslint.validate": [\n    "vue",\n    "vue-html",\n    "javascript",\n    "typescript",\n    "javascriptreact",\n    "typescriptreact"\n  ],\n  "editor.formatonpaste": true,\n  "editor.formatonsave": true,\n  "editor.codeactionsonsave": {\n    "source.fixall.eslint": true\n  },\n  "eslint.codeactionsonsave.mode": "all",\n  "html.format.extraliners": "",\n  "javascript.updateimportsonfilemove.enabled": "always",\n  "javascript.format.insertspacebeforefunctionparenthesis": false,\n  "javascript.format.insertspaceafterfunctionkeywordforanonymousfunctions": false,\n  "[html]": {\n    "editor.defaultformatter": "vscode.html-language-features"\n  }\n  // "[javascript]": {\n  //   "editor.defaultformatter": "vscode.typescript-language-features"\n  // },\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45',charsets:{}},{title:"vscode vue",frontmatter:{readingShow:"top"},regularPath:"/tools/vscode/user.setting.vue.html",relativePath:"tools/vscode/user.setting.vue.md",key:"v-f03e012a",path:"/tools/vscode/user.setting.vue.html",headers:[{level:2,title:"vscode vue",slug:"vscode-vue",normalizedTitle:"vscode vue",charIndex:2}],lastUpdated:"2020/7/22 上午4:40:52",headersStr:"vscode vue",content:'# vscode vue\n * vscode-user-setting-vue.json\n\n{\n  "eslint.enable": true,\n  "eslint.validate": [\n    "javascript",\n    "javascriptreact",\n    {\n      "language": "html",\n      "autoFix": true\n    },\n    {\n      "language": "vue",\n      "autoFix": true\n    },\n    "typescript",\n    "typescriptreact"\n  ],\n  "files.associations": {\n    "*.vue": "vue"\n  },\n\n  "eslint.autoFixOnSave": true,\n  // prettier\n  "prettier.singleQuote": true,\n  "prettier.semi": false,\n  "prettier.requireConfig": true,\n\n  // editor\n  "editor.formatOnPaste": true,\n  "editor.formatOnSave": false,\n\n  "editor.codeActionsOnSave": {\n    "source.fixAll.eslint": true\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * workspace config vue\n\n{\n  "editor.formatOnPaste": true,\n  "editor.formatOnSave": false,\n  "editor.codeActionsOnSave": {\n    "source.fixAll.eslint": true\n  },\n  "eslint.enable": true,\n  "eslint.validate": ["javascript", "javascriptreact", "vue-html", "vue"],\n  "files.autoSave": "off",\n  "eslint.codeActionsOnSave.mode": "all",\n  //"vetur.format.defaultFormatter.js": "vscode-typescript",\n  // "vetur.format.defaultFormatter.html": "prettier",\n  // "vetur.format.defaultFormatter.js": "prettier-eslint",\n  "javascript.format.insertSpaceBeforeFunctionParenthesis": false,\n  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16',normalizedContent:'# vscode vue\n * vscode-user-setting-vue.json\n\n{\n  "eslint.enable": true,\n  "eslint.validate": [\n    "javascript",\n    "javascriptreact",\n    {\n      "language": "html",\n      "autofix": true\n    },\n    {\n      "language": "vue",\n      "autofix": true\n    },\n    "typescript",\n    "typescriptreact"\n  ],\n  "files.associations": {\n    "*.vue": "vue"\n  },\n\n  "eslint.autofixonsave": true,\n  // prettier\n  "prettier.singlequote": true,\n  "prettier.semi": false,\n  "prettier.requireconfig": true,\n\n  // editor\n  "editor.formatonpaste": true,\n  "editor.formatonsave": false,\n\n  "editor.codeactionsonsave": {\n    "source.fixall.eslint": true\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n * workspace config vue\n\n{\n  "editor.formatonpaste": true,\n  "editor.formatonsave": false,\n  "editor.codeactionsonsave": {\n    "source.fixall.eslint": true\n  },\n  "eslint.enable": true,\n  "eslint.validate": ["javascript", "javascriptreact", "vue-html", "vue"],\n  "files.autosave": "off",\n  "eslint.codeactionsonsave.mode": "all",\n  //"vetur.format.defaultformatter.js": "vscode-typescript",\n  // "vetur.format.defaultformatter.html": "prettier",\n  // "vetur.format.defaultformatter.js": "prettier-eslint",\n  "javascript.format.insertspacebeforefunctionparenthesis": false,\n  "javascript.format.insertspaceafterfunctionkeywordforanonymousfunctions": false\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16',charsets:{}},{title:"webpack",frontmatter:{title:"webpack",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",tags:["webpack","gulp","pxtorem"],categories:["tools"],readingShow:"top"},regularPath:"/tools/webpack.html",relativePath:"tools/webpack.md",key:"v-73fc990b",path:"/tools/webpack.html",headers:[{level:2,title:"entry",slug:"entry",normalizedTitle:"entry",charIndex:2},{level:2,title:"output",slug:"output",normalizedTitle:"output",charIndex:57},{level:2,title:"plugins",slug:"plugins",normalizedTitle:"plugins",charIndex:144},{level:2,title:"module",slug:"module",normalizedTitle:"module",charIndex:170},{level:2,title:"mode",slug:"mode",normalizedTitle:"mode",charIndex:199},{level:2,title:"devServer",slug:"devserver",normalizedTitle:"devserver",charIndex:236},{level:2,title:"自动引入某文件夹下的文件",slug:"自动引入某文件夹下的文件",normalizedTitle:"自动引入某文件夹下的文件",charIndex:939},{level:2,title:"gulp",slug:"gulp",normalizedTitle:"gulp",charIndex:1697},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:2676}],lastUpdated:"2020/8/3 上午10:17:07",headersStr:"entry output plugins module mode devServer 自动引入某文件夹下的文件 gulp 相关链接",content:'# entry\n * 单个入口: string|object\n * 多页面: object\n * 动态入口\n\n# output\n * 单入口: object\n * 多入口: object\n * publicPath: string\n * chunkFilename: string\n\n# plugins\n * plugins: []\n\n# module\n * module.rules:[]\n\n# mode\n * development\n * production\n\n# devServer\n * npm package: mocker-api\n\n...\n{\n  "open": true,\n  "overlay": true,\n  "hot": true,\n  "host": "0.0.0.0",\n  "port": 8080,\n  "inline": true,\n  "disableHostCheck": true,\n  "stats": {\n    "colors": true\n  },\n  "historyApiFallback": true,\n  "before": app => {\n    // mock api:\n    // const ApiMocker = require(\'mocker-api\');\n    apiMocker(app, path.join(__dirname, "./mock/index.js"));\n  },\n  "proxy": {\n    "/api": {\n      "target": "http://example.com/api", // trunk 环境\n      "changeOrigin": true,\n      "secure": false,\n      "logLevel": "debug",\n      "pathRewrite": {\n        "^/api": ""\n      }\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# 自动引入某文件夹下的文件\n/* 目录结构如下\nrouter\n├── index.js\n├── other\n│   └── index.js\n├── order\n│   └── index.js\n└── routes.js\n*/\n// 自动引入router目录下文件夹内的index.js文件（例：project/index.js）\n\n/**\nrequire.context(directory,useSubdirectories,regExp)\n\n  directory：说明需要检索的目录\n  useSubdirectories：是否检索子目录\n  regExp: 匹配文件的正则表达式,一般是文件名\n*/\n\nconst routerContext = require.context("./", true, /index\\.js$/);\nrouterContext.keys().forEach(route => {\n  // 如果是根目录的 index.js 、不处理\n  if (route.startsWith("./index")) {\n    return;\n  }\n  const routerModule = routerContext(route);\n  /**\n   * 兼容 import export 和 require module.export 两种规范\n   */\n  routes = [...routes, ...(routerModule.default || routerModule)];\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# gulp\n * 项目目录\n\n├── gulpfile.js\n├── output\n├── package-lock.json\n├── package.json\n└── src\n    ├── index.js\n    ├── m\n    │   └── m.css\n    ├── other\n    │   ├── m\n    │   │   └── other-m.css\n    │   └── pc\n    │       └── other-pc.css\n    └── pc\n        └── pc.css\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * gulpfile.js\n\n// 将 `src/xxx/m/xxx.css`转换为rem\n\nconst { src, dest } = require(\'gulp\');\nvar postcss = require(\'gulp-postcss\');\nvar pxtorem = require(\'postcss-pxtorem\');\nexports.default = function() {\n    // https://github.com/cuth/postcss-pxtorem 配置\n    var processors = [\n        pxtorem({\n            replace: true,\n            propList: [\'*\'],\n            exclude: function(path) {\n                const matchPath = /src\\/(.+\\/)*m\\//.test(path)\n                return !matchPath\n            }\n        })\n    ];\n\n    return src(\'src/**/*.css\')\n        .pipe(postcss(processors))\n        .pipe(dest(\'output/css\'));\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# 相关链接\n * webpack 插件总结归类\n * poetries/mywiki@github\n * babel@juejin\n * 使用 webpack 的各种插件提升你的开发效率\n * webpack 中文\n * webpack：从入门到真实项目配置\n * webpack 集\n * JSDoc',normalizedContent:'# entry\n * 单个入口: string|object\n * 多页面: object\n * 动态入口\n\n# output\n * 单入口: object\n * 多入口: object\n * publicpath: string\n * chunkfilename: string\n\n# plugins\n * plugins: []\n\n# module\n * module.rules:[]\n\n# mode\n * development\n * production\n\n# devserver\n * npm package: mocker-api\n\n...\n{\n  "open": true,\n  "overlay": true,\n  "hot": true,\n  "host": "0.0.0.0",\n  "port": 8080,\n  "inline": true,\n  "disablehostcheck": true,\n  "stats": {\n    "colors": true\n  },\n  "historyapifallback": true,\n  "before": app => {\n    // mock api:\n    // const apimocker = require(\'mocker-api\');\n    apimocker(app, path.join(__dirname, "./mock/index.js"));\n  },\n  "proxy": {\n    "/api": {\n      "target": "http://example.com/api", // trunk 环境\n      "changeorigin": true,\n      "secure": false,\n      "loglevel": "debug",\n      "pathrewrite": {\n        "^/api": ""\n      }\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n# 自动引入某文件夹下的文件\n/* 目录结构如下\nrouter\n├── index.js\n├── other\n│   └── index.js\n├── order\n│   └── index.js\n└── routes.js\n*/\n// 自动引入router目录下文件夹内的index.js文件（例：project/index.js）\n\n/**\nrequire.context(directory,usesubdirectories,regexp)\n\n  directory：说明需要检索的目录\n  usesubdirectories：是否检索子目录\n  regexp: 匹配文件的正则表达式,一般是文件名\n*/\n\nconst routercontext = require.context("./", true, /index\\.js$/);\nroutercontext.keys().foreach(route => {\n  // 如果是根目录的 index.js 、不处理\n  if (route.startswith("./index")) {\n    return;\n  }\n  const routermodule = routercontext(route);\n  /**\n   * 兼容 import export 和 require module.export 两种规范\n   */\n  routes = [...routes, ...(routermodule.default || routermodule)];\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# gulp\n * 项目目录\n\n├── gulpfile.js\n├── output\n├── package-lock.json\n├── package.json\n└── src\n    ├── index.js\n    ├── m\n    │   └── m.css\n    ├── other\n    │   ├── m\n    │   │   └── other-m.css\n    │   └── pc\n    │       └── other-pc.css\n    └── pc\n        └── pc.css\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * gulpfile.js\n\n// 将 `src/xxx/m/xxx.css`转换为rem\n\nconst { src, dest } = require(\'gulp\');\nvar postcss = require(\'gulp-postcss\');\nvar pxtorem = require(\'postcss-pxtorem\');\nexports.default = function() {\n    // https://github.com/cuth/postcss-pxtorem 配置\n    var processors = [\n        pxtorem({\n            replace: true,\n            proplist: [\'*\'],\n            exclude: function(path) {\n                const matchpath = /src\\/(.+\\/)*m\\//.test(path)\n                return !matchpath\n            }\n        })\n    ];\n\n    return src(\'src/**/*.css\')\n        .pipe(postcss(processors))\n        .pipe(dest(\'output/css\'));\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# 相关链接\n * webpack 插件总结归类\n * poetries/mywiki@github\n * babel@juejin\n * 使用 webpack 的各种插件提升你的开发效率\n * webpack 中文\n * webpack：从入门到真实项目配置\n * webpack 集\n * jsdoc',charsets:{cjk:!0}},{title:"vue2.x",frontmatter:{title:"vue2.x",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["vue"],readingShow:"top"},regularPath:"/vueJs/",relativePath:"vueJs/README.md",key:"v-5d5f8230",path:"/vueJs/",headers:[{level:2,title:"cli",slug:"cli",normalizedTitle:"cli",charIndex:72},{level:2,title:"lifecycle",slug:"lifecycle",normalizedTitle:"lifecycle",charIndex:90},{level:2,title:"vuex",slug:"vuex",normalizedTitle:"vuex",charIndex:12},{level:2,title:"vue 自动注册全局组件",slug:"vue-自动注册全局组件",normalizedTitle:"vue 自动注册全局组件",charIndex:240},{level:2,title:"自动注册views下的路由",slug:"自动注册views下的路由",normalizedTitle:"自动注册views下的路由",charIndex:1613},{level:2,title:"项目性能优化",slug:"项目性能优化",normalizedTitle:"项目性能优化",charIndex:2503},{level:3,title:"代码层面的优化",slug:"代码层面的优化",normalizedTitle:"代码层面的优化",charIndex:2611},{level:3,title:"Webpack 层面的优化",slug:"webpack-层面的优化",normalizedTitle:"webpack 层面的优化",charIndex:2814},{level:3,title:"基础的 Web 技术的优化",slug:"基础的-web-技术的优化",normalizedTitle:"基础的 web 技术的优化",charIndex:2948},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:3031}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"cli lifecycle vuex vue 自动注册全局组件 自动注册views下的路由 项目性能优化 代码层面的优化 Webpack 层面的优化 基础的 Web 技术的优化 相关链接",content:"\n\n * vue\n * vuex\n * vue-router\n * awesome-vue\n * vuepress\n * nuxt.js\n\n# cli\n * vue-cli\n\n# lifecycle\n * vue 生命周期-图来源官网\n   \n   \n   \n   \n\n# vuex\n * vuex 工作流程-图来源官网\n   \n   \n   \n   \n * store ➡️ dispatch ➡️ action ➡️ mutation ➡️ state\n   \n   \n\n# vue 自动注册全局组件\nconst path = require(\"path\");\n/**\n * 首字母大写\n * @param str 字符串\n * @example heheHaha\n * @return {string} HeheHaha\n */\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n/**\n * 对符合'xx/xx.vue'组件格式的组件取组件名\n * @param str fileName\n * @example abc/bcd/def/basicTable.vue\n * @return {string} BasicTable\n */\nfunction validateFileName(str) {\n  return (\n    /^\\S+\\.vue$/.test(str) &&\n    str.replace(/^\\S+\\/(\\w+)\\.vue$/, (rs, $1) => capitalizeFirstLetter($1))\n  );\n}\n\nconst requireComponent = require.context(\"../../components\", true, /\\.vue$/);\n// 找到组件文件夹下以.vue命名的文件，如果文件名为index，那么取组件中的name作为注册的组件名\nrequireComponent.keys().forEach(filePath => {\n  // 解析文件路径： 返回文件内容\n  const componentConfig = requireComponent(filePath);\n  const fileName = validateFileName(filePath);\n  const _filePath = path.join(__dirname, \"../../components\", filePath);\n  if (!componentConfig.default.name) {\n    console.error(\n      `Vue Components path: (${_filePath}) should have a component name!!!`\n    );\n  }\n  const componentName = componentConfig.default.name\n    ? componentConfig.default.name\n    : fileName + \"Com\";\n\n  console.log({ componentName });\n  Vue.component(componentName, componentConfig.default || componentConfig);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n# 自动注册views下的路由\n * router.js\n\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport routes from './routes'\n\nVue.use(VueRouter)\n\nconst router = new VueRouter({\n  mode: 'history',\n  routes\n})\n\nexport default router\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * routes.js\n\n// 利用 webpack 读取 views 目录下的 router.js\nconst routerFile = require.context('../', true, /^\\.\\/views\\/[\\w.-]+\\/router.js$/)\n\n// 返回的 routerFile.keys() 是一个路由配置的路径数组列表 ['./views/Page/router.js']\n// 循环递归调用 routerFile 去解析 每一项的路径地址 './views/Page/router.js'\n// 返回 文件内容: Module { default: { path: \"/page\", name: 'xxx', children:[{},...]}, ... }\n\n// 获取返回路由集合\nconst routesConfig = (r => {\n  return r.keys().map(key => r(key).default)\n})(routerFile)\n\n// redirect\nconst redirectConfig = {\n  path: '*',\n  redirect: '/'\n}\n\nconst routes = routesConfig.concat(redirectConfig)\nreturn routes\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# 项目性能优化\n * 原文: Vue 项目性能优化 — 实践指南\n * 基于 vue-cli@3 的项目可行性优化方案探索\n * 探索 vue2 项目性能优化的各种可行性方案\n * vue 性能优化 9 点建议\n\n# 代码层面的优化\n * v-if 和 v-show 区分使用场景\n * computed 和 watch 区分使用场景\n * v-for 遍历必须为 item 添加 key，且避免同时使用 v-if\n * 长列表性能优化/ Object.freeze\n * 事件的销毁\n * 图片资源懒加载\n * 路由懒加载\n * 第三方插件的按需引入\n * 优化无限列表性能\n * 服务端渲染 SSR or 预渲染\n\n# Webpack 层面的优化\n * Webpack 对图片进行压缩\n * 减少 ES6 转为 ES5 的冗余代码\n * 提取公共代码\n * 模板预编译\n * 提取组件的 CSS\n * 优化 SourceMap\n * 构建结果输出分析\n * Vue 项目的编译优化\n\n# 基础的 Web 技术的优化\n * 开启 gzip 压缩\n * 浏览器缓存\n * CDN 的使用\n * 使用 Chrome Performance 查找性能瓶颈\n\n# 相关链接\n * vue 源码解析\n * vue vnode 解析\n * Vue3.0 前的 TypeScript 最佳入门实践\n * 7 个有用的 Vue 开发技巧\n * 为 vue 项目添加骨架屏\n * Vue3.0 前的 TypeScript 最佳入门实践\n * VUE 防抖与节流的最佳解决方案——函数式组件\n * cube-ui\n * mint-ui\n * vuepress\n * element ui\n * vue-element-admin\n * Apollo Boost\n * Vue + GraphQL 初试\n * VUE 组件汇总\n * vue-awesome-swipe\n * hilongjw/vue-lazyload\n * vue-pull-to-refresh\n * vue+element 的动态路由案例\n * xinxin-huang/vue-live-doc\n * 快速搭建一个 Vue Live Markdown\n * 参考 ElementUI 的文档实现方案，实现自己组件库的说明文档\n * hsian/vue-component\n * 从零开始搭建 Vue 组件库 VV-UI\n * VV-UI/VV-UI\n * QingWei-Li/vue-markdown-loader\n * wxsms/vue-md-loader\n * 基于 webpack4.0 的用于开发 vue 组件的全自动脚手架配置\n * vue 中 8 种组件通信方式\n * Vue 组件间通信六种方式（完整版）\n * vue 2.6 中 slot 的新用法\n * 30 道 Vue 面试题，内含详细讲解\n * 通过 vue-cli3 构建一个 SSR 应用程序\n * vue-cli3 项目从搭建优化到 docker 部署\n * 从零开发一套完整的 vue 项目开发环境\n * 深度解析！Vue3 & React Hooks 新 UI 组件原理：Modal 弹窗\n * vue-cli3\n * 一个基于 Vue.js 开发的个人博客\n * vue-cli3\n * ztree\n * vue-magic-tree",normalizedContent:"\n\n * vue\n * vuex\n * vue-router\n * awesome-vue\n * vuepress\n * nuxt.js\n\n# cli\n * vue-cli\n\n# lifecycle\n * vue 生命周期-图来源官网\n   \n   \n   \n   \n\n# vuex\n * vuex 工作流程-图来源官网\n   \n   \n   \n   \n * store ➡️ dispatch ➡️ action ➡️ mutation ➡️ state\n   \n   \n\n# vue 自动注册全局组件\nconst path = require(\"path\");\n/**\n * 首字母大写\n * @param str 字符串\n * @example hehehaha\n * @return {string} hehehaha\n */\nfunction capitalizefirstletter(str) {\n  return str.charat(0).touppercase() + str.slice(1);\n}\n/**\n * 对符合'xx/xx.vue'组件格式的组件取组件名\n * @param str filename\n * @example abc/bcd/def/basictable.vue\n * @return {string} basictable\n */\nfunction validatefilename(str) {\n  return (\n    /^\\s+\\.vue$/.test(str) &&\n    str.replace(/^\\s+\\/(\\w+)\\.vue$/, (rs, $1) => capitalizefirstletter($1))\n  );\n}\n\nconst requirecomponent = require.context(\"../../components\", true, /\\.vue$/);\n// 找到组件文件夹下以.vue命名的文件，如果文件名为index，那么取组件中的name作为注册的组件名\nrequirecomponent.keys().foreach(filepath => {\n  // 解析文件路径： 返回文件内容\n  const componentconfig = requirecomponent(filepath);\n  const filename = validatefilename(filepath);\n  const _filepath = path.join(__dirname, \"../../components\", filepath);\n  if (!componentconfig.default.name) {\n    console.error(\n      `vue components path: (${_filepath}) should have a component name!!!`\n    );\n  }\n  const componentname = componentconfig.default.name\n    ? componentconfig.default.name\n    : filename + \"com\";\n\n  console.log({ componentname });\n  vue.component(componentname, componentconfig.default || componentconfig);\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n# 自动注册views下的路由\n * router.js\n\nimport vue from 'vue'\nimport vuerouter from 'vue-router'\nimport routes from './routes'\n\nvue.use(vuerouter)\n\nconst router = new vuerouter({\n  mode: 'history',\n  routes\n})\n\nexport default router\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * routes.js\n\n// 利用 webpack 读取 views 目录下的 router.js\nconst routerfile = require.context('../', true, /^\\.\\/views\\/[\\w.-]+\\/router.js$/)\n\n// 返回的 routerfile.keys() 是一个路由配置的路径数组列表 ['./views/page/router.js']\n// 循环递归调用 routerfile 去解析 每一项的路径地址 './views/page/router.js'\n// 返回 文件内容: module { default: { path: \"/page\", name: 'xxx', children:[{},...]}, ... }\n\n// 获取返回路由集合\nconst routesconfig = (r => {\n  return r.keys().map(key => r(key).default)\n})(routerfile)\n\n// redirect\nconst redirectconfig = {\n  path: '*',\n  redirect: '/'\n}\n\nconst routes = routesconfig.concat(redirectconfig)\nreturn routes\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# 项目性能优化\n * 原文: vue 项目性能优化 — 实践指南\n * 基于 vue-cli@3 的项目可行性优化方案探索\n * 探索 vue2 项目性能优化的各种可行性方案\n * vue 性能优化 9 点建议\n\n# 代码层面的优化\n * v-if 和 v-show 区分使用场景\n * computed 和 watch 区分使用场景\n * v-for 遍历必须为 item 添加 key，且避免同时使用 v-if\n * 长列表性能优化/ object.freeze\n * 事件的销毁\n * 图片资源懒加载\n * 路由懒加载\n * 第三方插件的按需引入\n * 优化无限列表性能\n * 服务端渲染 ssr or 预渲染\n\n# webpack 层面的优化\n * webpack 对图片进行压缩\n * 减少 es6 转为 es5 的冗余代码\n * 提取公共代码\n * 模板预编译\n * 提取组件的 css\n * 优化 sourcemap\n * 构建结果输出分析\n * vue 项目的编译优化\n\n# 基础的 web 技术的优化\n * 开启 gzip 压缩\n * 浏览器缓存\n * cdn 的使用\n * 使用 chrome performance 查找性能瓶颈\n\n# 相关链接\n * vue 源码解析\n * vue vnode 解析\n * vue3.0 前的 typescript 最佳入门实践\n * 7 个有用的 vue 开发技巧\n * 为 vue 项目添加骨架屏\n * vue3.0 前的 typescript 最佳入门实践\n * vue 防抖与节流的最佳解决方案——函数式组件\n * cube-ui\n * mint-ui\n * vuepress\n * element ui\n * vue-element-admin\n * apollo boost\n * vue + graphql 初试\n * vue 组件汇总\n * vue-awesome-swipe\n * hilongjw/vue-lazyload\n * vue-pull-to-refresh\n * vue+element 的动态路由案例\n * xinxin-huang/vue-live-doc\n * 快速搭建一个 vue live markdown\n * 参考 elementui 的文档实现方案，实现自己组件库的说明文档\n * hsian/vue-component\n * 从零开始搭建 vue 组件库 vv-ui\n * vv-ui/vv-ui\n * qingwei-li/vue-markdown-loader\n * wxsms/vue-md-loader\n * 基于 webpack4.0 的用于开发 vue 组件的全自动脚手架配置\n * vue 中 8 种组件通信方式\n * vue 组件间通信六种方式（完整版）\n * vue 2.6 中 slot 的新用法\n * 30 道 vue 面试题，内含详细讲解\n * 通过 vue-cli3 构建一个 ssr 应用程序\n * vue-cli3 项目从搭建优化到 docker 部署\n * 从零开发一套完整的 vue 项目开发环境\n * 深度解析！vue3 & react hooks 新 ui 组件原理：modal 弹窗\n * vue-cli3\n * 一个基于 vue.js 开发的个人博客\n * vue-cli3\n * ztree\n * vue-magic-tree",charsets:{cjk:!0}},{title:"vue2.x常见问题",frontmatter:{title:"vue2.x常见问题",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["vue"],readingShow:"top"},regularPath:"/vueJs/vue-issues.html",relativePath:"vueJs/vue-issues.md",key:"v-0bc04495",path:"/vueJs/vue-issues.html",headers:[{level:2,title:"异步组件",slug:"异步组件",normalizedTitle:"异步组件",charIndex:2},{level:2,title:"动态组件",slug:"动态组件",normalizedTitle:"动态组件",charIndex:324},{level:2,title:"递归组件",slug:"递归组件",normalizedTitle:"递归组件",charIndex:932},{level:2,title:"函数式组件",slug:"函数式组件",normalizedTitle:"函数式组件",charIndex:1532},{level:2,title:"components和 Vue.component",slug:"components和-vue-component",normalizedTitle:"components和 vue.component",charIndex:1896},{level:2,title:"Vue.extend",slug:"vue-extend",normalizedTitle:"vue.extend",charIndex:2023},{level:2,title:"mixins",slug:"mixins",normalizedTitle:"mixins",charIndex:2491},{level:2,title:"extends",slug:"extends",normalizedTitle:"extends",charIndex:2721},{level:2,title:"install",slug:"install",normalizedTitle:"install",charIndex:2953},{level:2,title:"Vue.nextTick",slug:"vue-nexttick",normalizedTitle:"vue.nexttick",charIndex:3480},{level:2,title:"Vue.directive",slug:"vue-directive",normalizedTitle:"vue.directive",charIndex:3066},{level:2,title:"Vue.filter",slug:"vue-filter",normalizedTitle:"vue.filter",charIndex:4677},{level:2,title:"Vue.compile",slug:"vue-compile",normalizedTitle:"vue.compile",charIndex:5215},{level:2,title:"Vue.set",slug:"vue-set",normalizedTitle:"vue.set",charIndex:5415},{level:2,title:"errorHandler/warnHandler",slug:"errorhandler-warnhandler",normalizedTitle:"errorhandler/warnhandler",charIndex:5496},{level:2,title:"Vue.config.warnHandler",slug:"vue-config-warnhandler",normalizedTitle:"vue.config.warnhandler",charIndex:5653},{level:2,title:"vue-cli为路径设置别名",slug:"vue-cli为路径设置别名",normalizedTitle:"vue-cli为路径设置别名",charIndex:5784},{level:2,title:"deep 属性",slug:"deep-属性",normalizedTitle:"deep 属性",charIndex:6374},{level:2,title:"Object.freeze",slug:"object-freeze",normalizedTitle:"object.freeze",charIndex:6550},{level:2,title:"调试 template log 技巧",slug:"调试-template-log-技巧",normalizedTitle:"调试 template log 技巧",charIndex:7128}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"异步组件 动态组件 递归组件 函数式组件 components和 Vue.component Vue.extend mixins extends install Vue.nextTick Vue.directive Vue.filter Vue.compile Vue.set errorHandler/warnHandler Vue.config.warnHandler vue-cli为路径设置别名 deep 属性 Object.freeze 调试 template log 技巧",content:"# 异步组件\n * 工厂函数返回 Promise\n\nVue.component(\n  'async-webpack-example',\n  // 这个 `import` 函数会返回一个 `Promise` 对象。\n  () => import('./my-async-component')\n)\n\n\n1\n2\n3\n4\n5\n * 路由的按需加载\n\nconst Home = () => import(/* webpackChunkName: \"group-home\" */ './views/Home.vue')\n\n{\n  path:'/',\n  name:'home',\n  components: Home\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# 动态组件\n<component v-bind:is=\"currentTabComponent\"></component>\n\n\n1\n * keep-alive\n\n<keep-alive>\n  <component v-bind:is=\"currentTabComponent\"></component>\n</keep-alive>\n\n\n\n\n1\n2\n3\n4\n5\n * 根据配置参数cache\n\n<template>\n  <div>\n    <keep-alive>\n      <router-view v-if=\"$route.meta.keepAlive\" />\n    </keep-alive>\n    <router-view v-if=\"!$route.meta.keepAlive\" />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RouterCache'\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * transition\n\n<transition>\n<keep-alive>\n  <component v-bind:is=\"currentTabComponent\"></component>\n</keep-alive>\n</transition>\n\n\n1\n2\n3\n4\n5\n# 递归组件\n<template>\n  <div v-for=\"(item,index) in treeArr\">\n      子组件，当前层级值： {{index}} <br/>\n      \x3c!-- 递归调用自身, 后台判断是否不存在改值 --\x3e\n      <tree :item=\"item.children\" v-if=\"item.children\"></tree>\n  </div>\n</template>\n<script>\nexport default {\n  // 必须定义name，组件内部才能递归调用\n  name: 'tree',\n  data(){\n    return {}\n  },\n  // 接收外部传入的值\n  props: {\n     item: {\n      type:Array,\n      default: ()=>[]\n    }\n  }\n}\n<\/script>\n\n// 父级\nimport Tree from \"./components/Tree\";\n<Tree :item=\"arr\"/>\n\narr = [{name:'A', chilren:[{name: 'A-1'}]},...]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# 函数式组件\n * template\n\n<template functional>\n  <div v-for=\"(item,index) in props.arr\">{{item}}</div>\n</template>\n\n\n1\n2\n3\n * js\n\nexport default {\n  functional: true,\n  props: {\n    row: {\n      type: Object\n    },\n    render: {\n      type: Function\n    }\n  },\n  render (h, ctx) {\n    return ctx.props.render(h, ctx.props.row)\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# components和 Vue.component\n * 局部注册组件\n\nexport default{\n  components:{home}\n}\n\n\n1\n2\n3\n * 全局注册组件\n\nVue.component('home',home)\n\n\n1\n# Vue.extend\n// 创建构造器\nvar Profile = Vue.extend({\n  template: '<p>{{extendData}}</br>实例传入的数据为:{{propsExtend}}</p>',//template对应的标签最外层必须只有一个标签\n  data: function () {\n    return {\n      extendData: '这是extend扩展的数据',\n    }\n  },\n  props:['propsExtend']\n})\n\n// 创建的构造器可以挂载到元素上, 通过propsData传参\nnew Profile({propsData:{propsExtend:'我是实例传入的数据'}}).$mount('#app-extend')\n\n// 通过 components 或 Vue.component()注册\nVue.component('Profile',Profile)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# mixins\nconst mixin={\n    created(){\n      this.dealTime()\n    },\n    methods:{\n      dealTime(){\n        console.log('这是mixin的dealTime里面的方法');\n      }\n  }\n}\n\nexport default{\n  mixins:[mixin]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# extends\nconst extend={\n    created(){\n      this.dealTime()\n    },\n    methods:{\n      dealTime(){\n        console.log('这是mixin的dealTime里面的方法');\n      }\n  }\n}\n\nexport default{\n  extends:extend\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# install\nvar MyPlugin = {};\nMyPlugin.install = function (Vue, options) {\n  // 方式一：添加全局资源,第二个参数传一个值默认是update对应的值\n  Vue.directive('xxx', {})\n\n  // 方式二：注入组件\n  Vue.mixin({\n    created: function () {\n      console.log('options的值为',options)\n    }\n  })\n\n  // 方式三：添加实例方法\n  Vue.prototype.$myMethod = function (methodOptions) {\n    console.log('实例方法myMethod被调用啦');\n  }\n}\n\n// Vue 调用 MyPlugin\nVue.use(MyPlugin,{someOption: true })\n\n// 挂载Vue实例\nnew Vue({\n  el: '#app'\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# Vue.nextTick\nmounted(){ //因为 mounted 阶段 dom 并未渲染完毕,所以需要$nextTick\n  this.$nextTick(() => {\n    this.$refs.inputs.focus() //通过 $refs 获取dom 并绑定 focus 方法\n  })\n}\n\n\n1\n2\n3\n4\n5\n# Vue.directive\nVue.directive('click', {\n  bind(el, binding, vnode, oldVnode) {\n    // binding {name, value, oldValue, expression, arg, modifiers}\n    // 只调用一次 做绑定的准备工作,添加事件监听\n    console.log('bind');\n  },\n  inserted: function(el){\n    // 被绑定元素插入父节点时调用\n    // 获取绑定的元素\n    console.log('inserted');\n  },\n  update: function(){\n    // 所在组件的 VNode 更新时调用\n    // 对于初始值也会调用一次\n    console.log('update');\n  },\n  componentUpdated: function(){\n    // 指令所在组件的 VNode 及其子 VNode 全部更新后调用\n    console.log('componentUpdated');\n  },\n  unbind: function(){\n    // 只调用一次，指令与元素解绑时调用\n    // 比如移除bind时绑定的事件监听器\n    console.log('unbind');\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * 使用\n\n// 全局定义\nVue.directive(\"change-color\",function(el,binding,vnode){\n  el.style[\"color\"]= binding.value;\n})\n\n// 使用\n<template>\n<div v-change-color=“color”>{{message}}</div>\n</template>\n<script>\n  export default{\n    data(){\n      return{\n        color:'green'\n      }\n    }\n  }\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# Vue.filter\n// 使用\n// 在双花括号中\n{{ message | capitalize }}\n\n// 在 `v-bind` 中\n<div v-bind:id=\"rawId | formatId\"></div>\n\n// 全局注册\nVue.filter('stampToYYMMDD', (value) =>{\n  // 处理逻辑\n})\n\n// 局部注册\nfilters: {\n  stampToYYMMDD: (value)=> {\n    // 处理逻辑\n  }\n}\n\n// 多个过滤器全局注册\n// /src/common/filters.js\nlet dateServer = value => value.replace(/(\\d{4})(\\d{2})(\\d{2})/g, '$1/$2/$3')\nexport { dateServer }\n\n// /src/main.js\nObject.keys(customs).forEach(key => Vue.filter(key, customs[key]))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# Vue.compile\nvar res = Vue.compile('<div><span>{{ msg }}</span></div>')\n\nnew Vue({\n  data: {\n    msg: 'hello'\n  },\n  render: res.render,\n  staticRenderFns: res.staticRenderFns\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# Vue.set\n// 利用 set\nthis.$set(arr,index,item)\n\n// 利用数组 push(),splice()\n\n\n1\n2\n3\n4\n# errorHandler/warnHandler\nVue.config.errorHandler = function (err, vm, info) {\n  // handle error\n  // `info` 是 Vue 特定的错误信息，比如错误所在的生命周期钩子\n  // 只在 2.2.0+ 可用\n}\n\nVue.config.warnHandler = function (msg, vm, trace) {\n  // `trace` 是组件的继承关系追踪\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# Vue.config.warnHandler\n\n\n\n1\n# vue-cli为路径设置别名\n * vue-cli 2.x\n\n// 在 webpack.base.config.js中的 resolve 配置项，在其 alias 中增加别名\nresolve: {\n    extensions: ['.js', '.vue', '.json'],\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src'),\n    }\n  },\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * vue-cli 3.x\n\n// 在根目录下创建vue.config.js\nvar path = require('path')\nfunction resolve (dir) {\n  console.log(__dirname)\n  return path.join(__dirname, dir)\n}\nmodule.exports = {\n  chainWebpack: config => {\n    config.resolve.alias\n      .set(key, value) // key,value自行定义，比如.set('@@', resolve('src/components'))\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# deep 属性\n * 深度作用选择器\n\n// 上面样式加一个 /deep/\n<style lang=\"less\" scoped>\n  .demo{\n    font-size: 14px;\n  }\n  .demo /deep/ .content{\n    color: blue;\n  }\n</style>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# Object.freeze\nnew Vue({\n    data: {\n        // vue不会对list里的object做getter、setter绑定\n        list: Object.freeze([\n            { value: 1 },\n            { value: 2 }\n        ])\n    },\n    mounted () {\n        // 界面不会有响应,因为单个属性被冻结\n        this.list[0].value = 100;\n\n        // 下面两种做法，界面都会响应\n        this.list = [\n            { value: 100 },\n            { value: 200 }\n        ];\n\n        // 冻结object\n        this.list = Object.freeze([\n            { value: 100 },\n            { value: 200 }\n        ]);\n    }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# 调试 template log 技巧\n// main.js\nVue.prototype.$log = window.console.log;\n\n// 组件内部\n<div>{{$log(info)}}</div>\n\n\n1\n2\n3\n4\n5",normalizedContent:"# 异步组件\n * 工厂函数返回 promise\n\nvue.component(\n  'async-webpack-example',\n  // 这个 `import` 函数会返回一个 `promise` 对象。\n  () => import('./my-async-component')\n)\n\n\n1\n2\n3\n4\n5\n * 路由的按需加载\n\nconst home = () => import(/* webpackchunkname: \"group-home\" */ './views/home.vue')\n\n{\n  path:'/',\n  name:'home',\n  components: home\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# 动态组件\n<component v-bind:is=\"currenttabcomponent\"></component>\n\n\n1\n * keep-alive\n\n<keep-alive>\n  <component v-bind:is=\"currenttabcomponent\"></component>\n</keep-alive>\n\n\n\n\n1\n2\n3\n4\n5\n * 根据配置参数cache\n\n<template>\n  <div>\n    <keep-alive>\n      <router-view v-if=\"$route.meta.keepalive\" />\n    </keep-alive>\n    <router-view v-if=\"!$route.meta.keepalive\" />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'routercache'\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * transition\n\n<transition>\n<keep-alive>\n  <component v-bind:is=\"currenttabcomponent\"></component>\n</keep-alive>\n</transition>\n\n\n1\n2\n3\n4\n5\n# 递归组件\n<template>\n  <div v-for=\"(item,index) in treearr\">\n      子组件，当前层级值： {{index}} <br/>\n      \x3c!-- 递归调用自身, 后台判断是否不存在改值 --\x3e\n      <tree :item=\"item.children\" v-if=\"item.children\"></tree>\n  </div>\n</template>\n<script>\nexport default {\n  // 必须定义name，组件内部才能递归调用\n  name: 'tree',\n  data(){\n    return {}\n  },\n  // 接收外部传入的值\n  props: {\n     item: {\n      type:array,\n      default: ()=>[]\n    }\n  }\n}\n<\/script>\n\n// 父级\nimport tree from \"./components/tree\";\n<tree :item=\"arr\"/>\n\narr = [{name:'a', chilren:[{name: 'a-1'}]},...]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# 函数式组件\n * template\n\n<template functional>\n  <div v-for=\"(item,index) in props.arr\">{{item}}</div>\n</template>\n\n\n1\n2\n3\n * js\n\nexport default {\n  functional: true,\n  props: {\n    row: {\n      type: object\n    },\n    render: {\n      type: function\n    }\n  },\n  render (h, ctx) {\n    return ctx.props.render(h, ctx.props.row)\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# components和 vue.component\n * 局部注册组件\n\nexport default{\n  components:{home}\n}\n\n\n1\n2\n3\n * 全局注册组件\n\nvue.component('home',home)\n\n\n1\n# vue.extend\n// 创建构造器\nvar profile = vue.extend({\n  template: '<p>{{extenddata}}</br>实例传入的数据为:{{propsextend}}</p>',//template对应的标签最外层必须只有一个标签\n  data: function () {\n    return {\n      extenddata: '这是extend扩展的数据',\n    }\n  },\n  props:['propsextend']\n})\n\n// 创建的构造器可以挂载到元素上, 通过propsdata传参\nnew profile({propsdata:{propsextend:'我是实例传入的数据'}}).$mount('#app-extend')\n\n// 通过 components 或 vue.component()注册\nvue.component('profile',profile)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# mixins\nconst mixin={\n    created(){\n      this.dealtime()\n    },\n    methods:{\n      dealtime(){\n        console.log('这是mixin的dealtime里面的方法');\n      }\n  }\n}\n\nexport default{\n  mixins:[mixin]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# extends\nconst extend={\n    created(){\n      this.dealtime()\n    },\n    methods:{\n      dealtime(){\n        console.log('这是mixin的dealtime里面的方法');\n      }\n  }\n}\n\nexport default{\n  extends:extend\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# install\nvar myplugin = {};\nmyplugin.install = function (vue, options) {\n  // 方式一：添加全局资源,第二个参数传一个值默认是update对应的值\n  vue.directive('xxx', {})\n\n  // 方式二：注入组件\n  vue.mixin({\n    created: function () {\n      console.log('options的值为',options)\n    }\n  })\n\n  // 方式三：添加实例方法\n  vue.prototype.$mymethod = function (methodoptions) {\n    console.log('实例方法mymethod被调用啦');\n  }\n}\n\n// vue 调用 myplugin\nvue.use(myplugin,{someoption: true })\n\n// 挂载vue实例\nnew vue({\n  el: '#app'\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# vue.nexttick\nmounted(){ //因为 mounted 阶段 dom 并未渲染完毕,所以需要$nexttick\n  this.$nexttick(() => {\n    this.$refs.inputs.focus() //通过 $refs 获取dom 并绑定 focus 方法\n  })\n}\n\n\n1\n2\n3\n4\n5\n# vue.directive\nvue.directive('click', {\n  bind(el, binding, vnode, oldvnode) {\n    // binding {name, value, oldvalue, expression, arg, modifiers}\n    // 只调用一次 做绑定的准备工作,添加事件监听\n    console.log('bind');\n  },\n  inserted: function(el){\n    // 被绑定元素插入父节点时调用\n    // 获取绑定的元素\n    console.log('inserted');\n  },\n  update: function(){\n    // 所在组件的 vnode 更新时调用\n    // 对于初始值也会调用一次\n    console.log('update');\n  },\n  componentupdated: function(){\n    // 指令所在组件的 vnode 及其子 vnode 全部更新后调用\n    console.log('componentupdated');\n  },\n  unbind: function(){\n    // 只调用一次，指令与元素解绑时调用\n    // 比如移除bind时绑定的事件监听器\n    console.log('unbind');\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n * 使用\n\n// 全局定义\nvue.directive(\"change-color\",function(el,binding,vnode){\n  el.style[\"color\"]= binding.value;\n})\n\n// 使用\n<template>\n<div v-change-color=“color”>{{message}}</div>\n</template>\n<script>\n  export default{\n    data(){\n      return{\n        color:'green'\n      }\n    }\n  }\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# vue.filter\n// 使用\n// 在双花括号中\n{{ message | capitalize }}\n\n// 在 `v-bind` 中\n<div v-bind:id=\"rawid | formatid\"></div>\n\n// 全局注册\nvue.filter('stamptoyymmdd', (value) =>{\n  // 处理逻辑\n})\n\n// 局部注册\nfilters: {\n  stamptoyymmdd: (value)=> {\n    // 处理逻辑\n  }\n}\n\n// 多个过滤器全局注册\n// /src/common/filters.js\nlet dateserver = value => value.replace(/(\\d{4})(\\d{2})(\\d{2})/g, '$1/$2/$3')\nexport { dateserver }\n\n// /src/main.js\nobject.keys(customs).foreach(key => vue.filter(key, customs[key]))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n# vue.compile\nvar res = vue.compile('<div><span>{{ msg }}</span></div>')\n\nnew vue({\n  data: {\n    msg: 'hello'\n  },\n  render: res.render,\n  staticrenderfns: res.staticrenderfns\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# vue.set\n// 利用 set\nthis.$set(arr,index,item)\n\n// 利用数组 push(),splice()\n\n\n1\n2\n3\n4\n# errorhandler/warnhandler\nvue.config.errorhandler = function (err, vm, info) {\n  // handle error\n  // `info` 是 vue 特定的错误信息，比如错误所在的生命周期钩子\n  // 只在 2.2.0+ 可用\n}\n\nvue.config.warnhandler = function (msg, vm, trace) {\n  // `trace` 是组件的继承关系追踪\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# vue.config.warnhandler\n\n\n\n1\n# vue-cli为路径设置别名\n * vue-cli 2.x\n\n// 在 webpack.base.config.js中的 resolve 配置项，在其 alias 中增加别名\nresolve: {\n    extensions: ['.js', '.vue', '.json'],\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src'),\n    }\n  },\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * vue-cli 3.x\n\n// 在根目录下创建vue.config.js\nvar path = require('path')\nfunction resolve (dir) {\n  console.log(__dirname)\n  return path.join(__dirname, dir)\n}\nmodule.exports = {\n  chainwebpack: config => {\n    config.resolve.alias\n      .set(key, value) // key,value自行定义，比如.set('@@', resolve('src/components'))\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# deep 属性\n * 深度作用选择器\n\n// 上面样式加一个 /deep/\n<style lang=\"less\" scoped>\n  .demo{\n    font-size: 14px;\n  }\n  .demo /deep/ .content{\n    color: blue;\n  }\n</style>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# object.freeze\nnew vue({\n    data: {\n        // vue不会对list里的object做getter、setter绑定\n        list: object.freeze([\n            { value: 1 },\n            { value: 2 }\n        ])\n    },\n    mounted () {\n        // 界面不会有响应,因为单个属性被冻结\n        this.list[0].value = 100;\n\n        // 下面两种做法，界面都会响应\n        this.list = [\n            { value: 100 },\n            { value: 200 }\n        ];\n\n        // 冻结object\n        this.list = object.freeze([\n            { value: 100 },\n            { value: 200 }\n        ]);\n    }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# 调试 template log 技巧\n// main.js\nvue.prototype.$log = window.console.log;\n\n// 组件内部\n<div>{{$log(info)}}</div>\n\n\n1\n2\n3\n4\n5",charsets:{cjk:!0}},{title:"vue中的工具函数",frontmatter:{title:"vue中的工具函数",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["vue"],readingShow:"top"},regularPath:"/vueJs/vue-libs.html",relativePath:"vueJs/vue-libs.md",key:"v-568b66a6",path:"/vueJs/vue-libs.html",headers:[{level:2,title:"inBrowser: 检测当前宿主环境是否是浏览器",slug:"inbrowser-检测当前宿主环境是否是浏览器",normalizedTitle:"inbrowser: 检测当前宿主环境是否是浏览器",charIndex:32},{level:2,title:"hasProto:检查当前环境是否可以使用对象的 __proto__ 属性",slug:"hasproto-检查当前环境是否可以使用对象的-proto-属性",normalizedTitle:"hasproto:检查当前环境是否可以使用对象的 <strong>proto</strong> 属性",charIndex:null},{level:2,title:"获取当浏览器的 user Agent",slug:"获取当浏览器的-user-agent",normalizedTitle:"获取当浏览器的 user agent",charIndex:298},{level:2,title:"IE 浏览器判断",slug:"ie-浏览器判断",normalizedTitle:"ie 浏览器判断",charIndex:428},{level:2,title:"IE9| Edge | Chrome 判断",slug:"ie9-edge-chrome-判断",normalizedTitle:"ie9| edge | chrome 判断",charIndex:494},{level:2,title:"isReserved：检测字符串是否以 $ 或者 _ 开头",slug:"isreserved-检测字符串是否以-或者-开头",normalizedTitle:"isreserved：检测字符串是否以 $ 或者 _ 开头",charIndex:699},{level:2,title:"Javascript 中级算法之 charCodeAt",slug:"javascript-中级算法之-charcodeat",normalizedTitle:"javascript 中级算法之 charcodeat",charIndex:910},{level:2,title:"camelize: 连字符转驼峰",slug:"camelize-连字符转驼峰",normalizedTitle:"camelize: 连字符转驼峰",charIndex:1426},{level:2,title:"hyphenate:驼峰转连字符",slug:"hyphenate-驼峰转连字符",normalizedTitle:"hyphenate:驼峰转连字符",charIndex:1632},{level:2,title:"toString: 将给定变量的值转换为 string 类型并返回",slug:"tostring-将给定变量的值转换为-string-类型并返回",normalizedTitle:"tostring: 将给定变量的值转换为 string 类型并返回",charIndex:1814},{level:2,title:"capitalize:首字符大写",slug:"capitalize-首字符大写",normalizedTitle:"capitalize:首字符大写",charIndex:2007},{level:2,title:"isPrimitive: 判断变量是否为原型类型",slug:"isprimitive-判断变量是否为原型类型",normalizedTitle:"isprimitive: 判断变量是否为原型类型",charIndex:2151},{level:2,title:"isRegExp: 判断变量是否为正则对象",slug:"isregexp-判断变量是否为正则对象",normalizedTitle:"isregexp: 判断变量是否为正则对象",charIndex:2381},{level:2,title:"isObject: 区分对象和原始值",slug:"isobject-区分对象和原始值",normalizedTitle:"isobject: 区分对象和原始值",charIndex:2542},{level:2,title:"makeMap：判断一个变量是否包含在传入字符串里",slug:"makemap-判断一个变量是否包含在传入字符串里",normalizedTitle:"makemap：判断一个变量是否包含在传入字符串里",charIndex:2655},{level:2,title:"once:只调用一次的函数",slug:"once-只调用一次的函数",normalizedTitle:"once:只调用一次的函数",charIndex:3138},{level:2,title:"cache:创建一个缓存函数",slug:"cache-创建一个缓存函数",normalizedTitle:"cache:创建一个缓存函数",charIndex:3331}],lastUpdated:"2020/8/2 下午4:27:20",headersStr:"inBrowser: 检测当前宿主环境是否是浏览器 hasProto:检查当前环境是否可以使用对象的 __proto__ 属性 获取当浏览器的 user Agent IE 浏览器判断 IE9| Edge | Chrome 判断 isReserved：检测字符串是否以 $ 或者 _ 开头 Javascript 中级算法之 charCodeAt camelize: 连字符转驼峰 hyphenate:驼峰转连字符 toString: 将给定变量的值转换为 string 类型并返回 capitalize:首字符大写 isPrimitive: 判断变量是否为原型类型 isRegExp: 判断变量是否为正则对象 isObject: 区分对象和原始值 makeMap：判断一个变量是否包含在传入字符串里 once:只调用一次的函数 cache:创建一个缓存函数",content:'\n\n原文：「从源码中学习」Vue 源码中的 JS 骚操作\n\n# inBrowser: 检测当前宿主环境是否是浏览器\n// 通过判断 `window` 对象是否存在即可\nexport const inBrowser = typeof window !== "undefined";\n\n\n1\n2\n# hasProto:检查当前环境是否可以使用对象的 __proto__ 属性\n// 一个对象的 __proto__ 属性指向了其构造函数的原型\n// 从一个空的对象字面量开始沿着原型链逐级检查。\nexport const hasProto = "__proto__" in {};\n\n\n1\n2\n3\n# 获取当浏览器的 user Agent\n// toLowerCase目的是 为了后续的各种环境检测\nexport const UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\n\n1\n2\n# IE 浏览器判断\nexport const isIE = UA && /msie|trident/.test(UA);\n\n\n1\n# IE9| Edge | Chrome 判断\nexport const isIE9 = UA && UA.indexOf("msie 9.0") > 0;\nexport const isEdge = UA && UA.indexOf("edge/") > 0;\nexport const isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n\n1\n2\n3\n# isReserved：检测字符串是否以 $ 或者 _ 开头\n// charCodeAt() 方法可返回指定位置的字符的 Unicode 编码\nexport function isReserved(str: string): boolean {\n  const c = (str + "").charCodeAt(0);\n  return c === 0x24 || c === 0x5f;\n}\n\n\n1\n2\n3\n4\n5\n# Javascript 中级算法之 charCodeAt\n// 从传递进来的字母序列中找到缺失的字母并返回它\nfunction fearNotLetter(str) {\n  //将字符串转为ASCII码，并存入数组\n  let arr = [];\n  for (let i = 0; i < str.length; i++) {\n    arr.push(str.charCodeAt(i));\n  }\n  for (let j = 1; j < arr.length; j++) {\n    let num = arr[j] - arr[j - 1];\n    //判断后一项减前一项是否为1，若不为1，则缺失该字符的前一项\n    if (num != 1) {\n      //将缺失字符ASCII转为字符并返回\n      return String.fromCharCode(arr[j] - 1);\n    }\n  }\n  return undefined;\n}\nfearNotLetter("abce"); // "d"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# camelize: 连字符转驼峰\nconst camelizeRE = /-(\\w)/g;\nexport const camelize = cached(str => {\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ""));\n});\n\ncamelize("aa-bb"); // aaBb\n\n\n1\n2\n3\n4\n5\n6\n# hyphenate:驼峰转连字符\nconst hyphenateRE = /\\B([A-Z])/g;\nexport const hyphenate = cached((str: string): string => {\n  return str.replace(hyphenateRE, "-$1").toLowerCase();\n});\n\n\n1\n2\n3\n4\n# toString: 将给定变量的值转换为 string 类型并返回\nfunction toString(val) {\n  return val == null\n    ? ""\n    : typeof val === "object"\n    ? JSON.stringify(val, null, 2)\n    : String(val);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# capitalize:首字符大写\nexport const capitalize = cached((str: string): string => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\n\n\n1\n2\n3\n# isPrimitive: 判断变量是否为原型类型\nexport function isPrimitive(value) {\n  return (\n    typeof value === "string" ||\n    typeof value === "number" ||\n    typeof value === "symbol" ||\n    typeof value === "boolean"\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# isRegExp: 判断变量是否为正则对象\nconst _toString = Object.prototype.toString;\nexport function isRegExp(v) {\n  return _toString.call(v) === "[object RegExp]";\n}\n\n\n1\n2\n3\n4\n# isObject: 区分对象和原始值\nexport function isObject(obj) {\n  return obj !== null && typeof obj === "object";\n}\n\n\n1\n2\n3\n# makeMap：判断一个变量是否包含在传入字符串里\nfunction makeMap(str, expectsLowerCase) {\n  const map = Object.create(null);\n  const list = str.split(",");\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase ? val => map[val.toLowerCase()] : val => map[val];\n}\n\nlet isMyName = makeMap("abc,hello", true);\nconsole.log(isMyName("hello")); // true\nconsole.log(isMyName("abc")); // true\nconsole.log(isMyName("bcd")); // undefined\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# once:只调用一次的函数\nexport function once(fn) {\n  let called = false;\n  return function() {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  };\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# cache:创建一个缓存函数\n/**\n * Create a cached version of a pure function.\n */\nfunction cached(fn) {\n  const cache = Object.create(null);\n  return function cachedFn(str) {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n\nlet ca = cached(function(str) {\n  return `ca: ${str}`;\n});\nconsole.log(ca("ac-ae"));\nconsole.log(ca("ac-ae"));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16',normalizedContent:'\n\n原文：「从源码中学习」vue 源码中的 js 骚操作\n\n# inbrowser: 检测当前宿主环境是否是浏览器\n// 通过判断 `window` 对象是否存在即可\nexport const inbrowser = typeof window !== "undefined";\n\n\n1\n2\n# hasproto:检查当前环境是否可以使用对象的 __proto__ 属性\n// 一个对象的 __proto__ 属性指向了其构造函数的原型\n// 从一个空的对象字面量开始沿着原型链逐级检查。\nexport const hasproto = "__proto__" in {};\n\n\n1\n2\n3\n# 获取当浏览器的 user agent\n// tolowercase目的是 为了后续的各种环境检测\nexport const ua = inbrowser && window.navigator.useragent.tolowercase();\n\n\n1\n2\n# ie 浏览器判断\nexport const isie = ua && /msie|trident/.test(ua);\n\n\n1\n# ie9| edge | chrome 判断\nexport const isie9 = ua && ua.indexof("msie 9.0") > 0;\nexport const isedge = ua && ua.indexof("edge/") > 0;\nexport const ischrome = ua && /chrome\\/\\d+/.test(ua) && !isedge;\n\n\n1\n2\n3\n# isreserved：检测字符串是否以 $ 或者 _ 开头\n// charcodeat() 方法可返回指定位置的字符的 unicode 编码\nexport function isreserved(str: string): boolean {\n  const c = (str + "").charcodeat(0);\n  return c === 0x24 || c === 0x5f;\n}\n\n\n1\n2\n3\n4\n5\n# javascript 中级算法之 charcodeat\n// 从传递进来的字母序列中找到缺失的字母并返回它\nfunction fearnotletter(str) {\n  //将字符串转为ascii码，并存入数组\n  let arr = [];\n  for (let i = 0; i < str.length; i++) {\n    arr.push(str.charcodeat(i));\n  }\n  for (let j = 1; j < arr.length; j++) {\n    let num = arr[j] - arr[j - 1];\n    //判断后一项减前一项是否为1，若不为1，则缺失该字符的前一项\n    if (num != 1) {\n      //将缺失字符ascii转为字符并返回\n      return string.fromcharcode(arr[j] - 1);\n    }\n  }\n  return undefined;\n}\nfearnotletter("abce"); // "d"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# camelize: 连字符转驼峰\nconst camelizere = /-(\\w)/g;\nexport const camelize = cached(str => {\n  return str.replace(camelizere, (_, c) => (c ? c.touppercase() : ""));\n});\n\ncamelize("aa-bb"); // aabb\n\n\n1\n2\n3\n4\n5\n6\n# hyphenate:驼峰转连字符\nconst hyphenatere = /\\b([a-z])/g;\nexport const hyphenate = cached((str: string): string => {\n  return str.replace(hyphenatere, "-$1").tolowercase();\n});\n\n\n1\n2\n3\n4\n# tostring: 将给定变量的值转换为 string 类型并返回\nfunction tostring(val) {\n  return val == null\n    ? ""\n    : typeof val === "object"\n    ? json.stringify(val, null, 2)\n    : string(val);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# capitalize:首字符大写\nexport const capitalize = cached((str: string): string => {\n  return str.charat(0).touppercase() + str.slice(1);\n});\n\n\n1\n2\n3\n# isprimitive: 判断变量是否为原型类型\nexport function isprimitive(value) {\n  return (\n    typeof value === "string" ||\n    typeof value === "number" ||\n    typeof value === "symbol" ||\n    typeof value === "boolean"\n  );\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# isregexp: 判断变量是否为正则对象\nconst _tostring = object.prototype.tostring;\nexport function isregexp(v) {\n  return _tostring.call(v) === "[object regexp]";\n}\n\n\n1\n2\n3\n4\n# isobject: 区分对象和原始值\nexport function isobject(obj) {\n  return obj !== null && typeof obj === "object";\n}\n\n\n1\n2\n3\n# makemap：判断一个变量是否包含在传入字符串里\nfunction makemap(str, expectslowercase) {\n  const map = object.create(null);\n  const list = str.split(",");\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectslowercase ? val => map[val.tolowercase()] : val => map[val];\n}\n\nlet ismyname = makemap("abc,hello", true);\nconsole.log(ismyname("hello")); // true\nconsole.log(ismyname("abc")); // true\nconsole.log(ismyname("bcd")); // undefined\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# once:只调用一次的函数\nexport function once(fn) {\n  let called = false;\n  return function() {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  };\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# cache:创建一个缓存函数\n/**\n * create a cached version of a pure function.\n */\nfunction cached(fn) {\n  const cache = object.create(null);\n  return function cachedfn(str) {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n\nlet ca = cached(function(str) {\n  return `ca: ${str}`;\n});\nconsole.log(ca("ac-ae"));\nconsole.log(ca("ac-ae"));\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16',charsets:{cjk:!0}},{title:"pagination/i18n/alert",frontmatter:{title:"pagination/i18n/alert",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["vue"],readingShow:"top"},regularPath:"/vueJs/vue-pagination.html",relativePath:"vueJs/vue-pagination.md",key:"v-6158e156",path:"/vueJs/vue-pagination.html",headers:[{level:2,title:"vue2.x自定义element-ui表格",slug:"vue2-x自定义element-ui表格",normalizedTitle:"vue2.x自定义element-ui表格",charIndex:2},{level:2,title:"pagination",slug:"pagination",normalizedTitle:"pagination",charIndex:1253},{level:2,title:"i18n",slug:"i18n",normalizedTitle:"i18n",charIndex:12631},{level:2,title:"alert",slug:"alert",normalizedTitle:"alert",charIndex:14236}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"vue2.x自定义element-ui表格 pagination i18n alert",content:'# vue2.x自定义element-ui表格\n * custom-table.vue\n\n<template>\n  <el-table\n    :data="data"\n    v-bind="$attrs"\n    v-on="$listeners"\n  >\n    <template v-for="(column, index) of columns">\n      \x3c!-- render --\x3e\n      <el-table-column\n        v-if="column.render"\n        :key="index"\n        v-bind="column"\n      >\n        <template slot-scope="scope">\n          <extend\n            :render="column.render"\n            :row="scope"\n          />\n        </template>\n      </el-table-column>\n      \x3c!-- no render --\x3e\n      <el-table-column\n        v-else\n        :key="index"\n        v-bind="column"\n      />\n    </template>\n  </el-table>\n</template>\n<script>\nimport extend from \'./render\'\nexport default {\n  components: { extend },\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    columns: {\n      type: Array,\n      required: true\n    }\n  }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n * render.js\n\nexport default {\n  functional: true,\n  props: {\n    row: {\n      type: Object\n    },\n    render: {\n      type: Function\n    }\n  },\n  render (h, ctx) {\n    return ctx.props.render(h, ctx.props.row)\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# pagination\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />\n\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <meta http-equiv="X-UA-Compatible" content="ie=edge" />\n    <title>vue分页组件</title>\n    <style>\n      .pagination-vue .page-list {\n        display: inline-block;\n        height: 40px;\n        line-height: 40px;\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      .pagination-vue .page-list span {\n        font-size: 14px;\n        color: #333333;\n      }\n\n      .pagination-vue .page-list .jump {\n        padding: 2px 6px;\n        text-align: center;\n        cursor: pointer;\n        margin-left: 5px;\n        background: rgba(204, 204, 204, 0.3);\n        border-radius: 6px;\n      }\n\n      .pagination-vue .page-list .jump:hover {\n        cursor: pointer;\n        color: #fff;\n        background: #ff1e1b;\n        border-radius: 6px;\n      }\n\n      .pagination-vue .page-list .current {\n        cursor: default;\n        color: #fff;\n        background: #ff1e1b;\n        border-radius: 6px;\n      }\n\n      .pagination-vue .page-list .jump.disabled {\n        pointer-events: none;\n        color: #999999;\n      }\n\n      .pagination-vue .page-list .go-btn {\n        font-size: 14px;\n      }\n\n      .pagination-vue .page-list .jump-inp input {\n        width: 44px;\n        height: 20px;\n        font-size: 13px;\n        border: 1px solid #ccc;\n        -webkit-border-radius: 4px;\n        -moz-border-radius: 4px;\n        border-radius: 4px;\n        text-align: center;\n        outline: none;\n      }\n\n      .pagination-vue .page-list .ellipsis {\n        padding: 0px 8px;\n        text-align: center;\n        cursor: pointer;\n        margin-left: 5px;\n        background: rgba(204, 204, 204, 0);\n        border-radius: 6px;\n      }\n\n      .pagination-vue .page-list .jump-point {\n        margin-left: 10px;\n      }\n\n      .pagination-vue .pageNum {\n        display: inline-block;\n        height: 28px;\n        font-size: 16px;\n        font-family: PingFangSC-Regular, PingFang SC;\n        font-weight: 400;\n        color: #666666;\n        line-height: 28px;\n      }\n    </style>\n  </head>\n\n  <body>\n    <div id="app">\n      <h1>{{msg}}</h1>\n      <vue-pagination2></vue-pagination2>\n      <pagination-com\n        :total="total"\n        :current="current"\n        @update:current="handleCurrentPage"\n      ></pagination-com>\n      <pagination-com :total="total" :current.sync="current"></pagination-com>\n    </div>\n\n    <script src="https://cdn.bootcss.com/vue/2.6.11/vue.js"><\/script>\n    <script>\n      var template = `<div class="pagination-vue" v-show="show">\n      <div class="page-list">\n        <span class="jump" @click="jumpPage(1)">首页</span>\n        <span class="jump" :class="{disabled: startPage }" @click="prev">上一页</span>\n        <span class="jump" :class="{current: startPage}" @click="jumpPage(1)">1</span>\n        <span class="ellipsis" v-show="sMore">...</span>\n        <span class="jump" v-for="num in mids" :class="{current:current_page==num}" @click="jumpPage(num)">{{num}}</span>\n        <span class="ellipsis" v-show="eMore">...</span>\n        <span class="jump" :class="{current:endPage}" @click="jumpPage(total)">{{total}}</span>\n        <span :class="{disabled: endPage }" class="jump" @click="next">下一页</span>\n        <span class="jump" @click="jumpPage(total)">末页</span>\n        <span class="jump-point">前往：</span>\n        <span class="jump-inp"><input type="number" v-model.number="changePage"></span>\n        <span class="jump go-btn" @click="jumpPage(changePage)">GO</span>\n      </div>\n      <span class="pageNum">第{{current_page||1}}页/共{{total}}页</span>\n      <div>\n        Setting Pages: <input type="text" v-model="total">\n      </div>\n    </div>`;\n\n      var PaginationCom = Vue.extend({\n        data: function() {\n          return {\n            current_page: this.current, //当前页\n            page: 7,\n            changePage: "" //跳转页\n          };\n        },\n        props: {\n          total: {\n            type: Number,\n            require: true\n          },\n          current: {\n            type: Number,\n            default: 1\n          }\n        },\n        watch: {\n          current(val) {\n            this.current_page = val;\n          }\n        },\n        template: template,\n        computed: {\n          // 是否展示\n          show: function() {\n            return this.total && this.total != 1;\n          },\n          startPage: function() {\n            return this.current_page == 1;\n          },\n          endPage: function() {\n            return this.current_page == this.total;\n          },\n          // 显示前...\n          sMore: function() {\n            if (this.total <= this.page) return false;\n            var mids = this.mids;\n            var len = mids.length;\n            return mids[len - 1] > this.page - 1;\n          },\n          // 显示后...\n          eMore: function() {\n            if (this.total < this.page) return false;\n            var mids = this.mids;\n            var len = mids.length;\n            return mids[0] + len < this.total;\n          },\n          // 中间显示的页数\n          mids: function() {\n            var left = this.current_page + 1,\n              right = this.total - 1,\n              mid = this.page - 2,\n              mid_pages = [];\n\n            // 总页数大于当前显示最大页\n            if (this.total > this.page) {\n              if (\n                this.current_page > mid &&\n                this.current_page < this.total - (mid - 1)\n              ) {\n                left = Number(this.current_page) - 3;\n                right = Number(this.current_page) + 1;\n              } else {\n                if (this.current_page <= mid) {\n                  left = 2;\n                  right = this.page - 1;\n                } else {\n                  right = this.total - 1;\n                  left = this.total - this.page + 2;\n                }\n              }\n            } else {\n              right = this.total - 1;\n              left = 2;\n            }\n            while (left <= right) {\n              mid_pages.push(left);\n              left++;\n            }\n            return mid_pages;\n          }\n        },\n        methods: {\n          prev: function() {\n            this.current_page--;\n            this.$emit("update:current", this.current_page);\n          },\n          next: function() {\n            this.current_page++;\n            this.$emit("update:current", this.current_page);\n          },\n          jumpPage: function(current) {\n            if (current <= this.total && current > 0) {\n              this.current_page = current;\n              this.$emit("update:current", current);\n            }\n          }\n        }\n      });\n\n      Vue.component("vue-pagination2", {\n        data: function() {\n          return {\n            current_page: 1, //当前页\n            total: 8, //总页数\n            page: 7,\n            changePage: "" //跳转页\n          };\n        },\n        template: template,\n        computed: {\n          // 是否展示\n          show: function() {\n            return this.total && this.total != 1;\n          },\n          startPage: function() {\n            return this.current_page == 1;\n          },\n          endPage: function() {\n            return this.current_page == this.total;\n          },\n          // 显示前...\n          sMore: function() {\n            if (this.total <= this.page) return false;\n            var mids = this.mids;\n            var len = mids.length;\n            return mids[len - 1] > this.page - 1;\n          },\n          // 显示后...\n          eMore: function() {\n            if (this.total < this.page) return false;\n            var mids = this.mids;\n            var len = mids.length;\n            return mids[0] + len < this.total;\n          },\n          // 中间显示的页数\n          mids: function() {\n            var left = this.current_page + 1,\n              right = this.total - 1,\n              mid = this.page - 2,\n              mid_pages = [];\n\n            // 总页数大于当前显示最大页\n            if (this.total > this.page) {\n              if (\n                this.current_page > mid &&\n                this.current_page < this.total - (mid - 1)\n              ) {\n                left = Number(this.current_page) - 2;\n                right = Number(this.current_page) + 2;\n              } else {\n                if (this.current_page <= mid) {\n                  left = 2;\n                  right = this.page - 1;\n                } else {\n                  right = this.total - 1;\n                  left = this.total - this.page + 2;\n                }\n              }\n            } else {\n              right = this.total - 1;\n              left = 2;\n            }\n            while (left <= right) {\n              mid_pages.push(left);\n              left++;\n            }\n            return mid_pages;\n          }\n        },\n        methods: {\n          prev: function() {\n            this.current_page--;\n            this.$emit("update:current", this.current_page);\n          },\n          next: function() {\n            this.current_page++;\n            this.$emit("update:current", this.current_page);\n          },\n          jumpPage: function(current) {\n            if (current <= this.total && current > 0) {\n              this.current_page = current;\n              this.$emit("update:page", current);\n            }\n          }\n        }\n      });\n\n      new Vue({\n        el: "#app",\n        data: {\n          msg: "Hello",\n          total: 30,\n          current: 3\n        },\n        components: {\n          "pagination-com": PaginationCom\n        },\n        methods: {\n          handleCurrentPage: function(current) {\n            console.log("current page", current);\n          }\n        },\n        watch: {\n          current: function(val) {\n            console.log(val);\n          }\n        },\n        mounted() {\n          console.log("mounted");\n          this.current = 6;\n        }\n      });\n    <\/script>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n# i18n\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <meta http-equiv="X-UA-Compatible" content="ie=edge" />\n    <title>vue i18n</title>\n  </head>\n  <body>\n    <script src="https://unpkg.com/vue/dist/vue.js"><\/script>\n    <script src="https://unpkg.com/vue-i18n/dist/vue-i18n.js"><\/script>\n\n    <div id="app">\n      <select name="" v-model="lang">\n        <option value="cn">中文</option>\n        <option value="en">英文</option>\n        <option value="ja">日文</option>\n      </select>\n\n      <p>{{ lang }}</p>\n\n      <p>{{ $t("message.hello") }}</p>\n    </div>\n    <script>\n      const messages = {\n        en: {\n          message: {\n            hello: "hello world"\n          }\n        },\n        ja: {\n          message: {\n            hello: "こんにちは、世界"\n          }\n        },\n        cn: {\n          message: {\n            hello: "你好"\n          }\n        }\n      };\n\n      // 通过选项创建 VueI18n 实例\n      const i18n = new VueI18n({\n        locale: "en", // 设置地区\n        messages // 设置地区信息\n      });\n\n      // console.log(i18n.locale = \'ja\');\n\n      // 通过 `i18n` 选项创建 Vue 实例\n      const vm = new Vue({\n        data: {\n          lang: "en"\n        },\n        i18n,\n        watch: {\n          lang(val) {\n            this.$i18n.locale = val;\n          }\n        }\n      }).$mount("#app");\n    <\/script>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n# alert\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>Vue Alert</title>\n    <style>\n      .shadow {\n        background-color: rgba(0, 0, 0, 0.5);\n        display: table;\n        height: 100%;\n        left: 0;\n        position: fixed;\n        top: 0;\n        transition: opacity 0.3s ease;\n        width: 100%;\n        z-index: 50;\n      }\n\n      .modal {\n        display: table-cell;\n        vertical-align: middle;\n        overflow-x: hidden;\n        position: fixed;\n        background-color: white;\n        box-shadow: rgba(0, 0, 0, 0.33) 0px 2px 8px;\n        border-radius: 5px;\n        outline: 0px;\n        overflow: hidden;\n        transition: all 0.3s ease;\n        width: 600px;\n        height: 400px;\n        top: 50%;\n        left: 50%;\n        margin-top: -200px;\n        margin-left: -300px;\n      }\n\n      .header {\n        align-items: center;\n        background-color: #62a39e;\n        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.16);\n        color: #fff;\n        font-weight: bold;\n        display: -ms-flexbox;\n        display: flex;\n        height: 3.5rem;\n        padding: 0 1.5rem;\n        position: relative;\n        z-index: 1;\n      }\n\n      .body {\n        align-items: center;\n        padding: 1.5rem;\n      }\n\n      .footer {\n        justify-content: flex-end;\n        padding: 1.5rem;\n        position: absolute;\n        bottom: 0;\n        width: 100%;\n        float: right;\n      }\n\n      .item {\n        color: white;\n        text-align: center;\n        border-radius: 5px;\n        padding: 10px;\n        cursor: pointer;\n        display: inline-block;\n      }\n\n      .info {\n        background-color: #2196f3;\n      }\n\n      .success {\n        background-color: #62a39e;\n      }\n\n      .red {\n        background-color: #e95358;\n      }\n\n      .smSize {\n        height: 200px;\n      }\n    </style>\n  </head>\n\n  <body>\n    <div id="app">\n      <h1>App</h1>\n      <button @click="display">Click</button>\n      <button @click="other">Click other</button>\n      <alert-modal ref="chat-modal"></alert-modal>\n    </div>\n\n    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"><\/script>\n    <script>\n      var template = `\n      <div class="shadow" v-show="showModal">\n        <div class="modal" :class="{\'smSize\': otherText.small || small}">\n            <div class="header">{{ otherText.title || title}}</div>\n            <div class="body">\n                <slot></slot>\n            </div>\n            <div class="footer">\n                <div class="item success" ref="sure" v-show="otherText.sureText || sureText">{{ otherText.sureText || sureText }}</div>\n                <div class="item red" ref="cancel" v-show="otherText.cancelText || cancelText">{{ otherText.cancelText || cancelText }}</div>\n            </div>\n        </div>\n      </div>\n      `;\n\n      var vm = {\n        template: template,\n        data() {\n          return {\n            otherText: {\n              sureText: "确认",\n              cancelText: "取消",\n              title: "标题",\n              small: true\n            },\n            showModal: false\n          };\n        },\n        methods: {\n          openModal(otherText) {\n            this.otherText = { ...this.otherText, ...otherText };\n            this.showModal = true;\n            var pms = new Promise((resolve, reject) => {\n              this.$refs["sure"].addEventListener("click", () => {\n                this.showModal = false;\n                resolve("点击了确定");\n              });\n              this.$refs["cancel"].addEventListener("click", () => {\n                this.showModal = false;\n                reject("点击了取消");\n              });\n            });\n            return pms;\n          }\n        }\n      };\n\n      var tpl = `\n        <div class="shadow">\n          <div class="modal">\n              <div class="header">{{ title }}</div>\n              <div class="body">\n                  {{content}}\n              </div>\n              <div class="footer">\n                  <div class="item success" @click="handleConfirm">{{ sureText }}</div>\n                  <div class="item red" @click="handleCancel">{{ cancelText }}</div>\n              </div>\n          </div>\n        </div>\n        `;\n\n      var Toast = Vue.extend({\n        template: tpl,\n        data() {\n          return {\n            title: "标题",\n            content: "",\n            sureText: "确认",\n            cancelText: "取消"\n          };\n        },\n        methods: {\n          handleConfirm() {\n            this.remove();\n            this.confirm && this.confirm();\n          },\n          handleCancel() {\n            this.remove();\n            this.cancel && this.cancel();\n          },\n          remove() {\n            var doc = document.body;\n            doc.removeChild(this.$el);\n          }\n        }\n      });\n\n      var showToast = function(options) {\n        options = Object.assign({}, options);\n        const instance = new Toast({\n          data: options\n        });\n        let doc = document.body;\n        instance.$mount();\n        doc.appendChild(instance.$el);\n        return instance;\n      };\n\n      Vue.prototype.$toast = showToast;\n\n      new Vue({\n        el: "#app",\n        components: {\n          "alert-modal": vm\n        },\n        methods: {\n          display() {\n            this.$refs["chat-modal"]\n              .openModal({\n                title: "弹窗标题",\n                sureText: "确认",\n                cancelText: "取消"\n              })\n              .then(\n                res => {\n                  //点击确认的回调\n                  console.log("确认", res);\n                },\n                res => {\n                  //点击取消的回调\n                  console.log("取消 ", res);\n                }\n              );\n          },\n          other() {\n            this.$toast({\n              title: "弹窗标题",\n              content: "123131"\n            });\n          }\n        }\n      });\n    <\/script>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239',normalizedContent:'# vue2.x自定义element-ui表格\n * custom-table.vue\n\n<template>\n  <el-table\n    :data="data"\n    v-bind="$attrs"\n    v-on="$listeners"\n  >\n    <template v-for="(column, index) of columns">\n      \x3c!-- render --\x3e\n      <el-table-column\n        v-if="column.render"\n        :key="index"\n        v-bind="column"\n      >\n        <template slot-scope="scope">\n          <extend\n            :render="column.render"\n            :row="scope"\n          />\n        </template>\n      </el-table-column>\n      \x3c!-- no render --\x3e\n      <el-table-column\n        v-else\n        :key="index"\n        v-bind="column"\n      />\n    </template>\n  </el-table>\n</template>\n<script>\nimport extend from \'./render\'\nexport default {\n  components: { extend },\n  props: {\n    data: {\n      type: array,\n      required: true\n    },\n    columns: {\n      type: array,\n      required: true\n    }\n  }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n * render.js\n\nexport default {\n  functional: true,\n  props: {\n    row: {\n      type: object\n    },\n    render: {\n      type: function\n    }\n  },\n  render (h, ctx) {\n    return ctx.props.render(h, ctx.props.row)\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# pagination\n<!doctype html>\n<html lang="en">\n  <head>\n    <meta http-equiv="content-type" content="text/html; charset=utf-8" />\n\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <meta http-equiv="x-ua-compatible" content="ie=edge" />\n    <title>vue分页组件</title>\n    <style>\n      .pagination-vue .page-list {\n        display: inline-block;\n        height: 40px;\n        line-height: 40px;\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n      }\n\n      .pagination-vue .page-list span {\n        font-size: 14px;\n        color: #333333;\n      }\n\n      .pagination-vue .page-list .jump {\n        padding: 2px 6px;\n        text-align: center;\n        cursor: pointer;\n        margin-left: 5px;\n        background: rgba(204, 204, 204, 0.3);\n        border-radius: 6px;\n      }\n\n      .pagination-vue .page-list .jump:hover {\n        cursor: pointer;\n        color: #fff;\n        background: #ff1e1b;\n        border-radius: 6px;\n      }\n\n      .pagination-vue .page-list .current {\n        cursor: default;\n        color: #fff;\n        background: #ff1e1b;\n        border-radius: 6px;\n      }\n\n      .pagination-vue .page-list .jump.disabled {\n        pointer-events: none;\n        color: #999999;\n      }\n\n      .pagination-vue .page-list .go-btn {\n        font-size: 14px;\n      }\n\n      .pagination-vue .page-list .jump-inp input {\n        width: 44px;\n        height: 20px;\n        font-size: 13px;\n        border: 1px solid #ccc;\n        -webkit-border-radius: 4px;\n        -moz-border-radius: 4px;\n        border-radius: 4px;\n        text-align: center;\n        outline: none;\n      }\n\n      .pagination-vue .page-list .ellipsis {\n        padding: 0px 8px;\n        text-align: center;\n        cursor: pointer;\n        margin-left: 5px;\n        background: rgba(204, 204, 204, 0);\n        border-radius: 6px;\n      }\n\n      .pagination-vue .page-list .jump-point {\n        margin-left: 10px;\n      }\n\n      .pagination-vue .pagenum {\n        display: inline-block;\n        height: 28px;\n        font-size: 16px;\n        font-family: pingfangsc-regular, pingfang sc;\n        font-weight: 400;\n        color: #666666;\n        line-height: 28px;\n      }\n    </style>\n  </head>\n\n  <body>\n    <div id="app">\n      <h1>{{msg}}</h1>\n      <vue-pagination2></vue-pagination2>\n      <pagination-com\n        :total="total"\n        :current="current"\n        @update:current="handlecurrentpage"\n      ></pagination-com>\n      <pagination-com :total="total" :current.sync="current"></pagination-com>\n    </div>\n\n    <script src="https://cdn.bootcss.com/vue/2.6.11/vue.js"><\/script>\n    <script>\n      var template = `<div class="pagination-vue" v-show="show">\n      <div class="page-list">\n        <span class="jump" @click="jumppage(1)">首页</span>\n        <span class="jump" :class="{disabled: startpage }" @click="prev">上一页</span>\n        <span class="jump" :class="{current: startpage}" @click="jumppage(1)">1</span>\n        <span class="ellipsis" v-show="smore">...</span>\n        <span class="jump" v-for="num in mids" :class="{current:current_page==num}" @click="jumppage(num)">{{num}}</span>\n        <span class="ellipsis" v-show="emore">...</span>\n        <span class="jump" :class="{current:endpage}" @click="jumppage(total)">{{total}}</span>\n        <span :class="{disabled: endpage }" class="jump" @click="next">下一页</span>\n        <span class="jump" @click="jumppage(total)">末页</span>\n        <span class="jump-point">前往：</span>\n        <span class="jump-inp"><input type="number" v-model.number="changepage"></span>\n        <span class="jump go-btn" @click="jumppage(changepage)">go</span>\n      </div>\n      <span class="pagenum">第{{current_page||1}}页/共{{total}}页</span>\n      <div>\n        setting pages: <input type="text" v-model="total">\n      </div>\n    </div>`;\n\n      var paginationcom = vue.extend({\n        data: function() {\n          return {\n            current_page: this.current, //当前页\n            page: 7,\n            changepage: "" //跳转页\n          };\n        },\n        props: {\n          total: {\n            type: number,\n            require: true\n          },\n          current: {\n            type: number,\n            default: 1\n          }\n        },\n        watch: {\n          current(val) {\n            this.current_page = val;\n          }\n        },\n        template: template,\n        computed: {\n          // 是否展示\n          show: function() {\n            return this.total && this.total != 1;\n          },\n          startpage: function() {\n            return this.current_page == 1;\n          },\n          endpage: function() {\n            return this.current_page == this.total;\n          },\n          // 显示前...\n          smore: function() {\n            if (this.total <= this.page) return false;\n            var mids = this.mids;\n            var len = mids.length;\n            return mids[len - 1] > this.page - 1;\n          },\n          // 显示后...\n          emore: function() {\n            if (this.total < this.page) return false;\n            var mids = this.mids;\n            var len = mids.length;\n            return mids[0] + len < this.total;\n          },\n          // 中间显示的页数\n          mids: function() {\n            var left = this.current_page + 1,\n              right = this.total - 1,\n              mid = this.page - 2,\n              mid_pages = [];\n\n            // 总页数大于当前显示最大页\n            if (this.total > this.page) {\n              if (\n                this.current_page > mid &&\n                this.current_page < this.total - (mid - 1)\n              ) {\n                left = number(this.current_page) - 3;\n                right = number(this.current_page) + 1;\n              } else {\n                if (this.current_page <= mid) {\n                  left = 2;\n                  right = this.page - 1;\n                } else {\n                  right = this.total - 1;\n                  left = this.total - this.page + 2;\n                }\n              }\n            } else {\n              right = this.total - 1;\n              left = 2;\n            }\n            while (left <= right) {\n              mid_pages.push(left);\n              left++;\n            }\n            return mid_pages;\n          }\n        },\n        methods: {\n          prev: function() {\n            this.current_page--;\n            this.$emit("update:current", this.current_page);\n          },\n          next: function() {\n            this.current_page++;\n            this.$emit("update:current", this.current_page);\n          },\n          jumppage: function(current) {\n            if (current <= this.total && current > 0) {\n              this.current_page = current;\n              this.$emit("update:current", current);\n            }\n          }\n        }\n      });\n\n      vue.component("vue-pagination2", {\n        data: function() {\n          return {\n            current_page: 1, //当前页\n            total: 8, //总页数\n            page: 7,\n            changepage: "" //跳转页\n          };\n        },\n        template: template,\n        computed: {\n          // 是否展示\n          show: function() {\n            return this.total && this.total != 1;\n          },\n          startpage: function() {\n            return this.current_page == 1;\n          },\n          endpage: function() {\n            return this.current_page == this.total;\n          },\n          // 显示前...\n          smore: function() {\n            if (this.total <= this.page) return false;\n            var mids = this.mids;\n            var len = mids.length;\n            return mids[len - 1] > this.page - 1;\n          },\n          // 显示后...\n          emore: function() {\n            if (this.total < this.page) return false;\n            var mids = this.mids;\n            var len = mids.length;\n            return mids[0] + len < this.total;\n          },\n          // 中间显示的页数\n          mids: function() {\n            var left = this.current_page + 1,\n              right = this.total - 1,\n              mid = this.page - 2,\n              mid_pages = [];\n\n            // 总页数大于当前显示最大页\n            if (this.total > this.page) {\n              if (\n                this.current_page > mid &&\n                this.current_page < this.total - (mid - 1)\n              ) {\n                left = number(this.current_page) - 2;\n                right = number(this.current_page) + 2;\n              } else {\n                if (this.current_page <= mid) {\n                  left = 2;\n                  right = this.page - 1;\n                } else {\n                  right = this.total - 1;\n                  left = this.total - this.page + 2;\n                }\n              }\n            } else {\n              right = this.total - 1;\n              left = 2;\n            }\n            while (left <= right) {\n              mid_pages.push(left);\n              left++;\n            }\n            return mid_pages;\n          }\n        },\n        methods: {\n          prev: function() {\n            this.current_page--;\n            this.$emit("update:current", this.current_page);\n          },\n          next: function() {\n            this.current_page++;\n            this.$emit("update:current", this.current_page);\n          },\n          jumppage: function(current) {\n            if (current <= this.total && current > 0) {\n              this.current_page = current;\n              this.$emit("update:page", current);\n            }\n          }\n        }\n      });\n\n      new vue({\n        el: "#app",\n        data: {\n          msg: "hello",\n          total: 30,\n          current: 3\n        },\n        components: {\n          "pagination-com": paginationcom\n        },\n        methods: {\n          handlecurrentpage: function(current) {\n            console.log("current page", current);\n          }\n        },\n        watch: {\n          current: function(val) {\n            console.log(val);\n          }\n        },\n        mounted() {\n          console.log("mounted");\n          this.current = 6;\n        }\n      });\n    <\/script>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n# i18n\n<!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <meta http-equiv="x-ua-compatible" content="ie=edge" />\n    <title>vue i18n</title>\n  </head>\n  <body>\n    <script src="https://unpkg.com/vue/dist/vue.js"><\/script>\n    <script src="https://unpkg.com/vue-i18n/dist/vue-i18n.js"><\/script>\n\n    <div id="app">\n      <select name="" v-model="lang">\n        <option value="cn">中文</option>\n        <option value="en">英文</option>\n        <option value="ja">日文</option>\n      </select>\n\n      <p>{{ lang }}</p>\n\n      <p>{{ $t("message.hello") }}</p>\n    </div>\n    <script>\n      const messages = {\n        en: {\n          message: {\n            hello: "hello world"\n          }\n        },\n        ja: {\n          message: {\n            hello: "こんにちは、世界"\n          }\n        },\n        cn: {\n          message: {\n            hello: "你好"\n          }\n        }\n      };\n\n      // 通过选项创建 vuei18n 实例\n      const i18n = new vuei18n({\n        locale: "en", // 设置地区\n        messages // 设置地区信息\n      });\n\n      // console.log(i18n.locale = \'ja\');\n\n      // 通过 `i18n` 选项创建 vue 实例\n      const vm = new vue({\n        data: {\n          lang: "en"\n        },\n        i18n,\n        watch: {\n          lang(val) {\n            this.$i18n.locale = val;\n          }\n        }\n      }).$mount("#app");\n    <\/script>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n# alert\n<!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>vue alert</title>\n    <style>\n      .shadow {\n        background-color: rgba(0, 0, 0, 0.5);\n        display: table;\n        height: 100%;\n        left: 0;\n        position: fixed;\n        top: 0;\n        transition: opacity 0.3s ease;\n        width: 100%;\n        z-index: 50;\n      }\n\n      .modal {\n        display: table-cell;\n        vertical-align: middle;\n        overflow-x: hidden;\n        position: fixed;\n        background-color: white;\n        box-shadow: rgba(0, 0, 0, 0.33) 0px 2px 8px;\n        border-radius: 5px;\n        outline: 0px;\n        overflow: hidden;\n        transition: all 0.3s ease;\n        width: 600px;\n        height: 400px;\n        top: 50%;\n        left: 50%;\n        margin-top: -200px;\n        margin-left: -300px;\n      }\n\n      .header {\n        align-items: center;\n        background-color: #62a39e;\n        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.16);\n        color: #fff;\n        font-weight: bold;\n        display: -ms-flexbox;\n        display: flex;\n        height: 3.5rem;\n        padding: 0 1.5rem;\n        position: relative;\n        z-index: 1;\n      }\n\n      .body {\n        align-items: center;\n        padding: 1.5rem;\n      }\n\n      .footer {\n        justify-content: flex-end;\n        padding: 1.5rem;\n        position: absolute;\n        bottom: 0;\n        width: 100%;\n        float: right;\n      }\n\n      .item {\n        color: white;\n        text-align: center;\n        border-radius: 5px;\n        padding: 10px;\n        cursor: pointer;\n        display: inline-block;\n      }\n\n      .info {\n        background-color: #2196f3;\n      }\n\n      .success {\n        background-color: #62a39e;\n      }\n\n      .red {\n        background-color: #e95358;\n      }\n\n      .smsize {\n        height: 200px;\n      }\n    </style>\n  </head>\n\n  <body>\n    <div id="app">\n      <h1>app</h1>\n      <button @click="display">click</button>\n      <button @click="other">click other</button>\n      <alert-modal ref="chat-modal"></alert-modal>\n    </div>\n\n    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"><\/script>\n    <script>\n      var template = `\n      <div class="shadow" v-show="showmodal">\n        <div class="modal" :class="{\'smsize\': othertext.small || small}">\n            <div class="header">{{ othertext.title || title}}</div>\n            <div class="body">\n                <slot></slot>\n            </div>\n            <div class="footer">\n                <div class="item success" ref="sure" v-show="othertext.suretext || suretext">{{ othertext.suretext || suretext }}</div>\n                <div class="item red" ref="cancel" v-show="othertext.canceltext || canceltext">{{ othertext.canceltext || canceltext }}</div>\n            </div>\n        </div>\n      </div>\n      `;\n\n      var vm = {\n        template: template,\n        data() {\n          return {\n            othertext: {\n              suretext: "确认",\n              canceltext: "取消",\n              title: "标题",\n              small: true\n            },\n            showmodal: false\n          };\n        },\n        methods: {\n          openmodal(othertext) {\n            this.othertext = { ...this.othertext, ...othertext };\n            this.showmodal = true;\n            var pms = new promise((resolve, reject) => {\n              this.$refs["sure"].addeventlistener("click", () => {\n                this.showmodal = false;\n                resolve("点击了确定");\n              });\n              this.$refs["cancel"].addeventlistener("click", () => {\n                this.showmodal = false;\n                reject("点击了取消");\n              });\n            });\n            return pms;\n          }\n        }\n      };\n\n      var tpl = `\n        <div class="shadow">\n          <div class="modal">\n              <div class="header">{{ title }}</div>\n              <div class="body">\n                  {{content}}\n              </div>\n              <div class="footer">\n                  <div class="item success" @click="handleconfirm">{{ suretext }}</div>\n                  <div class="item red" @click="handlecancel">{{ canceltext }}</div>\n              </div>\n          </div>\n        </div>\n        `;\n\n      var toast = vue.extend({\n        template: tpl,\n        data() {\n          return {\n            title: "标题",\n            content: "",\n            suretext: "确认",\n            canceltext: "取消"\n          };\n        },\n        methods: {\n          handleconfirm() {\n            this.remove();\n            this.confirm && this.confirm();\n          },\n          handlecancel() {\n            this.remove();\n            this.cancel && this.cancel();\n          },\n          remove() {\n            var doc = document.body;\n            doc.removechild(this.$el);\n          }\n        }\n      });\n\n      var showtoast = function(options) {\n        options = object.assign({}, options);\n        const instance = new toast({\n          data: options\n        });\n        let doc = document.body;\n        instance.$mount();\n        doc.appendchild(instance.$el);\n        return instance;\n      };\n\n      vue.prototype.$toast = showtoast;\n\n      new vue({\n        el: "#app",\n        components: {\n          "alert-modal": vm\n        },\n        methods: {\n          display() {\n            this.$refs["chat-modal"]\n              .openmodal({\n                title: "弹窗标题",\n                suretext: "确认",\n                canceltext: "取消"\n              })\n              .then(\n                res => {\n                  //点击确认的回调\n                  console.log("确认", res);\n                },\n                res => {\n                  //点击取消的回调\n                  console.log("取消 ", res);\n                }\n              );\n          },\n          other() {\n            this.$toast({\n              title: "弹窗标题",\n              content: "123131"\n            });\n          }\n        }\n      });\n    <\/script>\n  </body>\n</html>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239',charsets:{cjk:!0}},{title:"vue 常用插件",frontmatter:{title:"vue 常用插件",date:"2020-07-21T00:00:00.000Z",sidebar:"auto",tags:["vue"],readingShow:"top"},regularPath:"/vueJs/vue-plugins.html",relativePath:"vueJs/vue-plugins.md",key:"v-01f8c78b",path:"/vueJs/vue-plugins.html",lastUpdated:"2020/7/30 上午10:49:06",headersStr:null,content:"# 骨架屏\nvue-skeleton-webpack-plugin\n\n# 预渲染插件\nprerender-spa-plugin\n\n# 装饰器\nvue-property-decorator\n\n\n# 图片预览\nvue-photo-preview\n\n\n# 安装webpack\nwebpack webpack-cli\n\n# 配置 ES6/7/8 转 ES5代码\nbabel-loader\n@babel/core\n@babel/preset-env\n\n# ES6/7/8 Api 转es5\n@babel-polyfill\n\n# 配置 scss 转 css\nsass-loader\ndart-sass\ncss-loader\nstyle-loader\n\n# 配置 postcss 实现自动添加css3前缀\npostcss-loader\nautoprefixer\n\nhtml-webpack-plugin\nwebpack-dev-server\n\n# 解析文件url，并将文件复制到输出的目录中\nfile-loader\n\n# 功能与 file-loader 类似，如果文件小于限制的大小。则会返回 base64 编码，否则使用 file-loader将文件复制到输出的目录中\nurl-loader\n\n# 用于解析.vue文件\nvue-loader\n\n# 用于编译模板\nvue-template-compiler\n\n# 用于缓存loader编译的结果\ncache-loader\n\n# 使用 worker 池来运行loader，每个 worker 都是一个 node.js 进程\nthread-loader\n\n# 用于压缩css代码\n@intervolga/optimize-cssnano-plugin\n\n# 用于提取css到文件中\nmini-css-extract-plugin\n\n# 用于删除上次构建的文件\nclean-webpack-plugin\n\n# 合并 webpack配置\nwebpack-merge\n\n# 用户拷贝静态资源\ncopy-webpack-plugin\n\n# 精灵图自动合成\npostcss-sprites\n\n# 使用 vw,vh 自适应\npostcss-px-to-viewport\n\n# 图片压缩\nimg-loader\nimagemin\nimagemin-jpegtran\nimagemin-pngquant\n\nmemory-fs\n\nregister-service-worker\nworkbox\n\njs-cookie\nfastclick\n\nraw-loader\n\niScroll better-scroll\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94",normalizedContent:"# 骨架屏\nvue-skeleton-webpack-plugin\n\n# 预渲染插件\nprerender-spa-plugin\n\n# 装饰器\nvue-property-decorator\n\n\n# 图片预览\nvue-photo-preview\n\n\n# 安装webpack\nwebpack webpack-cli\n\n# 配置 es6/7/8 转 es5代码\nbabel-loader\n@babel/core\n@babel/preset-env\n\n# es6/7/8 api 转es5\n@babel-polyfill\n\n# 配置 scss 转 css\nsass-loader\ndart-sass\ncss-loader\nstyle-loader\n\n# 配置 postcss 实现自动添加css3前缀\npostcss-loader\nautoprefixer\n\nhtml-webpack-plugin\nwebpack-dev-server\n\n# 解析文件url，并将文件复制到输出的目录中\nfile-loader\n\n# 功能与 file-loader 类似，如果文件小于限制的大小。则会返回 base64 编码，否则使用 file-loader将文件复制到输出的目录中\nurl-loader\n\n# 用于解析.vue文件\nvue-loader\n\n# 用于编译模板\nvue-template-compiler\n\n# 用于缓存loader编译的结果\ncache-loader\n\n# 使用 worker 池来运行loader，每个 worker 都是一个 node.js 进程\nthread-loader\n\n# 用于压缩css代码\n@intervolga/optimize-cssnano-plugin\n\n# 用于提取css到文件中\nmini-css-extract-plugin\n\n# 用于删除上次构建的文件\nclean-webpack-plugin\n\n# 合并 webpack配置\nwebpack-merge\n\n# 用户拷贝静态资源\ncopy-webpack-plugin\n\n# 精灵图自动合成\npostcss-sprites\n\n# 使用 vw,vh 自适应\npostcss-px-to-viewport\n\n# 图片压缩\nimg-loader\nimagemin\nimagemin-jpegtran\nimagemin-pngquant\n\nmemory-fs\n\nregister-service-worker\nworkbox\n\njs-cookie\nfastclick\n\nraw-loader\n\niscroll better-scroll\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94",charsets:{cjk:!0}},{title:"vue2.x组件通讯方法",frontmatter:{title:"vue2.x组件通讯方法",date:"2020-07-30T00:00:00.000Z",sidebar:"auto",tags:["vue"],readingShow:"top"},regularPath:"/vueJs/vue-props.html",relativePath:"vueJs/vue-props.md",key:"v-e3a2eb6a",path:"/vueJs/vue-props.html",headers:[{level:2,title:"props",slug:"props",normalizedTitle:"props",charIndex:36},{level:2,title:"$emit",slug:"emit",normalizedTitle:"$emit",charIndex:482},{level:2,title:"vuex",slug:"vuex",normalizedTitle:"vuex",charIndex:3164},{level:2,title:"attrs和listeners",slug:"attrs和listeners",normalizedTitle:"attrs和listeners",charIndex:3563},{level:2,title:"provide和inject",slug:"provide和inject",normalizedTitle:"provide和inject",charIndex:4784},{level:2,title:"parent和children",slug:"parent和children",normalizedTitle:"parent和children",charIndex:5758},{level:2,title:"$refs",slug:"refs",normalizedTitle:"$refs",charIndex:5981},{level:2,title:".sync修饰符",slug:"sync修饰符",normalizedTitle:".sync修饰符",charIndex:6114},{level:2,title:"v-slot",slug:"v-slot",normalizedTitle:"v-slot",charIndex:6350},{level:2,title:"EventBus",slug:"eventbus",normalizedTitle:"eventbus",charIndex:7285},{level:2,title:"broadcast和dispatch",slug:"broadcast和dispatch",normalizedTitle:"broadcast和dispatch",charIndex:7534},{level:2,title:"路由传参",slug:"路由传参",normalizedTitle:"路由传参",charIndex:8256},{level:2,title:"Vue.observable",slug:"vue-observable",normalizedTitle:"vue.observable",charIndex:8928},{level:2,title:"$root",slug:"root",normalizedTitle:"$root",charIndex:9688},{level:2,title:"其他",slug:"其他",normalizedTitle:"其他",charIndex:9899}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"props $emit vuex attrs和listeners provide和inject parent和children $refs .sync修饰符 v-slot EventBus broadcast和dispatch 路由传参 Vue.observable $root 其他",content:'\n\n原文地址: Vue 开发必须知道的 36 个技巧【近1W字】\n\n# props\n// 数组:不建议使用\nprops:[]\n\n// 对象\nprops:{\n inpVal:{\n  type: Number, //传入值限定类型\n  // type 值可为String,Number,Boolean,Array,Object,Date,Function,Symbol\n  // type 还可以是一个自定义的构造函数，并且通过 instanceof 来进行检查确认\n  required: true, //是否必传\n  default:200,  //默认值,对象或数组默认值必须从一个工厂函数获取如 default:()=>[]\n  validator:(value) {\n    // 这个值必须匹配下列字符串中的一个\n    return [\'success\', \'warning\', \'danger\'].indexOf(value) !== -1\n  }\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# $emit\n// 父组件\n<home @title="setTitle">\n\n// 子组件\nthis.$emit(\'title\',{title:\'这是title\'})\n\n\n1\n2\n3\n4\n5\n * v-model\n\n //把input输入框的value属性值和vue实例的message属性进行绑定，同时监听输入事件。\n <input v-bind:value="message" v-on:input="message = $event.target.value" />\n\n// v-model 是 @input 与 value 的语法糖\n\n\n1\n2\n3\n4\n * v-bind: vue2.x v-bind\n\n\x3c!-- 绑定一个 attribute --\x3e\n<img v-bind:src="imageSrc">\n\n\x3c!-- 动态 attribute 名 (2.6.0+) --\x3e\n<button v-bind:[key]="value"></button>\n\n\x3c!-- 缩写 --\x3e\n<img :src="imageSrc">\n\n\x3c!-- 动态 attribute 名缩写 (2.6.0+) --\x3e\n<button :[key]="value"></button>\n\n\x3c!-- 内联字符串拼接 --\x3e\n<img :src="\'/path/to/images/\' + fileName">\n\n\x3c!-- class 绑定 --\x3e\n<div :class="{ red: isRed }"></div>\n<div :class="[classA, classB]"></div>\n<div :class="[classA, { classB: isB, classC: isC }]">\n\n\x3c!-- style 绑定 --\x3e\n<div :style="{ fontSize: size + \'px\' }"></div>\n<div :style="[styleObjectA, styleObjectB]"></div>\n\n\x3c!-- 绑定一个全是 attribute 的对象 --\x3e\n<div v-bind="{ id: someProp, \'other-attr\': otherProp }"></div>\n\n\x3c!-- 通过 prop 修饰符绑定 DOM attribute --\x3e\n<div v-bind:text-content.prop="text"></div>\n\n\x3c!-- prop 绑定。“prop”必须在 my-component 中声明。--\x3e\n<my-component :prop="someThing"></my-component>\n\n\x3c!-- 通过 $props 将父组件的 props 一起传给子组件 --\x3e\n<child-component v-bind="$props"></child-component>\n\n\x3c!-- XLink --\x3e\n<svg><a :xlink:special="foo"></a></svg>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n * v-on: vue2.x v-on\n\n\x3c!-- 方法处理器 --\x3e\n<button v-on:click="doThis"></button>\n\n\x3c!-- 动态事件 (2.6.0+) --\x3e\n<button v-on:[event]="doThis"></button>\n\n\x3c!-- 内联语句 --\x3e\n<button v-on:click="doThat(\'hello\', $event)"></button>\n\n\x3c!-- 缩写 --\x3e\n<button @click="doThis"></button>\n\n\x3c!-- 动态事件缩写 (2.6.0+) --\x3e\n<button @[event]="doThis"></button>\n\n\x3c!-- 停止冒泡 --\x3e\n<button @click.stop="doThis"></button>\n\n\x3c!-- 阻止默认行为 --\x3e\n<button @click.prevent="doThis"></button>\n\n\x3c!-- 阻止默认行为，没有表达式 --\x3e\n<form @submit.prevent></form>\n\n\x3c!--  串联修饰符 --\x3e\n<button @click.stop.prevent="doThis"></button>\n\n\x3c!-- 键修饰符，键别名 --\x3e\n<input @keyup.enter="onEnter">\n\n\x3c!-- 键修饰符，键代码 --\x3e\n<input @keyup.13="onEnter">\n\n\x3c!-- 点击回调只会触发一次 --\x3e\n<button v-on:click.once="doThis"></button>\n\n\x3c!-- 对象语法 (2.4.0+) --\x3e\n<button v-on="{ mousedown: doThis, mouseup: doThat }"></button>\n\n\x3c!-- 监听自定义事件 --\x3e\n<my-component @my-event="handleThis"></my-component>\n\n\x3c!-- 内联语句 --\x3e\n<my-component @my-event="handleThis(123, $event)"></my-component>\n\n\x3c!-- 组件中的原生事件 --\x3e\n<my-component @click.native="onClick"></my-component>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n * v-cloak\n\n\x3c!-- css --\x3e\ndiv[v-cloak] {\n  display: none;\n}\n\n\x3c!-- body --\x3e\n<div id="app" v-cloak>\n  {{ message }}\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# vuex\nstate: // 定义存贮数据的仓库 ,可通过this.$store.state 或mapState访问\n\ngetter: // 获取 store 值,可认为是 store 的计算属性,可通过this.$store.getter 或 mapGetters访问\n\nmutation: // 同步改变 store 值,为什么会设计成同步,因为mutation是直接改变 store 值,\n          // vue 对操作进行了记录,如果是异步无法追踪改变.可通过mapMutations调用\n\naction: // 异步调用函数执行mutation,进而改变 store 值,可通过 this.$dispatch或mapActions访问\n\nmodules: // 模块,如果状态过多,可以拆分成模块,最后在入口通过...解构引入\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# attrs和listeners\n * attrs获取子传父中未在 props 定义的值\n\n// 父组件\n<home title="这是标题" width="80" height="80" imgUrl="imgUrl"/>\n\n// 子组件\nmounted() {\n  console.log(this.$attrs) //{title: "这是标题", width: "80", height: "80", imgUrl: "imgUrl"}\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n * 如果子组件定义了 props,打印的值就是剔除定义的属性\n\nprops: {\n  width: {\n    type: String,\n    default: \'\'\n  }\n},\nmounted() {\n  console.log(this.$attrs) //{title: "这是标题", height: "80", imgUrl: "imgUrl"}\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * listeners 传入内部组件\n\n// 父组件\n<home @change="change"/>\n\n// 子组件\nmounted() {\n  console.log(this.$listeners) //即可拿到 change 事件\n}\n\n-----------------------------\n\n// 父组件\n<home v-on="$listeners"/>\n\n// 例如 自定义 element-ui的table组件\n\n<template>\n  <el-table\n    :data="data"\n    v-bind="$attrs"\n    v-on="$listeners"\n  >\n    // ...\n  </el-table>\n</template>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * inheritAttrs\n\n// 父组件\n<home title="这是标题" width="80" height="80" imgUrl="imgUrl"/>\n\n// 子组件\nmounted() {\n  console.log(this.$attrs)\n  //{title: "这是标题", width: "80", height: "80", imgUrl: "imgUrl"}\n},\n\n// inheritAttrs默认值为true，是将父组件中除了props外的属性添加到子组件的根节点上\n// 说明，即使设置为true，子组件仍然可以通过$attr获取到props意外的属性\n// 将inheritAttrs:false 后,属性就不会显示在根节点上了\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# provide和inject\n//父组件:\nprovide: { //provide 是一个对象,提供一个属性或方法\n  foo: \'这是 foo\',\n  fooMethod:()=>{\n    console.log(\'父组件 fooMethod 被调用\')\n  }\n},\n\n// 子或者孙子组件\ninject: [\'foo\',\'fooMethod\'], //数组或者对象,注入到子组件\nmounted() {\n  this.fooMethod()\n  console.log(this.foo)\n}\n//在父组件下面所有的子组件都可以利用inject\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * provide 和 inject 绑定并不是可响应的\n\n//父组件:\nprovide: {\n  foo: \'这是 foo\'\n},\nmounted(){\n  this.foo=\'这是新的 foo\'\n}\n\n// 子或者孙子组件\ninject: [\'foo\'],\nmounted() {\n  console.log(this.foo) //子组件打印的还是\'这是 foo\'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * provide和inject响应方法\n\n// 父组件\nprovide() {\n  return {\n    staticValue: this.staticValue, // 直接返回值，不可响应\n    staticObject: this.staticObject, // 返回一个对象，可响应\n    getReactiveValue: () => this.staticValue // 返回一个对象的函数，可响应\n  }\n},\n\n// 子组件\ninject: ["staticValue", "getReactiveValue", "staticObject"],\ncomputed: {\n  reactiveValue() {\n    return this.getReactiveValue(); // 返回注入的对象函数，通过计算属性来监听值的变化\n  },\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# parent和children\n//父组件\nmounted(){\n  console.log(this.$children)\n  //可以拿到 一级子组件的属性和方法\n  //所以就可以直接改变 data,或者调用 methods 方法\n}\n\n//子组件\nmounted(){\n  console.log(this.$parent)\n  //可以拿到 parent 的属性和方法\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# $refs\n// 父组件\n<home ref="home"/>\n\nmounted(){\n  console.log(this.$refs.home)\n  //即可拿到子组件的实例,就可以直接操作 data 和 methods\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# .sync修饰符\n// 父组件\n<home :title.sync="title" />\n//编译时会被扩展为\n<home :title="title"  @update:title="val => title = val"/>\n\n// 子组件\n// 所以子组件可以通过$emit 触发 update 方法改变\nmounted(){\n  this.$emit("update:title", \'这是新的title\')\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# v-slot\n * 默认\n\n// 父组件\n<todo-list>\n    <template v-slot:default>\n       任意内容\n       <p>我是匿名插槽 </p>\n    </template>\n</todo-list>\n\n// 子组件\n<slot>我是默认值</slot>\n//v-slot:default写上感觉和具名写法比较统一,容易理解,也可以不用写\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 具名插槽\n\n// 父组件\n<todo-list>\n    <template v-slot:todo>\n       任意内容\n       <p>我是具名插槽 </p>\n    </template>\n</todo-list>\n\n//子组件\n<slot name="todo">我是默认值</slot>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 作用域插槽\n\n// 父组件\n<todo-list>\n <template v-slot:todo="slotProps" >\n   {{slotProps.user.firstName}}\n </template>\n</todo-list>\n//slotProps 可以随意命名\n//slotProps 接取的是子组件标签slot上属性数据的集合所有v-bind:user="user"\n\n// 子组件\n<slot name="todo" :user="user" :test="test">\n    {{ user.lastName }}\n </slot>\ndata() {\n    return {\n      user:{\n        lastName:"Zhang",\n        firstName:"yue"\n      },\n      test:[1,2,3,4]\n    }\n  },\n// {{ user.lastName }}是默认数据  v-slot:todo 当父页面没有(="slotProps")\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# EventBus\n// 在 main.js\nVue.prototype.$eventBus=new Vue()\n\n// 传值组件\nthis.$eventBus.$emit(\'eventTarget\',\'这是eventTarget传过来的值\')\n\n// 接收组件\nthis.$eventBus.$on("eventTarget",v=>{\n  console.log(\'eventTarget\',v);//这是eventTarget传过来的值\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# broadcast和dispatch\n// 派发事件\nvue.prototype.$dispatch = function(eventName, value) {\n  let parent = this.$parent;\n  while (parent) {\n    parent.$emit(eventName, value);\n    parent = parent.$parent;\n  }\n};\n\n// 广播事件\nVue.prototype.$broadcast = function(eventName, value) {\n  let broadcast = children => {\n    children.forEach(child => {\n      child.$emit(eventName, value);\n      if (child.$children) {\n        broadcast(child.$children);\n      }\n    });\n  };\n  broadcast(this.$children);\n};\n\n/*\ninheritAttrs: false // 绑定的属性不在dom上显示 ：<div name="xxx"></div> 不显示\nv-bind="$attrs"  // 将 $attrs 上所有属性绑定到dom上传递给子组件\nv-on="$listeners" // 表示将方法绑定到dom上传递给子组件\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 路由传参\n * 方案一\n\n// 路由定义\n{\n  path: \'/describe/:id\',\n  name: \'Describe\',\n  component: Describe\n}\n// 页面传参\nthis.$router.push({\n  path: `/describe/${id}`,\n})\n// 页面获取\nthis.$route.params.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 方案二\n\n// 路由定义\n{\n  path: \'/describe\',\n  name: \'Describe\',\n  component: Describe\n}\n// 页面传参\nthis.$router.push({\n  name: \'Describe\',\n  params: {\n    id: id\n  }\n})\n// 页面获取\nthis.$route.params.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 方案三\n\n// 路由定义\n{\n  path: \'/describe\',\n  name: \'Describe\',\n  component: Describe\n}\n// 页面传参\nthis.$router.push({\n  path: \'/describe\',\n    query: {\n      id: id\n  `}\n)\n// 页面获取\nthis.$route.query.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# Vue.observable\n// store/store.js\nimport Vue from \'vue\'\n\nexport const store = Vue.observable({ count: 0 })\nexport const mutations = {\n  setCount (count) {\n    store.count = count\n  }\n}\n\n//使用\n<template>\n    <div>\n        <label for="bookNum">数 量</label>\n        <button @click="setCount(count+1)">+</button>\n        <span>{{count}}</span>\n        <button @click="setCount(count-1)">-</button>\n    </div>\n</template>\n\n<script>\nimport { store, mutations } from \'../store/store\' // Vue2.6新增API Observable\n\nexport default {\n  name: \'Add\',\n  computed: {\n    count () {\n      return store.count\n    }\n  },\n  methods: {\n    setCount: mutations.setCount\n  }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n# $root\n// 父组件\nmounted(){\n  console.log(this.$root) //获取根实例,最后所有组件都是挂载到根实例上\n  console.log(this.$root.$children[0]) //获取根实例的一级子组件\n  console.log(this.$root.$children[0].$children[0]) //获取根实例的二级子组件\n}\n\n\n1\n2\n3\n4\n5\n6\n# 其他\n * window.localStorage的方式\n * 服务端接口',normalizedContent:'\n\n原文地址: vue 开发必须知道的 36 个技巧【近1w字】\n\n# props\n// 数组:不建议使用\nprops:[]\n\n// 对象\nprops:{\n inpval:{\n  type: number, //传入值限定类型\n  // type 值可为string,number,boolean,array,object,date,function,symbol\n  // type 还可以是一个自定义的构造函数，并且通过 instanceof 来进行检查确认\n  required: true, //是否必传\n  default:200,  //默认值,对象或数组默认值必须从一个工厂函数获取如 default:()=>[]\n  validator:(value) {\n    // 这个值必须匹配下列字符串中的一个\n    return [\'success\', \'warning\', \'danger\'].indexof(value) !== -1\n  }\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# $emit\n// 父组件\n<home @title="settitle">\n\n// 子组件\nthis.$emit(\'title\',{title:\'这是title\'})\n\n\n1\n2\n3\n4\n5\n * v-model\n\n //把input输入框的value属性值和vue实例的message属性进行绑定，同时监听输入事件。\n <input v-bind:value="message" v-on:input="message = $event.target.value" />\n\n// v-model 是 @input 与 value 的语法糖\n\n\n1\n2\n3\n4\n * v-bind: vue2.x v-bind\n\n\x3c!-- 绑定一个 attribute --\x3e\n<img v-bind:src="imagesrc">\n\n\x3c!-- 动态 attribute 名 (2.6.0+) --\x3e\n<button v-bind:[key]="value"></button>\n\n\x3c!-- 缩写 --\x3e\n<img :src="imagesrc">\n\n\x3c!-- 动态 attribute 名缩写 (2.6.0+) --\x3e\n<button :[key]="value"></button>\n\n\x3c!-- 内联字符串拼接 --\x3e\n<img :src="\'/path/to/images/\' + filename">\n\n\x3c!-- class 绑定 --\x3e\n<div :class="{ red: isred }"></div>\n<div :class="[classa, classb]"></div>\n<div :class="[classa, { classb: isb, classc: isc }]">\n\n\x3c!-- style 绑定 --\x3e\n<div :style="{ fontsize: size + \'px\' }"></div>\n<div :style="[styleobjecta, styleobjectb]"></div>\n\n\x3c!-- 绑定一个全是 attribute 的对象 --\x3e\n<div v-bind="{ id: someprop, \'other-attr\': otherprop }"></div>\n\n\x3c!-- 通过 prop 修饰符绑定 dom attribute --\x3e\n<div v-bind:text-content.prop="text"></div>\n\n\x3c!-- prop 绑定。“prop”必须在 my-component 中声明。--\x3e\n<my-component :prop="something"></my-component>\n\n\x3c!-- 通过 $props 将父组件的 props 一起传给子组件 --\x3e\n<child-component v-bind="$props"></child-component>\n\n\x3c!-- xlink --\x3e\n<svg><a :xlink:special="foo"></a></svg>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n * v-on: vue2.x v-on\n\n\x3c!-- 方法处理器 --\x3e\n<button v-on:click="dothis"></button>\n\n\x3c!-- 动态事件 (2.6.0+) --\x3e\n<button v-on:[event]="dothis"></button>\n\n\x3c!-- 内联语句 --\x3e\n<button v-on:click="dothat(\'hello\', $event)"></button>\n\n\x3c!-- 缩写 --\x3e\n<button @click="dothis"></button>\n\n\x3c!-- 动态事件缩写 (2.6.0+) --\x3e\n<button @[event]="dothis"></button>\n\n\x3c!-- 停止冒泡 --\x3e\n<button @click.stop="dothis"></button>\n\n\x3c!-- 阻止默认行为 --\x3e\n<button @click.prevent="dothis"></button>\n\n\x3c!-- 阻止默认行为，没有表达式 --\x3e\n<form @submit.prevent></form>\n\n\x3c!--  串联修饰符 --\x3e\n<button @click.stop.prevent="dothis"></button>\n\n\x3c!-- 键修饰符，键别名 --\x3e\n<input @keyup.enter="onenter">\n\n\x3c!-- 键修饰符，键代码 --\x3e\n<input @keyup.13="onenter">\n\n\x3c!-- 点击回调只会触发一次 --\x3e\n<button v-on:click.once="dothis"></button>\n\n\x3c!-- 对象语法 (2.4.0+) --\x3e\n<button v-on="{ mousedown: dothis, mouseup: dothat }"></button>\n\n\x3c!-- 监听自定义事件 --\x3e\n<my-component @my-event="handlethis"></my-component>\n\n\x3c!-- 内联语句 --\x3e\n<my-component @my-event="handlethis(123, $event)"></my-component>\n\n\x3c!-- 组件中的原生事件 --\x3e\n<my-component @click.native="onclick"></my-component>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n * v-cloak\n\n\x3c!-- css --\x3e\ndiv[v-cloak] {\n  display: none;\n}\n\n\x3c!-- body --\x3e\n<div id="app" v-cloak>\n  {{ message }}\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# vuex\nstate: // 定义存贮数据的仓库 ,可通过this.$store.state 或mapstate访问\n\ngetter: // 获取 store 值,可认为是 store 的计算属性,可通过this.$store.getter 或 mapgetters访问\n\nmutation: // 同步改变 store 值,为什么会设计成同步,因为mutation是直接改变 store 值,\n          // vue 对操作进行了记录,如果是异步无法追踪改变.可通过mapmutations调用\n\naction: // 异步调用函数执行mutation,进而改变 store 值,可通过 this.$dispatch或mapactions访问\n\nmodules: // 模块,如果状态过多,可以拆分成模块,最后在入口通过...解构引入\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# attrs和listeners\n * attrs获取子传父中未在 props 定义的值\n\n// 父组件\n<home title="这是标题" width="80" height="80" imgurl="imgurl"/>\n\n// 子组件\nmounted() {\n  console.log(this.$attrs) //{title: "这是标题", width: "80", height: "80", imgurl: "imgurl"}\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n * 如果子组件定义了 props,打印的值就是剔除定义的属性\n\nprops: {\n  width: {\n    type: string,\n    default: \'\'\n  }\n},\nmounted() {\n  console.log(this.$attrs) //{title: "这是标题", height: "80", imgurl: "imgurl"}\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * listeners 传入内部组件\n\n// 父组件\n<home @change="change"/>\n\n// 子组件\nmounted() {\n  console.log(this.$listeners) //即可拿到 change 事件\n}\n\n-----------------------------\n\n// 父组件\n<home v-on="$listeners"/>\n\n// 例如 自定义 element-ui的table组件\n\n<template>\n  <el-table\n    :data="data"\n    v-bind="$attrs"\n    v-on="$listeners"\n  >\n    // ...\n  </el-table>\n</template>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n * inheritattrs\n\n// 父组件\n<home title="这是标题" width="80" height="80" imgurl="imgurl"/>\n\n// 子组件\nmounted() {\n  console.log(this.$attrs)\n  //{title: "这是标题", width: "80", height: "80", imgurl: "imgurl"}\n},\n\n// inheritattrs默认值为true，是将父组件中除了props外的属性添加到子组件的根节点上\n// 说明，即使设置为true，子组件仍然可以通过$attr获取到props意外的属性\n// 将inheritattrs:false 后,属性就不会显示在根节点上了\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# provide和inject\n//父组件:\nprovide: { //provide 是一个对象,提供一个属性或方法\n  foo: \'这是 foo\',\n  foomethod:()=>{\n    console.log(\'父组件 foomethod 被调用\')\n  }\n},\n\n// 子或者孙子组件\ninject: [\'foo\',\'foomethod\'], //数组或者对象,注入到子组件\nmounted() {\n  this.foomethod()\n  console.log(this.foo)\n}\n//在父组件下面所有的子组件都可以利用inject\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * provide 和 inject 绑定并不是可响应的\n\n//父组件:\nprovide: {\n  foo: \'这是 foo\'\n},\nmounted(){\n  this.foo=\'这是新的 foo\'\n}\n\n// 子或者孙子组件\ninject: [\'foo\'],\nmounted() {\n  console.log(this.foo) //子组件打印的还是\'这是 foo\'\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n * provide和inject响应方法\n\n// 父组件\nprovide() {\n  return {\n    staticvalue: this.staticvalue, // 直接返回值，不可响应\n    staticobject: this.staticobject, // 返回一个对象，可响应\n    getreactivevalue: () => this.staticvalue // 返回一个对象的函数，可响应\n  }\n},\n\n// 子组件\ninject: ["staticvalue", "getreactivevalue", "staticobject"],\ncomputed: {\n  reactivevalue() {\n    return this.getreactivevalue(); // 返回注入的对象函数，通过计算属性来监听值的变化\n  },\n},\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# parent和children\n//父组件\nmounted(){\n  console.log(this.$children)\n  //可以拿到 一级子组件的属性和方法\n  //所以就可以直接改变 data,或者调用 methods 方法\n}\n\n//子组件\nmounted(){\n  console.log(this.$parent)\n  //可以拿到 parent 的属性和方法\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# $refs\n// 父组件\n<home ref="home"/>\n\nmounted(){\n  console.log(this.$refs.home)\n  //即可拿到子组件的实例,就可以直接操作 data 和 methods\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# .sync修饰符\n// 父组件\n<home :title.sync="title" />\n//编译时会被扩展为\n<home :title="title"  @update:title="val => title = val"/>\n\n// 子组件\n// 所以子组件可以通过$emit 触发 update 方法改变\nmounted(){\n  this.$emit("update:title", \'这是新的title\')\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# v-slot\n * 默认\n\n// 父组件\n<todo-list>\n    <template v-slot:default>\n       任意内容\n       <p>我是匿名插槽 </p>\n    </template>\n</todo-list>\n\n// 子组件\n<slot>我是默认值</slot>\n//v-slot:default写上感觉和具名写法比较统一,容易理解,也可以不用写\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 具名插槽\n\n// 父组件\n<todo-list>\n    <template v-slot:todo>\n       任意内容\n       <p>我是具名插槽 </p>\n    </template>\n</todo-list>\n\n//子组件\n<slot name="todo">我是默认值</slot>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 作用域插槽\n\n// 父组件\n<todo-list>\n <template v-slot:todo="slotprops" >\n   {{slotprops.user.firstname}}\n </template>\n</todo-list>\n//slotprops 可以随意命名\n//slotprops 接取的是子组件标签slot上属性数据的集合所有v-bind:user="user"\n\n// 子组件\n<slot name="todo" :user="user" :test="test">\n    {{ user.lastname }}\n </slot>\ndata() {\n    return {\n      user:{\n        lastname:"zhang",\n        firstname:"yue"\n      },\n      test:[1,2,3,4]\n    }\n  },\n// {{ user.lastname }}是默认数据  v-slot:todo 当父页面没有(="slotprops")\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# eventbus\n// 在 main.js\nvue.prototype.$eventbus=new vue()\n\n// 传值组件\nthis.$eventbus.$emit(\'eventtarget\',\'这是eventtarget传过来的值\')\n\n// 接收组件\nthis.$eventbus.$on("eventtarget",v=>{\n  console.log(\'eventtarget\',v);//这是eventtarget传过来的值\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# broadcast和dispatch\n// 派发事件\nvue.prototype.$dispatch = function(eventname, value) {\n  let parent = this.$parent;\n  while (parent) {\n    parent.$emit(eventname, value);\n    parent = parent.$parent;\n  }\n};\n\n// 广播事件\nvue.prototype.$broadcast = function(eventname, value) {\n  let broadcast = children => {\n    children.foreach(child => {\n      child.$emit(eventname, value);\n      if (child.$children) {\n        broadcast(child.$children);\n      }\n    });\n  };\n  broadcast(this.$children);\n};\n\n/*\ninheritattrs: false // 绑定的属性不在dom上显示 ：<div name="xxx"></div> 不显示\nv-bind="$attrs"  // 将 $attrs 上所有属性绑定到dom上传递给子组件\nv-on="$listeners" // 表示将方法绑定到dom上传递给子组件\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 路由传参\n * 方案一\n\n// 路由定义\n{\n  path: \'/describe/:id\',\n  name: \'describe\',\n  component: describe\n}\n// 页面传参\nthis.$router.push({\n  path: `/describe/${id}`,\n})\n// 页面获取\nthis.$route.params.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 方案二\n\n// 路由定义\n{\n  path: \'/describe\',\n  name: \'describe\',\n  component: describe\n}\n// 页面传参\nthis.$router.push({\n  name: \'describe\',\n  params: {\n    id: id\n  }\n})\n// 页面获取\nthis.$route.params.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 方案三\n\n// 路由定义\n{\n  path: \'/describe\',\n  name: \'describe\',\n  component: describe\n}\n// 页面传参\nthis.$router.push({\n  path: \'/describe\',\n    query: {\n      id: id\n  `}\n)\n// 页面获取\nthis.$route.query.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# vue.observable\n// store/store.js\nimport vue from \'vue\'\n\nexport const store = vue.observable({ count: 0 })\nexport const mutations = {\n  setcount (count) {\n    store.count = count\n  }\n}\n\n//使用\n<template>\n    <div>\n        <label for="booknum">数 量</label>\n        <button @click="setcount(count+1)">+</button>\n        <span>{{count}}</span>\n        <button @click="setcount(count-1)">-</button>\n    </div>\n</template>\n\n<script>\nimport { store, mutations } from \'../store/store\' // vue2.6新增api observable\n\nexport default {\n  name: \'add\',\n  computed: {\n    count () {\n      return store.count\n    }\n  },\n  methods: {\n    setcount: mutations.setcount\n  }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n# $root\n// 父组件\nmounted(){\n  console.log(this.$root) //获取根实例,最后所有组件都是挂载到根实例上\n  console.log(this.$root.$children[0]) //获取根实例的一级子组件\n  console.log(this.$root.$children[0].$children[0]) //获取根实例的二级子组件\n}\n\n\n1\n2\n3\n4\n5\n6\n# 其他\n * window.localstorage的方式\n * 服务端接口',charsets:{cjk:!0}},{title:"vue2.x 路由",frontmatter:{title:"vue2.x 路由",date:"2020-07-29T00:00:00.000Z",sidebar:"auto",tags:["vue"],readingShow:"top"},regularPath:"/vueJs/vue-router.html",relativePath:"vueJs/vue-router.md",key:"v-4f096bb7",path:"/vueJs/vue-router.html",headers:[{level:2,title:"开始使用",slug:"开始使用",normalizedTitle:"开始使用",charIndex:19},{level:2,title:"全局路由钩子",slug:"全局路由钩子",normalizedTitle:"全局路由钩子",charIndex:402},{level:2,title:"组件路由钩子",slug:"组件路由钩子",normalizedTitle:"组件路由钩子",charIndex:643},{level:2,title:"Vue.$router",slug:"vue-router",normalizedTitle:"vue.$router",charIndex:857},{level:2,title:"Vue.$route",slug:"vue-route",normalizedTitle:"vue.$route",charIndex:857},{level:2,title:"router render",slug:"router-render",normalizedTitle:"router render",charIndex:1167},{level:2,title:"路由传参",slug:"路由传参",normalizedTitle:"路由传参",charIndex:1239},{level:2,title:"路由拆分",slug:"路由拆分",normalizedTitle:"路由拆分",charIndex:1910},{level:2,title:"缓存和动画",slug:"缓存和动画",normalizedTitle:"缓存和动画",charIndex:3501},{level:2,title:"router-view 的 key",slug:"router-view-的-key",normalizedTitle:"router-view 的 key",charIndex:4077}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"开始使用 全局路由钩子 组件路由钩子 Vue.$router Vue.$route router render 路由传参 路由拆分 缓存和动画 router-view 的 key",content:"\n\n * vue-router\n\n# 开始使用\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\n\nconst Foo = { template: '<div>foo</div>' }\nconst Bar = { template: '<div>bar</div>' }\n\nconst routes = [\n  { path: '/foo', component: Foo },\n  { path: '/bar', component: Bar }\n]\n\nconst router = new VueRouter({\n  routes\n})\n\nconst app = new Vue({\n  router\n}).$mount('#app')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 全局路由钩子\n * beforeEach\n\nrouter.beforeEach((to, from, next) => {\n  //一般登录拦截用这个,也叫导航钩子守卫\n  if (path === '/login') {\n    next()\n    return\n  }\n  if (token) {\n    next();\n  }\n})\n\n// beforeResolve\n\n// afterEach\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 组件路由钩子\n * beforeRouteEnter\n\nbeforeRouteEnter (to, from, next) {\n  // 这里还无法访问到组件实例，this === undefined\n  next( vm => {\n    // 通过 `vm` 访问组件实例\n  })\n}\n\n// beforeRouteUpdate\n\n// beforeRouteLeave\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# Vue.$router\n// 跳转到不同的url，但这个方法回向history栈添加一个记录，点击后退会返回到上一个页面\nthis.$router.push()\n// 不会有记录\nthis.$router.replace()\n// n可为正数可为负数。正数返回上一个页面,类似 window.history.go(n)\nthis.$router.go(n)\n\n\n1\n2\n3\n4\n5\n6\n# Vue.$route\n// 获取通过 params 或/:id传参的参数\nthis.$route.params.id\n\n// 获取通过 query 传参的参数\nthis.$route.query.id\n\n\n1\n2\n3\n4\n5\n# router render\ncomponent: {\n  render: h => h(\"router-view\");\n}\n\n\n1\n2\n3\n# 路由传参\n * 方式一\n\n// 路由定义\n{\n  path: '/describe/:id',\n  name: 'Describe',\n  component: Describe\n}\n// 页面传参\nthis.$router.push({\n  path: `/describe/${id}`,\n})\n// 页面获取\nthis.$route.params.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 方式二\n\n// 路由定义\n{\n  path: '/describe',\n  name: 'Describe',\n  component: Describe\n}\n// 页面传参\nthis.$router.push({\n  name: 'Describe',\n  params: {\n    id: id\n  }\n})\n// 页面获取\nthis.$route.params.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 方式三\n\n// 路由定义\n{\n  path: '/describe',\n  name: 'Describe',\n  component: Describe\n}\n// 页面传参\nthis.$router.push({\n  path: '/describe',\n    query: {\n      id: id\n  }\n)\n// 页面获取\nthis.$route.query.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 路由拆分\n * 目录\n\n# router\n├── router\n│   ├── index.js\n│   └── router.js\n\n# views目录下\nviews\n├── Page\n│   ├── api.js # 接口定义\n│   ├── router.js # 路由配置\n│   └── src\n│       └── layered\n│           ├── detail.vue\n│           ├── index.vue\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * src/router/index.js\n\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport routes from './router'\n\nVue.use(VueRouter)\n\nconst router = new VueRouter({\n  mode: 'history',\n  routes\n})\n\nexport default router\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * src/router/router.js\n\n// 利用 webpack 读取 views 目录下的 router.js\nconst routerFile = require.context('../', true, /^\\.\\/views\\/[\\w.-]+\\/router.js$/)\n\n// 返回的 routerFile.keys() 是一个路由配置的路径数组列表 ['./views/Page/router.js']\n// 循环递归调用 routerFile 去解析 每一项的路径地址 './views/Page/router.js'\n// 返回 文件内容: Module { default: { path: \"/page\", name: 'xxx', children:[{},...]}, ... }\n\n// 获取返回路由集合\nconst routesConfig = (r => {\n  return r.keys().map(key => r(key).default)\n})(routerFile)\n\n// redirect\nconst redirectConfig = {\n  path: '*',\n  redirect: '/'\n}\n\nconst routes = routesConfig.concat(redirectConfig)\nreturn routes\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * src/views/Page/router.js\n\nexport default {\n  path: '/page',\n  name: 'Page',\n  component: () => import('@/components/RouterCache.vue'),\n  meta: {\n    keepAlive: true,\n    title: 'Page A',\n  },\n  children: [\n    {\n      path: 'detail/:id',\n      name: 'PageDetail',\n      component: () => import('./src/detail/index.vue'),\n      meta: {\n        keepAlive: true,\n      }\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 缓存和动画\n<transition>\n  <keep-alive :include=\"['a', 'b']\">\n  //或include=\"a,b\" :include=\"/a|b/\",a 和 b 表示组件的 name\n  //因为有些页面,如试试数据统计,要实时刷新,所以就不需要缓存\n    <router-view/> //路由标签\n  </keep-alive>\n  <router-view exclude=\"c\"/>\n  // c 表示组件的 name值\n</transition>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * Cached Router: RouterCache.vue\n\n<template>\n  <div>\n    <keep-alive>\n      <router-view v-if=\"$route.meta.keepAlive\" />\n    </keep-alive>\n    <router-view v-if=\"!$route.meta.keepAlive\" />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RouterCache'\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# router-view 的 key\n//  Vue 会复用相同组件, key可以解决 组件的 created 和 mounted 不调用问题\n<router-view :key=\"$route.fullPath\"></router-view>\n\n\n1\n2",normalizedContent:"\n\n * vue-router\n\n# 开始使用\nimport vue from 'vue'\nimport vuerouter from 'vue-router'\n\nconst foo = { template: '<div>foo</div>' }\nconst bar = { template: '<div>bar</div>' }\n\nconst routes = [\n  { path: '/foo', component: foo },\n  { path: '/bar', component: bar }\n]\n\nconst router = new vuerouter({\n  routes\n})\n\nconst app = new vue({\n  router\n}).$mount('#app')\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 全局路由钩子\n * beforeeach\n\nrouter.beforeeach((to, from, next) => {\n  //一般登录拦截用这个,也叫导航钩子守卫\n  if (path === '/login') {\n    next()\n    return\n  }\n  if (token) {\n    next();\n  }\n})\n\n// beforeresolve\n\n// aftereach\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 组件路由钩子\n * beforerouteenter\n\nbeforerouteenter (to, from, next) {\n  // 这里还无法访问到组件实例，this === undefined\n  next( vm => {\n    // 通过 `vm` 访问组件实例\n  })\n}\n\n// beforerouteupdate\n\n// beforerouteleave\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# vue.$router\n// 跳转到不同的url，但这个方法回向history栈添加一个记录，点击后退会返回到上一个页面\nthis.$router.push()\n// 不会有记录\nthis.$router.replace()\n// n可为正数可为负数。正数返回上一个页面,类似 window.history.go(n)\nthis.$router.go(n)\n\n\n1\n2\n3\n4\n5\n6\n# vue.$route\n// 获取通过 params 或/:id传参的参数\nthis.$route.params.id\n\n// 获取通过 query 传参的参数\nthis.$route.query.id\n\n\n1\n2\n3\n4\n5\n# router render\ncomponent: {\n  render: h => h(\"router-view\");\n}\n\n\n1\n2\n3\n# 路由传参\n * 方式一\n\n// 路由定义\n{\n  path: '/describe/:id',\n  name: 'describe',\n  component: describe\n}\n// 页面传参\nthis.$router.push({\n  path: `/describe/${id}`,\n})\n// 页面获取\nthis.$route.params.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 方式二\n\n// 路由定义\n{\n  path: '/describe',\n  name: 'describe',\n  component: describe\n}\n// 页面传参\nthis.$router.push({\n  name: 'describe',\n  params: {\n    id: id\n  }\n})\n// 页面获取\nthis.$route.params.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 方式三\n\n// 路由定义\n{\n  path: '/describe',\n  name: 'describe',\n  component: describe\n}\n// 页面传参\nthis.$router.push({\n  path: '/describe',\n    query: {\n      id: id\n  }\n)\n// 页面获取\nthis.$route.query.id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# 路由拆分\n * 目录\n\n# router\n├── router\n│   ├── index.js\n│   └── router.js\n\n# views目录下\nviews\n├── page\n│   ├── api.js # 接口定义\n│   ├── router.js # 路由配置\n│   └── src\n│       └── layered\n│           ├── detail.vue\n│           ├── index.vue\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * src/router/index.js\n\nimport vue from 'vue'\nimport vuerouter from 'vue-router'\nimport routes from './router'\n\nvue.use(vuerouter)\n\nconst router = new vuerouter({\n  mode: 'history',\n  routes\n})\n\nexport default router\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * src/router/router.js\n\n// 利用 webpack 读取 views 目录下的 router.js\nconst routerfile = require.context('../', true, /^\\.\\/views\\/[\\w.-]+\\/router.js$/)\n\n// 返回的 routerfile.keys() 是一个路由配置的路径数组列表 ['./views/page/router.js']\n// 循环递归调用 routerfile 去解析 每一项的路径地址 './views/page/router.js'\n// 返回 文件内容: module { default: { path: \"/page\", name: 'xxx', children:[{},...]}, ... }\n\n// 获取返回路由集合\nconst routesconfig = (r => {\n  return r.keys().map(key => r(key).default)\n})(routerfile)\n\n// redirect\nconst redirectconfig = {\n  path: '*',\n  redirect: '/'\n}\n\nconst routes = routesconfig.concat(redirectconfig)\nreturn routes\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n * src/views/page/router.js\n\nexport default {\n  path: '/page',\n  name: 'page',\n  component: () => import('@/components/routercache.vue'),\n  meta: {\n    keepalive: true,\n    title: 'page a',\n  },\n  children: [\n    {\n      path: 'detail/:id',\n      name: 'pagedetail',\n      component: () => import('./src/detail/index.vue'),\n      meta: {\n        keepalive: true,\n      }\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# 缓存和动画\n<transition>\n  <keep-alive :include=\"['a', 'b']\">\n  //或include=\"a,b\" :include=\"/a|b/\",a 和 b 表示组件的 name\n  //因为有些页面,如试试数据统计,要实时刷新,所以就不需要缓存\n    <router-view/> //路由标签\n  </keep-alive>\n  <router-view exclude=\"c\"/>\n  // c 表示组件的 name值\n</transition>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * cached router: routercache.vue\n\n<template>\n  <div>\n    <keep-alive>\n      <router-view v-if=\"$route.meta.keepalive\" />\n    </keep-alive>\n    <router-view v-if=\"!$route.meta.keepalive\" />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'routercache'\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# router-view 的 key\n//  vue 会复用相同组件, key可以解决 组件的 created 和 mounted 不调用问题\n<router-view :key=\"$route.fullpath\"></router-view>\n\n\n1\n2",charsets:{cjk:!0}},{title:"vue2.x的slot使用",frontmatter:{title:"vue2.x的slot使用",date:"2020-07-30T00:00:00.000Z",sidebar:"auto",tags:["vue"],readingShow:"top"},regularPath:"/vueJs/vue-slot.html",relativePath:"vueJs/vue-slot.md",key:"v-14db9dcd",path:"/vueJs/vue-slot.html",headers:[{level:2,title:"old solt",slug:"old-solt",normalizedTitle:"old solt",charIndex:81},{level:2,title:"new solt (vue2.6.x)",slug:"new-solt-vue2-6-x",normalizedTitle:"new solt (vue2.6.x)",charIndex:1263}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"old solt new solt (vue2.6.x)",content:'\n\n * codesandbox：vue2.x-slot\n   \n   \n * vue2.x solt: components-slots\n   \n   \n\n# old solt\n * Parent.vue\n\n<template>\n  <child>\n    \x3c!-- 默认插槽 --\x3e\n    <div slot>default solt</div>\n    \x3c!-- 具名插槽 --\x3e\n    <div slot="header">header solt</div>\n    \x3c!-- 作用域插槽 --\x3e\n    <div slot="footer" slot-scope="slotProps">\n      <span>footer solt</span>\n      <p>reviced data from child component : {{slotProps.testProps}}</p>\n    </div>\n  </child>\n</template>\n\n<script>\nimport Child from "./Child.vue";\nexport default {\n  data() {\n    return {\n      name: "old solt"\n    };\n  },\n  components: {\n    Child\n  }\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n * Child.vue\n\n<template>\n  <div>\n    <main>\n      <h3>old solt child main</h3>\n      <slot>\n        <h3>没传内容</h3>\n      </slot>\n    </main>\n    <header>\n      <slot name="header">\n        <h3>没传header插槽</h3>\n      </slot>\n    </header>\n    <footer>\n      <slot name="footer" :testProps="test">\n        <h3>没传footer插槽</h3>\n      </slot>\n    </footer>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: "child-component",\n  data() {\n    return {\n      test: "child value"\n    };\n  }\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# new solt (vue2.6.x)\n * Parent.vue\n\n<template>\n  <Child>\n    \x3c!--默认插槽--\x3e\n    <template v-slot>\n      <div>default slot</div>\n    </template>\n    \x3c!--具名插槽--\x3e\n    <template v-slot:header>\n      <div>header slot</div>\n    </template>\n    \x3c!--作用域插槽--\x3e\n    <template #footer="slotProps">\n      <span>footer slot</span>\n      <div>reviced data from child component : {{slotProps.testProps}}</div>\n    </template>\n  </Child>\n</template>\n\n<script>\nimport Child from "./Child";\n\n// v-slot，可以缩写为【#】\nexport default {\n  data() {\n    return {\n      name: "new solt"\n    };\n  },\n  components: {\n    Child\n  }\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n * Child.vue\n\n<template>\n  <div>\n    <main>\n      <h3>new solt child main</h3>\n      <slot>\n        <h3>没传内容</h3>\n      </slot>\n    </main>\n\n    <header>\n      <slot name="header">\n        <h3>没传header插槽</h3>\n      </slot>\n    </header>\n\n    <footer>\n      <slot name="footer" :testProps="test">\n        <h3>没传footer插槽</h3>\n      </slot>\n    </footer>\n  </div>\n</template>\n<script>\nexport default {\n  name: "child-component",\n  data() {\n    return {\n      test: "child value"\n    };\n  }\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32',normalizedContent:'\n\n * codesandbox：vue2.x-slot\n   \n   \n * vue2.x solt: components-slots\n   \n   \n\n# old solt\n * parent.vue\n\n<template>\n  <child>\n    \x3c!-- 默认插槽 --\x3e\n    <div slot>default solt</div>\n    \x3c!-- 具名插槽 --\x3e\n    <div slot="header">header solt</div>\n    \x3c!-- 作用域插槽 --\x3e\n    <div slot="footer" slot-scope="slotprops">\n      <span>footer solt</span>\n      <p>reviced data from child component : {{slotprops.testprops}}</p>\n    </div>\n  </child>\n</template>\n\n<script>\nimport child from "./child.vue";\nexport default {\n  data() {\n    return {\n      name: "old solt"\n    };\n  },\n  components: {\n    child\n  }\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n * child.vue\n\n<template>\n  <div>\n    <main>\n      <h3>old solt child main</h3>\n      <slot>\n        <h3>没传内容</h3>\n      </slot>\n    </main>\n    <header>\n      <slot name="header">\n        <h3>没传header插槽</h3>\n      </slot>\n    </header>\n    <footer>\n      <slot name="footer" :testprops="test">\n        <h3>没传footer插槽</h3>\n      </slot>\n    </footer>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: "child-component",\n  data() {\n    return {\n      test: "child value"\n    };\n  }\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n# new solt (vue2.6.x)\n * parent.vue\n\n<template>\n  <child>\n    \x3c!--默认插槽--\x3e\n    <template v-slot>\n      <div>default slot</div>\n    </template>\n    \x3c!--具名插槽--\x3e\n    <template v-slot:header>\n      <div>header slot</div>\n    </template>\n    \x3c!--作用域插槽--\x3e\n    <template #footer="slotprops">\n      <span>footer slot</span>\n      <div>reviced data from child component : {{slotprops.testprops}}</div>\n    </template>\n  </child>\n</template>\n\n<script>\nimport child from "./child";\n\n// v-slot，可以缩写为【#】\nexport default {\n  data() {\n    return {\n      name: "new solt"\n    };\n  },\n  components: {\n    child\n  }\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n * child.vue\n\n<template>\n  <div>\n    <main>\n      <h3>new solt child main</h3>\n      <slot>\n        <h3>没传内容</h3>\n      </slot>\n    </main>\n\n    <header>\n      <slot name="header">\n        <h3>没传header插槽</h3>\n      </slot>\n    </header>\n\n    <footer>\n      <slot name="footer" :testprops="test">\n        <h3>没传footer插槽</h3>\n      </slot>\n    </footer>\n  </div>\n</template>\n<script>\nexport default {\n  name: "child-component",\n  data() {\n    return {\n      test: "child value"\n    };\n  }\n};\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32',charsets:{cjk:!0}},{title:"web常见问题方案",frontmatter:{title:"web常见问题方案",date:"2020-07-22T00:00:00.000Z",sidebar:"auto",categories:["web"],tags:["mobile"],readingShow:"top"},regularPath:"/web/",relativePath:"web/README.md",key:"v-21d64666",path:"/web/",lastUpdated:"2020/7/30 上午10:49:06",headersStr:null,content:" * 30-seconds-of-interviews\n * 点击 form 只提交 form 中 input 的一部分\n * H5 的复制操作\n * 阻止元素被选中及清除选中的方法\n * 基于 HTML5 drag/drop 模块拖动插入排序删除完整实例\n * H5 notification 浏览器桌面通知\n * 一段 css 让全站变灰\n * 移动端弹窗输入密码的那些事\n * 30-seconds-of-css 中文版\n * attribute 和 property\n * 学习弹性布局 flexbox\n * 一劳永逸的搞定 flex 布局\n * 三种纯 CSS 实现三角形的方法\n * 22 个前端开发必备的 CSS 小技巧\n * CSS 效果篇--纯 CSS+HTML 实现 checkbox 的思路与实例\n * animate.css\n * 用 css 制作空心箭头(上下左右各个方向均有)\n * CSS3 linear-gradient 线性渐变实现虚线等简单实用图形\n * 前端兼容性问题总结\n * 移动端布局方案\n * css-doodle\n * css3 loading\n * 我写 CSS 的常用套路(附 demo 的效果实现与源码）\n * 55 个提高你 CSS 开发效率的必备片段\n\n\n\n\n移动端调试\n\n * github@mobileTech\n * 移动 web 开发问题和优化小结\n * github@iphone-X\n * js 实现移动 HTML5 页面滑动到最底部触发内容加载\n * HTML5 与移动端 web 学习笔记\n * iphonex\n * 再聊移动端页面的适配\n * 怎么在移动端调试 web 前端\n * 打造最舒适的 webview 调试环境\n * 在 iOS 模拟器中调试 Web 页面\n * 移动端前端开发调试\n * 移动前端不得不了解的 html5 head 头标签\n * H5 页检测手机是否安装 app 相关流程\n * ftlabs/fastclick\n * 【前端词典】5 种滚动吸顶实现方式的比较[性能升级版]\n * css-tricks: 常用 midea\n * 移动端页面输入底部被软键盘遮挡问题\n * iOS 下 Html 页面中 input 获取焦点弹出键盘时挡住 input 解决方案—scrollIntoView()\n * 移动端软键盘监听（弹出，收起），及影响定位布局的问题\n * input 光标位置设置至行末端\n\n\n\n\nie\n\n * CSS hack 是什么？IE6\\7\\8\\9\\10 浏览器的 CSS hack 大全介绍\n * IE6 下 png 背景不透明问题的综合拓展\n * IE6 PNG 透明终极解决方案\n * IE6 png 透明 (三种解决方法)\n * hjzheng/IE6-bugs\n * 通过 JS 判断浏览器类型，详细区分 IE 各版本浏览器\n * 一行代码解决各种 IE 兼容问题,IE6,IE7,IE8,IE9,IE10\n * ie6、7 margin 负值部分无法看到的解决方法\n * 浅析 CSS——元素重叠及 position 定位的 z-index 顺序\n * Centering in CSS: A Complete Guide\n * 去除 inline-block 元素间间距的 N 种方法",normalizedContent:" * 30-seconds-of-interviews\n * 点击 form 只提交 form 中 input 的一部分\n * h5 的复制操作\n * 阻止元素被选中及清除选中的方法\n * 基于 html5 drag/drop 模块拖动插入排序删除完整实例\n * h5 notification 浏览器桌面通知\n * 一段 css 让全站变灰\n * 移动端弹窗输入密码的那些事\n * 30-seconds-of-css 中文版\n * attribute 和 property\n * 学习弹性布局 flexbox\n * 一劳永逸的搞定 flex 布局\n * 三种纯 css 实现三角形的方法\n * 22 个前端开发必备的 css 小技巧\n * css 效果篇--纯 css+html 实现 checkbox 的思路与实例\n * animate.css\n * 用 css 制作空心箭头(上下左右各个方向均有)\n * css3 linear-gradient 线性渐变实现虚线等简单实用图形\n * 前端兼容性问题总结\n * 移动端布局方案\n * css-doodle\n * css3 loading\n * 我写 css 的常用套路(附 demo 的效果实现与源码）\n * 55 个提高你 css 开发效率的必备片段\n\n\n\n\n移动端调试\n\n * github@mobiletech\n * 移动 web 开发问题和优化小结\n * github@iphone-x\n * js 实现移动 html5 页面滑动到最底部触发内容加载\n * html5 与移动端 web 学习笔记\n * iphonex\n * 再聊移动端页面的适配\n * 怎么在移动端调试 web 前端\n * 打造最舒适的 webview 调试环境\n * 在 ios 模拟器中调试 web 页面\n * 移动端前端开发调试\n * 移动前端不得不了解的 html5 head 头标签\n * h5 页检测手机是否安装 app 相关流程\n * ftlabs/fastclick\n * 【前端词典】5 种滚动吸顶实现方式的比较[性能升级版]\n * css-tricks: 常用 midea\n * 移动端页面输入底部被软键盘遮挡问题\n * ios 下 html 页面中 input 获取焦点弹出键盘时挡住 input 解决方案—scrollintoview()\n * 移动端软键盘监听（弹出，收起），及影响定位布局的问题\n * input 光标位置设置至行末端\n\n\n\n\nie\n\n * css hack 是什么？ie6\\7\\8\\9\\10 浏览器的 css hack 大全介绍\n * ie6 下 png 背景不透明问题的综合拓展\n * ie6 png 透明终极解决方案\n * ie6 png 透明 (三种解决方法)\n * hjzheng/ie6-bugs\n * 通过 js 判断浏览器类型，详细区分 ie 各版本浏览器\n * 一行代码解决各种 ie 兼容问题,ie6,ie7,ie8,ie9,ie10\n * ie6、7 margin 负值部分无法看到的解决方法\n * 浅析 css——元素重叠及 position 定位的 z-index 顺序\n * centering in css: a complete guide\n * 去除 inline-block 元素间间距的 n 种方法",charsets:{cjk:!0}},{title:"浏览器对象介绍",frontmatter:{title:"浏览器对象介绍",date:"2020-07-22T00:00:00.000Z",sidebar:"auto",categories:["web"],tags:["浏览器"],readingShow:"top"},regularPath:"/web/browser.html",relativePath:"web/browser.md",key:"v-0cc8204b",path:"/web/browser.html",headers:[{level:2,title:"浏览器内核",slug:"浏览器内核",normalizedTitle:"浏览器内核",charIndex:127},{level:2,title:"Navigator 对象",slug:"navigator-对象",normalizedTitle:"navigator 对象",charIndex:338},{level:2,title:"location 对象",slug:"location-对象",normalizedTitle:"location 对象",charIndex:730},{level:2,title:"history 对象",slug:"history-对象",normalizedTitle:"history 对象",charIndex:1809},{level:3,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:56},{level:3,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:121},{level:3,title:"popState 事件",slug:"popstate-事件",normalizedTitle:"popstate 事件",charIndex:2095},{level:2,title:"URL 统一资源标识符",slug:"url-统一资源标识符",normalizedTitle:"url 统一资源标识符",charIndex:2206},{level:3,title:"URL 组成",slug:"url-组成",normalizedTitle:"url 组成",charIndex:2290},{level:3,title:"URLSearchParams",slug:"urlsearchparams",normalizedTitle:"urlsearchparams",charIndex:2433},{level:3,title:"Url常见方法",slug:"url常见方法",normalizedTitle:"url常见方法",charIndex:3463},{level:3,title:"encodeURIComponent 与 decodeURIComponent",slug:"encodeuricomponent-与-decodeuricomponent",normalizedTitle:"encodeuricomponent 与 decodeuricomponent",charIndex:4679},{level:3,title:"encodeURI 与 decodeURI",slug:"encodeuri-与-decodeuri",normalizedTitle:"encodeuri 与 decodeuri",charIndex:5042}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"浏览器内核 Navigator 对象 location 对象 history 对象 方法 属性 popState 事件 URL 统一资源标识符 URL 组成 URLSearchParams Url常见方法 encodeURIComponent 与 decodeURIComponent encodeURI 与 decodeURI",content:' * 什么是 BOM? BOM 是 Browser Object Model，浏览器对象模型，提供与浏览器交互的方法和接口\n * 什么是 DOM? DOM 是 Document Object Model，文档对象模型，提供操作页面元素的方法和属性\n\n# 浏览器内核\nsafari    Webkit\nchrome    Blink (current) / Webkit (pre)   -webkit-\nchromium  Blink\nfirefox   Gecko   -moz-\nie        Trident -ms-\nedge      EdgeHTML\nOpera12.17及更早版本曾经采用的内核  Presto  -o-\n\n\n1\n2\n3\n4\n5\n6\n7\n# Navigator 对象\n * navigator.userAgent返回浏览器的User-Agent字符串，标示浏览器的厂商和版本信息\n * navigator.geolocation 返回一个Geolocation对象，包含用户地理位置的信息\n\nnavigator.geolocation.getCurrentPosition(function(position) {\n  console.log(\n    " latitude " +\n      position.coords.latitude +\n      " \\n longitude " +\n      position.coords.longitude\n  );\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * navigator.cookieEnabled返回一个布尔值，表示浏览器是否能储存Cookie\n\n# location 对象\n * location属性返回 location 对象,提供了当前文档的 URL 信息\n\nlocation.href; // "http://user:passwd@www.example.com:4097/path/a.html?x=111#part1"\nlocation.protocol; // "http:"\nlocation.host; // "www.example.com:4097"\nlocation.hostname; // "www.example.com"\nlocation.port; // "4097"\nlocation.pathname; // "/path/a.html"\nlocation.search; // "?x=111"\nlocation.hash; // "#part1"\nlocation.user; // "user"\nlocation.password; // "passwd"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * location 对象方法\n\n// 跳转到另一个网址\nlocation.assign("http://www.google.com");\n// 优先从服务器重新加载\nlocation.reload(true);\n// 优先从本地缓存重新加载(默认值)\nlocation.reload(false);\n// 跳转到新网址,并将取代掉history对象中的当前记录\nlocation.replace("http://www.google.com");\n// 将location对象转为字符串,等价于location.href\nlocation.toString();\n//新的网址赋值给location对象,网页就会自动跳转到新网址\nlocation = "http://www.example.com";\n// 等同于\nlocation.href = "http://www.example.com";\n//指定相对URL\nlocation = "page2.html";\n//如果指定的是锚点,浏览器会自动滚动到锚点处\nlocation = "#top";\n\n//document.location属性与window.location属性等价\ndocument.location === window.location; // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# history 对象\n# 方法\n * go() 接受一个整数作为参数, 移动到参数指定的网址\n * forward() 移动到下一个网址\n * back() 移动到上一个网址\n * pushState() window.history.pushState(state, title, url)\n * replaceState() history.replaceState({page: 1}, \'title 1\', \'?page=1\')\n\n# 属性\n * length 当前窗口访问过的网址数量（包括当前网页）\n * state History 堆栈最上层的状态值\n\n# popState 事件\n * 每当同一个文档的浏览历史（即history对象）出现变化时，就会触发popstate事件\n * 仅仅调用pushState()方法或replaceState()方法 ，并不会触发该事件\n\n# URL 统一资源标识符\nURI: 统一资源标识符,是用来标识互联网上的资源（例如，网页或文件）和怎样访问这些资源的传输协议（例如，HTTP 或 FTP）的字符串\n\n# URL 组成\n * protocol: 协议头，譬如有 http，ftp 等\n * host: 主机域名或 IP 地址\n * port: 端口号\n * path: 目录路径\n * query: 即查询参数\n * fragment: 即#后的 hash 值，一般用来定位到某个位置\n\n# URLSearchParams\n * URLSearchParams() 返回一个 URLSearchParams 对象\n * URLSearchParams.append() 插入一个指定的键/值对作为新的搜索参数\n * URLSearchParams.delete() 从搜索参数列表里删除指定的搜索参数及其对应的值\n * URLSearchParams.set() 设置一个搜索参数的新值，假如原来有多个值将删除其他所有的值\n * URLSearchParams.sort() 按键名排序\n * URLSearchParams.toString() 返回搜索参数组成的字符串，可直接使用在 URL 上\n\nvar paramsString = "q=URLUtils.searchParams&topic=api";\nvar searchParams = new URLSearchParams(paramsString);\n\nsearchParams.has("topic") === true; // true\nsearchParams.get("topic") === "api"; // true\nsearchParams.getAll("topic"); // ["api"]\nsearchParams.get("foo") === ""; // true\nsearchParams.append("topic", "webdev");\nsearchParams.toString(); // "q=%E5%B0%8F%E6%98%8E&topic=api&topic=webdev"\nsearchParams.set("topic", "More webdev");\nsearchParams.toString(); // "q=%E5%B0%8F%E6%98%8E&topic=More+webdev"\nsearchParams.delete("topic");\nsearchParams.toString(); // "q=%E5%B0%8F%E6%98%8E"\n\nfor (let p of searchParams) {\n  console.log(p);\n}\n// ["q", "小明"]\n// ["topic", "api"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# Url常见方法\n * 将对象解析成 url 字符串\n\n/**\n * 将对象解析成url字符串 object => string\n * @param  {Object} obj 参数对象\n * @param  {Boolean} unEncodeURI 不使用编码\n * @return {String} 转换之后的url参数\n */\nconst param = (obj = {}, unEncodeURI) => {\n  let result = [];\n  for (let name of Object.keys(obj)) {\n    let value = obj[name];\n\n    result.push(name + "=" + (unEncodeURI ? value : encodeURIComponent(value)));\n  }\n  if (result.length) {\n    return "?" + result.join("&");\n  } else {\n    return "";\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * 将 url 字符串解析成对象\n\n/**\n * 将url字符串解析成对象 sting => object\n * @param  {String} str 带url参数的地址\n * @param  {Boolean} unDecodeURI 不使用解码\n * @return {Object} 转换之后的url参数\n */\nconst unparam = (str = "", unDecodeURI) => {\n  let result = {};\n  let queries = str.split("?")\n  let query = queries.length == 1 ? queries[0]: queries[1];\n  if (!query) return result;\n  let arr = query.split("&");\n  arr.forEach((item, idx) => {\n    // let name = param[0];\n    // let value = param[1] || \'\';\n    let [name, value=\'\'] = item.split("=");\n    if (name) {\n      result[name] = unDecodeURI ? value : decodeURIComponent(value);\n    }\n  });\n  return result;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# encodeURIComponent 与 decodeURIComponent\nconst url = "http://www.domain.com/abc?user=Alan&age=123&name=小明";\nconsole.log(encodeURIComponent(url));\n// http%3A%2F%2Fwww.domain.com%2Fabc%3Fuser%3DAlan%26age%3D123%26name%3D%E5%B0%8F%E6%98%8E\nconsole.log(decodeURIComponent(encodeURIComponent(url)));\n// http://www.domain.com/abc?user=Alan&age=123&name=小明\n\n\n1\n2\n3\n4\n5\n# encodeURI 与 decodeURI\nconst url = "http://www.domain.com/abc?user=Alan&age=123&name=小明";\nconsole.log(encodeURI(url));\n// http://www.domain.com/abc?user=Alan&age=123&name=%E5%B0%8F%E6%98%8E\nconsole.log(decodeURI(encodeURI(url)));\n// http://www.domain.com/abc?user=Alan&age=123&name=小明\n\n\n1\n2\n3\n4\n5',normalizedContent:' * 什么是 bom? bom 是 browser object model，浏览器对象模型，提供与浏览器交互的方法和接口\n * 什么是 dom? dom 是 document object model，文档对象模型，提供操作页面元素的方法和属性\n\n# 浏览器内核\nsafari    webkit\nchrome    blink (current) / webkit (pre)   -webkit-\nchromium  blink\nfirefox   gecko   -moz-\nie        trident -ms-\nedge      edgehtml\nopera12.17及更早版本曾经采用的内核  presto  -o-\n\n\n1\n2\n3\n4\n5\n6\n7\n# navigator 对象\n * navigator.useragent返回浏览器的user-agent字符串，标示浏览器的厂商和版本信息\n * navigator.geolocation 返回一个geolocation对象，包含用户地理位置的信息\n\nnavigator.geolocation.getcurrentposition(function(position) {\n  console.log(\n    " latitude " +\n      position.coords.latitude +\n      " \\n longitude " +\n      position.coords.longitude\n  );\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * navigator.cookieenabled返回一个布尔值，表示浏览器是否能储存cookie\n\n# location 对象\n * location属性返回 location 对象,提供了当前文档的 url 信息\n\nlocation.href; // "http://user:passwd@www.example.com:4097/path/a.html?x=111#part1"\nlocation.protocol; // "http:"\nlocation.host; // "www.example.com:4097"\nlocation.hostname; // "www.example.com"\nlocation.port; // "4097"\nlocation.pathname; // "/path/a.html"\nlocation.search; // "?x=111"\nlocation.hash; // "#part1"\nlocation.user; // "user"\nlocation.password; // "passwd"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * location 对象方法\n\n// 跳转到另一个网址\nlocation.assign("http://www.google.com");\n// 优先从服务器重新加载\nlocation.reload(true);\n// 优先从本地缓存重新加载(默认值)\nlocation.reload(false);\n// 跳转到新网址,并将取代掉history对象中的当前记录\nlocation.replace("http://www.google.com");\n// 将location对象转为字符串,等价于location.href\nlocation.tostring();\n//新的网址赋值给location对象,网页就会自动跳转到新网址\nlocation = "http://www.example.com";\n// 等同于\nlocation.href = "http://www.example.com";\n//指定相对url\nlocation = "page2.html";\n//如果指定的是锚点,浏览器会自动滚动到锚点处\nlocation = "#top";\n\n//document.location属性与window.location属性等价\ndocument.location === window.location; // true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n# history 对象\n# 方法\n * go() 接受一个整数作为参数, 移动到参数指定的网址\n * forward() 移动到下一个网址\n * back() 移动到上一个网址\n * pushstate() window.history.pushstate(state, title, url)\n * replacestate() history.replacestate({page: 1}, \'title 1\', \'?page=1\')\n\n# 属性\n * length 当前窗口访问过的网址数量（包括当前网页）\n * state history 堆栈最上层的状态值\n\n# popstate 事件\n * 每当同一个文档的浏览历史（即history对象）出现变化时，就会触发popstate事件\n * 仅仅调用pushstate()方法或replacestate()方法 ，并不会触发该事件\n\n# url 统一资源标识符\nuri: 统一资源标识符,是用来标识互联网上的资源（例如，网页或文件）和怎样访问这些资源的传输协议（例如，http 或 ftp）的字符串\n\n# url 组成\n * protocol: 协议头，譬如有 http，ftp 等\n * host: 主机域名或 ip 地址\n * port: 端口号\n * path: 目录路径\n * query: 即查询参数\n * fragment: 即#后的 hash 值，一般用来定位到某个位置\n\n# urlsearchparams\n * urlsearchparams() 返回一个 urlsearchparams 对象\n * urlsearchparams.append() 插入一个指定的键/值对作为新的搜索参数\n * urlsearchparams.delete() 从搜索参数列表里删除指定的搜索参数及其对应的值\n * urlsearchparams.set() 设置一个搜索参数的新值，假如原来有多个值将删除其他所有的值\n * urlsearchparams.sort() 按键名排序\n * urlsearchparams.tostring() 返回搜索参数组成的字符串，可直接使用在 url 上\n\nvar paramsstring = "q=urlutils.searchparams&topic=api";\nvar searchparams = new urlsearchparams(paramsstring);\n\nsearchparams.has("topic") === true; // true\nsearchparams.get("topic") === "api"; // true\nsearchparams.getall("topic"); // ["api"]\nsearchparams.get("foo") === ""; // true\nsearchparams.append("topic", "webdev");\nsearchparams.tostring(); // "q=%e5%b0%8f%e6%98%8e&topic=api&topic=webdev"\nsearchparams.set("topic", "more webdev");\nsearchparams.tostring(); // "q=%e5%b0%8f%e6%98%8e&topic=more+webdev"\nsearchparams.delete("topic");\nsearchparams.tostring(); // "q=%e5%b0%8f%e6%98%8e"\n\nfor (let p of searchparams) {\n  console.log(p);\n}\n// ["q", "小明"]\n// ["topic", "api"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# url常见方法\n * 将对象解析成 url 字符串\n\n/**\n * 将对象解析成url字符串 object => string\n * @param  {object} obj 参数对象\n * @param  {boolean} unencodeuri 不使用编码\n * @return {string} 转换之后的url参数\n */\nconst param = (obj = {}, unencodeuri) => {\n  let result = [];\n  for (let name of object.keys(obj)) {\n    let value = obj[name];\n\n    result.push(name + "=" + (unencodeuri ? value : encodeuricomponent(value)));\n  }\n  if (result.length) {\n    return "?" + result.join("&");\n  } else {\n    return "";\n  }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * 将 url 字符串解析成对象\n\n/**\n * 将url字符串解析成对象 sting => object\n * @param  {string} str 带url参数的地址\n * @param  {boolean} undecodeuri 不使用解码\n * @return {object} 转换之后的url参数\n */\nconst unparam = (str = "", undecodeuri) => {\n  let result = {};\n  let queries = str.split("?")\n  let query = queries.length == 1 ? queries[0]: queries[1];\n  if (!query) return result;\n  let arr = query.split("&");\n  arr.foreach((item, idx) => {\n    // let name = param[0];\n    // let value = param[1] || \'\';\n    let [name, value=\'\'] = item.split("=");\n    if (name) {\n      result[name] = undecodeuri ? value : decodeuricomponent(value);\n    }\n  });\n  return result;\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# encodeuricomponent 与 decodeuricomponent\nconst url = "http://www.domain.com/abc?user=alan&age=123&name=小明";\nconsole.log(encodeuricomponent(url));\n// http%3a%2f%2fwww.domain.com%2fabc%3fuser%3dalan%26age%3d123%26name%3d%e5%b0%8f%e6%98%8e\nconsole.log(decodeuricomponent(encodeuricomponent(url)));\n// http://www.domain.com/abc?user=alan&age=123&name=小明\n\n\n1\n2\n3\n4\n5\n# encodeuri 与 decodeuri\nconst url = "http://www.domain.com/abc?user=alan&age=123&name=小明";\nconsole.log(encodeuri(url));\n// http://www.domain.com/abc?user=alan&age=123&name=%e5%b0%8f%e6%98%8e\nconsole.log(decodeuri(encodeuri(url)));\n// http://www.domain.com/abc?user=alan&age=123&name=小明\n\n\n1\n2\n3\n4\n5',charsets:{cjk:!0}},{title:"css的一些介绍",frontmatter:{title:"css的一些介绍",date:"2020-07-22T00:00:00.000Z",sidebar:"auto",categories:["web"],tags:["ie","css"],readingShow:"top"},regularPath:"/web/css.html",relativePath:"web/css.md",key:"v-d4a672aa",path:"/web/css.html",headers:[{level:2,title:"层叠样式表",slug:"层叠样式表",normalizedTitle:"层叠样式表",charIndex:2},{level:2,title:"style 属性",slug:"style-属性",normalizedTitle:"style 属性",charIndex:314},{level:3,title:"Style 对象",slug:"style-对象",normalizedTitle:"style 对象",charIndex:325},{level:3,title:"cssText 属性",slug:"csstext-属性",normalizedTitle:"csstext 属性",charIndex:463},{level:3,title:"css 属性",slug:"css-属性",normalizedTitle:"css 属性",charIndex:661},{level:3,title:"StyleSheet 对象",slug:"stylesheet-对象",normalizedTitle:"stylesheet 对象",charIndex:1011},{level:2,title:"css选择器",slug:"css选择器",normalizedTitle:"css选择器",charIndex:1532},{level:2,title:"优先级从大到小",slug:"优先级从大到小",normalizedTitle:"优先级从大到小",charIndex:1831},{level:2,title:"css 的三种存在方式",slug:"css-的三种存在方式",normalizedTitle:"css 的三种存在方式",charIndex:1896},{level:2,title:"css 使用变量",slug:"css-使用变量",normalizedTitle:"css 使用变量",charIndex:2168},{level:2,title:"BEM",slug:"bem",normalizedTitle:"bem",charIndex:2560},{level:2,title:"变形与动画",slug:"变形与动画",normalizedTitle:"变形与动画",charIndex:2729},{level:3,title:"transition（过渡）",slug:"transition-过渡",normalizedTitle:"transition（过渡）",charIndex:2737},{level:3,title:"transform（变换）",slug:"transform-变换",normalizedTitle:"transform（变换）",charIndex:2988},{level:2,title:"动画",slug:"动画",normalizedTitle:"动画",charIndex:2732},{level:3,title:"keyframes",slug:"keyframes",normalizedTitle:"keyframes",charIndex:3430},{level:3,title:"animation",slug:"animation",normalizedTitle:"animation",charIndex:3454},{level:2,title:"媒体查询 media",slug:"媒体查询-media",normalizedTitle:"媒体查询 media",charIndex:4596},{level:2,title:"盒子模型",slug:"盒子模型",normalizedTitle:"盒子模型",charIndex:5339},{level:3,title:"盒模型元素",slug:"盒模型元素",normalizedTitle:"盒模型元素",charIndex:5346},{level:3,title:"盒子模型分类",slug:"盒子模型分类",normalizedTitle:"盒子模型分类",charIndex:5408},{level:3,title:"css3 盒模型属性",slug:"css3-盒模型属性",normalizedTitle:"css3 盒模型属性",charIndex:5674},{level:3,title:"content 内容",slug:"content-内容",normalizedTitle:"content 内容",charIndex:5830},{level:3,title:"padding",slug:"padding",normalizedTitle:"padding",charIndex:5371},{level:3,title:"border 盒子的边框",slug:"border-盒子的边框",normalizedTitle:"border 盒子的边框",charIndex:6262},{level:3,title:"margin",slug:"margin",normalizedTitle:"margin",charIndex:5397},{level:2,title:"GPU 加速",slug:"gpu-加速",normalizedTitle:"gpu 加速",charIndex:6990},{level:2,title:"BFC",slug:"bfc",normalizedTitle:"bfc",charIndex:7151},{level:3,title:"如何触发 BFC",slug:"如何触发-bfc",normalizedTitle:"如何触发 bfc",charIndex:7226},{level:2,title:"css 继承",slug:"css-继承",normalizedTitle:"css 继承",charIndex:7407},{level:2,title:"页面元素的显示和隐藏",slug:"页面元素的显示和隐藏",normalizedTitle:"页面元素的显示和隐藏",charIndex:7484},{level:2,title:"RGBA 与 HSLA",slug:"rgba-与-hsla",normalizedTitle:"rgba 与 hsla",charIndex:7754},{level:2,title:"link 引入 css 和@import 的区别",slug:"link-引入-css-和-import-的区别",normalizedTitle:"link 引入 css 和@import 的区别",charIndex:8122},{level:2,title:"css3 选择器",slug:"css3-选择器",normalizedTitle:"css3 选择器",charIndex:8334},{level:3,title:"属性选择器",slug:"属性选择器",normalizedTitle:"属性选择器",charIndex:8345},{level:3,title:"伪类选择器",slug:"伪类选择器",normalizedTitle:"伪类选择器",charIndex:8535},{level:3,title:"伪元素选择器",slug:"伪元素选择器",normalizedTitle:"伪元素选择器",charIndex:8997},{level:2,title:"css3 私有前缀",slug:"css3-私有前缀",normalizedTitle:"css3 私有前缀",charIndex:9241},{level:2,title:"font 字体",slug:"font-字体",normalizedTitle:"font 字体",charIndex:9361},{level:2,title:"display",slug:"display",normalizedTitle:"display",charIndex:7301},{level:2,title:"position 定位",slug:"position-定位",normalizedTitle:"position 定位",charIndex:10391}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"层叠样式表 style 属性 Style 对象 cssText 属性 css 属性 StyleSheet 对象 css选择器 优先级从大到小 css 的三种存在方式 css 使用变量 BEM 变形与动画 transition（过渡） transform（变换） 动画 keyframes animation 媒体查询 media 盒子模型 盒模型元素 盒子模型分类 css3 盒模型属性 content 内容 padding border 盒子的边框 margin GPU 加速 BFC 如何触发 BFC css 继承 页面元素的显示和隐藏 RGBA 与 HSLA link 引入 css 和@import 的区别 css3 选择器 属性选择器 伪类选择器 伪元素选择器 css3 私有前缀 font 字体 display position 定位",content:'# 层叠样式表\n * cascading style sheets,重复的对同一个选择器进行样式重复编写，会发生后面的样式覆盖前面的样式\n   \n   \n * 浏览器 CSS 兼容前缀\n   \n   \n\n-o-transform:rotate(7deg); // Opera\n\n-ms-transform:rotate(7deg); // IE\n\n-moz-transform:rotate(7deg); // Firefox\n\n-webkit-transform:rotate(7deg); // Chrome\n\ntransform:rotate(7deg); // 统一标识语句\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# style 属性\n# Style 对象\nvar divStyle = document.querySelector("div").style;\ndivStyle.backgroundColor = "red";\ndivStyle.backgroundColor; // red\n\n\n1\n2\n3\n# cssText 属性\nvar divStyle = document.querySelector("div").style;\ndivStyle.cssText =\n  "background-color: red;" +\n  "border: 1px solid black;" +\n  "height: 100px;" +\n  "width: 100px;";\n\n\n1\n2\n3\n4\n5\n6\n# css 属性\n * setProperty(propertyName,value)：设置某个 CSS 属性\n * getPropertyValue(propertyName)：读取某个 CSS 属性\n * removeProperty(propertyName)：删除某个 CSS 属性\n\nvar divStyle = document.querySelector("div").style;\ndivStyle.setProperty("background-color", "red");\ndivStyle.getPropertyValue("background-color");\ndivStyle.removeProperty("background-color");\n\n\n1\n2\n3\n4\n# StyleSheet 对象\n# 获取样式表\n * document.styleSheets返回当前页面的所有 StyleSheet 对象\n\n// 等同于document.styleSheets[0]\ndocument.querySelector("#linkElement").sheet;\n\n\n1\n2\n# 属性\n * href属性是只读属性，返回 StyleSheet 对象连接的样式表地址\n * type属性返回 StyleSheet 对象的 type 值，通常是text/css\n * title属性返回 StyleSheet 对象的 title 值\n * css 的@import命令允许在样式表中加载其他样式表`\n * media属性表示这个样式表是用于屏幕（screen），还是用于打印（print），或两者都适用（all）。该属性只读，默认值是screen\n\ndocument.querySelector("#linkElement").disabled = true;\n// 或者\ndocument.querySelector("#linkElement").disabled = "disabled";\n\n\n1\n2\n3\n# css选择器\n * w3school css_selectors\n   \n   \n * 通配符 : *{}\n   \n   \n * 标签选择器 : p{} div{}\n   \n   \n * class类名选择器(可重复) : .demo{}\n   \n   \n * id选择器 (同一页面不可重复): #demo{}\n   \n   \n * 后代选择器 ： #demo p{}\n   \n   \n * 子元素选择器 : #demo>p{}\n   \n   \n * 并集选择器 ：.demo,#demo{}\n   \n   \n * 交集选择器 ：div.demo{} 两选择器之间没有空格\n   \n   \n\n# 优先级从大到小\n * !important > 行内样式 > Id > 类 > 标签 > 通配符 > 继承 > 浏览器默认\n\n# css 的三种存在方式\n * 行内样式（存在于标签之中，用 style 属性设置）\n\n<p style="color: red">内容</p>\n\n\n1\n * 嵌入样式（内联样式）（存在于 title 标签之下的 style 标签之中）\n\n<style>\n  p {\n    color: red;\n  }\n</style>\n\n\n1\n2\n3\n4\n5\n * 外部样式（外联样式）：（存在于一个外部文件中） 在需要的页面 head 标签中引入这个文件引用：\n\n<link rel="stylesheet" href="a.css" />\n\n\n1\n# css 使用变量\n * Sass 和 Less\n\n// sass\n$direction: left;\n// less\n@direction: left;\n\n\n1\n2\n3\n4\n * CSS 原生变量 var()\n\n/*\n变量定义的语法是： --*\n变量使用的语法是：var()\n*/\n:root {\n  --blue_color: #3388ff;\n  --main_bgcolor: #fafafa;\n  --font_size_12: 12px;\n  --font_size_14: 14px;\n  --color: 20px;\n}\n.box {\n  background-color: var(--main_bgcolor);\n  font-size: var(--font_size_12);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# BEM\n * Block块, Element元素, Modifier修饰符\n\n.block {\n}\n.block__element {\n}\n.block--modifier {\n}\n\n.sub-block__element {\n}\n.sub-block--modifier {\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 变形与动画\n# transition（过渡）\n\n\n * transition: property duration timing-function delay;\n * transition-property 过渡效果的 CSS 属性的名称 width...\n * transition-duration 完成过渡效果需要多少秒或毫秒 time\n * transition-timing-function 速度效果的速度曲线 linear...\n * transition-delay 过渡效果何时开始 time\n\n# transform（变换）\n# 2d\n * translate(x,y)\n * rotate(angle)\n * scale(x,y)\n * skew(x-angle,y-angle)\n\n# 3d\n * transform-style * 规定如何在 3D 空间中呈现被嵌套的元素\n    * transform-style: flat|preserve-3d;\n   \n   \n * perspective * 3D 元素的透视效果\n    * perspective: number|none;\n   \n   \n * perspective-origin * 3D 元素的底部位置\n    * perspective-origin: x-axis y-axis;\n   \n   \n * backface-visibility * 定义元素在不面对屏幕时是否可见\n    * backface-visibility: visible|hidden;\n   \n   \n\n# 动画\n# keyframes\n * @keyframes animationname {keyframes-selector {css-styles;}}\n * animationname 定义动画的名称\n * keyframes-selector 动画时长的百分比 0-100%; from（与 0% 相同）;to（与 100% 相同）\n * css-styles 一个或多个合法的 CSS 样式属性\n * CSS 动画属性关键帧 keyframes 全解析\n\n@keyframes move {\n  0% {\n    transform: translateX(0);\n  }\n  100% {\n    transform: translateX(800px);\n  }\n}\n.c_move {\n  animation: move 4s linear both;\n} /*both:运动结束后停留在终点*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# animation\n\n\n * animation: name duration timing-function delay iteration-count direction play-state fill-mode;\n * animation-name 需要绑定到选择器的 keyframe 名称\n * animation-duration 完成动画所花费的时间，以秒或毫秒计\n * animation-timing-function 动画的速度曲线\n * animation-delay 在动画开始之前的延迟\n * animation-iteration-count 动画应该播放的次数/无限(infinite)\n * play-state 控制元素动画的播放状态，通过此来控制动画的暂停和继续 * running 继续\n    * paused 暂停\n   \n   \n * animation-direction 是否应该轮流反向播放动画. normal(默认) | alternate * normal 按时间轴顺序\n    * reverse 时间轴反方向运行\n    * alternate 轮流，即来回往复进行\n    * alternate-reverse 动画先反运行再正方向运行，并持续交替运行\n   \n   \n * animation-fill-mode: none | forwards | backwards | both * none 回到动画没开始时的状态\n    * forwards 动画结束后动画停留在结束状态\n    * backwards 动画回到第一帧的状态\n    * both 向前和向后填充模式都被应用\n   \n   \n\n# 媒体查询 media\n * @media mediatype and|not|only (media feature) { CSS-Code; }\n * mediatype : print | screen | speech | all\n\n/* 横屏 */\n@media screen and (orientation: landscape) {\n}\n/* 竖屏 */\n@media screen and (orientation: portrait) {\n}\n/* 窗口宽度<960,设计宽度=768 */\n@media screen and (max-width: 959px) {\n}\n/* 窗口宽度<768,设计宽度=640 */\n@media screen and (max-width: 767px) {\n}\n/* 窗口宽度<640,设计宽度=480 */\n@media screen and (max-width: 639px) {\n}\n/* 窗口宽度<480,设计宽度=320 */\n@media screen and (max-width: 479px) {\n}\n/* 设备像素比为2 */\n/* 常用于1px边框，还应规定 3dppx 的情况 */\n@media (min-resolution: 2dppx) {\n}\n/* windows UI 贴靠 */\n@media screen and (-ms-view-state: snapped) {\n}\n/* 打印 */\n@media print {\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 盒子模型\n# 盒模型元素\n * 内容(content), 填充(padding), 边框(border), 外边距(margin)\n\n# 盒子模型分类\n * IE 盒子模型: IE的content部分包含了 border 和 padding;\n   \n   \n   \n   \n * 标准 W3C 盒子模型\n   \n    * width：border-left + padding-left + width + padding-right + border-right\n    * height: border-top + padding-top + height + padding-bottom + border-bottom\n   \n   \n   \n   \n\n# css3 盒模型属性\n * box-sizing: border-box: 计算方式为 width = border + padding + content\n   \n   \n * box-sizing: content-box: 计算方式为 width = content\n   \n   \n   \n   \n\n# content 内容\n# padding\n * 设置内容和盒子之间的距离\n * 连写：padding-top/padding-right/padding-bottom/padding-left\n\n/*padding :top right bottom left*/\npadding: 10px 5px 15px 20px;\n\n/*padding :top  right/left  bottom*/\npadding: 10px 5px 15px;\n\n/*padding :top/bottom  right/left  */\npadding: 10px 5px;\n\n/*padding: top/right/bottom/left*/\npadding: 10px;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 由于 padding 是盒子内的一部分，在给盒子设置背景颜色的时候 padding 中也会有背景颜色，但是 margin 中是没有的\n\n# border 盒子的边框\n * border-width: 边框的宽度(上 - 右 - 下 - 左 的顺序) border-width:thin medium thick 10px;\n   \n   \n * border-style: 边框的样式 border-style:dotted solid double dashed;\n   \n   \n * border-color: 边框的颜色。border-color:red green blue pink;\n   \n   \n * 连写模式\n   \n   \n\nborder: border-width border-style border-color;\n\n\n1\n * border 实现三角形\n\nborder-width: 1px;\nborder-style: solod;\nborder-color: #ccc;\n\nborder: 1px solid #ccc;\n\n\n1\n2\n3\n4\n5\n# margin\n * 盒子与盒子之间的距离\n * 单独赋值：\n\nmargin-top: 10px;\nmargin-right: 12px;\nmargin-bottom: 13px;\nmargin-left: 14px;\n\n\n1\n2\n3\n4\n * 连写赋值\n\n/* 上 右 下 左 */\nmargin: 20px;\n/* 上下 左右 */\nmargin: 20px 40px;\n/* 上 左右 下 */\nmargin: 20px 30px 40px;\n/* 上 右 下 左 */\nmargin: 20px 30px 40px 50px;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * margin 的边框合并现象\n\n# GPU 加速\n * transform 3D 属性强制开启 GPU 加速 * transform: translateZ(0);\n    * transform: rotateZ(360deg);\n   \n   \n * will-change 即将发生变化，进行优化的属性\n * opacity\n * filter\n\n# BFC\n * Block Formatting Context 块级格式化上下文,形成独立渲染区域\n * 前端精选文摘：BFC 神奇背后的原理\n\n# 如何触发 BFC\n * 根元素 : 在块格式化上下文中\n * float的值不为none\n * position为absolute或fixed\n * display的值为 inline-block, flex, inline-flex，table，table-cell，table-caption中的其中一个\n * overflow的值不为visible\n\n# css 继承\n * 可继承的样式\n * 不可继承的样式: margin / padding / border ; a标签的color无法从父级继承\n\n# 页面元素的显示和隐藏\n * overflow: hidden; 将超出的部分隐藏。\n * dispaly :none; 将元素直接隐藏，并且不会在页面上占据位置\n * visibility:hidden; 将元素直接隐藏，但是会保留元素所在的位置\n * width,height为0\n * raga(0,0,0,0); opacity:0\n * z-inidex:-1000;\n * transform:translateX(-10000px)/translateY(-10000px)\n * text-index:-10000px\n\n# RGBA 与 HSLA\n * Red、Green、Blue、Alpha 即 RGBA\n * Hue、Saturation、Lightness、Alpha 即 HSLA\n\nR、G、B 取值范围0~255\nH 色调 取值范围0~360，0/360表示红色、120表示绿色、240表示蓝色\nS 饱和度 取值范围0%~100%\nL 亮度 取值范围0%~100%\nA 透明度 取值范围0~1\n\n\n1\n2\n3\n4\n5\n * opacity只能针对整个盒子设置透明度，子盒子及内容会继承父盒子的透明度\n * transparent 不可调节透明度，始终完全透明\n\nrgba(0,0,0,0.5);\nopacity:0.6；/*盒子半透明,里面的内容也跟着半透明*/\nfilter:Alpha(opacity=50);/*滤镜*/\n\n\n1\n2\n3\n# link 引入 css 和@import 的区别\n * link属于html标签，而@import是css提供的\n * 页面被加载时，link 会同时被加载，而@import引用的 css 会等到页面加载结束后加载\n * link 是 html 标签，因此没有兼容性，而@import只有 IE5 以上才能识别\n\n<style>\n  @import url("reset.css");\n</style>\n\n\n1\n2\n3\n# css3 选择器\n# 属性选择器\n * E[attr] 表示存在 attr 属性即可\n * E[attr=val] 表示属性值完全等于 val\n * E[attr*=val] 表示的属性值里包含 val 字符并且在“任意”位置\n * E[attr^=val] 表示的属性值里包含 val 字符并且在“开始”位置\n * E[attr$=val] 表示的属性值里包含 val 字符并且在“结束”位置\n\n# 伪类选择器\n * a 伪类顺序 :link、:visited、:hover、:active、\n   \n   \n * 以某元素相对于其父元素或兄弟元素的位置来获取无素的结构伪类\n   \n    * E:first-child 第一个子元素\n    * E:last-child 最后一个子元素\n    * E:nth-child(n) 第 n 个子元素，计算方法是 E 元素的全部兄弟元素\n    * E:nth-last-child(n) 同 E:nth-child(n) 相似，只是倒着计算\n   \n   \n * n 遵循线性变化，其取值0、1、2、3、4、... 但是当n<=0时，选取无效\n   \n   \n * n 可是多种形式：nth-child(2n)、nth-child(2n+1)、nth-child(-1n+5)...\n   \n   \n * E:empty 选中没有任何子节点的 E 元素\n   \n   \n * 目标伪类 E:target 结合锚点进行使用，处于当前锚点的元素会被选中\n   \n   \n\n# 伪元素选择器\n * E::first-letter文本的第一个单词或字\n * E::first-line 文本第一行\n * E::selection 可改变选中文本的样式\n * E::before、E::after 是一个行内元素，需要转换成块元素\n * 在旧版本E:after、E:before 是伪类，在新版本里是伪元素\n * 在新版本E:after、E:before 会被自动识别为 E::after、E::before\n * ":" 与 "::" 区别在于区分伪类和伪元素\n\n# css3 私有前缀\n-webkit- 指的是chrome的内核 : webkit\n-moz- 指的是火狐浏览器  :gecko\n-o- 指的欧朋浏览器 : presto\n-ms- 指的IE浏览器 : trident\n\n\n1\n2\n3\n4\n# font 字体\nfont-style: normal(默认值) / italic / oblique / inherit\n\nfont-weight: normal / bold / bolder / lighter / 100~900\n\nfont-size/line-height：px/px\n\nfont-family：字体系列\n\n\n1\n2\n3\n4\n5\n6\n7\n * 连写格式： font: font-style font-weight font-size/line-height font-family\n\nfont-family: -apple-system, BlinkMacSystemFont, "PingFang SC", "Helvetica Neue",\n  STHeiti, "Microsoft Yahei", Tahoma, Simsun, sans-serif;\n\n\n1\n2\n * 特殊字符\n   \n   结果   实体名称     结果   实体名称     \n   空格   &nbsp;   &    &amp;    \n   ®    &reg;    ©    &copy;   \n   <    &lt;     >    &gt;     \n   ¥    &yen;    ²    &sup2;   \n   \n   \n\n# display\n * 行内元素: display:inline;可以多个标签放在同一行，但是给标签设置宽高没有作用。\n\nb, big, i, small, tt abbr, acronym, cite, code, dfn, em, kbd, strong, samp, var\na, bdo, br, img, map, object, q, script, span, sub, sup button, input, label,\nselect, textarea\n\n\n1\n2\n3\n * 行内块级元素: display:inline-block;可以多个标签放在同一行，并且可以标签设置宽高。\n * 块级元素： display:block;单独占一行，可以给这个元素设置宽高。\n\ndiv,p,h1,ul,li,ol,dl\n\n\n1\n * 标签可以通过修改 display 的值来改变显示方式\n\n/* 此时为块级元素 */\na {\n  display: block;\n}\n\n\n1\n2\n3\n4\n# position 定位\n * MDN/position\n * 静态定位(标准流) : position:static\n\nposition: static;\n\n\n1\n * 绝对定位 ：position：absolute * 绝对定位的盒子不占页面上的位置（脱离标准流）\n    * 绝对定位以后会影响元素的显示方式：display：inline-block\n   \n   \n\nposition: absolute;\ntop: 40px;\nleft: 40px;\n\n\n1\n2\n3\n * 相对定位 ：position:relative * 相对定位是占据标准流的位置\n    * 相对自身的位置进行定位\n   \n   \n\nposition: relative;\ntop: 40px;\nleft: 40px;\n\n\n1\n2\n3\n * 固定定位 ： position:fixed; * 使用盒子显示浏览器的固定位置\n    * 固定定位会脱离标准流\n    * 固定定位会改变元素的显示方式\n   \n   \n * 粘性定位元素 ：position:stickily\n\nposition: -webkit-sticky;\nposition: sticky;\ntop: 20px;\n\n\n1\n2\n3\n * z-index：用来设置当前盒子所在的层次 z-index：12；',normalizedContent:'# 层叠样式表\n * cascading style sheets,重复的对同一个选择器进行样式重复编写，会发生后面的样式覆盖前面的样式\n   \n   \n * 浏览器 css 兼容前缀\n   \n   \n\n-o-transform:rotate(7deg); // opera\n\n-ms-transform:rotate(7deg); // ie\n\n-moz-transform:rotate(7deg); // firefox\n\n-webkit-transform:rotate(7deg); // chrome\n\ntransform:rotate(7deg); // 统一标识语句\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# style 属性\n# style 对象\nvar divstyle = document.queryselector("div").style;\ndivstyle.backgroundcolor = "red";\ndivstyle.backgroundcolor; // red\n\n\n1\n2\n3\n# csstext 属性\nvar divstyle = document.queryselector("div").style;\ndivstyle.csstext =\n  "background-color: red;" +\n  "border: 1px solid black;" +\n  "height: 100px;" +\n  "width: 100px;";\n\n\n1\n2\n3\n4\n5\n6\n# css 属性\n * setproperty(propertyname,value)：设置某个 css 属性\n * getpropertyvalue(propertyname)：读取某个 css 属性\n * removeproperty(propertyname)：删除某个 css 属性\n\nvar divstyle = document.queryselector("div").style;\ndivstyle.setproperty("background-color", "red");\ndivstyle.getpropertyvalue("background-color");\ndivstyle.removeproperty("background-color");\n\n\n1\n2\n3\n4\n# stylesheet 对象\n# 获取样式表\n * document.stylesheets返回当前页面的所有 stylesheet 对象\n\n// 等同于document.stylesheets[0]\ndocument.queryselector("#linkelement").sheet;\n\n\n1\n2\n# 属性\n * href属性是只读属性，返回 stylesheet 对象连接的样式表地址\n * type属性返回 stylesheet 对象的 type 值，通常是text/css\n * title属性返回 stylesheet 对象的 title 值\n * css 的@import命令允许在样式表中加载其他样式表`\n * media属性表示这个样式表是用于屏幕（screen），还是用于打印（print），或两者都适用（all）。该属性只读，默认值是screen\n\ndocument.queryselector("#linkelement").disabled = true;\n// 或者\ndocument.queryselector("#linkelement").disabled = "disabled";\n\n\n1\n2\n3\n# css选择器\n * w3school css_selectors\n   \n   \n * 通配符 : *{}\n   \n   \n * 标签选择器 : p{} div{}\n   \n   \n * class类名选择器(可重复) : .demo{}\n   \n   \n * id选择器 (同一页面不可重复): #demo{}\n   \n   \n * 后代选择器 ： #demo p{}\n   \n   \n * 子元素选择器 : #demo>p{}\n   \n   \n * 并集选择器 ：.demo,#demo{}\n   \n   \n * 交集选择器 ：div.demo{} 两选择器之间没有空格\n   \n   \n\n# 优先级从大到小\n * !important > 行内样式 > id > 类 > 标签 > 通配符 > 继承 > 浏览器默认\n\n# css 的三种存在方式\n * 行内样式（存在于标签之中，用 style 属性设置）\n\n<p style="color: red">内容</p>\n\n\n1\n * 嵌入样式（内联样式）（存在于 title 标签之下的 style 标签之中）\n\n<style>\n  p {\n    color: red;\n  }\n</style>\n\n\n1\n2\n3\n4\n5\n * 外部样式（外联样式）：（存在于一个外部文件中） 在需要的页面 head 标签中引入这个文件引用：\n\n<link rel="stylesheet" href="a.css" />\n\n\n1\n# css 使用变量\n * sass 和 less\n\n// sass\n$direction: left;\n// less\n@direction: left;\n\n\n1\n2\n3\n4\n * css 原生变量 var()\n\n/*\n变量定义的语法是： --*\n变量使用的语法是：var()\n*/\n:root {\n  --blue_color: #3388ff;\n  --main_bgcolor: #fafafa;\n  --font_size_12: 12px;\n  --font_size_14: 14px;\n  --color: 20px;\n}\n.box {\n  background-color: var(--main_bgcolor);\n  font-size: var(--font_size_12);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# bem\n * block块, element元素, modifier修饰符\n\n.block {\n}\n.block__element {\n}\n.block--modifier {\n}\n\n.sub-block__element {\n}\n.sub-block--modifier {\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 变形与动画\n# transition（过渡）\n\n\n * transition: property duration timing-function delay;\n * transition-property 过渡效果的 css 属性的名称 width...\n * transition-duration 完成过渡效果需要多少秒或毫秒 time\n * transition-timing-function 速度效果的速度曲线 linear...\n * transition-delay 过渡效果何时开始 time\n\n# transform（变换）\n# 2d\n * translate(x,y)\n * rotate(angle)\n * scale(x,y)\n * skew(x-angle,y-angle)\n\n# 3d\n * transform-style * 规定如何在 3d 空间中呈现被嵌套的元素\n    * transform-style: flat|preserve-3d;\n   \n   \n * perspective * 3d 元素的透视效果\n    * perspective: number|none;\n   \n   \n * perspective-origin * 3d 元素的底部位置\n    * perspective-origin: x-axis y-axis;\n   \n   \n * backface-visibility * 定义元素在不面对屏幕时是否可见\n    * backface-visibility: visible|hidden;\n   \n   \n\n# 动画\n# keyframes\n * @keyframes animationname {keyframes-selector {css-styles;}}\n * animationname 定义动画的名称\n * keyframes-selector 动画时长的百分比 0-100%; from（与 0% 相同）;to（与 100% 相同）\n * css-styles 一个或多个合法的 css 样式属性\n * css 动画属性关键帧 keyframes 全解析\n\n@keyframes move {\n  0% {\n    transform: translatex(0);\n  }\n  100% {\n    transform: translatex(800px);\n  }\n}\n.c_move {\n  animation: move 4s linear both;\n} /*both:运动结束后停留在终点*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# animation\n\n\n * animation: name duration timing-function delay iteration-count direction play-state fill-mode;\n * animation-name 需要绑定到选择器的 keyframe 名称\n * animation-duration 完成动画所花费的时间，以秒或毫秒计\n * animation-timing-function 动画的速度曲线\n * animation-delay 在动画开始之前的延迟\n * animation-iteration-count 动画应该播放的次数/无限(infinite)\n * play-state 控制元素动画的播放状态，通过此来控制动画的暂停和继续 * running 继续\n    * paused 暂停\n   \n   \n * animation-direction 是否应该轮流反向播放动画. normal(默认) | alternate * normal 按时间轴顺序\n    * reverse 时间轴反方向运行\n    * alternate 轮流，即来回往复进行\n    * alternate-reverse 动画先反运行再正方向运行，并持续交替运行\n   \n   \n * animation-fill-mode: none | forwards | backwards | both * none 回到动画没开始时的状态\n    * forwards 动画结束后动画停留在结束状态\n    * backwards 动画回到第一帧的状态\n    * both 向前和向后填充模式都被应用\n   \n   \n\n# 媒体查询 media\n * @media mediatype and|not|only (media feature) { css-code; }\n * mediatype : print | screen | speech | all\n\n/* 横屏 */\n@media screen and (orientation: landscape) {\n}\n/* 竖屏 */\n@media screen and (orientation: portrait) {\n}\n/* 窗口宽度<960,设计宽度=768 */\n@media screen and (max-width: 959px) {\n}\n/* 窗口宽度<768,设计宽度=640 */\n@media screen and (max-width: 767px) {\n}\n/* 窗口宽度<640,设计宽度=480 */\n@media screen and (max-width: 639px) {\n}\n/* 窗口宽度<480,设计宽度=320 */\n@media screen and (max-width: 479px) {\n}\n/* 设备像素比为2 */\n/* 常用于1px边框，还应规定 3dppx 的情况 */\n@media (min-resolution: 2dppx) {\n}\n/* windows ui 贴靠 */\n@media screen and (-ms-view-state: snapped) {\n}\n/* 打印 */\n@media print {\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 盒子模型\n# 盒模型元素\n * 内容(content), 填充(padding), 边框(border), 外边距(margin)\n\n# 盒子模型分类\n * ie 盒子模型: ie的content部分包含了 border 和 padding;\n   \n   \n   \n   \n * 标准 w3c 盒子模型\n   \n    * width：border-left + padding-left + width + padding-right + border-right\n    * height: border-top + padding-top + height + padding-bottom + border-bottom\n   \n   \n   \n   \n\n# css3 盒模型属性\n * box-sizing: border-box: 计算方式为 width = border + padding + content\n   \n   \n * box-sizing: content-box: 计算方式为 width = content\n   \n   \n   \n   \n\n# content 内容\n# padding\n * 设置内容和盒子之间的距离\n * 连写：padding-top/padding-right/padding-bottom/padding-left\n\n/*padding :top right bottom left*/\npadding: 10px 5px 15px 20px;\n\n/*padding :top  right/left  bottom*/\npadding: 10px 5px 15px;\n\n/*padding :top/bottom  right/left  */\npadding: 10px 5px;\n\n/*padding: top/right/bottom/left*/\npadding: 10px;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 由于 padding 是盒子内的一部分，在给盒子设置背景颜色的时候 padding 中也会有背景颜色，但是 margin 中是没有的\n\n# border 盒子的边框\n * border-width: 边框的宽度(上 - 右 - 下 - 左 的顺序) border-width:thin medium thick 10px;\n   \n   \n * border-style: 边框的样式 border-style:dotted solid double dashed;\n   \n   \n * border-color: 边框的颜色。border-color:red green blue pink;\n   \n   \n * 连写模式\n   \n   \n\nborder: border-width border-style border-color;\n\n\n1\n * border 实现三角形\n\nborder-width: 1px;\nborder-style: solod;\nborder-color: #ccc;\n\nborder: 1px solid #ccc;\n\n\n1\n2\n3\n4\n5\n# margin\n * 盒子与盒子之间的距离\n * 单独赋值：\n\nmargin-top: 10px;\nmargin-right: 12px;\nmargin-bottom: 13px;\nmargin-left: 14px;\n\n\n1\n2\n3\n4\n * 连写赋值\n\n/* 上 右 下 左 */\nmargin: 20px;\n/* 上下 左右 */\nmargin: 20px 40px;\n/* 上 左右 下 */\nmargin: 20px 30px 40px;\n/* 上 右 下 左 */\nmargin: 20px 30px 40px 50px;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * margin 的边框合并现象\n\n# gpu 加速\n * transform 3d 属性强制开启 gpu 加速 * transform: translatez(0);\n    * transform: rotatez(360deg);\n   \n   \n * will-change 即将发生变化，进行优化的属性\n * opacity\n * filter\n\n# bfc\n * block formatting context 块级格式化上下文,形成独立渲染区域\n * 前端精选文摘：bfc 神奇背后的原理\n\n# 如何触发 bfc\n * 根元素 : 在块格式化上下文中\n * float的值不为none\n * position为absolute或fixed\n * display的值为 inline-block, flex, inline-flex，table，table-cell，table-caption中的其中一个\n * overflow的值不为visible\n\n# css 继承\n * 可继承的样式\n * 不可继承的样式: margin / padding / border ; a标签的color无法从父级继承\n\n# 页面元素的显示和隐藏\n * overflow: hidden; 将超出的部分隐藏。\n * dispaly :none; 将元素直接隐藏，并且不会在页面上占据位置\n * visibility:hidden; 将元素直接隐藏，但是会保留元素所在的位置\n * width,height为0\n * raga(0,0,0,0); opacity:0\n * z-inidex:-1000;\n * transform:translatex(-10000px)/translatey(-10000px)\n * text-index:-10000px\n\n# rgba 与 hsla\n * red、green、blue、alpha 即 rgba\n * hue、saturation、lightness、alpha 即 hsla\n\nr、g、b 取值范围0~255\nh 色调 取值范围0~360，0/360表示红色、120表示绿色、240表示蓝色\ns 饱和度 取值范围0%~100%\nl 亮度 取值范围0%~100%\na 透明度 取值范围0~1\n\n\n1\n2\n3\n4\n5\n * opacity只能针对整个盒子设置透明度，子盒子及内容会继承父盒子的透明度\n * transparent 不可调节透明度，始终完全透明\n\nrgba(0,0,0,0.5);\nopacity:0.6；/*盒子半透明,里面的内容也跟着半透明*/\nfilter:alpha(opacity=50);/*滤镜*/\n\n\n1\n2\n3\n# link 引入 css 和@import 的区别\n * link属于html标签，而@import是css提供的\n * 页面被加载时，link 会同时被加载，而@import引用的 css 会等到页面加载结束后加载\n * link 是 html 标签，因此没有兼容性，而@import只有 ie5 以上才能识别\n\n<style>\n  @import url("reset.css");\n</style>\n\n\n1\n2\n3\n# css3 选择器\n# 属性选择器\n * e[attr] 表示存在 attr 属性即可\n * e[attr=val] 表示属性值完全等于 val\n * e[attr*=val] 表示的属性值里包含 val 字符并且在“任意”位置\n * e[attr^=val] 表示的属性值里包含 val 字符并且在“开始”位置\n * e[attr$=val] 表示的属性值里包含 val 字符并且在“结束”位置\n\n# 伪类选择器\n * a 伪类顺序 :link、:visited、:hover、:active、\n   \n   \n * 以某元素相对于其父元素或兄弟元素的位置来获取无素的结构伪类\n   \n    * e:first-child 第一个子元素\n    * e:last-child 最后一个子元素\n    * e:nth-child(n) 第 n 个子元素，计算方法是 e 元素的全部兄弟元素\n    * e:nth-last-child(n) 同 e:nth-child(n) 相似，只是倒着计算\n   \n   \n * n 遵循线性变化，其取值0、1、2、3、4、... 但是当n<=0时，选取无效\n   \n   \n * n 可是多种形式：nth-child(2n)、nth-child(2n+1)、nth-child(-1n+5)...\n   \n   \n * e:empty 选中没有任何子节点的 e 元素\n   \n   \n * 目标伪类 e:target 结合锚点进行使用，处于当前锚点的元素会被选中\n   \n   \n\n# 伪元素选择器\n * e::first-letter文本的第一个单词或字\n * e::first-line 文本第一行\n * e::selection 可改变选中文本的样式\n * e::before、e::after 是一个行内元素，需要转换成块元素\n * 在旧版本e:after、e:before 是伪类，在新版本里是伪元素\n * 在新版本e:after、e:before 会被自动识别为 e::after、e::before\n * ":" 与 "::" 区别在于区分伪类和伪元素\n\n# css3 私有前缀\n-webkit- 指的是chrome的内核 : webkit\n-moz- 指的是火狐浏览器  :gecko\n-o- 指的欧朋浏览器 : presto\n-ms- 指的ie浏览器 : trident\n\n\n1\n2\n3\n4\n# font 字体\nfont-style: normal(默认值) / italic / oblique / inherit\n\nfont-weight: normal / bold / bolder / lighter / 100~900\n\nfont-size/line-height：px/px\n\nfont-family：字体系列\n\n\n1\n2\n3\n4\n5\n6\n7\n * 连写格式： font: font-style font-weight font-size/line-height font-family\n\nfont-family: -apple-system, blinkmacsystemfont, "pingfang sc", "helvetica neue",\n  stheiti, "microsoft yahei", tahoma, simsun, sans-serif;\n\n\n1\n2\n * 特殊字符\n   \n   结果   实体名称     结果   实体名称     \n   空格   &nbsp;   &    &amp;    \n   ®    &reg;    ©    &copy;   \n   <    &lt;     >    &gt;     \n   ¥    &yen;    ²    &sup2;   \n   \n   \n\n# display\n * 行内元素: display:inline;可以多个标签放在同一行，但是给标签设置宽高没有作用。\n\nb, big, i, small, tt abbr, acronym, cite, code, dfn, em, kbd, strong, samp, var\na, bdo, br, img, map, object, q, script, span, sub, sup button, input, label,\nselect, textarea\n\n\n1\n2\n3\n * 行内块级元素: display:inline-block;可以多个标签放在同一行，并且可以标签设置宽高。\n * 块级元素： display:block;单独占一行，可以给这个元素设置宽高。\n\ndiv,p,h1,ul,li,ol,dl\n\n\n1\n * 标签可以通过修改 display 的值来改变显示方式\n\n/* 此时为块级元素 */\na {\n  display: block;\n}\n\n\n1\n2\n3\n4\n# position 定位\n * mdn/position\n * 静态定位(标准流) : position:static\n\nposition: static;\n\n\n1\n * 绝对定位 ：position：absolute * 绝对定位的盒子不占页面上的位置（脱离标准流）\n    * 绝对定位以后会影响元素的显示方式：display：inline-block\n   \n   \n\nposition: absolute;\ntop: 40px;\nleft: 40px;\n\n\n1\n2\n3\n * 相对定位 ：position:relative * 相对定位是占据标准流的位置\n    * 相对自身的位置进行定位\n   \n   \n\nposition: relative;\ntop: 40px;\nleft: 40px;\n\n\n1\n2\n3\n * 固定定位 ： position:fixed; * 使用盒子显示浏览器的固定位置\n    * 固定定位会脱离标准流\n    * 固定定位会改变元素的显示方式\n   \n   \n * 粘性定位元素 ：position:stickily\n\nposition: -webkit-sticky;\nposition: sticky;\ntop: 20px;\n\n\n1\n2\n3\n * z-index：用来设置当前盒子所在的层次 z-index：12；',charsets:{cjk:!0}},{title:"emmet的简写示例",frontmatter:{title:"emmet的简写示例",date:"2020-07-22T00:00:00.000Z",sidebar:"auto",categories:["web"],tags:["emmet"],readingShow:"top"},regularPath:"/web/emmet.html",relativePath:"web/emmet.md",key:"v-0e770a8b",path:"/web/emmet.html",lastUpdated:"2020/7/30 上午10:49:06",headersStr:null,content:' * div.box.box1\n\n<div class="box box1"></div>\n\n\n1\n * div#box.box1+p.div\n\n<div id="box" class="box1"></div>\n<p class="div"></p>\n\n\n1\n2\n * div#box.box1>p.div\n\n<div id="box" class="box1">\n  <p class="div"></p>\n</div>\n\n\n1\n2\n3\n * cc:ie6\n\n\x3c!--[if lte IE 6]\n\n<![endif]--\x3e\n\n\n1\n2\n3\n * ul>li.abc$*3\n\n<ul>\n  <li class="abc1"></li>\n  <li class="abc2"></li>\n  <li class="abc3"></li>\n</ul>\n\n\n1\n2\n3\n4\n5\n * ul>li>a{item}*5\n\n<ul>\n  <li>\n    <a href="">item</a>\n    <a href="">item</a>\n    <a href="">item</a>\n    <a href="">item</a>\n    <a href="">item</a>\n  </li>\n</ul>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * ul>li>a{$\\*1 item}*5\n\n<ul>\n  <li>\n    <a href="">1*1 item</a>\n    <a href="">2*1 item</a>\n    <a href="">3*1 item</a>\n    <a href="">4*1 item</a>\n    <a href="">5*1 item</a>\n  </li>\n</ul>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * lorem 生成随机字符\n\n\x3c!-- lorem5 生成5个字符串 --\x3e\nLorem ipsum dolor sit amet.\n\n\n1\n2',normalizedContent:' * div.box.box1\n\n<div class="box box1"></div>\n\n\n1\n * div#box.box1+p.div\n\n<div id="box" class="box1"></div>\n<p class="div"></p>\n\n\n1\n2\n * div#box.box1>p.div\n\n<div id="box" class="box1">\n  <p class="div"></p>\n</div>\n\n\n1\n2\n3\n * cc:ie6\n\n\x3c!--[if lte ie 6]\n\n<![endif]--\x3e\n\n\n1\n2\n3\n * ul>li.abc$*3\n\n<ul>\n  <li class="abc1"></li>\n  <li class="abc2"></li>\n  <li class="abc3"></li>\n</ul>\n\n\n1\n2\n3\n4\n5\n * ul>li>a{item}*5\n\n<ul>\n  <li>\n    <a href="">item</a>\n    <a href="">item</a>\n    <a href="">item</a>\n    <a href="">item</a>\n    <a href="">item</a>\n  </li>\n</ul>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * ul>li>a{$\\*1 item}*5\n\n<ul>\n  <li>\n    <a href="">1*1 item</a>\n    <a href="">2*1 item</a>\n    <a href="">3*1 item</a>\n    <a href="">4*1 item</a>\n    <a href="">5*1 item</a>\n  </li>\n</ul>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n * lorem 生成随机字符\n\n\x3c!-- lorem5 生成5个字符串 --\x3e\nlorem ipsum dolor sit amet.\n\n\n1\n2',charsets:{cjk:!0}},{title:"html的简单介绍",frontmatter:{title:"html的简单介绍",date:"2020-07-22T00:00:00.000Z",sidebar:"auto",categories:["web"],tags:["html"],readingShow:"top"},regularPath:"/web/html.html",relativePath:"web/html.md",key:"v-252b916a",path:"/web/html.html",headers:[{level:2,title:"html 和 xhtml",slug:"html-和-xhtml",normalizedTitle:"html 和 xhtml",charIndex:2},{level:2,title:"页面三层结构",slug:"页面三层结构",normalizedTitle:"页面三层结构",charIndex:63},{level:2,title:"文档声明",slug:"文档声明",normalizedTitle:"文档声明",charIndex:111},{level:3,title:"文档类型定义（DTD）",slug:"文档类型定义-dtd",normalizedTitle:"文档类型定义（dtd）",charIndex:337},{level:2,title:"页面加载事件",slug:"页面加载事件",normalizedTitle:"页面加载事件",charIndex:761},{level:2,title:"DOM",slug:"dom",normalizedTitle:"dom",charIndex:771},{level:3,title:"获取 DOM",slug:"获取-dom",normalizedTitle:"获取 dom",charIndex:1112},{level:3,title:"className",slug:"classname",normalizedTitle:"classname",charIndex:1413},{level:3,title:"自定义属性 data-*",slug:"自定义属性-data",normalizedTitle:"自定义属性 data-*",charIndex:1637},{level:2,title:"drag 拖拽",slug:"drag-拖拽",normalizedTitle:"drag 拖拽",charIndex:2060},{level:2,title:"History Api",slug:"history-api",normalizedTitle:"history api",charIndex:2597},{level:2,title:"localStorage",slug:"localstorage",normalizedTitle:"localstorage",charIndex:3069},{level:2,title:"FullScreen",slug:"fullscreen",normalizedTitle:"fullscreen",charIndex:3425},{level:2,title:"noreferrer/noopener",slug:"noreferrer-noopener",normalizedTitle:"noreferrer/noopener",charIndex:4247}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"html 和 xhtml 页面三层结构 文档声明 文档类型定义（DTD） 页面加载事件 DOM 获取 DOM className 自定义属性 data-* drag 拖拽 History Api localStorage FullScreen noreferrer/noopener",content:'# html 和 xhtml\nHTML 是一种基本的 WEB 网页设计语言，XHTML 是一个基于 XML 的置标语言\n\n# 页面三层结构\n * 结构层HTML\n * 表现层CSS\n * 行为层JavaScript\n\n# 文档声明\n * <!DOCTYPE> 声明对大小写不敏感\n * <!DOCTYPE> 声明必须是 HTML 文档的第一行，位于 <html> 标签之前\n * <!DOCTYPE> 声明不是 HTML 标签；告诉浏览器以何种方式来渲染页面 * 这里有两种模式，严格模式和混杂模式。\n    * 严格模式的排版和 JS 运作模式是 以该浏览器支持的最高标准运行\n    * 混杂模式，向后兼容，模拟老式浏览器，防止浏览器无法兼容页面\n   \n   \n\n# 文档类型定义（DTD）\n * HTML 5\n\n<!DOCTYPE html>\n\n\n1\n * HTML 4.01 Strict\n\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">\n\n\n1\n * HTML 4.01 Transitional\n\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n\n\n1\n * HTML 4.01 Frameset\n\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">\n\n\n1\n# 页面加载事件\n * DOMContentLoaded dom 内容加载完毕\n   \n   \n * onload 页面上所有的资源（图片，音频，视频等）被加载以后才会触发load事件\n   \n   \n * $(document).ready() 监听DOMContentLoaded事件\n   \n   \n * $(document).load() 监听的是 load 事件\n   \n   \n * 兼容\n   \n   \n\n\x3c!-- cc:ie6 快捷键 --\x3e\n\x3c!--[if lte IE 8]>\n  <script src="http://cdn.bootcss.com/html5shiv/r29/html5.js"><\/script>\n<![endif]--\x3e\n\n\n1\n2\n3\n4\n# DOM\n# 获取 DOM\ndocument.getElementById("id"); //通过id获取\ndocument.getElementsByTagName("tag"); //通过标签名获取\ndocument.getElementsByClassName("class"); //通过类名获取元素，以类数组形式存在。\ndocument.querySelector("selector"); //通过CSS选择器获取元素，符合匹配条件的第1个元素。\ndocument.querySelectorAll("selector"); //通过CSS选择器获取元素，以类数组形式存在。\n\n\n1\n2\n3\n4\n5\n# className\n// Node指一个有效的DOM节点\nNode.classList.add("class"); //添加class\nNode.classList.remove("class"); //移除class\nNode.classList.toggle("class"); //切换class，有则移除，无则添加\nNode.classList.contains("class"); //检测是否存在class\n\n\n1\n2\n3\n4\n5\n# 自定义属性 data-*\n * 设置自定义属性格式:data-*=""\n\n/*\ndata-info="我是自定义属性"\n\n通过Node.dataset[\'info\'] 我们便可以获取到自定义的属性值。\nNode.dataset是以类数组形式存在的\n\n当我们如下格式设置时，则需要以驼峰格式才能正确获取\nhtml: data-my-name="my"，js获取 Node.dataset[\'myName\']\n*/\n\nNode.dataset["name"]; // 获取\nNode.dataset["name"] = "nav"; // 设置\n\nNode.getAttribute(); //获取\nNode.setAttribute(`name`, value); //设置\nNode.removeAttribute(`name`); // 方法删除指定的属性\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# drag 拖拽\n * 我们可以通过为元素增加draggable="true"来设置此元素是否可以进行拖拽操作，其中图片、链接默认是开启的\n\n// 拖拽元素\n// 页面中设置了draggable="true"属性的元素\n// 页面中任何一个元素都可以成为目标元素\nondrag; // 应用于拖拽元素，整个拖拽过程都会调用\nondragstart; // 应用于拖拽元素，当拖拽开始时调用\nondragleave; // 应用于拖拽元素，当鼠标离开拖拽元素时调用\nondragend; // 应用于拖拽元素，当拖拽结束时调用\n\n// 目标元素\nondragenter; // 应用于目标元素，当拖拽元素进入时调用\nondragover; // 应用于目标元素，当停留在目标元素上时调用\nondrop; // 应用于目标元素，当在目标元素上松开鼠标时调用\nondragleave; //应用于目标元素，当鼠标离开目标元素时调用\n\n// 数据传递\nev.dataTransfer.setData(); // 设置数据\nev.dataTransfer.getData(); // 读取数据\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# History Api\nhistory.back(); // 回退\nhistory.forward(); // 前进\nhistory.go(n); // 前进/后退n步\nhistory.length; //历史记录条数\n/*\n追加一条历史记录\ndata 用于存储自定义数据，通常设为null\ntitle 网页标题，基本上没有被支持，一般设为空\nurl 以当前域为基础增加一条历史记录，不可跨域设置\n*/\npushState(data, title, url); //\n// 与pushState()基本相同，不同之处在于replaceState()，只是替换当前url，不会增加/减少历史记录。\nreplaceState(data, title, url);\n// 事件监听:  当前进或后退时则触发，通过事件对象ev.state可以读取到存储的数据\nwindow.addEventListener("popState", stat => {}, false);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# localStorage\n * localStorage 与 sessionStorage\n * window.sessionStorage容量约 5M ,生命周期为关闭浏览器窗口, 在同一个窗口下数据可以共享\n * window.localStorage容量约 20M, 永久生效，除非手动删除, 可以多窗口共享\n * localStorage.setItem(key, value) 设置存储内容\n * localStorage.getItem(key) 读取存储内容\n * localStorage.removeItem(key) 删除键值为 key 的存储内容\n * localStorage.clear() 清空所有存储内容\n * localStorage.key(n) 以索引值来获取存储内容\n\n# FullScreen\n * document.fullScreen 检测当前是否处于全屏\n * requestFullScreen() 开启全屏显示\n * cancleFullScreen() 关闭全屏显示\n * 不同浏览器需要添加前缀如 * webkitRequestFullScreen、mozRequestFullScreen\n    * webkitCancleFullScreen、mozCancleFullScreen\n   \n   \n * 不同浏览器需要添加前缀 document.webkitIsFullScreen、document.mozFullScreen\n * 全屏伪类 :full-screen .box {}、:-webkit-full-screen {}、:moz-full-screen {}\n\n<style>\n  .box {\n    width: 200px;\n    height: 200px;\n    background-color: red;\n  }\n</style>\n\n<div class="box"></div>\n<button class="btn">点击全屏</button>\n\n<script>\n  var btn = document.querySelector(".btn");\n  var box = document.querySelector(".box");\n  btn.addEventListener("click", function() {\n    // box.webkitRequestFullScreen();\n    document.documentElement.webkitRequestFullScreen();\n  });\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# noreferrer/noopener\n * a 链接noopener noreferrer nofollow\n\n<a\n  href="https://an.evil.site"\n  target="_blank"\n  rel="noopener noreferrer nofollow"\n  >a链接</a\n>\n\n\n1\n2\n3\n4\n5\n6',normalizedContent:'# html 和 xhtml\nhtml 是一种基本的 web 网页设计语言，xhtml 是一个基于 xml 的置标语言\n\n# 页面三层结构\n * 结构层html\n * 表现层css\n * 行为层javascript\n\n# 文档声明\n * <!doctype> 声明对大小写不敏感\n * <!doctype> 声明必须是 html 文档的第一行，位于 <html> 标签之前\n * <!doctype> 声明不是 html 标签；告诉浏览器以何种方式来渲染页面 * 这里有两种模式，严格模式和混杂模式。\n    * 严格模式的排版和 js 运作模式是 以该浏览器支持的最高标准运行\n    * 混杂模式，向后兼容，模拟老式浏览器，防止浏览器无法兼容页面\n   \n   \n\n# 文档类型定义（dtd）\n * html 5\n\n<!doctype html>\n\n\n1\n * html 4.01 strict\n\n<!doctype html public "-//w3c//dtd html 4.01//en" "http://www.w3.org/tr/html4/strict.dtd">\n\n\n1\n * html 4.01 transitional\n\n<!doctype html public "-//w3c//dtd html 4.01 transitional//en" "http://www.w3.org/tr/html4/loose.dtd">\n\n\n1\n * html 4.01 frameset\n\n<!doctype html public "-//w3c//dtd html 4.01 frameset//en" "http://www.w3.org/tr/html4/frameset.dtd">\n\n\n1\n# 页面加载事件\n * domcontentloaded dom 内容加载完毕\n   \n   \n * onload 页面上所有的资源（图片，音频，视频等）被加载以后才会触发load事件\n   \n   \n * $(document).ready() 监听domcontentloaded事件\n   \n   \n * $(document).load() 监听的是 load 事件\n   \n   \n * 兼容\n   \n   \n\n\x3c!-- cc:ie6 快捷键 --\x3e\n\x3c!--[if lte ie 8]>\n  <script src="http://cdn.bootcss.com/html5shiv/r29/html5.js"><\/script>\n<![endif]--\x3e\n\n\n1\n2\n3\n4\n# dom\n# 获取 dom\ndocument.getelementbyid("id"); //通过id获取\ndocument.getelementsbytagname("tag"); //通过标签名获取\ndocument.getelementsbyclassname("class"); //通过类名获取元素，以类数组形式存在。\ndocument.queryselector("selector"); //通过css选择器获取元素，符合匹配条件的第1个元素。\ndocument.queryselectorall("selector"); //通过css选择器获取元素，以类数组形式存在。\n\n\n1\n2\n3\n4\n5\n# classname\n// node指一个有效的dom节点\nnode.classlist.add("class"); //添加class\nnode.classlist.remove("class"); //移除class\nnode.classlist.toggle("class"); //切换class，有则移除，无则添加\nnode.classlist.contains("class"); //检测是否存在class\n\n\n1\n2\n3\n4\n5\n# 自定义属性 data-*\n * 设置自定义属性格式:data-*=""\n\n/*\ndata-info="我是自定义属性"\n\n通过node.dataset[\'info\'] 我们便可以获取到自定义的属性值。\nnode.dataset是以类数组形式存在的\n\n当我们如下格式设置时，则需要以驼峰格式才能正确获取\nhtml: data-my-name="my"，js获取 node.dataset[\'myname\']\n*/\n\nnode.dataset["name"]; // 获取\nnode.dataset["name"] = "nav"; // 设置\n\nnode.getattribute(); //获取\nnode.setattribute(`name`, value); //设置\nnode.removeattribute(`name`); // 方法删除指定的属性\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# drag 拖拽\n * 我们可以通过为元素增加draggable="true"来设置此元素是否可以进行拖拽操作，其中图片、链接默认是开启的\n\n// 拖拽元素\n// 页面中设置了draggable="true"属性的元素\n// 页面中任何一个元素都可以成为目标元素\nondrag; // 应用于拖拽元素，整个拖拽过程都会调用\nondragstart; // 应用于拖拽元素，当拖拽开始时调用\nondragleave; // 应用于拖拽元素，当鼠标离开拖拽元素时调用\nondragend; // 应用于拖拽元素，当拖拽结束时调用\n\n// 目标元素\nondragenter; // 应用于目标元素，当拖拽元素进入时调用\nondragover; // 应用于目标元素，当停留在目标元素上时调用\nondrop; // 应用于目标元素，当在目标元素上松开鼠标时调用\nondragleave; //应用于目标元素，当鼠标离开目标元素时调用\n\n// 数据传递\nev.datatransfer.setdata(); // 设置数据\nev.datatransfer.getdata(); // 读取数据\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# history api\nhistory.back(); // 回退\nhistory.forward(); // 前进\nhistory.go(n); // 前进/后退n步\nhistory.length; //历史记录条数\n/*\n追加一条历史记录\ndata 用于存储自定义数据，通常设为null\ntitle 网页标题，基本上没有被支持，一般设为空\nurl 以当前域为基础增加一条历史记录，不可跨域设置\n*/\npushstate(data, title, url); //\n// 与pushstate()基本相同，不同之处在于replacestate()，只是替换当前url，不会增加/减少历史记录。\nreplacestate(data, title, url);\n// 事件监听:  当前进或后退时则触发，通过事件对象ev.state可以读取到存储的数据\nwindow.addeventlistener("popstate", stat => {}, false);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n# localstorage\n * localstorage 与 sessionstorage\n * window.sessionstorage容量约 5m ,生命周期为关闭浏览器窗口, 在同一个窗口下数据可以共享\n * window.localstorage容量约 20m, 永久生效，除非手动删除, 可以多窗口共享\n * localstorage.setitem(key, value) 设置存储内容\n * localstorage.getitem(key) 读取存储内容\n * localstorage.removeitem(key) 删除键值为 key 的存储内容\n * localstorage.clear() 清空所有存储内容\n * localstorage.key(n) 以索引值来获取存储内容\n\n# fullscreen\n * document.fullscreen 检测当前是否处于全屏\n * requestfullscreen() 开启全屏显示\n * canclefullscreen() 关闭全屏显示\n * 不同浏览器需要添加前缀如 * webkitrequestfullscreen、mozrequestfullscreen\n    * webkitcanclefullscreen、mozcanclefullscreen\n   \n   \n * 不同浏览器需要添加前缀 document.webkitisfullscreen、document.mozfullscreen\n * 全屏伪类 :full-screen .box {}、:-webkit-full-screen {}、:moz-full-screen {}\n\n<style>\n  .box {\n    width: 200px;\n    height: 200px;\n    background-color: red;\n  }\n</style>\n\n<div class="box"></div>\n<button class="btn">点击全屏</button>\n\n<script>\n  var btn = document.queryselector(".btn");\n  var box = document.queryselector(".box");\n  btn.addeventlistener("click", function() {\n    // box.webkitrequestfullscreen();\n    document.documentelement.webkitrequestfullscreen();\n  });\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n# noreferrer/noopener\n * a 链接noopener noreferrer nofollow\n\n<a\n  href="https://an.evil.site"\n  target="_blank"\n  rel="noopener noreferrer nofollow"\n  >a链接</a\n>\n\n\n1\n2\n3\n4\n5\n6',charsets:{cjk:!0}},{title:"css预处理器less使用",frontmatter:{title:"css预处理器less使用",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",categories:["web"],tags:["less","1像素问题"],readingShow:"top"},regularPath:"/web/less/",relativePath:"web/less/readme.md",key:"v-373cc9a0",path:"/web/less/",headers:[{level:2,title:"基本使用",slug:"基本使用",normalizedTitle:"基本使用",charIndex:56},{level:2,title:"import",slug:"import",normalizedTitle:"import",charIndex:132},{level:2,title:"变量",slug:"变量",normalizedTitle:"变量",charIndex:497},{level:2,title:"混合",slug:"混合",normalizedTitle:"混合",charIndex:841},{level:2,title:"匹配模式",slug:"匹配模式",normalizedTitle:"匹配模式",charIndex:2165},{level:2,title:"嵌套用法",slug:"嵌套用法",normalizedTitle:"嵌套用法",charIndex:4003},{level:2,title:"argument 用法",slug:"argument-用法",normalizedTitle:"argument 用法",charIndex:4943},{level:2,title:"避免编译",slug:"避免编译",normalizedTitle:"避免编译",charIndex:5213},{level:2,title:"important 用法",slug:"important-用法",normalizedTitle:"important 用法",charIndex:5336},{level:2,title:"utils",slug:"utils",normalizedTitle:"utils",charIndex:5549}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"基本使用 import 变量 混合 匹配模式 嵌套用法 argument 用法 避免编译 important 用法 utils",content:" * lesscss\n * koala-app 编译器\n * online-less-compilers\n\n# 基本使用\nlessc styles.less > styles.css\nlessc -x styles.less styles.css\n\n\n1\n2\n# import\n// less 文件\n@charset 'utf-8';\n//导入less文件\n@import \"m\";\n//导入css文件:\n//注意导入的css文件位置与编译后css的位置是一致的\n@import (less) \"b.css\";\n\n//m.less\n.cless {\n  @red: red;\n  color: @red;\n}\n\n//b.css\n.bcss {\n  color: #ccc;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n//less编译后的对应css文件：\n@charset 'utf-8';\n.cless {\n  color: #ff0000;\n}\n.bcss {\n  color: #ccc;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 变量\n//less文件：\n@charset 'utf-8';\n/* 这是一个编译后看见的注释*/\n//这是一个编译后看不见的注释\n@_width: 300px;\n@red: red;\n\n.col {\n  //可重复声明使用不影响外调用\n  @red: #ccc;\n  color: @red;\n}\n.col2 {\n  color: @red;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n//less编译后的对应css文件：\n@charset 'utf-8';\n/* 这是一个编译后看见的注释*/\n.col {\n  color: #cccccc;\n}\n.col2 {\n  color: #ff0000;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 混合\n.bord {\n  border: 1px solid #000;\n}\n//例：\n.box {\n  width: @_width;\n  height: @_width;\n  background-color: @red;\n  .bord; //混合\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n//less编译后的对应css文件：\n.bord {\n  border: 1px solid #000;\n}\n.box {\n  width: 300px;\n  height: 300px;\n  background-color: #ff0000;\n  border: 1px solid #000;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 混合-带参数\n\n.border_02(@border_width) {\n  border: solid yellow @border_width;\n}\n//例：\n.border_hunhe {\n  width: @_width;\n  height: @_width;\n  .border_02(20px);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n//less编译后的对应css文件：\n.border_hunhe {\n  width: 300px;\n  height: 300px;\n  border: solid #ffff00 20px;\n}\n\n\n1\n2\n3\n4\n5\n6\n * 混合-默认值\n\n.border_03(@border_width:10px) {\n  border: @border_width solid green;\n}\n//例： 混合 不传值\n.border_hunhe2 {\n  .border_03();\n}\n//例： 混合 传值\n.border_hunhe21 {\n  .border_03(12px);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n//less编译后的对应css文件：\n.border_hunhe2 {\n  border: 10px solid #008000;\n}\n.border_hunhe21 {\n  border: 12px solid #008000;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n * 混合用法:默认值为变量\n\n@bdr: 10px;\n.border_04(@border_width:@bdr) {\n  border: @border_width solid @red;\n}\n//例： 混合 不传值\n.border_hunhe3 {\n  .border_04();\n}\n//例： 混合 传值\n.border_hunhe31 {\n  .border_04(13px);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n//less编译后的对应css文件：\n.border_hunhe3 {\n  border: 10px solid #ff0000;\n}\n.border_hunhe31 {\n  border: 13px solid #ff0000;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# 匹配模式\n/* 三角形 border */\n// 原文url:http://www.cnblogs.com/blosaa/p/3823695.html\n//上\n.trangle(top,@w:5px,@c:#ccc) {\n  border-width: @w;\n  border-color: transparent transparent @c transparent;\n  border-style: dashed dashed solid dashed;\n}\n//右\n.trangle(right,@w:5px,@c:#ccc) {\n  border-width: @w;\n  border-color: transparent transparent transparent @c;\n  border-style: dashed dashed dashed solid;\n}\n//下\n.trangle(bottom,@w:5px,@c:#ccc) {\n  border-width: @w;\n  border-color: @c transparent transparent transparent;\n  border-style: solid dashed dashed dashed;\n}\n//左\n.trangle(left,@w:5px,@c:#ccc) {\n  border-width: @w;\n  border-color: transparent @c transparent transparent;\n  border-style: dashed solid dashed dashed;\n}\n//匹配通用格式\n.trangle(@_,@w:5px,@c:#ccc) {\n  width: 0;\n  height: 0;\n  overflow: hidden;\n}\n//例：\n.sanjiao {\n  .trangle(right, 50px);\n}\n\n//例：传入错误值\n.sanjiao1 {\n  .trangle(dsa, 20px);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n//less编译后的对应css文件：\n/* 三角形 border */\n.sanjiao {\n  border-width: 50px;\n  border-color: transparent transparent transparent #cccccc;\n  border-style: dashed dashed dashed solid;\n  width: 0;\n  height: 0;\n  overflow: hidden;\n}\n.sanjiao1 {\n  width: 0;\n  height: 0;\n  overflow: hidden;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 运算: 其中一个带单位即可.注意:减法之间的格式;命名变量在运算中不可添加单位\n\n@w10: 100px;\n@h10: 120;\n.add {\n  width: @w10 + 10;\n  height: @h10 - 10px;\n  color: #666 / 2; //可用,不建议\n}\n.add2 {\n  width: @w10 + 12/2;\n  height: (@h10 - 10) * 2px;\n}\n\n.add3 {\n  width: @w10 + 10px;\n  height: @h10 / 3 * 3px - 6+4;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n//less编译后的对应css文件：\n.add {\n  width: 110px;\n  height: 110px;\n  color: #333333;\n}\n.add2 {\n  width: 106px;\n  height: 220px;\n}\n.add3 {\n  width: 110px;\n  height: 118px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 嵌套用法\nul {\n  width: 100px;\n  //margin: 10px auto;\n  li {\n    width: 100px;\n    float: left;\n    border-bottom: 1px solid #ccc / 2;\n  }\n  a {\n    width: 100px;\n    color: red;\n    display: block;\n    //& 上一层选择器的名\n    &:hover {\n      color: blue;\n    }\n    span {\n      font-weight: bold;\n      font-size: 18px;\n      float: right;\n      color: #85ada7;\n    }\n  }\n}\n// $的用法\n.tit {\n  width: 100px;\n  &_n {\n    width: 100px;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n//less编译后的对应css文件：\nul {\n  width: 100px;\n}\nul li {\n  width: 100px;\n  float: left;\n  border-bottom: 1px solid #666666;\n}\nul a {\n  width: 100px;\n  color: red;\n  display: block;\n}\nul a:hover {\n  color: blue;\n}\nul a span {\n  font-weight: bold;\n  font-size: 18px;\n  float: right;\n  color: #85ada7;\n}\n.tit {\n  width: 100px;\n}\n.tit_n {\n  width: 100px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# argument 用法\n.brd2(@c:#ccc,@w:10px,@solid:solid) {\n  border: @arguments;\n}\n.bor2 {\n  .brd2();\n}\n//注意参数对应\n.bor21 {\n  .brd2(red);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n//less编译后的对应css文件：\n.bor2 {\n  border: #cccccc 10px solid;\n}\n.bor21 {\n  border: #ff0000 10px solid;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# 避免编译\n.wid {\n  width: ~\"calc(100px - 20px)\";\n}\n\n\n1\n2\n3\n//less编译后的对应css文件：\n.wid {\n  width: calc(100px - 20px);\n}\n\n\n1\n2\n3\n4\n# important 用法\n.impor(@w:10px,@h:10px) {\n  width: @w;\n  height: @h;\n}\n.im_a {\n  .impor() !important;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n//less编译后的对应css文件：\n.im_a {\n  width: 10px !important;\n  height: 10px !important;\n}\n\n\n1\n2\n3\n4\n5\n# utils\n// - less border 1px\n\n.min-device-pixel-ratio(@scale2, @scale3) {\n  @media screen and (min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2) {\n    transform: @scale2;\n  }\n  @media screen and (min-device-pixel-ratio: 3), (-webkit-min-device-pixel-ratio: 3) {\n    transform: @scale3;\n  }\n}\n\n.border-1px(@color: #DDD, @radius: 2PX, @style: solid) {\n  &::before {\n    content: \"\";\n    pointer-events: none;\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    transform-origin: 0 0;\n    border: 1PX @style @color;\n    border-radius: @radius;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    @media screen and (min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2) {\n      width: 200%;\n      height: 200%;\n      border-radius: @radius * 2;\n      transform: scale(.5);\n    }\n    @media screen and (min-device-pixel-ratio: 3), (-webkit-min-device-pixel-ratio: 3) {\n      width: 300%;\n      height: 300%;\n      border-radius: @radius * 3;\n      transform: scale(.33);\n    }\n  }\n}\n\n.border-top-1px(@color: #DDD, @style: solid) {\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    border-top: 1Px @style @color;\n    transform-origin: 0 0;\n    .min-device-pixel-ratio(scaleY(.5), scaleY(.33));\n  }\n}\n\n// - 多行显示\n\n.line-camp( @clamp:2 ) {\n    text-overflow: -o-ellipsis-lastline;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: @clamp;\n    -webkit-box-orient: vertical;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n@lignt-gray-color: #ccc;\n\n.border-radius(@radius: 0){\n  border-radius: @radius;\n}\n.border(\n    @borderWidth: 1px;\n    @borderStyle: solid;\n    @borderColor: @lignt-gray-color;\n    @borderRadius: 0) {\n    position: relative;\n    &:before {\n        content: '';\n        position: absolute;\n        width: 98%;\n        height: 98%;\n        top: 0;\n        left: 0;\n        transform-origin: left top;\n        -webkit-transform-origin: left top;\n        box-sizing: border-box;\n        pointer-events: none;\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n        &:before {\n            width: 200%;\n            height: 200%;\n            -webkit-transform: scale(.5);\n        }\n    }\n    @media (-webkit-min-device-pixel-ratio: 2.5) {\n        &:before {\n            width: 250%;\n            height: 250%;\n            -webkit-transform: scale(.4);\n        }\n    }\n    @media (-webkit-min-device-pixel-ratio: 2.75) {\n        &:before {\n            width: 275%;\n            height: 275%;\n            -webkit-transform: scale(1 / 2.75);\n        }\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n        &:before {\n            width: 300%;\n            height: 300%;\n            transform: scale(1 / 3);\n            -webkit-transform: scale(1 / 3);\n        }\n    }\n   .border-radius(@borderRadius);\n    &:before {\n        border-width: @borderWidth;\n        border-style: @borderStyle;\n        border-color: @borderColor;\n    }\n}\n\n.border-all(\n\t@borderWidth: 1px;\n\t@borderStyle: solid;\n\t@borderColor: @lignt-gray-color;\n\t@borderRadius: 0) {\n    .border(@borderWidth; @borderStyle; @borderColor; @borderRadius);\n}\n\n.box{\n   .border-all();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71",normalizedContent:" * lesscss\n * koala-app 编译器\n * online-less-compilers\n\n# 基本使用\nlessc styles.less > styles.css\nlessc -x styles.less styles.css\n\n\n1\n2\n# import\n// less 文件\n@charset 'utf-8';\n//导入less文件\n@import \"m\";\n//导入css文件:\n//注意导入的css文件位置与编译后css的位置是一致的\n@import (less) \"b.css\";\n\n//m.less\n.cless {\n  @red: red;\n  color: @red;\n}\n\n//b.css\n.bcss {\n  color: #ccc;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n//less编译后的对应css文件：\n@charset 'utf-8';\n.cless {\n  color: #ff0000;\n}\n.bcss {\n  color: #ccc;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# 变量\n//less文件：\n@charset 'utf-8';\n/* 这是一个编译后看见的注释*/\n//这是一个编译后看不见的注释\n@_width: 300px;\n@red: red;\n\n.col {\n  //可重复声明使用不影响外调用\n  @red: #ccc;\n  color: @red;\n}\n.col2 {\n  color: @red;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n//less编译后的对应css文件：\n@charset 'utf-8';\n/* 这是一个编译后看见的注释*/\n.col {\n  color: #cccccc;\n}\n.col2 {\n  color: #ff0000;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# 混合\n.bord {\n  border: 1px solid #000;\n}\n//例：\n.box {\n  width: @_width;\n  height: @_width;\n  background-color: @red;\n  .bord; //混合\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n//less编译后的对应css文件：\n.bord {\n  border: 1px solid #000;\n}\n.box {\n  width: 300px;\n  height: 300px;\n  background-color: #ff0000;\n  border: 1px solid #000;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 混合-带参数\n\n.border_02(@border_width) {\n  border: solid yellow @border_width;\n}\n//例：\n.border_hunhe {\n  width: @_width;\n  height: @_width;\n  .border_02(20px);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n//less编译后的对应css文件：\n.border_hunhe {\n  width: 300px;\n  height: 300px;\n  border: solid #ffff00 20px;\n}\n\n\n1\n2\n3\n4\n5\n6\n * 混合-默认值\n\n.border_03(@border_width:10px) {\n  border: @border_width solid green;\n}\n//例： 混合 不传值\n.border_hunhe2 {\n  .border_03();\n}\n//例： 混合 传值\n.border_hunhe21 {\n  .border_03(12px);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n//less编译后的对应css文件：\n.border_hunhe2 {\n  border: 10px solid #008000;\n}\n.border_hunhe21 {\n  border: 12px solid #008000;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n * 混合用法:默认值为变量\n\n@bdr: 10px;\n.border_04(@border_width:@bdr) {\n  border: @border_width solid @red;\n}\n//例： 混合 不传值\n.border_hunhe3 {\n  .border_04();\n}\n//例： 混合 传值\n.border_hunhe31 {\n  .border_04(13px);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n//less编译后的对应css文件：\n.border_hunhe3 {\n  border: 10px solid #ff0000;\n}\n.border_hunhe31 {\n  border: 13px solid #ff0000;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# 匹配模式\n/* 三角形 border */\n// 原文url:http://www.cnblogs.com/blosaa/p/3823695.html\n//上\n.trangle(top,@w:5px,@c:#ccc) {\n  border-width: @w;\n  border-color: transparent transparent @c transparent;\n  border-style: dashed dashed solid dashed;\n}\n//右\n.trangle(right,@w:5px,@c:#ccc) {\n  border-width: @w;\n  border-color: transparent transparent transparent @c;\n  border-style: dashed dashed dashed solid;\n}\n//下\n.trangle(bottom,@w:5px,@c:#ccc) {\n  border-width: @w;\n  border-color: @c transparent transparent transparent;\n  border-style: solid dashed dashed dashed;\n}\n//左\n.trangle(left,@w:5px,@c:#ccc) {\n  border-width: @w;\n  border-color: transparent @c transparent transparent;\n  border-style: dashed solid dashed dashed;\n}\n//匹配通用格式\n.trangle(@_,@w:5px,@c:#ccc) {\n  width: 0;\n  height: 0;\n  overflow: hidden;\n}\n//例：\n.sanjiao {\n  .trangle(right, 50px);\n}\n\n//例：传入错误值\n.sanjiao1 {\n  .trangle(dsa, 20px);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n//less编译后的对应css文件：\n/* 三角形 border */\n.sanjiao {\n  border-width: 50px;\n  border-color: transparent transparent transparent #cccccc;\n  border-style: dashed dashed dashed solid;\n  width: 0;\n  height: 0;\n  overflow: hidden;\n}\n.sanjiao1 {\n  width: 0;\n  height: 0;\n  overflow: hidden;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * 运算: 其中一个带单位即可.注意:减法之间的格式;命名变量在运算中不可添加单位\n\n@w10: 100px;\n@h10: 120;\n.add {\n  width: @w10 + 10;\n  height: @h10 - 10px;\n  color: #666 / 2; //可用,不建议\n}\n.add2 {\n  width: @w10 + 12/2;\n  height: (@h10 - 10) * 2px;\n}\n\n.add3 {\n  width: @w10 + 10px;\n  height: @h10 / 3 * 3px - 6+4;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n//less编译后的对应css文件：\n.add {\n  width: 110px;\n  height: 110px;\n  color: #333333;\n}\n.add2 {\n  width: 106px;\n  height: 220px;\n}\n.add3 {\n  width: 110px;\n  height: 118px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 嵌套用法\nul {\n  width: 100px;\n  //margin: 10px auto;\n  li {\n    width: 100px;\n    float: left;\n    border-bottom: 1px solid #ccc / 2;\n  }\n  a {\n    width: 100px;\n    color: red;\n    display: block;\n    //& 上一层选择器的名\n    &:hover {\n      color: blue;\n    }\n    span {\n      font-weight: bold;\n      font-size: 18px;\n      float: right;\n      color: #85ada7;\n    }\n  }\n}\n// $的用法\n.tit {\n  width: 100px;\n  &_n {\n    width: 100px;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n//less编译后的对应css文件：\nul {\n  width: 100px;\n}\nul li {\n  width: 100px;\n  float: left;\n  border-bottom: 1px solid #666666;\n}\nul a {\n  width: 100px;\n  color: red;\n  display: block;\n}\nul a:hover {\n  color: blue;\n}\nul a span {\n  font-weight: bold;\n  font-size: 18px;\n  float: right;\n  color: #85ada7;\n}\n.tit {\n  width: 100px;\n}\n.tit_n {\n  width: 100px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n# argument 用法\n.brd2(@c:#ccc,@w:10px,@solid:solid) {\n  border: @arguments;\n}\n.bor2 {\n  .brd2();\n}\n//注意参数对应\n.bor21 {\n  .brd2(red);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n//less编译后的对应css文件：\n.bor2 {\n  border: #cccccc 10px solid;\n}\n.bor21 {\n  border: #ff0000 10px solid;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n# 避免编译\n.wid {\n  width: ~\"calc(100px - 20px)\";\n}\n\n\n1\n2\n3\n//less编译后的对应css文件：\n.wid {\n  width: calc(100px - 20px);\n}\n\n\n1\n2\n3\n4\n# important 用法\n.impor(@w:10px,@h:10px) {\n  width: @w;\n  height: @h;\n}\n.im_a {\n  .impor() !important;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n//less编译后的对应css文件：\n.im_a {\n  width: 10px !important;\n  height: 10px !important;\n}\n\n\n1\n2\n3\n4\n5\n# utils\n// - less border 1px\n\n.min-device-pixel-ratio(@scale2, @scale3) {\n  @media screen and (min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2) {\n    transform: @scale2;\n  }\n  @media screen and (min-device-pixel-ratio: 3), (-webkit-min-device-pixel-ratio: 3) {\n    transform: @scale3;\n  }\n}\n\n.border-1px(@color: #ddd, @radius: 2px, @style: solid) {\n  &::before {\n    content: \"\";\n    pointer-events: none;\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    transform-origin: 0 0;\n    border: 1px @style @color;\n    border-radius: @radius;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    @media screen and (min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2) {\n      width: 200%;\n      height: 200%;\n      border-radius: @radius * 2;\n      transform: scale(.5);\n    }\n    @media screen and (min-device-pixel-ratio: 3), (-webkit-min-device-pixel-ratio: 3) {\n      width: 300%;\n      height: 300%;\n      border-radius: @radius * 3;\n      transform: scale(.33);\n    }\n  }\n}\n\n.border-top-1px(@color: #ddd, @style: solid) {\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    border-top: 1px @style @color;\n    transform-origin: 0 0;\n    .min-device-pixel-ratio(scaley(.5), scaley(.33));\n  }\n}\n\n// - 多行显示\n\n.line-camp( @clamp:2 ) {\n    text-overflow: -o-ellipsis-lastline;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: @clamp;\n    -webkit-box-orient: vertical;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n@lignt-gray-color: #ccc;\n\n.border-radius(@radius: 0){\n  border-radius: @radius;\n}\n.border(\n    @borderwidth: 1px;\n    @borderstyle: solid;\n    @bordercolor: @lignt-gray-color;\n    @borderradius: 0) {\n    position: relative;\n    &:before {\n        content: '';\n        position: absolute;\n        width: 98%;\n        height: 98%;\n        top: 0;\n        left: 0;\n        transform-origin: left top;\n        -webkit-transform-origin: left top;\n        box-sizing: border-box;\n        pointer-events: none;\n    }\n    @media (-webkit-min-device-pixel-ratio: 2) {\n        &:before {\n            width: 200%;\n            height: 200%;\n            -webkit-transform: scale(.5);\n        }\n    }\n    @media (-webkit-min-device-pixel-ratio: 2.5) {\n        &:before {\n            width: 250%;\n            height: 250%;\n            -webkit-transform: scale(.4);\n        }\n    }\n    @media (-webkit-min-device-pixel-ratio: 2.75) {\n        &:before {\n            width: 275%;\n            height: 275%;\n            -webkit-transform: scale(1 / 2.75);\n        }\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n        &:before {\n            width: 300%;\n            height: 300%;\n            transform: scale(1 / 3);\n            -webkit-transform: scale(1 / 3);\n        }\n    }\n   .border-radius(@borderradius);\n    &:before {\n        border-width: @borderwidth;\n        border-style: @borderstyle;\n        border-color: @bordercolor;\n    }\n}\n\n.border-all(\n\t@borderwidth: 1px;\n\t@borderstyle: solid;\n\t@bordercolor: @lignt-gray-color;\n\t@borderradius: 0) {\n    .border(@borderwidth; @borderstyle; @bordercolor; @borderradius);\n}\n\n.box{\n   .border-all();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71",charsets:{cjk:!0}},{title:"使用rem和viewport的注意事项",frontmatter:{title:"使用rem和viewport的注意事项",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",categories:["web"],tags:["viewport","rem"],readingShow:"top"},regularPath:"/web/rem.html",relativePath:"web/rem.md",key:"v-26103f0b",path:"/web/rem.html",headers:[{level:2,title:"dpr",slug:"dpr",normalizedTitle:"dpr",charIndex:2},{level:2,title:"viewport",slug:"viewport",normalizedTitle:"viewport",charIndex:337},{level:2,title:"viewport 设置",slug:"viewport-设置",normalizedTitle:"viewport 设置",charIndex:581},{level:2,title:"rem 示例 1",slug:"rem-示例-1",normalizedTitle:"rem 示例 1",charIndex:881},{level:2,title:"rem 示例 2",slug:"rem-示例-2",normalizedTitle:"rem 示例 2",charIndex:1670},{level:2,title:"根据 dpr 选择图片",slug:"根据-dpr-选择图片",normalizedTitle:"根据 dpr 选择图片",charIndex:4166},{level:2,title:"根据 dpr 设置 font-size",slug:"根据-dpr-设置-font-size",normalizedTitle:"根据 dpr 设置 font-size",charIndex:4627},{level:2,title:"dpr 设置容器大小",slug:"dpr-设置容器大小",normalizedTitle:"dpr 设置容器大小",charIndex:4967},{level:2,title:"pxtorem",slug:"pxtorem",normalizedTitle:"pxtorem",charIndex:5763},{level:2,title:"vw 和 vh",slug:"vw-和-vh",normalizedTitle:"vw 和 vh",charIndex:6814},{level:2,title:"相关链接",slug:"相关链接",normalizedTitle:"相关链接",charIndex:6853}],lastUpdated:"2020/8/3 上午10:17:07",headersStr:"dpr viewport viewport 设置 rem 示例 1 rem 示例 2 根据 dpr 选择图片 根据 dpr 设置 font-size dpr 设置容器大小 pxtorem vw 和 vh 相关链接",content:'# dpr\n * dpr: 物理像素数和 css 像素被称为设备像素比\n * dpr 的值，js 通过window.devicePixelRadio获取\n * dpr 的值，css 通过-webkit-device-pixel-ratio | -webkit-min-device-pixel-ratio | -webkit-max-device-pixel-ratio获取\n * 物理像素（physical pixel）: 手机屏幕上显示的最小单元\n * 设备独立像素（density-indenpendent pixel）: 逻辑像素(css 像素数)\n * 设备像素比（device pixel ratio）: 设备像素比(dpr) = 物理像素/设备独立像素\n\n# viewport\n * 移动端适配总结@juejin\n * layoutviewport: 大于实际屏幕,通过 document.documentElement.clientWidth 获取\n * visualviewport: 当前显示在屏幕上的页面，即浏览器可视区域的宽度\n * idealviewport: 为浏览器定义的可完美适配移动端的理想 viewport，固定不变，可以认为是设备视口宽度。比如 iphone 7 为 375px, iphone 7p 为 414px\n\n# viewport 设置\n * head meta\n\n<meta\n  name="viewport"\n  content="width=device-width,initial-scale=1,user-scale=no"\n/>\n\n\n1\n2\n3\n4\n * width 设置的是 layoutviewport 的宽度\n * initial-scale 设置页面的初始缩放值，并且这个初始缩放值是相对于 idealviewport 缩放的，最终得到的结果不仅会决定 visualviewport，还会影响到 layoutviewport\n * user-scalable 是否允许用户进行缩放的设置\n\n# rem 示例 1\n * js\n\n// 动态计算 页面宽度/一个比例值（比如 10 或者 15）= 1rem\n\n// iphone6: 750; 分成100份 1rem = 750/100 即 html 的宽度为 7.5rem（750 / 100）\n// html(font-size) = deviceWidth / 7.5\n\n(function() {\n  document.addEventListener(\n    "DOMContentLoaded",\n    function(e) {\n      document.getElementsByTagName("html")[0].style.fontSize =\n        window.innerWidth / 7.5 + "px";\n    },\n    false\n  );\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * scss\n\n/* 单位px转化为rem */\n@function px2rem($px) {\n  @return #{$px / 100}rem;\n}\n\n/* 设置字体大小，不使用rem单位， 根据dpr值分段调整 */\n@mixin font-size($fontSize) {\n  font-size: $fontSize / $design-dpr;\n\n  [data-dpr="2"] & {\n    font-size: $fontSize / $design-dpr * 2;\n  }\n\n  [data-dpr="3"] & {\n    font-size: $fontSize / $design-dpr * 3;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# rem 示例 2\n * js\n\n!(function() {\n  var docElem = document.documentElement,\n    metaElem = document.querySelector(\'meta[name="viewport"]\'),\n    dpr = window.devicePixelRatio || 1,\n    // 将页面分为10块\n    blocks = 10,\n    // 需要限制的最小宽度\n    defaultMinWidth = 320,\n    // 需要限制的最大宽度\n    defaultMaxWidth = 540,\n    // 计算的基准值\n    calcMaxWidth = 9999999;\n\n  if (!metaElem) {\n    metaElem = initMetaViewport();\n  }\n\n  if (metaElem.getAttribute("data-content-max") !== null) {\n    calcMaxWidth = defaultMaxWidth;\n  }\n\n  // 确保meta[name="viewport"]存在\n  function initMetaViewport() {\n    var meta = document.createElement("meta");\n\n    meta.setAttribute("name", "viewport");\n    meta.setAttribute(\n      "content",\n      "width=device-width,initial-scale=1,user-scalable=no"\n    );\n    document.head.appendChild(meta);\n\n    return meta;\n  }\n\n  // 大部分dpr为2以下的安卓机型不识别scale，需设置不缩放\n  if (navigator.appVersion.match(/android/gi) && dpr <= 2) {\n    dpr = 1;\n  }\n\n  setScale(dpr);\n\n  // 企业QQ设置了scale后，不能完全识别scale（此时clientWidth未收到缩放的影响而翻倍），需设置不缩放\n  if (navigator.appVersion.match(/qq\\//gi) && docElem.clientWidth <= 360) {\n    dpr = 1;\n    setScale(dpr);\n  }\n\n  docElem.setAttribute("data-dpr", dpr);\n\n  // 设置缩放\n  function setScale(dpr) {\n    metaElem.setAttribute(\n      "content",\n      "initial-scale=" +\n        1 / dpr +\n        ",maximum-scale=" +\n        1 / dpr +\n        ",minimum-scale=" +\n        1 / dpr +\n        ",user-scalable=no"\n    );\n  }\n\n  // 设置docElem字体大小\n  function setFontSize() {\n    var clientWidth = docElem.clientWidth;\n\n    clientWidth = Math.max(clientWidth, defaultMinWidth * dpr);\n\n    // 调整计算基准值\n    if (calcMaxWidth === defaultMaxWidth) {\n      clientWidth = Math.min(clientWidth, defaultMaxWidth * dpr);\n    }\n\n    docElem.style.fontSize = clientWidth / blocks + "px";\n  }\n\n  setFontSize();\n\n  window.addEventListener(\n    window.orientationchange ? "orientationchange" : "resize",\n    setFontSize,\n    false\n  );\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n * px 和 rem\n\n/* 移动端页面设计稿宽度 */\n$design-width: 750;\n/* 将移动端页面分为10块 */\n$blocks: 10;\n\n/* 单位px转化为rem */\n@function px2rem($px) {\n  @return #{$px / $design-width * $blocks}rem;\n}\n\n/* 单位rem转化为px，可用于根据rem单位快速计算原px */\n@function rem2px($rem) {\n  @return #{$rem / $blocks * $design-width}px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 根据 dpr 选择图片\n@mixin bg(url, type) {\n  background-image: url(url+"."+type);\n\n  @media only screen and (-webkit-min-device-pixel-ratio: 2) {\n    background-image: url(url+"@2x."+type);\n  }\n\n  @media only screen and (-webkit-min-device-pixel-ratio: 3) {\n    background-image: url(url+"@3x."+type);\n  }\n}\n\n#test {\n  width: 100px;\n  height: 100px;\n  background-color: yellow;\n  @include bg("../assets/test", "jpg");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 根据 dpr 设置 font-size\n * 设置字体大小，不使用 rem 单位，根据 dpr 值分段调整\n\n/* 移动端页面设计稿dpr基准值 */\n$design-dpr: 2;\n\n@mixin font-size($fontSize) {\n  font-size: $fontSize / $design-dpr;\n\n  [data-dpr="2"] & {\n    font-size: $fontSize / $design-dpr * 2;\n  }\n\n  [data-dpr="3"] & {\n    font-size: $fontSize / $design-dpr * 3;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# dpr 设置容器大小\n/* 缩放所支持的设备最小宽度 */\n$min-device-width: 320px;\n/* 缩放所支持的设备最大宽度 */\n$max-device-width: 540px;\n\n/* 设置容器拉伸的最小宽度 */\n@mixin container-min-width() {\n  margin-right: auto;\n  margin-left: auto;\n  min-width: $min-device-width;\n\n  @media (-webkit-device-pixel-ratio: 2) {\n    min-width: $min-device-width * 2;\n  }\n\n  @media (-webkit-device-pixel-ratio: 3) {\n    min-width: $min-device-width * 3;\n  }\n}\n\n/* 设置容器拉伸的最大宽度 */\n@mixin container-max-width() {\n  margin-right: auto;\n  margin-left: auto;\n  max-width: $max-device-width;\n\n  @media (-webkit-device-pixel-ratio: 2) {\n    max-width: $max-device-width * 2;\n  }\n\n  @media (-webkit-device-pixel-ratio: 3) {\n    max-width: $max-device-width * 3;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# pxtorem\n * postcss-px-to-viewport\n   \n   \n * postcss-pxtorem\n   \n   \n * 项目目录\n   \n   \n\n├── gulpfile.js\n├── output\n├── package-lock.json\n├── package.json\n└── src\n    ├── index.js\n    ├── m\n    │   └── m.css\n    ├── other\n    │   ├── m\n    │   │   └── other-m.css\n    │   └── pc\n    │       └── other-pc.css\n    └── pc\n        └── pc.css\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * gulpfile.js\n\n// 将 `src/xxx/m/xxx.css`转换为rem\n\nconst { src, dest } = require(\'gulp\');\nvar postcss = require(\'gulp-postcss\');\nvar pxtorem = require(\'postcss-pxtorem\');\nexports.default = function() {\n    // https://github.com/cuth/postcss-pxtorem 配置\n    var processors = [\n        pxtorem({\n            replace: true,\n            propList: [\'*\'],\n            exclude: function(path) {\n                const matchPath = /src\\/(.+\\/)*m\\//.test(path)\n                return !matchPath\n            }\n        })\n    ];\n\n    return src(\'src/**/*.css\')\n        .pipe(postcss(processors))\n        .pipe(dest(\'output/css\'));\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# vw 和 vh\n * 如何在 Vue 项目中使用 vw 实现移动端适配\n\n# 相关链接\n * 移动 web 适配之 rem\n * 使用 Flexible 实现手淘 H5 页面的终端适配\n * 响应式布局的常用解决方案对比(媒体查询、百分比、rem 和 vw/vh） #13\n * 物理像素 Device-Viewport-and-Pixel-Introduction\n * 如何在 Vue 项目中使用 vw 实现移动端适配\n * 物理像素与 css 像素\n * CSS 像素、物理像素、逻辑像素、设备像素比、PPI、Viewport #21',normalizedContent:'# dpr\n * dpr: 物理像素数和 css 像素被称为设备像素比\n * dpr 的值，js 通过window.devicepixelradio获取\n * dpr 的值，css 通过-webkit-device-pixel-ratio | -webkit-min-device-pixel-ratio | -webkit-max-device-pixel-ratio获取\n * 物理像素（physical pixel）: 手机屏幕上显示的最小单元\n * 设备独立像素（density-indenpendent pixel）: 逻辑像素(css 像素数)\n * 设备像素比（device pixel ratio）: 设备像素比(dpr) = 物理像素/设备独立像素\n\n# viewport\n * 移动端适配总结@juejin\n * layoutviewport: 大于实际屏幕,通过 document.documentelement.clientwidth 获取\n * visualviewport: 当前显示在屏幕上的页面，即浏览器可视区域的宽度\n * idealviewport: 为浏览器定义的可完美适配移动端的理想 viewport，固定不变，可以认为是设备视口宽度。比如 iphone 7 为 375px, iphone 7p 为 414px\n\n# viewport 设置\n * head meta\n\n<meta\n  name="viewport"\n  content="width=device-width,initial-scale=1,user-scale=no"\n/>\n\n\n1\n2\n3\n4\n * width 设置的是 layoutviewport 的宽度\n * initial-scale 设置页面的初始缩放值，并且这个初始缩放值是相对于 idealviewport 缩放的，最终得到的结果不仅会决定 visualviewport，还会影响到 layoutviewport\n * user-scalable 是否允许用户进行缩放的设置\n\n# rem 示例 1\n * js\n\n// 动态计算 页面宽度/一个比例值（比如 10 或者 15）= 1rem\n\n// iphone6: 750; 分成100份 1rem = 750/100 即 html 的宽度为 7.5rem（750 / 100）\n// html(font-size) = devicewidth / 7.5\n\n(function() {\n  document.addeventlistener(\n    "domcontentloaded",\n    function(e) {\n      document.getelementsbytagname("html")[0].style.fontsize =\n        window.innerwidth / 7.5 + "px";\n    },\n    false\n  );\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * scss\n\n/* 单位px转化为rem */\n@function px2rem($px) {\n  @return #{$px / 100}rem;\n}\n\n/* 设置字体大小，不使用rem单位， 根据dpr值分段调整 */\n@mixin font-size($fontsize) {\n  font-size: $fontsize / $design-dpr;\n\n  [data-dpr="2"] & {\n    font-size: $fontsize / $design-dpr * 2;\n  }\n\n  [data-dpr="3"] & {\n    font-size: $fontsize / $design-dpr * 3;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# rem 示例 2\n * js\n\n!(function() {\n  var docelem = document.documentelement,\n    metaelem = document.queryselector(\'meta[name="viewport"]\'),\n    dpr = window.devicepixelratio || 1,\n    // 将页面分为10块\n    blocks = 10,\n    // 需要限制的最小宽度\n    defaultminwidth = 320,\n    // 需要限制的最大宽度\n    defaultmaxwidth = 540,\n    // 计算的基准值\n    calcmaxwidth = 9999999;\n\n  if (!metaelem) {\n    metaelem = initmetaviewport();\n  }\n\n  if (metaelem.getattribute("data-content-max") !== null) {\n    calcmaxwidth = defaultmaxwidth;\n  }\n\n  // 确保meta[name="viewport"]存在\n  function initmetaviewport() {\n    var meta = document.createelement("meta");\n\n    meta.setattribute("name", "viewport");\n    meta.setattribute(\n      "content",\n      "width=device-width,initial-scale=1,user-scalable=no"\n    );\n    document.head.appendchild(meta);\n\n    return meta;\n  }\n\n  // 大部分dpr为2以下的安卓机型不识别scale，需设置不缩放\n  if (navigator.appversion.match(/android/gi) && dpr <= 2) {\n    dpr = 1;\n  }\n\n  setscale(dpr);\n\n  // 企业qq设置了scale后，不能完全识别scale（此时clientwidth未收到缩放的影响而翻倍），需设置不缩放\n  if (navigator.appversion.match(/qq\\//gi) && docelem.clientwidth <= 360) {\n    dpr = 1;\n    setscale(dpr);\n  }\n\n  docelem.setattribute("data-dpr", dpr);\n\n  // 设置缩放\n  function setscale(dpr) {\n    metaelem.setattribute(\n      "content",\n      "initial-scale=" +\n        1 / dpr +\n        ",maximum-scale=" +\n        1 / dpr +\n        ",minimum-scale=" +\n        1 / dpr +\n        ",user-scalable=no"\n    );\n  }\n\n  // 设置docelem字体大小\n  function setfontsize() {\n    var clientwidth = docelem.clientwidth;\n\n    clientwidth = math.max(clientwidth, defaultminwidth * dpr);\n\n    // 调整计算基准值\n    if (calcmaxwidth === defaultmaxwidth) {\n      clientwidth = math.min(clientwidth, defaultmaxwidth * dpr);\n    }\n\n    docelem.style.fontsize = clientwidth / blocks + "px";\n  }\n\n  setfontsize();\n\n  window.addeventlistener(\n    window.orientationchange ? "orientationchange" : "resize",\n    setfontsize,\n    false\n  );\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n * px 和 rem\n\n/* 移动端页面设计稿宽度 */\n$design-width: 750;\n/* 将移动端页面分为10块 */\n$blocks: 10;\n\n/* 单位px转化为rem */\n@function px2rem($px) {\n  @return #{$px / $design-width * $blocks}rem;\n}\n\n/* 单位rem转化为px，可用于根据rem单位快速计算原px */\n@function rem2px($rem) {\n  @return #{$rem / $blocks * $design-width}px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# 根据 dpr 选择图片\n@mixin bg(url, type) {\n  background-image: url(url+"."+type);\n\n  @media only screen and (-webkit-min-device-pixel-ratio: 2) {\n    background-image: url(url+"@2x."+type);\n  }\n\n  @media only screen and (-webkit-min-device-pixel-ratio: 3) {\n    background-image: url(url+"@3x."+type);\n  }\n}\n\n#test {\n  width: 100px;\n  height: 100px;\n  background-color: yellow;\n  @include bg("../assets/test", "jpg");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n# 根据 dpr 设置 font-size\n * 设置字体大小，不使用 rem 单位，根据 dpr 值分段调整\n\n/* 移动端页面设计稿dpr基准值 */\n$design-dpr: 2;\n\n@mixin font-size($fontsize) {\n  font-size: $fontsize / $design-dpr;\n\n  [data-dpr="2"] & {\n    font-size: $fontsize / $design-dpr * 2;\n  }\n\n  [data-dpr="3"] & {\n    font-size: $fontsize / $design-dpr * 3;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n# dpr 设置容器大小\n/* 缩放所支持的设备最小宽度 */\n$min-device-width: 320px;\n/* 缩放所支持的设备最大宽度 */\n$max-device-width: 540px;\n\n/* 设置容器拉伸的最小宽度 */\n@mixin container-min-width() {\n  margin-right: auto;\n  margin-left: auto;\n  min-width: $min-device-width;\n\n  @media (-webkit-device-pixel-ratio: 2) {\n    min-width: $min-device-width * 2;\n  }\n\n  @media (-webkit-device-pixel-ratio: 3) {\n    min-width: $min-device-width * 3;\n  }\n}\n\n/* 设置容器拉伸的最大宽度 */\n@mixin container-max-width() {\n  margin-right: auto;\n  margin-left: auto;\n  max-width: $max-device-width;\n\n  @media (-webkit-device-pixel-ratio: 2) {\n    max-width: $max-device-width * 2;\n  }\n\n  @media (-webkit-device-pixel-ratio: 3) {\n    max-width: $max-device-width * 3;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n# pxtorem\n * postcss-px-to-viewport\n   \n   \n * postcss-pxtorem\n   \n   \n * 项目目录\n   \n   \n\n├── gulpfile.js\n├── output\n├── package-lock.json\n├── package.json\n└── src\n    ├── index.js\n    ├── m\n    │   └── m.css\n    ├── other\n    │   ├── m\n    │   │   └── other-m.css\n    │   └── pc\n    │       └── other-pc.css\n    └── pc\n        └── pc.css\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n * gulpfile.js\n\n// 将 `src/xxx/m/xxx.css`转换为rem\n\nconst { src, dest } = require(\'gulp\');\nvar postcss = require(\'gulp-postcss\');\nvar pxtorem = require(\'postcss-pxtorem\');\nexports.default = function() {\n    // https://github.com/cuth/postcss-pxtorem 配置\n    var processors = [\n        pxtorem({\n            replace: true,\n            proplist: [\'*\'],\n            exclude: function(path) {\n                const matchpath = /src\\/(.+\\/)*m\\//.test(path)\n                return !matchpath\n            }\n        })\n    ];\n\n    return src(\'src/**/*.css\')\n        .pipe(postcss(processors))\n        .pipe(dest(\'output/css\'));\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n# vw 和 vh\n * 如何在 vue 项目中使用 vw 实现移动端适配\n\n# 相关链接\n * 移动 web 适配之 rem\n * 使用 flexible 实现手淘 h5 页面的终端适配\n * 响应式布局的常用解决方案对比(媒体查询、百分比、rem 和 vw/vh） #13\n * 物理像素 device-viewport-and-pixel-introduction\n * 如何在 vue 项目中使用 vw 实现移动端适配\n * 物理像素与 css 像素\n * css 像素、物理像素、逻辑像素、设备像素比、ppi、viewport #21',charsets:{cjk:!0}},{title:"css预处理器sass使用",frontmatter:{title:"css预处理器sass使用",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",categories:["web"],tags:["sass"],readingShow:"top"},regularPath:"/web/sass.html",relativePath:"web/sass.md",key:"v-6b871485",path:"/web/sass.html",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:61},{level:2,title:"基本使用",slug:"基本使用",normalizedTitle:"基本使用",charIndex:781},{level:2,title:"注释",slug:"注释",normalizedTitle:"注释",charIndex:1521},{level:2,title:"使用 $ 声明变量",slug:"使用-声明变量",normalizedTitle:"使用 $ 声明变量",charIndex:1585},{level:2,title:"嵌套 CSS 规则",slug:"嵌套-css-规则",normalizedTitle:"嵌套 css 规则",charIndex:2359},{level:2,title:"父选择器的标识符&",slug:"父选择器的标识符",normalizedTitle:"父选择器的标识符&amp;",charIndex:null},{level:2,title:"群组选择器的嵌套",slug:"群组选择器的嵌套",normalizedTitle:"群组选择器的嵌套",charIndex:3123},{level:2,title:"子组合选择器和同层组合选择器：>、+ 和 ~",slug:"子组合选择器和同层组合选择器-、-和",normalizedTitle:"子组合选择器和同层组合选择器：&gt;、+ 和 ~",charIndex:null},{level:2,title:"嵌套属性",slug:"嵌套属性",normalizedTitle:"嵌套属性",charIndex:3974},{level:2,title:"导入局部的 SASS 文件",slug:"导入局部的-sass-文件",normalizedTitle:"导入局部的 sass 文件",charIndex:4167},{level:2,title:"混合器 mixin",slug:"混合器-mixin",normalizedTitle:"混合器 mixin",charIndex:4932},{level:2,title:"使用选择器继承来精简CSS Extend",slug:"使用选择器继承来精简css-extend",normalizedTitle:"使用选择器继承来精简css extend",charIndex:7256},{level:2,title:"mixin and extend 不同",slug:"mixin-and-extend-不同",normalizedTitle:"mixin and extend 不同",charIndex:7579},{level:2,title:"function 函数指令",slug:"function-函数指令",normalizedTitle:"function 函数指令",charIndex:8125},{level:2,title:"控制指令 (Control Directives)",slug:"控制指令-control-directives",normalizedTitle:"控制指令 (control directives)",charIndex:8684},{level:2,title:"插值语句",slug:"插值语句",normalizedTitle:"插值语句",charIndex:10872}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"安装 基本使用 注释 使用 $ 声明变量 嵌套 CSS 规则 父选择器的标识符& 群组选择器的嵌套 子组合选择器和同层组合选择器：>、+ 和 ~ 嵌套属性 导入局部的 SASS 文件 混合器 mixin 使用选择器继承来精简CSS Extend mixin and extend 不同 function 函数指令 控制指令 (Control Directives) 插值语句",content:' * sass-lang 官方文档\n * sass 中文\n * RubyGems 镜像\n * sass 转 css\n\n# 安装\n * 首先安装ruby\n * 安装 sass\n\n# 1.删除原gem源\ngem sources --remove https://rubygems.org/\n\n# 2.添加国内淘宝源\ngem sources -a hhttps://gems.ruby-china.com\n\n# 3.打印是否替换成功\ngem sources -l\n\n# 4.更换成功后打印如下\n*** CURRENT SOURCES ***\nhhttps://gems.ruby-china.com\n\n#\nsudo gem install sass\nsudo gem install compass\n\n# 安装node-sass\nnpm install node-sass -g\n# 监听单个文件\nnode-sass -w src/base.scss dist/base.css --output-style expanded\n# 监听文件夹\nnode-sass -w src --output dist --output-style expanded\n# 生成source-map\nnode-sass -w src --output dist --output-style expanded --source-map=true\n# 指定source-map路径为map\nnode-sass -w src --output dist --output-style expanded --source-map=map\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 基本使用\n * 命令行编译\n\n# 单文件转换命令\nsass input.scss output.css\n\n# 单文件监听命令\nsass --watch input.scss:output.css\n\n# 如果你有很多的sass文件的目录，你也可以告诉sass监听整个目录：\nsass --watch app/sass:public/stylesheets\n\n# 例: sass --watch src:dist --style expanded\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 命令行编译配置选项\n\n# 编译格式\nsass --watch input.scss:output.css --style compact\n\n# 编译添加调试map\nsass --watch input.scss:output.css --sourcemap\n\n# 选择编译格式并添加调试map\nsass --watch input.scss:output.css --style expanded --sourcemap\n\n# 开启debug信息\nsass --watch input.scss:output.css --debug-info\n\n# sass内置有四种编译格式option: nested expanded compact compressed\nsass --style [option] # 表示解析后的css是什么排版格式\n\n# 开启sourcemap调试后，会生成一个后缀名为.css.map文件\nsass --sourcemap # 表示开启sourcemap调试。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 注释\n// 这种注释内容不会出现在生成的css文件中\n\n/* 这种注释内容会出现在生成的css文件中 */\n\n\n1\n2\n3\n# 使用 $ 声明变量\n/* 1. 使用变量$ */\n// 变量定义在css规则块内，那么该变量只能在此规则块内使用\n$highlight-color: #f90;\n$plain-font: "Myriad Pro", Myriad, "Helvetica Neue", Helvetica,\n  "Liberation Sans", Arial, sans-serif;\n\nhtml {\n  font-family: $plain-font;\n  color: $highlight-color;\n}\n\n// $变量引用, 将局部变量转换为全局变量可以添加 !global 声明\n.warp {\n  background: #ccc;\n  .selected {\n    border: 1px solid $highlight-color;\n  }\n}\n\n/* 变量名用中划线,下划线分隔都可以， 建议使用中划线 */\n\n$highlight-border: 1px solid $highlight-color;\n.selected {\n  border: $highlight-border;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n// 编译后\nhtml {\n  font-family: "Myriad Pro", Myriad, "Helvetica Neue", Helvetica,\n    "Liberation Sans", Arial, sans-serif;\n  color: #f90;\n}\n\n.selected {\n  border: 1px solid #f90;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 嵌套 CSS 规则\n#content {\n  // 默认为子代选择器\n  article {\n    h1 {\n      color: #333;\n    }\n    p {\n      margin-bottom: 1.4em;\n    }\n  }\n  aside {\n    background-color: #eee;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n// 编译后\n#content article h1 {\n  color: #333;\n}\n\n#content article p {\n  margin-bottom: 1.4em;\n}\n\n#content aside {\n  background-color: #eee;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 父选择器的标识符&\narticle a {\n  color: blue; // 链接符\n  &:hover {\n    color: red;\n  }\n}\n\n#content aside {\n  color: red; // 在父级加上一层范围标识\n  body.ie & {\n    color: green;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n// 编译后\narticle a {\n  color: blue;\n}\n\narticle a:hover {\n  color: red;\n}\n\n#content aside {\n  color: red;\n}\n\nbody.ie #content aside {\n  color: green;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 群组选择器的嵌套\n.container {\n  h1,\n  h2,\n  h3 {\n    margin-bottom: 0.8em;\n  }\n}\n\nnav,\naside {\n  a {\n    color: blue;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n// 编译后\n.container h1,\n.container h2,\n.container h3 {\n  margin-bottom: 0.8em;\n}\n\nnav a,\naside a {\n  color: blue;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 子组合选择器和同层组合选择器：>、+ 和 ~\narticle {\n  ~ article {\n    border-top: 1px dashed #ccc;\n  }\n  > section {\n    background: #eee;\n  }\n  dl > {\n    dt {\n      color: #333;\n    }\n    dd {\n      color: #555;\n    }\n  }\n  nav + & {\n    margin-top: 0;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n// 编译后\narticle ~ article {\n  border-top: 1px dashed #ccc;\n}\n\narticle > section {\n  background: #eee;\n}\n\narticle dl > dt {\n  color: #333;\n}\n\narticle dl > dd {\n  color: #555;\n}\n\nnav + article {\n  margin-top: 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# 嵌套属性\nnav {\n  border: {\n    style: solid;\n    width: 1px;\n    color: #ccc;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n// 编译后\nnav {\n  border-style: solid;\n  border-width: 1px;\n  border-color: #ccc;\n}\n\n\n1\n2\n3\n4\n5\n6\n# 导入局部的 SASS 文件\nsass 局部文件的文件名以下划线(_)开头，sass 就不会在编译时单独编译这个文件输出 css\n\n// _blue-theme.scss\naside {\n  background: blue;\n  color: white;\n}\n\n\n1\n2\n3\n4\n5\n// _tmp.scss\n/* 默认变量值\n   如果导入前没有设置变量的值则取默认值，否则取设置的值 */\n$fancybox-width: 400px !default;\n.fancybox {\n  width: $fancybox-width;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n/* 导入前设置变量的值 */\n$fancybox-width: 500px;\n@import "./_tmp";\n\n/* 嵌套导入sass :局部文件会被直接插入到css规则内导入它的地方 */\n.blue-theme {\n  @import "./_blue-theme";\n}\n\n$family: unquote("Droid+Sans");\n@import url("http://fonts.googleapis.com/css?family=#{$family}");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n// 编译后\n.fancybox {\n  width: 500px;\n}\n\n// 编译后\n.blue-theme aside {\n  background: blue;\n  color: white;\n}\n\n// 编译后\n@import url("http://fonts.googleapis.com/css?family=Droid+Sans");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 混合器 mixin\n@mixin rounded-corners {\n  -moz-border-radius: 5px;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n}\n\n.notice {\n  background-color: green;\n  border: 2px solid #00aa00; // 使用混合器\n  @include rounded-corners;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n// 编译后\n.notice {\n  background-color: green;\n  border: 2px solid #00aa00;\n  -moz-border-radius: 5px;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 混合器中的 CSS 规则\n\n@mixin no-bullets {\n  list-style: none;\n  li {\n    list-style-image: none;\n    list-style-type: none;\n    margin-left: 0px;\n  }\n}\n\nul.plain {\n  color: #444;\n  @include no-bullets;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n// 编译后\nul.plain {\n  color: #444;\n  list-style: none;\n}\n\nul.plain li {\n  list-style-image: none;\n  list-style-type: none;\n  margin-left: 0px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 给混合器传参\n\n@mixin link-colors($normal, $hover, $visited) {\n  color: $normal;\n  &:hover {\n    color: $hover;\n  }\n  &:visited {\n    color: $visited;\n  }\n}\n\na {\n  @include link-colors(blue, red, green);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n// 编译后\na {\n  color: blue;\n}\n\na:hover {\n  color: red;\n}\n\na:visited {\n  color: green;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 混合器传参: sass 允许通过语法$name: value 的形式指定每个参数的值\n\n@mixin link-colors($normal, $hover, $visited) {\n  color: $normal;\n  &:hover {\n    color: $hover;\n  }\n  &:visited {\n    color: $visited;\n  }\n}\na {\n  @include link-colors($normal: blue, $visited: green, $hover: red);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n// 编译后\na {\n  color: blue;\n}\n\na:hover {\n  color: red;\n}\n\na:visited {\n  color: green;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 混合器传参:默认参数值 默认值使用$name: default-value的声明形式\n\n@mixin link-colors($normal, $hover: $normal, $visited: $normal) {\n  color: $normal;\n  &:hover {\n    color: $hover;\n  }\n  &:visited {\n    color: $visited;\n  }\n}\n\na {\n  @include link-colors($normal: blue);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n// 编译后\na {\n  color: blue;\n}\n\na:hover {\n  color: blue;\n}\n\na:visited {\n  color: blue;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * mixin 向混合样式中导入内容 : @content\n\n$color: green;\n@mixin button($color: #fff) {\n  color: $color;\n  @content;\n  border: 1px solid $color;\n}\n\n.button-green {\n  @include button($color: red) {\n    background: $color;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n// 编译后\n.button-green {\n  color: red;\n  background: green;\n  border: 1px solid #fff;\n}\n\n\n1\n2\n3\n4\n5\n6\n# 使用选择器继承来精简CSS Extend\n//通过选择器继承继承样式\n.error {\n  border: 1px solid red;\n  background-color: #fdd;\n}\n\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n// 编译后\n.error,\n.seriousError {\n  border: 1px solid red;\n  background-color: #fdd;\n}\n.seriousError {\n  border-width: 3px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# mixin and extend 不同\n/* extend */\n.button {\n  background: green;\n}\n\n.button-1 {\n  @extend .button;\n}\n\n.button-2 {\n  @extend .button;\n}\n\n/*  mixin  */\n@mixin button {\n  background-color: green;\n}\n\n.button-1 {\n  @include button;\n}\n\n.button-2 {\n  @include button;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n// 编译后\n\n/* extend */\n.button,\n.button-1,\n.button-2 {\n  background: green;\n}\n\n/*  mixin  */\n.button-1 {\n  background-color: green;\n}\n.button-2 {\n  background-color: green;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# function 函数指令\n$grid-width: 40px;\n$gutter-width: 10px;\n\n@function grid-width($n) {\n  @return $n * $grid-width + ($n - 1) * $gutter-width;\n}\n\n#sidebar {\n  width: grid-width(5);\n}\n\n@function px2rem($n) {\n  @return ($n)/32;\n}\n.test {\n  height: px2rem(64rem);\n}\n\n$a: 16;\n$base: 32;\n@function p2r($n, $base: $a) {\n  @return $n/$base + rem;\n}\n\n#box {\n  width: p2r(160);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n// 编译后\n#sidebar {\n  width: 240px;\n}\n\n.test {\n  height: 2rem;\n}\n\n#box {\n  width: 10rem;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 控制指令 (Control Directives)\n * @if\n\np {\n  @if 1+1==2 {\n    border: 1px solid;\n  }\n  @if 5 < 3 {\n    border: 2px dotted;\n  }\n  @if null {\n    border: 3px double;\n  }\n}\n\n$type: monster;\np {\n  @if $type==ocean {\n    color: blue;\n  } @else if $type==matador {\n    color: red;\n  } @else if $type==monster {\n    color: green;\n  } @else {\n    color: black;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n// 编译后\np {\n  border: 1px solid;\n}\n\np {\n  color: green;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * @for\n\n@for $i from 1 through 3 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n}\n\n\n1\n2\n3\n4\n5\n// 编译后\n.item-1 {\n  width: 2em;\n}\n\n.item-2 {\n  width: 4em;\n}\n\n.item-3 {\n  width: 6em;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * @each\n\n@each $animal in puma, sea-slug, egret, salamander {\n  .#{$animal}-icon {\n    background-image: url("/images/#{$animal}.png");\n  }\n}\n\n\n1\n2\n3\n4\n5\n// 编译后\n.puma-icon {\n  background-image: url("/images/puma.png");\n}\n\n.sea-slug-icon {\n  background-image: url("/images/sea-slug.png");\n}\n\n.egret-icon {\n  background-image: url("/images/egret.png");\n}\n\n.salamander-icon {\n  background-image: url("/images/salamander.png");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * @while\n\n$i: 6;\n@while $i>0 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n  $i: $i - 2;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n// 编译后\n.item-6 {\n  width: 12em;\n}\n\n.item-4 {\n  width: 8em;\n}\n\n.item-2 {\n  width: 4em;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * @media\n\n.sidebar {\n  width: 300px;\n  @media screen and (orientation: landscape) {\n    width: 500px;\n  }\n}\n\n@media screen {\n  .sidebar {\n    @media (orientation: landscape) {\n      width: 500px;\n    }\n  }\n}\n\n// 2\n$media: screen;\n$feature: -webkit-min-device-pixel-ratio;\n$value: 1.5;\n@media #{$media} and ($feature: $value) {\n  .sidebar {\n    width: 500px;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n// 编译后\n.sidebar {\n  width: 300px;\n}\n\n@media screen and (orientation: landscape) {\n  .sidebar {\n    width: 500px;\n  }\n}\n\n@media screen and (orientation: landscape) {\n  .sidebar {\n    width: 500px;\n  }\n}\n\n// 2\n@media screen and (-webkit-min-device-pixel-ratio: 1.5) {\n  .sidebar {\n    width: 500px;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 插值语句\n可以在选择器或属性名中使用变量\n\n$name: foo;\n$attr: border;\np.#{$name} {\n  #{$attr}-color: blue;\n}\n\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{$font-size}/#{$line-height};\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n// 编译后\np.foo {\n  border-color: blue;\n}\n\np {\n  font: 12px/30px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 运算: 数字运算\n\n/* 数字运算: 支持数字的加减乘除、取整等运算 (+, -, *, /, %)，如果必要会在不同单位间转换值 */\n\np {\n  font: 10px/8px; /* 纯 CSS，不是除法运算 */\n  $width: 1000px;\n  width: $width/2; /* 使用了变量，是除法运算 */\n  width: round(1.5) / 2; /* 使用了函数，是除法运算 */\n  height: (500px/2); /* 使用了圆括号，是除法运算 */\n  margin-left: 5px + 8px/2px; /* 使用了加（+）号，是除法运算 */\n}\n// 在纯 CSS 中使用变量和 /， 你可以用 #{} 包住变量\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{$font-size}/#{$line-height};\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n// 编译后\n/* 数字运算: 支持数字的加减乘除、取整等运算 (+, -, *, /, %)，如果必要会在不同单位间转换值 */\np {\n  font: 10px/8px;\n  /* 纯 CSS，不是除法运算 */\n  width: 500px;\n  /* 使用了变量，是除法运算 */\n  width: 1;\n  /* 使用了函数，是除法运算 */\n  height: 250px;\n  /* 使用了圆括号，是除法运算 */\n  margin-left: 9px;\n  /* 使用了加（+）号，是除法运算 */\n}\n\n// 在纯 CSS 中使用变量和 /， 你可以用 #{} 包住变量\np {\n  font: 12px/30px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * 运算: 颜色值运算\n\np {\n  color: #010203 + #040506;\n}\n//\np {\n  color: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75);\n}\n\n/* 颜色值的 alpha channel 可以通过 opacify 或 transparentize 两个函数进行调整*/\n$translucent-red: rgba(255, 0, 0, 0.5);\np {\n  color: opacify($translucent-red, 0.3);\n  background-color: transparentize($translucent-red, 0.25);\n}\n\n$translucent-red: rgba(255, 0, 0, 0.5);\n$green: #00ff00;\ndiv {\n  filter: progid:DXImageTransform.Microsoft.gradient(enabled=\'false\', startColorstr=\'#{ie-hex-str($green)}\', endColorstr=\'#{ie-hex-str($translucent-red)}\');\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n// 编译后\n/* 颜色值运算  */\np {\n  color: #050709;\n}\n\np {\n  color: rgba(255, 255, 0, 0.75);\n}\n/* 颜色值的 alpha channel 可以通过 opacify 或 transparentize 两个函数进行调整*/\np {\n  color: rgba(255, 0, 0, 0.8);\n  background-color: rgba(255, 0, 0, 0.25);\n}\n\ndiv {\n  filter: progid:DXImageTransform.Microsoft.gradient(enabled=\'false\', startColorstr=\'#FF00FF00\', endColorstr=\'#80FF0000\');\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 字符串运算\n\np {\n  cursor: e + -resize;\n}\n\np:before {\n  content: "Foo " + Bar;\n  font-family: sans- + "serif";\n}\n\np:before {\n  content: "I ate #{5 + 10} pies!";\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n// 编译后\n/* 字符串运算 */\np {\n  cursor: e-resize;\n}\n\np:before {\n  content: "Foo Bar";\n  font-family: sans-serif;\n}\n\np:before {\n  content: "I ate 15 pies!";\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * @at-root\n\n@media print {\n  .page {\n    width: 8in;\n    @at-root (without: media) {\n      color: red;\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n// 编译后\n/* @at-root */\n@media print {\n  .page {\n    width: 8in;\n  }\n}\n\n.page {\n  color: red;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11',normalizedContent:' * sass-lang 官方文档\n * sass 中文\n * rubygems 镜像\n * sass 转 css\n\n# 安装\n * 首先安装ruby\n * 安装 sass\n\n# 1.删除原gem源\ngem sources --remove https://rubygems.org/\n\n# 2.添加国内淘宝源\ngem sources -a hhttps://gems.ruby-china.com\n\n# 3.打印是否替换成功\ngem sources -l\n\n# 4.更换成功后打印如下\n*** current sources ***\nhhttps://gems.ruby-china.com\n\n#\nsudo gem install sass\nsudo gem install compass\n\n# 安装node-sass\nnpm install node-sass -g\n# 监听单个文件\nnode-sass -w src/base.scss dist/base.css --output-style expanded\n# 监听文件夹\nnode-sass -w src --output dist --output-style expanded\n# 生成source-map\nnode-sass -w src --output dist --output-style expanded --source-map=true\n# 指定source-map路径为map\nnode-sass -w src --output dist --output-style expanded --source-map=map\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 基本使用\n * 命令行编译\n\n# 单文件转换命令\nsass input.scss output.css\n\n# 单文件监听命令\nsass --watch input.scss:output.css\n\n# 如果你有很多的sass文件的目录，你也可以告诉sass监听整个目录：\nsass --watch app/sass:public/stylesheets\n\n# 例: sass --watch src:dist --style expanded\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n * 命令行编译配置选项\n\n# 编译格式\nsass --watch input.scss:output.css --style compact\n\n# 编译添加调试map\nsass --watch input.scss:output.css --sourcemap\n\n# 选择编译格式并添加调试map\nsass --watch input.scss:output.css --style expanded --sourcemap\n\n# 开启debug信息\nsass --watch input.scss:output.css --debug-info\n\n# sass内置有四种编译格式option: nested expanded compact compressed\nsass --style [option] # 表示解析后的css是什么排版格式\n\n# 开启sourcemap调试后，会生成一个后缀名为.css.map文件\nsass --sourcemap # 表示开启sourcemap调试。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n# 注释\n// 这种注释内容不会出现在生成的css文件中\n\n/* 这种注释内容会出现在生成的css文件中 */\n\n\n1\n2\n3\n# 使用 $ 声明变量\n/* 1. 使用变量$ */\n// 变量定义在css规则块内，那么该变量只能在此规则块内使用\n$highlight-color: #f90;\n$plain-font: "myriad pro", myriad, "helvetica neue", helvetica,\n  "liberation sans", arial, sans-serif;\n\nhtml {\n  font-family: $plain-font;\n  color: $highlight-color;\n}\n\n// $变量引用, 将局部变量转换为全局变量可以添加 !global 声明\n.warp {\n  background: #ccc;\n  .selected {\n    border: 1px solid $highlight-color;\n  }\n}\n\n/* 变量名用中划线,下划线分隔都可以， 建议使用中划线 */\n\n$highlight-border: 1px solid $highlight-color;\n.selected {\n  border: $highlight-border;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n// 编译后\nhtml {\n  font-family: "myriad pro", myriad, "helvetica neue", helvetica,\n    "liberation sans", arial, sans-serif;\n  color: #f90;\n}\n\n.selected {\n  border: 1px solid #f90;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# 嵌套 css 规则\n#content {\n  // 默认为子代选择器\n  article {\n    h1 {\n      color: #333;\n    }\n    p {\n      margin-bottom: 1.4em;\n    }\n  }\n  aside {\n    background-color: #eee;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n// 编译后\n#content article h1 {\n  color: #333;\n}\n\n#content article p {\n  margin-bottom: 1.4em;\n}\n\n#content aside {\n  background-color: #eee;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 父选择器的标识符&\narticle a {\n  color: blue; // 链接符\n  &:hover {\n    color: red;\n  }\n}\n\n#content aside {\n  color: red; // 在父级加上一层范围标识\n  body.ie & {\n    color: green;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n// 编译后\narticle a {\n  color: blue;\n}\n\narticle a:hover {\n  color: red;\n}\n\n#content aside {\n  color: red;\n}\n\nbody.ie #content aside {\n  color: green;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# 群组选择器的嵌套\n.container {\n  h1,\n  h2,\n  h3 {\n    margin-bottom: 0.8em;\n  }\n}\n\nnav,\naside {\n  a {\n    color: blue;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n// 编译后\n.container h1,\n.container h2,\n.container h3 {\n  margin-bottom: 0.8em;\n}\n\nnav a,\naside a {\n  color: blue;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n# 子组合选择器和同层组合选择器：>、+ 和 ~\narticle {\n  ~ article {\n    border-top: 1px dashed #ccc;\n  }\n  > section {\n    background: #eee;\n  }\n  dl > {\n    dt {\n      color: #333;\n    }\n    dd {\n      color: #555;\n    }\n  }\n  nav + & {\n    margin-top: 0;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n// 编译后\narticle ~ article {\n  border-top: 1px dashed #ccc;\n}\n\narticle > section {\n  background: #eee;\n}\n\narticle dl > dt {\n  color: #333;\n}\n\narticle dl > dd {\n  color: #555;\n}\n\nnav + article {\n  margin-top: 0;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# 嵌套属性\nnav {\n  border: {\n    style: solid;\n    width: 1px;\n    color: #ccc;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n// 编译后\nnav {\n  border-style: solid;\n  border-width: 1px;\n  border-color: #ccc;\n}\n\n\n1\n2\n3\n4\n5\n6\n# 导入局部的 sass 文件\nsass 局部文件的文件名以下划线(_)开头，sass 就不会在编译时单独编译这个文件输出 css\n\n// _blue-theme.scss\naside {\n  background: blue;\n  color: white;\n}\n\n\n1\n2\n3\n4\n5\n// _tmp.scss\n/* 默认变量值\n   如果导入前没有设置变量的值则取默认值，否则取设置的值 */\n$fancybox-width: 400px !default;\n.fancybox {\n  width: $fancybox-width;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n/* 导入前设置变量的值 */\n$fancybox-width: 500px;\n@import "./_tmp";\n\n/* 嵌套导入sass :局部文件会被直接插入到css规则内导入它的地方 */\n.blue-theme {\n  @import "./_blue-theme";\n}\n\n$family: unquote("droid+sans");\n@import url("http://fonts.googleapis.com/css?family=#{$family}");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n// 编译后\n.fancybox {\n  width: 500px;\n}\n\n// 编译后\n.blue-theme aside {\n  background: blue;\n  color: white;\n}\n\n// 编译后\n@import url("http://fonts.googleapis.com/css?family=droid+sans");\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n# 混合器 mixin\n@mixin rounded-corners {\n  -moz-border-radius: 5px;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n}\n\n.notice {\n  background-color: green;\n  border: 2px solid #00aa00; // 使用混合器\n  @include rounded-corners;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n// 编译后\n.notice {\n  background-color: green;\n  border: 2px solid #00aa00;\n  -moz-border-radius: 5px;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 混合器中的 css 规则\n\n@mixin no-bullets {\n  list-style: none;\n  li {\n    list-style-image: none;\n    list-style-type: none;\n    margin-left: 0px;\n  }\n}\n\nul.plain {\n  color: #444;\n  @include no-bullets;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n// 编译后\nul.plain {\n  color: #444;\n  list-style: none;\n}\n\nul.plain li {\n  list-style-image: none;\n  list-style-type: none;\n  margin-left: 0px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 给混合器传参\n\n@mixin link-colors($normal, $hover, $visited) {\n  color: $normal;\n  &:hover {\n    color: $hover;\n  }\n  &:visited {\n    color: $visited;\n  }\n}\n\na {\n  @include link-colors(blue, red, green);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n// 编译后\na {\n  color: blue;\n}\n\na:hover {\n  color: red;\n}\n\na:visited {\n  color: green;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 混合器传参: sass 允许通过语法$name: value 的形式指定每个参数的值\n\n@mixin link-colors($normal, $hover, $visited) {\n  color: $normal;\n  &:hover {\n    color: $hover;\n  }\n  &:visited {\n    color: $visited;\n  }\n}\na {\n  @include link-colors($normal: blue, $visited: green, $hover: red);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n// 编译后\na {\n  color: blue;\n}\n\na:hover {\n  color: red;\n}\n\na:visited {\n  color: green;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * 混合器传参:默认参数值 默认值使用$name: default-value的声明形式\n\n@mixin link-colors($normal, $hover: $normal, $visited: $normal) {\n  color: $normal;\n  &:hover {\n    color: $hover;\n  }\n  &:visited {\n    color: $visited;\n  }\n}\n\na {\n  @include link-colors($normal: blue);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n// 编译后\na {\n  color: blue;\n}\n\na:hover {\n  color: blue;\n}\n\na:visited {\n  color: blue;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * mixin 向混合样式中导入内容 : @content\n\n$color: green;\n@mixin button($color: #fff) {\n  color: $color;\n  @content;\n  border: 1px solid $color;\n}\n\n.button-green {\n  @include button($color: red) {\n    background: $color;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n// 编译后\n.button-green {\n  color: red;\n  background: green;\n  border: 1px solid #fff;\n}\n\n\n1\n2\n3\n4\n5\n6\n# 使用选择器继承来精简css extend\n//通过选择器继承继承样式\n.error {\n  border: 1px solid red;\n  background-color: #fdd;\n}\n\n.seriouserror {\n  @extend .error;\n  border-width: 3px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n// 编译后\n.error,\n.seriouserror {\n  border: 1px solid red;\n  background-color: #fdd;\n}\n.seriouserror {\n  border-width: 3px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n# mixin and extend 不同\n/* extend */\n.button {\n  background: green;\n}\n\n.button-1 {\n  @extend .button;\n}\n\n.button-2 {\n  @extend .button;\n}\n\n/*  mixin  */\n@mixin button {\n  background-color: green;\n}\n\n.button-1 {\n  @include button;\n}\n\n.button-2 {\n  @include button;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n// 编译后\n\n/* extend */\n.button,\n.button-1,\n.button-2 {\n  background: green;\n}\n\n/*  mixin  */\n.button-1 {\n  background-color: green;\n}\n.button-2 {\n  background-color: green;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n# function 函数指令\n$grid-width: 40px;\n$gutter-width: 10px;\n\n@function grid-width($n) {\n  @return $n * $grid-width + ($n - 1) * $gutter-width;\n}\n\n#sidebar {\n  width: grid-width(5);\n}\n\n@function px2rem($n) {\n  @return ($n)/32;\n}\n.test {\n  height: px2rem(64rem);\n}\n\n$a: 16;\n$base: 32;\n@function p2r($n, $base: $a) {\n  @return $n/$base + rem;\n}\n\n#box {\n  width: p2r(160);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n// 编译后\n#sidebar {\n  width: 240px;\n}\n\n.test {\n  height: 2rem;\n}\n\n#box {\n  width: 10rem;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 控制指令 (control directives)\n * @if\n\np {\n  @if 1+1==2 {\n    border: 1px solid;\n  }\n  @if 5 < 3 {\n    border: 2px dotted;\n  }\n  @if null {\n    border: 3px double;\n  }\n}\n\n$type: monster;\np {\n  @if $type==ocean {\n    color: blue;\n  } @else if $type==matador {\n    color: red;\n  } @else if $type==monster {\n    color: green;\n  } @else {\n    color: black;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n// 编译后\np {\n  border: 1px solid;\n}\n\np {\n  color: green;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * @for\n\n@for $i from 1 through 3 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n}\n\n\n1\n2\n3\n4\n5\n// 编译后\n.item-1 {\n  width: 2em;\n}\n\n.item-2 {\n  width: 4em;\n}\n\n.item-3 {\n  width: 6em;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * @each\n\n@each $animal in puma, sea-slug, egret, salamander {\n  .#{$animal}-icon {\n    background-image: url("/images/#{$animal}.png");\n  }\n}\n\n\n1\n2\n3\n4\n5\n// 编译后\n.puma-icon {\n  background-image: url("/images/puma.png");\n}\n\n.sea-slug-icon {\n  background-image: url("/images/sea-slug.png");\n}\n\n.egret-icon {\n  background-image: url("/images/egret.png");\n}\n\n.salamander-icon {\n  background-image: url("/images/salamander.png");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n * @while\n\n$i: 6;\n@while $i>0 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n  $i: $i - 2;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n// 编译后\n.item-6 {\n  width: 12em;\n}\n\n.item-4 {\n  width: 8em;\n}\n\n.item-2 {\n  width: 4em;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n * @media\n\n.sidebar {\n  width: 300px;\n  @media screen and (orientation: landscape) {\n    width: 500px;\n  }\n}\n\n@media screen {\n  .sidebar {\n    @media (orientation: landscape) {\n      width: 500px;\n    }\n  }\n}\n\n// 2\n$media: screen;\n$feature: -webkit-min-device-pixel-ratio;\n$value: 1.5;\n@media #{$media} and ($feature: $value) {\n  .sidebar {\n    width: 500px;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n// 编译后\n.sidebar {\n  width: 300px;\n}\n\n@media screen and (orientation: landscape) {\n  .sidebar {\n    width: 500px;\n  }\n}\n\n@media screen and (orientation: landscape) {\n  .sidebar {\n    width: 500px;\n  }\n}\n\n// 2\n@media screen and (-webkit-min-device-pixel-ratio: 1.5) {\n  .sidebar {\n    width: 500px;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n# 插值语句\n可以在选择器或属性名中使用变量\n\n$name: foo;\n$attr: border;\np.#{$name} {\n  #{$attr}-color: blue;\n}\n\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{$font-size}/#{$line-height};\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n// 编译后\np.foo {\n  border-color: blue;\n}\n\np {\n  font: 12px/30px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n * 运算: 数字运算\n\n/* 数字运算: 支持数字的加减乘除、取整等运算 (+, -, *, /, %)，如果必要会在不同单位间转换值 */\n\np {\n  font: 10px/8px; /* 纯 css，不是除法运算 */\n  $width: 1000px;\n  width: $width/2; /* 使用了变量，是除法运算 */\n  width: round(1.5) / 2; /* 使用了函数，是除法运算 */\n  height: (500px/2); /* 使用了圆括号，是除法运算 */\n  margin-left: 5px + 8px/2px; /* 使用了加（+）号，是除法运算 */\n}\n// 在纯 css 中使用变量和 /， 你可以用 #{} 包住变量\np {\n  $font-size: 12px;\n  $line-height: 30px;\n  font: #{$font-size}/#{$line-height};\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n// 编译后\n/* 数字运算: 支持数字的加减乘除、取整等运算 (+, -, *, /, %)，如果必要会在不同单位间转换值 */\np {\n  font: 10px/8px;\n  /* 纯 css，不是除法运算 */\n  width: 500px;\n  /* 使用了变量，是除法运算 */\n  width: 1;\n  /* 使用了函数，是除法运算 */\n  height: 250px;\n  /* 使用了圆括号，是除法运算 */\n  margin-left: 9px;\n  /* 使用了加（+）号，是除法运算 */\n}\n\n// 在纯 css 中使用变量和 /， 你可以用 #{} 包住变量\np {\n  font: 12px/30px;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n * 运算: 颜色值运算\n\np {\n  color: #010203 + #040506;\n}\n//\np {\n  color: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75);\n}\n\n/* 颜色值的 alpha channel 可以通过 opacify 或 transparentize 两个函数进行调整*/\n$translucent-red: rgba(255, 0, 0, 0.5);\np {\n  color: opacify($translucent-red, 0.3);\n  background-color: transparentize($translucent-red, 0.25);\n}\n\n$translucent-red: rgba(255, 0, 0, 0.5);\n$green: #00ff00;\ndiv {\n  filter: progid:dximagetransform.microsoft.gradient(enabled=\'false\', startcolorstr=\'#{ie-hex-str($green)}\', endcolorstr=\'#{ie-hex-str($translucent-red)}\');\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n// 编译后\n/* 颜色值运算  */\np {\n  color: #050709;\n}\n\np {\n  color: rgba(255, 255, 0, 0.75);\n}\n/* 颜色值的 alpha channel 可以通过 opacify 或 transparentize 两个函数进行调整*/\np {\n  color: rgba(255, 0, 0, 0.8);\n  background-color: rgba(255, 0, 0, 0.25);\n}\n\ndiv {\n  filter: progid:dximagetransform.microsoft.gradient(enabled=\'false\', startcolorstr=\'#ff00ff00\', endcolorstr=\'#80ff0000\');\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n * 字符串运算\n\np {\n  cursor: e + -resize;\n}\n\np:before {\n  content: "foo " + bar;\n  font-family: sans- + "serif";\n}\n\np:before {\n  content: "i ate #{5 + 10} pies!";\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n// 编译后\n/* 字符串运算 */\np {\n  cursor: e-resize;\n}\n\np:before {\n  content: "foo bar";\n  font-family: sans-serif;\n}\n\np:before {\n  content: "i ate 15 pies!";\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n * @at-root\n\n@media print {\n  .page {\n    width: 8in;\n    @at-root (without: media) {\n      color: red;\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n// 编译后\n/* @at-root */\n@media print {\n  .page {\n    width: 8in;\n  }\n}\n\n.page {\n  color: red;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11',charsets:{cjk:!0}},{title:"css常见问题解决方案",frontmatter:{title:"css常见问题解决方案",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",categories:["web"],tags:["1像素问题","清除浮动","css三角形","百分比单位","字体超出省略"],readingShow:"top"},regularPath:"/web/use-css.html",relativePath:"web/use-css.md",key:"v-3ac5b8eb",path:"/web/use-css.html",headers:[{level:2,title:"CSS 画圆半圆扇形三角梯形",slug:"css-画圆半圆扇形三角梯形",normalizedTitle:"css 画圆半圆扇形三角梯形",charIndex:2},{level:2,title:"a 伪类的顺序",slug:"a-伪类的顺序",normalizedTitle:"a 伪类的顺序",charIndex:519},{level:2,title:"1border(1 像素问题)",slug:"_1border-1-像素问题",normalizedTitle:"1border(1 像素问题)",charIndex:833},{level:2,title:"解决 IE9 不能使用 opacity",slug:"解决-ie9-不能使用-opacity",normalizedTitle:"解决 ie9 不能使用 opacity",charIndex:2189},{level:2,title:"清除浮动的方式",slug:"清除浮动的方式",normalizedTitle:"清除浮动的方式",charIndex:2336},{level:2,title:"横屏布局",slug:"横屏布局",normalizedTitle:"横屏布局",charIndex:3105},{level:2,title:"文字超出省略、文字两端对齐",slug:"文字超出省略、文字两端对齐",normalizedTitle:"文字超出省略、文字两端对齐",charIndex:3706},{level:2,title:"css 百分比单位",slug:"css-百分比单位",normalizedTitle:"css 百分比单位",charIndex:4123},{level:3,title:"子元素中的百分比（%）到底是谁的百分比",slug:"子元素中的百分比-到底是谁的百分比",normalizedTitle:"子元素中的百分比（%）到底是谁的百分比",charIndex:4135},{level:3,title:"百分比单位布局应用",slug:"百分比单位布局应用",normalizedTitle:"百分比单位布局应用",charIndex:4828},{level:3,title:"百分比单位缺点",slug:"百分比单位缺点",normalizedTitle:"百分比单位缺点",charIndex:4972}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"CSS 画圆半圆扇形三角梯形 a 伪类的顺序 1border(1 像素问题) 解决 IE9 不能使用 opacity 清除浮动的方式 横屏布局 文字超出省略、文字两端对齐 css 百分比单位 子元素中的百分比（%）到底是谁的百分比 百分比单位布局应用 百分比单位缺点",content:'# CSS 画圆半圆扇形三角梯形\n/* 半圆 */\n.half-circle {\n  height: 50px;\n  border-radius: 50px 50px 0 0;\n}\n/* 扇形 */\n.sector {\n  border-radius: 100px 0 0;\n}\n/* 三角 */\n.triangle {\n  width: 0px;\n  height: 0px;\n  background: none;\n  border: 50px solid red;\n  border-color: red transparent transparent transparent;\n}\n/* 梯形 */\n.ladder {\n  width: 50px;\n  height: 0px;\n  background: none;\n  border: 50px solid red;\n  border-color: red transparent transparent transparent;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# a 伪类的顺序\n * link visited hover active * link:平常的状态\n    * visited:被访问过之后\n    * hover:鼠标放到链接上的时候\n    * active:链接被按下的时候\n   \n   \n\na:link {\n  background-color: blue;\n}\na:visited {\n  background-color: pink;\n}\na:hover {\n  background-color: purple;\n}\na:active {\n  background-color: yellow;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 1border(1 像素问题)\n<style type="text/css">\n  body {\n    background-color: #dfdfdf;\n  }\n  .box {\n    width: 100px;\n    height: 100px;\n    text-align: center;\n    margin-bottom: 10px;\n    background-color: #fff;\n  }\n\n  .scale {\n    position: relative;\n    border: none;\n  }\n\n  .scale:after {\n    content: "";\n    position: absolute;\n    top: 0;\n    left: 0;\n    border: 1px solid #000;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0.5);\n    transform: scale(0.5);\n    -webkit-transform-origin: left top;\n    transform-origin: left top;\n  }\n\n  .box-shadow-1px {\n    box-shadow: inset 0px -1px 1px -1px #000;\n  }\n\n  .scale－single {\n    position: relative;\n    border: none;\n  }\n\n  .scale－single:after {\n    content: "";\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    background: #000;\n    width: 100%;\n    height: 1px;\n    -webkit-transform: scaleY(0.5);\n    transform: scaleY(0.5);\n    -webkit-transform-origin: 0 0;\n    transform-origin: 0 0;\n  }\n</style>\n\n<div class="box scale">scale all</div>\n<div class="box box-shadow-1px">box shadow</div>\n<div class="box scale－single">scale single</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n# 解决 IE9 不能使用 opacity\nopacity: 0.5;\nfilter: alpha(opacity = 50);\nfilter: progid:DXImageTransform.Microsoft.Alpha(style = 0, opacity = 50);\n\n\n1\n2\n3\n# 清除浮动的方式\n * 额外标签法\n\n.clear {\n  clear: both;\n}\n\n\n1\n2\n3\n * 伪元素\n\n.clearfix:after {\n  display: block;\n  overflow: hidden;\n  visibility: hidden;\n  height: 0;\n  content: "";\n  clear: both;\n}\n.clearfix {\n  zoom: 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 双伪元素\n\n.clearfix:after,\n.clearfix:before {\n  display: table;\n  overflow: hidden;\n  height: 0;\n  content: "";\n  clear: both;\n}\n.clearfix {\n  zoom: 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * BFC 清除内部浮动:父级触发块级格式化上下文,形成独立渲染区域\n\n/* fu */\n.box {\n  width: 300px;\n  border: 1px solid #000;\n  overflow: hidden;\n}\n/* zi */\n.one {\n  width: 150px;\n  height: 200px;\n  background-color: pink;\n  float: left;\n}\n/* zi */\n.two {\n  width: 150px;\n  height: 200px;\n  background-color: blue;\n  float: left;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# 横屏布局\n.landscape-container {\n  position: absolute;\n  overflow: hidden;\n}\n\n// 竖屏\n@media screen and (orientation: portrait) {\n  .landscape-container {\n    width: 100vh;\n    height: 100vw;\n    top: calc((100vh - 100vw) / 2);\n    left: calc((100vw - 100vh) / 2);\n    transform: rotate(90deg);\n    transform-origin: 50% 50%;\n  }\n}\n\n// 横屏\n@media screen and (orientation: landscape) {\n  .landscape-container {\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    transform: none;\n    transform-origin: 50% 50%;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 文字超出省略、文字两端对齐\n * 单行\n\n.div {\n  width: 300px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n\n1\n2\n3\n4\n5\n6\n * 多行超出省略\n\n.line-camp( @clamp:2 ) {\n  text-overflow: -o-ellipsis-lastline;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: @clamp;\n  /*! autoprefixer: off */\n  -webkit-box-orient: vertical;\n  /* autoprefixer: on */\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# css 百分比单位\n# 子元素中的百分比（%）到底是谁的百分比\n * 子元素 height 和 width 的百分比\n   \n    * 子元素的 height 或 width 中使用百分比，是相对于子元素的直接父元素，width 相对于父元素的 width，height 相对于父元素的 height\n   \n   \n * top 和 bottom 、left 和 right\n   \n    * 子元素的 top 和 bottom 如果设置百分比，则相对于直接非 static 定位(默认定位)的父元素的高度\n      \n      \n    * 子元素的 left 和 right 如果设置百分比，则相对于直接非 static 定位(默认定位的)父元素的宽度\n      \n      \n   \n   \n * padding\n   \n    * 子元素的 padding 如果设置百分比，不论是垂直方向或者是水平方向，都相对于直接父亲元素的width，而与父元素的 height 无关\n   \n   \n * margin\n   \n    * 子元素的 margin 如果设置成百分比，不论是垂直方向还是水平方向，都相对于直接父元素的width\n   \n   \n * border-radius\n   \n    * border-radius 不一样，如果设置 border-radius 为百分比，则是相对于自身的宽度\n   \n   \n * translate\n   \n    * 相对于自身\n   \n   \n * background-size\n   \n    * 相对于自身\n   \n   \n\n# 百分比单位布局应用\n * 实现一个固定长宽比的长方形\n\n  <div class="trangle"></div>\n\n  .trangle{\n    height:0;\n    width:100%;\n    padding-top:75%;\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n# 百分比单位缺点\n * 计算困难，如果我们要定义一个元素的宽度和高度，按照设计稿，必须换算成百分比单位\n   \n   \n * 各个属性中如果使用百分比，相对父元素的属性并不是唯一的\n   \n    * width 和 height 相对于父元素的 width 和 height\n      \n      \n    * margin、padding 不管垂直还是水平方向都相对比父元素的宽度\n      \n      \n    * border-radius 则是相对于元素自身\n      \n      \n   \n   \n * 造成我们使用百分比单位容易使布局问题变得复杂',normalizedContent:'# css 画圆半圆扇形三角梯形\n/* 半圆 */\n.half-circle {\n  height: 50px;\n  border-radius: 50px 50px 0 0;\n}\n/* 扇形 */\n.sector {\n  border-radius: 100px 0 0;\n}\n/* 三角 */\n.triangle {\n  width: 0px;\n  height: 0px;\n  background: none;\n  border: 50px solid red;\n  border-color: red transparent transparent transparent;\n}\n/* 梯形 */\n.ladder {\n  width: 50px;\n  height: 0px;\n  background: none;\n  border: 50px solid red;\n  border-color: red transparent transparent transparent;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n# a 伪类的顺序\n * link visited hover active * link:平常的状态\n    * visited:被访问过之后\n    * hover:鼠标放到链接上的时候\n    * active:链接被按下的时候\n   \n   \n\na:link {\n  background-color: blue;\n}\na:visited {\n  background-color: pink;\n}\na:hover {\n  background-color: purple;\n}\na:active {\n  background-color: yellow;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n# 1border(1 像素问题)\n<style type="text/css">\n  body {\n    background-color: #dfdfdf;\n  }\n  .box {\n    width: 100px;\n    height: 100px;\n    text-align: center;\n    margin-bottom: 10px;\n    background-color: #fff;\n  }\n\n  .scale {\n    position: relative;\n    border: none;\n  }\n\n  .scale:after {\n    content: "";\n    position: absolute;\n    top: 0;\n    left: 0;\n    border: 1px solid #000;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0.5);\n    transform: scale(0.5);\n    -webkit-transform-origin: left top;\n    transform-origin: left top;\n  }\n\n  .box-shadow-1px {\n    box-shadow: inset 0px -1px 1px -1px #000;\n  }\n\n  .scale－single {\n    position: relative;\n    border: none;\n  }\n\n  .scale－single:after {\n    content: "";\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    background: #000;\n    width: 100%;\n    height: 1px;\n    -webkit-transform: scaley(0.5);\n    transform: scaley(0.5);\n    -webkit-transform-origin: 0 0;\n    transform-origin: 0 0;\n  }\n</style>\n\n<div class="box scale">scale all</div>\n<div class="box box-shadow-1px">box shadow</div>\n<div class="box scale－single">scale single</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n# 解决 ie9 不能使用 opacity\nopacity: 0.5;\nfilter: alpha(opacity = 50);\nfilter: progid:dximagetransform.microsoft.alpha(style = 0, opacity = 50);\n\n\n1\n2\n3\n# 清除浮动的方式\n * 额外标签法\n\n.clear {\n  clear: both;\n}\n\n\n1\n2\n3\n * 伪元素\n\n.clearfix:after {\n  display: block;\n  overflow: hidden;\n  visibility: hidden;\n  height: 0;\n  content: "";\n  clear: both;\n}\n.clearfix {\n  zoom: 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * 双伪元素\n\n.clearfix:after,\n.clearfix:before {\n  display: table;\n  overflow: hidden;\n  height: 0;\n  content: "";\n  clear: both;\n}\n.clearfix {\n  zoom: 1;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n * bfc 清除内部浮动:父级触发块级格式化上下文,形成独立渲染区域\n\n/* fu */\n.box {\n  width: 300px;\n  border: 1px solid #000;\n  overflow: hidden;\n}\n/* zi */\n.one {\n  width: 150px;\n  height: 200px;\n  background-color: pink;\n  float: left;\n}\n/* zi */\n.two {\n  width: 150px;\n  height: 200px;\n  background-color: blue;\n  float: left;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n# 横屏布局\n.landscape-container {\n  position: absolute;\n  overflow: hidden;\n}\n\n// 竖屏\n@media screen and (orientation: portrait) {\n  .landscape-container {\n    width: 100vh;\n    height: 100vw;\n    top: calc((100vh - 100vw) / 2);\n    left: calc((100vw - 100vh) / 2);\n    transform: rotate(90deg);\n    transform-origin: 50% 50%;\n  }\n}\n\n// 横屏\n@media screen and (orientation: landscape) {\n  .landscape-container {\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    transform: none;\n    transform-origin: 50% 50%;\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n# 文字超出省略、文字两端对齐\n * 单行\n\n.div {\n  width: 300px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n\n1\n2\n3\n4\n5\n6\n * 多行超出省略\n\n.line-camp( @clamp:2 ) {\n  text-overflow: -o-ellipsis-lastline;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: @clamp;\n  /*! autoprefixer: off */\n  -webkit-box-orient: vertical;\n  /* autoprefixer: on */\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n# css 百分比单位\n# 子元素中的百分比（%）到底是谁的百分比\n * 子元素 height 和 width 的百分比\n   \n    * 子元素的 height 或 width 中使用百分比，是相对于子元素的直接父元素，width 相对于父元素的 width，height 相对于父元素的 height\n   \n   \n * top 和 bottom 、left 和 right\n   \n    * 子元素的 top 和 bottom 如果设置百分比，则相对于直接非 static 定位(默认定位)的父元素的高度\n      \n      \n    * 子元素的 left 和 right 如果设置百分比，则相对于直接非 static 定位(默认定位的)父元素的宽度\n      \n      \n   \n   \n * padding\n   \n    * 子元素的 padding 如果设置百分比，不论是垂直方向或者是水平方向，都相对于直接父亲元素的width，而与父元素的 height 无关\n   \n   \n * margin\n   \n    * 子元素的 margin 如果设置成百分比，不论是垂直方向还是水平方向，都相对于直接父元素的width\n   \n   \n * border-radius\n   \n    * border-radius 不一样，如果设置 border-radius 为百分比，则是相对于自身的宽度\n   \n   \n * translate\n   \n    * 相对于自身\n   \n   \n * background-size\n   \n    * 相对于自身\n   \n   \n\n# 百分比单位布局应用\n * 实现一个固定长宽比的长方形\n\n  <div class="trangle"></div>\n\n  .trangle{\n    height:0;\n    width:100%;\n    padding-top:75%;\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n# 百分比单位缺点\n * 计算困难，如果我们要定义一个元素的宽度和高度，按照设计稿，必须换算成百分比单位\n   \n   \n * 各个属性中如果使用百分比，相对父元素的属性并不是唯一的\n   \n    * width 和 height 相对于父元素的 width 和 height\n      \n      \n    * margin、padding 不管垂直还是水平方向都相对比父元素的宽度\n      \n      \n    * border-radius 则是相对于元素自身\n      \n      \n   \n   \n * 造成我们使用百分比单位容易使布局问题变得复杂',charsets:{cjk:!0}},{title:"html常见布局方案",frontmatter:{title:"html常见布局方案",date:"2020-07-20T00:00:00.000Z",sidebar:"auto",categories:["web"],tags:["layout"],readingShow:"top"},regularPath:"/web/use-html.html",relativePath:"web/use-html.md",key:"v-374104bf",path:"/web/use-html.html",headers:[{level:2,title:"布局",slug:"布局",normalizedTitle:"布局",charIndex:2},{level:3,title:"Flex 布局",slug:"flex-布局",normalizedTitle:"flex 布局",charIndex:7},{level:3,title:"绝对定位布局",slug:"绝对定位布局",normalizedTitle:"绝对定位布局",charIndex:529},{level:3,title:"圣杯布局",slug:"圣杯布局",normalizedTitle:"圣杯布局",charIndex:1189},{level:3,title:"双飞翼布局",slug:"双飞翼布局",normalizedTitle:"双飞翼布局",charIndex:1917}],lastUpdated:"2020/7/30 上午10:49:06",headersStr:"布局 Flex 布局 绝对定位布局 圣杯布局 双飞翼布局",content:'# 布局\n# Flex 布局\n<style>\n  .container {\n    display: flex;\n    justify-content: center;\n    height: 200px;\n    background: #eee;\n  }\n  .left {\n    width: 200px;\n    background-color: red;\n    height: 100%;\n  }\n  .main {\n    background-color: yellow;\n    flex: 1;\n  }\n  .right {\n    width: 200px;\n    background-color: green;\n  }\n</style>\n\n<div class="container">\n  <div class="left">1</div>\n  <div class="main">2</div>\n  <div class="right">3</div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 绝对定位布局\n<style>\n  .container {\n    position: relative;\n    background: #eee;\n    height: 200px;\n  }\n  .main {\n    height: 200px;\n    margin: 0 120px;\n    background-color: yellow;\n  }\n  .left {\n    position: absolute;\n    width: 100px;\n    height: 200px;\n    left: 0;\n    top: 0;\n    background-color: red;\n  }\n  .right {\n    position: absolute;\n    width: 100px;\n    height: 200px;\n    background-color: green;\n    right: 0;\n    top: 0;\n  }\n</style>\n<div class="container">\n  <div class="left">1</div>\n  <div class="main">2</div>\n  <div class="right">3</div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# 圣杯布局\n<style>\n  .container {\n    margin-left: 120px;\n    margin-right: 220px;\n  }\n  .main {\n    float: left;\n    width: 100%;\n    height: 300px;\n    background-color: yellow;\n  }\n  .left {\n    float: left;\n    width: 100px;\n    height: 300px;\n    margin-left: -100%;\n    position: relative;\n    left: -120px;\n    background-color: blue;\n  }\n  .right {\n    float: left;\n    width: 200px;\n    height: 300px;\n    margin-left: -200px;\n    position: relative;\n    right: -220px;\n    background-color: green;\n  }\n</style>\n<div class="container">\n  <div class="main"></div>\n  <div class="left"></div>\n  <div class="right"></div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n# 双飞翼布局\n<style>\n  .content {\n    float: left;\n    width: 100%;\n  }\n  .main {\n    height: 200px;\n    margin-left: 110px;\n    margin-right: 220px;\n    background-color: yellow;\n  }\n  .left {\n    float: left;\n    height: 200px;\n    width: 100px;\n    margin-left: -100%;\n    background-color: red;\n  }\n  .right {\n    width: 200px;\n    height: 200px;\n    float: right;\n    margin-left: -200px;\n    background-color: green;\n  }\n</style>\n<div class="content">\n  <div class="main"></div>\n</div>\n<div class="left"></div>\n<div class="right"></div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31',normalizedContent:'# 布局\n# flex 布局\n<style>\n  .container {\n    display: flex;\n    justify-content: center;\n    height: 200px;\n    background: #eee;\n  }\n  .left {\n    width: 200px;\n    background-color: red;\n    height: 100%;\n  }\n  .main {\n    background-color: yellow;\n    flex: 1;\n  }\n  .right {\n    width: 200px;\n    background-color: green;\n  }\n</style>\n\n<div class="container">\n  <div class="left">1</div>\n  <div class="main">2</div>\n  <div class="right">3</div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n# 绝对定位布局\n<style>\n  .container {\n    position: relative;\n    background: #eee;\n    height: 200px;\n  }\n  .main {\n    height: 200px;\n    margin: 0 120px;\n    background-color: yellow;\n  }\n  .left {\n    position: absolute;\n    width: 100px;\n    height: 200px;\n    left: 0;\n    top: 0;\n    background-color: red;\n  }\n  .right {\n    position: absolute;\n    width: 100px;\n    height: 200px;\n    background-color: green;\n    right: 0;\n    top: 0;\n  }\n</style>\n<div class="container">\n  <div class="left">1</div>\n  <div class="main">2</div>\n  <div class="right">3</div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n# 圣杯布局\n<style>\n  .container {\n    margin-left: 120px;\n    margin-right: 220px;\n  }\n  .main {\n    float: left;\n    width: 100%;\n    height: 300px;\n    background-color: yellow;\n  }\n  .left {\n    float: left;\n    width: 100px;\n    height: 300px;\n    margin-left: -100%;\n    position: relative;\n    left: -120px;\n    background-color: blue;\n  }\n  .right {\n    float: left;\n    width: 200px;\n    height: 300px;\n    margin-left: -200px;\n    position: relative;\n    right: -220px;\n    background-color: green;\n  }\n</style>\n<div class="container">\n  <div class="main"></div>\n  <div class="left"></div>\n  <div class="right"></div>\n</div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n# 双飞翼布局\n<style>\n  .content {\n    float: left;\n    width: 100%;\n  }\n  .main {\n    height: 200px;\n    margin-left: 110px;\n    margin-right: 220px;\n    background-color: yellow;\n  }\n  .left {\n    float: left;\n    height: 200px;\n    width: 100px;\n    margin-left: -100%;\n    background-color: red;\n  }\n  .right {\n    width: 200px;\n    height: 200px;\n    float: right;\n    margin-left: -200px;\n    background-color: green;\n  }\n</style>\n<div class="content">\n  <div class="main"></div>\n</div>\n<div class="left"></div>\n<div class="right"></div>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31',charsets:{cjk:!0}},{frontmatter:{layout:"Tags",title:"Tags",readingShow:"top"},regularPath:"/tag/",key:"v-b1564aac",path:"/tag/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"FrontmatterKey",title:"Categories",readingShow:"top"},regularPath:"/categories/",key:"v-ef9325c4",path:"/categories/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"TimeLines",title:"Timeline",readingShow:"top"},regularPath:"/timeline/",key:"v-6319eb4e",path:"/timeline/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"mongodb Tags",readingShow:"top"},regularPath:"/tag/mongodb/",key:"v-88d642b2",path:"/tag/mongodb/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"mysql Tags",readingShow:"top"},regularPath:"/tag/mysql/",key:"v-6ee7f212",path:"/tag/mysql/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"CSR & SSR Tags",readingShow:"top"},regularPath:"/tag/CSR%20&%20SSR/",key:"v-21fd6d65",path:"/tag/CSR & SSR/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"angular.js Tags",readingShow:"top"},regularPath:"/tag/angular.js/",key:"v-1fa34910",path:"/tag/angular.js/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"微信小程序 Tags",readingShow:"top"},regularPath:"/tag/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/",key:"v-81b55818",path:"/tag/微信小程序/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"blog Tags",readingShow:"top"},regularPath:"/tag/blog/",key:"v-1559f73a",path:"/tag/blog/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"graphql Tags",readingShow:"top"},regularPath:"/tag/graphql/",key:"v-55654be0",path:"/tag/graphql/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"github Tags",readingShow:"top"},regularPath:"/tag/github/",key:"v-1f67da7c",path:"/tag/github/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"性能优化 Tags",readingShow:"top"},regularPath:"/tag/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/",key:"v-5a6429c5",path:"/tag/性能优化/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"get/post Tags",readingShow:"top"},regularPath:"/tag/get/post/",key:"v-0c89fc2c",path:"/tag/get/post/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"async&defer Tags",readingShow:"top"},regularPath:"/tag/async&defer/",key:"v-20a1875e",path:"/tag/async&defer/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"Cookie Tags",readingShow:"top"},regularPath:"/tag/Cookie/",key:"v-ec38e77e",path:"/tag/Cookie/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"jwt Tags",readingShow:"top"},regularPath:"/tag/jwt/",key:"v-32351c1c",path:"/tag/jwt/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"token Tags",readingShow:"top"},regularPath:"/tag/token/",key:"v-58258f00",path:"/tag/token/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"html/render Tags",readingShow:"top"},regularPath:"/tag/html/render/",key:"v-8976f2c2",path:"/tag/html/render/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"cors Tags",readingShow:"top"},regularPath:"/tag/cors/",key:"v-153af490",path:"/tag/cors/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"XMLHttpRequest Tags",readingShow:"top"},regularPath:"/tag/XMLHttpRequest/",key:"v-073a6dd5",path:"/tag/XMLHttpRequest/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"array Tags",readingShow:"top"},regularPath:"/tag/array/",key:"v-98a2e7c0",path:"/tag/array/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"client Tags",readingShow:"top"},regularPath:"/tag/client/",key:"v-213537da",path:"/tag/client/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"offset Tags",readingShow:"top"},regularPath:"/tag/offset/",key:"v-dcc23fdc",path:"/tag/offset/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"scroll Tags",readingShow:"top"},regularPath:"/tag/scroll/",key:"v-60c0a518",path:"/tag/scroll/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"console Tags",readingShow:"top"},regularPath:"/tag/console/",key:"v-a51b533c",path:"/tag/console/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"Date Tags",readingShow:"top"},regularPath:"/tag/Date/",key:"v-18b15492",path:"/tag/Date/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"element Tags",readingShow:"top"},regularPath:"/tag/element/",key:"v-62655d46",path:"/tag/element/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"event Tags",readingShow:"top"},regularPath:"/tag/event/",key:"v-8a96d802",path:"/tag/event/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"function Tags",readingShow:"top"},regularPath:"/tag/function/",key:"v-11e48bed",path:"/tag/function/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"object Tags",readingShow:"top"},regularPath:"/tag/object/",key:"v-ea051234",path:"/tag/object/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"regexp Tags",readingShow:"top"},regularPath:"/tag/regexp/",key:"v-2ea4ba5c",path:"/tag/regexp/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"string Tags",readingShow:"top"},regularPath:"/tag/string/",key:"v-7dc05454",path:"/tag/string/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"this Tags",readingShow:"top"},regularPath:"/tag/this/",key:"v-13627632",path:"/tag/this/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"工具函数 Tags",readingShow:"top"},regularPath:"/tag/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/",key:"v-1e773d48",path:"/tag/工具函数/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"算法 Tags",readingShow:"top"},regularPath:"/tag/%E7%AE%97%E6%B3%95/",key:"v-89abd2d6",path:"/tag/算法/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"currying Tags",readingShow:"top"},regularPath:"/tag/currying/",key:"v-428f4e2a",path:"/tag/currying/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"debounce Tags",readingShow:"top"},regularPath:"/tag/debounce/",key:"v-05086f9c",path:"/tag/debounce/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"throttle Tags",readingShow:"top"},regularPath:"/tag/throttle/",key:"v-6169424a",path:"/tag/throttle/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"mobile Tags",readingShow:"top"},regularPath:"/tag/mobile/",key:"v-36f135e3",path:"/tag/mobile/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"typeOf Tags",readingShow:"top"},regularPath:"/tag/typeOf/",key:"v-89df5498",path:"/tag/typeOf/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"instanceof Tags",readingShow:"top"},regularPath:"/tag/instanceof/",key:"v-21ad0b99",path:"/tag/instanceof/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"_hasOwnProperty Tags",readingShow:"top"},regularPath:"/tag/_hasOwnProperty/",key:"v-fd305f8e",path:"/tag/_hasOwnProperty/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"centos7 Tags",readingShow:"top"},regularPath:"/tag/centos7/",key:"v-c6fb9be4",path:"/tag/centos7/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"linux Tags",readingShow:"top"},regularPath:"/tag/linux/",key:"v-7418fe36",path:"/tag/linux/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"manjaro Tags",readingShow:"top"},regularPath:"/tag/manjaro/",key:"v-51bc7eea",path:"/tag/manjaro/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"ubuntu Tags",readingShow:"top"},regularPath:"/tag/ubuntu/",key:"v-6dfb9784",path:"/tag/ubuntu/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"vim Tags",readingShow:"top"},regularPath:"/tag/vim/",key:"v-322a9e02",path:"/tag/vim/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"react Tags",readingShow:"top"},regularPath:"/tag/react/",key:"v-601bec8c",path:"/tag/react/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"docker Tags",readingShow:"top"},regularPath:"/tag/docker/",key:"v-5ae80825",path:"/tag/docker/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"gitlab Tags",readingShow:"top"},regularPath:"/tag/gitlab/",key:"v-1f64cdac",path:"/tag/gitlab/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"网络协议 Tags",readingShow:"top"},regularPath:"/tag/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/",key:"v-3c2760d0",path:"/tag/网络协议/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"nginx Tags",readingShow:"top"},regularPath:"/tag/nginx/",key:"v-6d82ba02",path:"/tag/nginx/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"node.js Tags",readingShow:"top"},regularPath:"/tag/node.js/",key:"v-122bf2c4",path:"/tag/node.js/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"travis-ci Tags",readingShow:"top"},regularPath:"/tag/travis-ci/",key:"v-5e346c83",path:"/tag/travis-ci/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"vagrant Tags",readingShow:"top"},regularPath:"/tag/vagrant/",key:"v-728b15a8",path:"/tag/vagrant/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"ascii Tags",readingShow:"top"},regularPath:"/tag/ascii/",key:"v-989423b0",path:"/tag/ascii/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"commitizen Tags",readingShow:"top"},regularPath:"/tag/commitizen/",key:"v-0cb74bd8",path:"/tag/commitizen/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"proxy Tags",readingShow:"top"},regularPath:"/tag/proxy/",key:"v-657392aa",path:"/tag/proxy/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"editorConfig Tags",readingShow:"top"},regularPath:"/tag/editorConfig/",key:"v-7ba8bed4",path:"/tag/editorConfig/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"eslint Tags",readingShow:"top"},regularPath:"/tag/eslint/",key:"v-d1c09a98",path:"/tag/eslint/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"vue-cli Tags",readingShow:"top"},regularPath:"/tag/vue-cli/",key:"v-e55ae0c0",path:"/tag/vue-cli/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"git Tags",readingShow:"top"},regularPath:"/tag/git/",key:"v-32383f72",path:"/tag/git/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"prettier Tags",readingShow:"top"},regularPath:"/tag/prettier/",key:"v-3450f8dc",path:"/tag/prettier/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"sentry Tags",readingShow:"top"},regularPath:"/tag/sentry/",key:"v-63f45646",path:"/tag/sentry/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"editor Tags",readingShow:"top"},regularPath:"/tag/editor/",key:"v-7d61be78",path:"/tag/editor/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"webpack Tags",readingShow:"top"},regularPath:"/tag/webpack/",key:"v-b53ec9e8",path:"/tag/webpack/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"gulp Tags",readingShow:"top"},regularPath:"/tag/gulp/",key:"v-14c4f1da",path:"/tag/gulp/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"pxtorem Tags",readingShow:"top"},regularPath:"/tag/pxtorem/",key:"v-4c00a6fc",path:"/tag/pxtorem/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"vue Tags",readingShow:"top"},regularPath:"/tag/vue/",key:"v-322a45da",path:"/tag/vue/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"浏览器 Tags",readingShow:"top"},regularPath:"/tag/%E6%B5%8F%E8%A7%88%E5%99%A8/",key:"v-0c5c4c5e",path:"/tag/浏览器/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"ie Tags",readingShow:"top"},regularPath:"/tag/ie/",key:"v-e8d878ae",path:"/tag/ie/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"css Tags",readingShow:"top"},regularPath:"/tag/css/",key:"v-323b9794",path:"/tag/css/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"emmet Tags",readingShow:"top"},regularPath:"/tag/emmet/",key:"v-8b8d7cb6",path:"/tag/emmet/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"html Tags",readingShow:"top"},regularPath:"/tag/html/",key:"v-14a9a50c",path:"/tag/html/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"less Tags",readingShow:"top"},regularPath:"/tag/less/",key:"v-14465d68",path:"/tag/less/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"1像素问题 Tags",readingShow:"top"},regularPath:"/tag/1%E5%83%8F%E7%B4%A0%E9%97%AE%E9%A2%98/",key:"v-c9be2158",path:"/tag/1像素问题/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"viewport Tags",readingShow:"top"},regularPath:"/tag/viewport/",key:"v-851ebe42",path:"/tag/viewport/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"rem Tags",readingShow:"top"},regularPath:"/tag/rem/",key:"v-322e5f02",path:"/tag/rem/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"sass Tags",readingShow:"top"},regularPath:"/tag/sass/",key:"v-1384b752",path:"/tag/sass/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"清除浮动 Tags",readingShow:"top"},regularPath:"/tag/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/",key:"v-7630b09a",path:"/tag/清除浮动/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"css三角形 Tags",readingShow:"top"},regularPath:"/tag/css%E4%B8%89%E8%A7%92%E5%BD%A2/",key:"v-0c6f8b40",path:"/tag/css三角形/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"百分比单位 Tags",readingShow:"top"},regularPath:"/tag/%E7%99%BE%E5%88%86%E6%AF%94%E5%8D%95%E4%BD%8D/",key:"v-0c3f0c0d",path:"/tag/百分比单位/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"字体超出省略 Tags",readingShow:"top"},regularPath:"/tag/%E5%AD%97%E4%BD%93%E8%B6%85%E5%87%BA%E7%9C%81%E7%95%A5/",key:"v-1dbca4e8",path:"/tag/字体超出省略/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"layout Tags",readingShow:"top"},regularPath:"/tag/layout/",key:"v-2923c74a",path:"/tag/layout/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"faq Categories",readingShow:"top"},regularPath:"/categories/faq/",key:"v-7f0e85f7",path:"/categories/faq/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"libs Categories",readingShow:"top"},regularPath:"/categories/libs/",key:"v-631a3903",path:"/categories/libs/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"server Categories",readingShow:"top"},regularPath:"/categories/server/",key:"v-71cbee6e",path:"/categories/server/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"tools Categories",readingShow:"top"},regularPath:"/categories/tools/",key:"v-0e2e1052",path:"/categories/tools/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"web Categories",readingShow:"top"},regularPath:"/categories/web/",key:"v-7f164d79",path:"/categories/web/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 2 - libs | Categories",readingShow:"top"},regularPath:"/categories/libs/page/2/",key:"v-133d794c",path:"/categories/libs/page/2/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 2 - server | Categories",readingShow:"top"},regularPath:"/categories/server/page/2/",key:"v-6330a0e2",path:"/categories/server/page/2/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 2 - tools | Categories",readingShow:"top"},regularPath:"/categories/tools/page/2/",key:"v-6b1a652b",path:"/categories/tools/page/2/",headersStr:null,content:"",normalizedContent:"",charsets:{}}],themeConfig:{search:!0,searchMaxSuggestions:10,sidebarDepth:2,repo:"chengzao/guide",docsDir:"docs",logo:"/logo.png",authorAvatar:"/logo.png",lastUpdated:"Last Updated",smoothScroll:!0,navbar:!0,nav:[{text:"JavaScript",link:"/js/"},{text:"Frame",items:[{text:"Guide",link:"/frame/"},{text:"Vue.js",link:"/vueJs/"},{text:"React.js",link:"/reactJs/"}]},{text:"FAQ",items:[{text:"issues",link:"/issues/"},{text:"libs",link:"/libs/"},{text:"tools",link:"/tools/"}]},{text:"Server",items:[{text:"serve",link:"/serve/"}]}],sidebar:{"/js/":["","array","basic","client-offset","console","date","dom","event","func","object","oop","operation","regExp","string","this"],"/issues/":["","graphql-github","issue","jwt","render-html","request"],"/libs/":["","20200730","binaryTree","currying","debounce-throttle","document","event","mobile","regexp","sort","types"],"/serve/":["","docker","docker-compose","docker-stu","gitlab","http","nginx","nginx-centos7","nginx-use","nodejs","travis","vagrant"],"/tools/":["","commitizen","dev-proxy","editorConfig","eslint","git","git-bare","git-example","github-actions","prettier","sentry","vscode/","webpack"],"/frame/":["","angular","wxminiapp"],"/vueJs/":["","vue-issues","vue-libs","vue-pagination","vue-plugins","vue-props","vue-router","vue-slot"],"/reactJs/":["","rc-canvas-poster","rc-hooks-reducer","rc-lifecycle","rc-redux"]},codeTheme:"okaidia",type:"blog",blogConfig:{category:{location:2,text:"Category"},tag:{location:3,text:"Tag"}},friendLink:[{title:"vuepress",desc:"Vue-powered Static Site Generator",link:"https://vuepress.vuejs.org/"},{title:"vuepress-theme-reco",desc:"A simple and beautiful vuepress Blog & Doc theme.",avatar:"https://vuepress-theme-reco.recoluan.com/icon_vuepress_reco.png",link:"https://vuepress-theme-reco.recoluan.com"}]},locales:{"/":{lang:"zh-CN",path:"/"}}},Pe=(t(49),t(283),t(284),t(38),t(285),t(81)),Ne={computed:{$recoPosts:function(){var n=this.$categories.list.reduce((function(n,e){return[].concat(Object(Qn.a)(n),Object(Qn.a)(e.pages))}),[]);return n=Object(Pe.a)(n,!1),Object(Pe.c)(n),n},$recoPostsForTimeline:function(){var n=this.$recoPosts,e={},t=[];n=Object(Pe.a)(n,!0),this.pages=0==n.length?[]:n;for(var r=0,o=n.length;r<o;r++){var a=n[r],i=Me(a.frontmatter.date,"year");e[i]?e[i].push(a):e[i]=[a]}for(var s in e){var l=e[s];Object(Pe.b)(l),t.unshift({year:s,data:l})}return t},$showSubSideBar:function(){var n=this.$themeConfig,e=n.subSidebar,t=n.sidebar,r=this.$frontmatter,o=r.subSidebar,a=r.sidebar,i=this.$page.headers||[];return!([o,a].indexOf(!1)>-1)&&([o,a].indexOf("auto")>-1&&i.length>0||[e,t].indexOf("auto")>-1&&i.length>0)}}};function Me(n,e){n=function(n){var e=new Date(n).toJSON();return new Date(+new Date(e)+288e5).toISOString().replace(/T/g," ").replace(/\.[\d]{3}Z/,"").replace(/-/g,"/")}(n);var t=new Date(n),r=t.getFullYear(),o=t.getMonth()+1,a=t.getDate();return"year"==e?r:"".concat(o,"-").concat(a)}var Re=t(11),Le={homeBlog:{article:"文章",tag:"标签",category:"分类",friendLink:"友情链接"},tag:{all:"全部"}},De={homeBlog:{article:"文章",tag:"標簽",category:"分類",friendLink:"友情鏈接"},tag:{all:"全部"}},qe={homeBlog:{article:"Article",tag:"Tag",category:"Category",friendLink:"Friend Link"},tag:{all:"All"}},Fe={homeBlog:{article:"文章",tag:"ラベル",category:"分類",friendLink:"友情リンク"},tag:{all:"全部"}},Ue={homeBlog:{article:"글",tag:"태그",category:"분류",friendLink:"링크 참조"},tag:{all:"전체"}},Be={computed:{$recoLocales:function(){var n=this.$themeLocaleConfig.recoLocales||{};return/^zh\-(CN|SG)$/.test(this.$lang)?Object(Re.a)(Object(Re.a)({},Le),n):/^zh\-(HK|MO|TW)$/.test(this.$lang)?Object(Re.a)(Object(Re.a)({},De),n):/^ja\-JP$/.test(this.$lang)?Object(Re.a)(Object(Re.a)({},Fe),n):/^ko\-KR$/.test(this.$lang)?Object(Re.a)(Object(Re.a)({},Ue),n):Object(Re.a)(Object(Re.a)({},qe),n)}}},He=t(29),Ve=t(107),We=t(156);t(445);o.default.component("CodeBlock",(function(){return Promise.all([t.e(0),t.e(109)]).then(t.bind(null,676))})),o.default.component("todo-Todo",(function(){return Promise.all([t.e(0),t.e(2)]).then(t.bind(null,677))})),o.default.component("todo-index",(function(){return t.e(112).then(t.bind(null,678))})),o.default.component("Badge",(function(){return Promise.all([t.e(0),t.e(111)]).then(t.bind(null,777))}));t(287);var Xe={name:"BackToTop",data:function(){return{visible:!1,customStyle:{right:"1rem",bottom:"6rem",width:"2.5rem",height:"2.5rem","border-radius":".25rem","line-height":"2.5rem"},visibilityHeight:400}},mounted:function(){window.addEventListener("scroll",this.throttle(this.handleScroll,500))},beforeDestroy:function(){window.removeEventListener("scroll",this.throttle(this.handleScroll,500))},methods:{handleScroll:function(){this.visible=window.pageYOffset>this.visibilityHeight},backToTop:function(){window.scrollTo(0,0)},throttle:function(n,e){var t=null,r=Date.now();return function(){var o=Date.now(),a=e-(o-r),i=this,s=arguments;clearTimeout(t),a<=0?(n.apply(i,s),r=Date.now()):t=setTimeout(n,a)}}}},Ge=(t(446),Object(Ie.a)(Xe,(function(){var n=this.$createElement,e=this._self._c||n;return e("transition",{attrs:{name:"fade"}},[e("div",{directives:[{name:"show",rawName:"v-show",value:this.visible,expression:"visible"}],staticClass:"back-to-ceiling",style:this.customStyle,on:{click:this.backToTop}},[e("svg",{staticClass:"icon",attrs:{t:"1574745035067",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"5404"}},[e("path",{attrs:{d:"M526.60727968 10.90185116a27.675 27.675 0 0 0-29.21455937 0c-131.36607665 82.28402758-218.69155461 228.01873535-218.69155402 394.07834331a462.20625001 462.20625001 0 0 0 5.36959153 69.94390903c1.00431239 6.55289093-0.34802892 13.13561351-3.76865779 18.80351572-32.63518765 54.11355614-51.75690182 118.55860487-51.7569018 187.94566865a371.06718723 371.06718723 0 0 0 11.50484808 91.98906777c6.53300375 25.50556257 41.68394495 28.14064038 52.69160883 4.22606766 17.37162448-37.73630017 42.14135425-72.50938081 72.80769204-103.21549295 2.18761121 3.04276886 4.15646224 6.24463696 6.40373557 9.22774369a1871.4375 1871.4375 0 0 0 140.04691725 5.34970492 1866.36093723 1866.36093723 0 0 0 140.04691723-5.34970492c2.24727335-2.98310674 4.21612437-6.18497483 6.3937923-9.2178004 30.66633723 30.70611158 55.4360664 65.4791928 72.80769147 103.21549355 11.00766384 23.91457269 46.15860503 21.27949489 52.69160879-4.22606768a371.15156223 371.15156223 0 0 0 11.514792-91.99901164c0-69.36717486-19.13165746-133.82216804-51.75690182-187.92578088-3.42062944-5.66790279-4.76302748-12.26056868-3.76865837-18.80351632a462.20625001 462.20625001 0 0 0 5.36959269-69.943909c-0.00994388-166.08943902-87.32547796-311.81420293-218.6915546-394.09823051zM605.93803103 357.87693858a93.93749974 93.93749974 0 1 1-187.89594924 6.1e-7 93.93749974 93.93749974 0 0 1 187.89594924-6.1e-7z","p-id":"5405"}}),e("path",{attrs:{d:"M429.50777625 765.63860547C429.50777625 803.39355007 466.44236686 1000.39046097 512.00932183 1000.39046097c45.56695499 0 82.4922232-197.00623328 82.5015456-234.7518555 0-37.75494459-36.9345906-68.35043303-82.4922232-68.34111062-45.57627738-0.00932239-82.52019037 30.59548842-82.51086798 68.34111062z","p-id":"5406"}})])])])}),[],!1,null,"c6073ba8",null).exports),Je=(t(447),Object(Ie.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{attrs:{id:"loader-wrapper"}},[t("div",{staticClass:"loader-main"},n._l(4,(function(n){return t("div",{key:"out"+n})})),0),n._v(" "),n.$frontmatter.home?t("h3",{staticClass:"title"},[n._v(n._s(n.$site.title||n.$localeConfig.title))]):n._e(),n._v(" "),n.$frontmatter.home?t("p",{staticClass:"description"},[n._v(n._s(n.$site.description||n.$localeConfig.description))]):n._e()])}),[],!1,null,"d48f4d20",null).exports),Ye=(t(448),t(274),{prev:"上一页",next:"下一页",go:"前往",jump:"跳转至"}),Ke={prev:"上壹頁",next:"下壹頁",go:"前往",jump:"跳轉至"},Qe={prev:"Prev",next:"Next",go:"Go",jump:"Jump To"},Ze={prev:"前のページ",next:"次のページ",go:"へ",jump:"ジャンプ"},nt={prev:"이전 페이지",next:"다음 페이지",go:"행",jump:"건너뛰기"};var et={data:function(){return{changePage:"",pageSize:10}},props:{total:{type:Number,default:10},perPage:{type:Number,default:10},currentPage:{type:Number,default:1}},computed:{pages:function(){var n=this.pageSize||this.perPage;return Math.ceil(this.total/n)},show:function(){return this.pages&&1!=this.pages},efont:function(){return!(this.pages<=7)&&this.currentPage>5},indexs:function(){var n=1,e=this.pages,t=[];for(this.pages>=7&&(this.currentPage>5&&this.currentPage<this.pages-4?(n=Number(this.currentPage)-3,e=Number(this.currentPage)+3):this.currentPage<=5?(n=1,e=7):(e=this.pages,n=this.pages-6));n<=e;)t.push(n),n++;return t},pagationLocales:function(){return e=(n=this).$lang,t=n.$recoLocales,(t=void 0===t?{}:t).pagation||(/^zh\-(CN|SG)$/.test(e)?Ye:/^zh\-(HK|MO|TW)$/.test(e)?Ke:/^ja\-JP$/.test(e)?Ze:/^ko\-KR$/.test(e)?nt:Qe);var n,e,t}},methods:{goPrev:function(){var n=this.currentPage;this.currentPage>1&&this.emit(--n)},goNext:function(){var n=this.currentPage;n<this.pages&&this.emit(++n)},jumpPage:function(n){var e=parseInt(n);e<=this.pages&&e>0?this.emit(e):alert("请输入大于0，并且小于".concat(this.pages,"的页码！"))},emit:function(n){this.$emit("getCurrentPage",n)}}},tt=(t(450),Object(Ie.a)(et,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{directives:[{name:"show",rawName:"v-show",value:n.show,expression:"show"}],staticClass:"pagation"},[t("div",{staticClass:"pagation-list"},[t("span",{directives:[{name:"show",rawName:"v-show",value:n.currentPage>1,expression:"currentPage > 1"}],staticClass:"jump",attrs:{unselectable:"on"},on:{click:n.goPrev}},[n._v(n._s(n.pagationLocales.prev))]),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.efont,expression:"efont"}],staticClass:"jump",on:{click:function(e){return n.jumpPage(1)}}},[n._v("1")]),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.efont,expression:"efont"}],staticClass:"ellipsis"},[n._v("...")]),n._v(" "),n._l(n.indexs,(function(e){return t("span",{key:e,staticClass:"jump",class:{bgprimary:n.currentPage==e},on:{click:function(t){return n.jumpPage(e)}}},[n._v(n._s(e))])})),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.efont&&n.currentPage<n.pages-4,expression:"efont&&currentPage<pages-4"}],staticClass:"ellipsis"},[n._v("...")]),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.efont&&n.currentPage<n.pages-4,expression:"efont&&currentPage<pages-4"}],staticClass:"jump",on:{click:function(e){return n.jumpPage(n.pages)}}},[n._v(n._s(n.pages))]),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.currentPage<n.pages,expression:"currentPage < pages"}],staticClass:"jump",on:{click:n.goNext}},[n._v(n._s(n.pagationLocales.next))]),n._v(" "),t("span",{staticClass:"jumppoint"},[n._v(n._s(n.pagationLocales.jump))]),n._v(" "),t("span",{staticClass:"jumpinp"},[t("input",{directives:[{name:"model",rawName:"v-model",value:n.changePage,expression:"changePage"}],attrs:{type:"text"},domProps:{value:n.changePage},on:{input:function(e){e.target.composing||(n.changePage=e.target.value)}}})]),n._v(" "),t("span",{staticClass:"jump gobtn",on:{click:function(e){return n.jumpPage(n.changePage)}}},[n._v(n._s(n.pagationLocales.go))])],2)])}),[],!1,null,"094d08e4",null).exports),rt={name:"Valine",props:{options:{type:Object,default:function(){return{}}}},mounted:function(){this.initValine()},methods:{initValine:function(){new(t(451))(Object(Re.a)({el:"#valine",placeholder:"just go go",notify:!1,verify:!1,avatar:"retro",visitor:!0,recordIP:!1,path:window.location.pathname},this.options))}},watch:{$route:function(n,e){var t=this;n.path!==e.path&&setTimeout((function(){t.initValine()}),300)}}},ot=(t(452),Object(Ie.a)(rt,(function(){var n=this.$createElement;this._self._c;return this._m(0)}),[function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"valine-wrapper"},[e("div",{attrs:{id:"valine"}})])}],!1,null,null,null).exports),at=t(4);function it(n){return Object(at.a)((function(e,t){void 0===e.inject&&(e.inject={}),Array.isArray(e.inject)||(e.inject[t]=n||t)}))}function st(n){return"function"!=typeof n||!n.managed&&!n.managedReactive}function lt(n){var e=function(){var t=this,r="function"==typeof n?n.call(this):n;for(var o in(r=Object.create(r||null))[ct]=Object.create(this[ct]||{}),e.managed)r[e.managed[o]]=this[o];var a=function(n){r[e.managedReactive[n]]=i[n],Object.defineProperty(r[ct],e.managedReactive[n],{enumerable:!0,configurable:!0,get:function(){return t[n]}})},i=this;for(var o in e.managedReactive)a(o);return r};return e.managed={},e.managedReactive={},e}var ct="__reactiveInject__";function dt(n){Array.isArray(n.inject)||(n.inject=n.inject||{},n.inject[ct]={from:ct,default:{}})}var ut="undefined"!=typeof Reflect&&void 0!==Reflect.getMetadata;function pt(n,e,t){if(ut&&!Array.isArray(n)&&"function"!=typeof n&&!n.hasOwnProperty("type")&&void 0===n.type){var r=Reflect.getMetadata("design:type",e,t);r!==Object&&(n.type=r)}}function mt(n){return void 0===n&&(n={}),function(e,t){pt(n,e,t),Object(at.a)((function(e,t){(e.props||(e.props={}))[t]=n}))(e,t)}}function ht(n,e){void 0===e&&(e={});var t=e.deep,r=void 0!==t&&t,o=e.immediate,a=void 0!==o&&o;return Object(at.a)((function(e,t){"object"!=typeof e.watch&&(e.watch=Object.create(null));var o=e.watch;"object"!=typeof o[n]||Array.isArray(o[n])?void 0===o[n]&&(o[n]=[]):o[n]=[o[n]],o[n].push({handler:t,deep:r,immediate:a})}))}var ft=t(62);const gt=n=>Object(ft.stringify)(n),vt=(n,e)=>`${n}${Object(ft.stringify)(e,{addQueryPrefix:!0})}`,bt=(n,e)=>`${n.replace(/\/$/,"")}/${e.replace(/^\//,"")}`;var yt=t(271),xt=t.n(yt);const wt=n=>xt()(n,"YYYY-MM-DD HH:mm:ss"),kt=n=>(n.split("#")[0]||"").split("?")[0]||"",jt=n=>Object(ft.parse)(n,{ignoreQueryPrefix:!0})
/*!
 * vue-i18n v8.22.2 
 * (c) 2020 kazuya kawaguchi
 * Released under the MIT License.
 */;var _t=["compactDisplay","currency","currencyDisplay","currencySign","localeMatcher","notation","numberingSystem","signDisplay","style","unit","unitDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits"];function Tt(n,e){"undefined"!=typeof console&&(console.warn("[vue-i18n] "+n),e&&console.warn(e.stack))}var St=Array.isArray;function Ct(n){return null!==n&&"object"==typeof n}function zt(n){return"string"==typeof n}var $t=Object.prototype.toString;function It(n){return"[object Object]"===$t.call(n)}function Ot(n){return null==n}function Et(n){return"function"==typeof n}function At(){for(var n=[],e=arguments.length;e--;)n[e]=arguments[e];var t=null,r=null;return 1===n.length?Ct(n[0])||St(n[0])?r=n[0]:"string"==typeof n[0]&&(t=n[0]):2===n.length&&("string"==typeof n[0]&&(t=n[0]),(Ct(n[1])||St(n[1]))&&(r=n[1])),{locale:t,params:r}}function Pt(n){return JSON.parse(JSON.stringify(n))}function Nt(n,e){return!!~n.indexOf(e)}var Mt=Object.prototype.hasOwnProperty;function Rt(n,e){return Mt.call(n,e)}function Lt(n){for(var e=arguments,t=Object(n),r=1;r<arguments.length;r++){var o=e[r];if(null!=o){var a=void 0;for(a in o)Rt(o,a)&&(Ct(o[a])?t[a]=Lt(t[a],o[a]):t[a]=o[a])}}return t}function Dt(n,e){if(n===e)return!0;var t=Ct(n),r=Ct(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var o=St(n),a=St(e);if(o&&a)return n.length===e.length&&n.every((function(n,t){return Dt(n,e[t])}));if(o||a)return!1;var i=Object.keys(n),s=Object.keys(e);return i.length===s.length&&i.every((function(t){return Dt(n[t],e[t])}))}catch(n){return!1}}function qt(n){return null!=n&&Object.keys(n).forEach((function(e){"string"==typeof n[e]&&(n[e]=n[e].replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"))})),n}var Ft={beforeCreate:function(){var n=this.$options;if(n.i18n=n.i18n||(n.__i18n?{}:null),n.i18n)if(n.i18n instanceof gr){if(n.__i18n)try{var e=n.i18n&&n.i18n.messages?n.i18n.messages:{};n.__i18n.forEach((function(n){e=Lt(e,JSON.parse(n))})),Object.keys(e).forEach((function(t){n.i18n.mergeLocaleMessage(t,e[t])}))}catch(n){0}this._i18n=n.i18n,this._i18nWatcher=this._i18n.watchI18nData()}else if(It(n.i18n)){var t=this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof gr?this.$root.$i18n:null;if(t&&(n.i18n.root=this.$root,n.i18n.formatter=t.formatter,n.i18n.fallbackLocale=t.fallbackLocale,n.i18n.formatFallbackMessages=t.formatFallbackMessages,n.i18n.silentTranslationWarn=t.silentTranslationWarn,n.i18n.silentFallbackWarn=t.silentFallbackWarn,n.i18n.pluralizationRules=t.pluralizationRules,n.i18n.preserveDirectiveContent=t.preserveDirectiveContent),n.__i18n)try{var r=n.i18n&&n.i18n.messages?n.i18n.messages:{};n.__i18n.forEach((function(n){r=Lt(r,JSON.parse(n))})),n.i18n.messages=r}catch(n){0}var o=n.i18n.sharedMessages;o&&It(o)&&(n.i18n.messages=Lt(n.i18n.messages,o)),this._i18n=new gr(n.i18n),this._i18nWatcher=this._i18n.watchI18nData(),(void 0===n.i18n.sync||n.i18n.sync)&&(this._localeWatcher=this.$i18n.watchLocale()),t&&t.onComponentInstanceCreated(this._i18n)}else 0;else this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof gr?this._i18n=this.$root.$i18n:n.parent&&n.parent.$i18n&&n.parent.$i18n instanceof gr&&(this._i18n=n.parent.$i18n)},beforeMount:function(){var n=this.$options;n.i18n=n.i18n||(n.__i18n?{}:null),n.i18n?(n.i18n instanceof gr||It(n.i18n))&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0):(this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof gr||n.parent&&n.parent.$i18n&&n.parent.$i18n instanceof gr)&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0)},beforeDestroy:function(){if(this._i18n){var n=this;this.$nextTick((function(){n._subscribing&&(n._i18n.unsubscribeDataChanging(n),delete n._subscribing),n._i18nWatcher&&(n._i18nWatcher(),n._i18n.destroyVM(),delete n._i18nWatcher),n._localeWatcher&&(n._localeWatcher(),delete n._localeWatcher)}))}}},Ut={name:"i18n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},path:{type:String,required:!0},locale:{type:String},places:{type:[Array,Object]}},render:function(n,e){var t=e.data,r=e.parent,o=e.props,a=e.slots,i=r.$i18n;if(i){var s=o.path,l=o.locale,c=o.places,d=a(),u=i.i(s,l,function(n){var e;for(e in n)if("default"!==e)return!1;return Boolean(e)}(d)||c?function(n,e){var t=e?function(n){0;return Array.isArray(n)?n.reduce(Ht,{}):Object.assign({},n)}(e):{};if(!n)return t;var r=(n=n.filter((function(n){return n.tag||""!==n.text.trim()}))).every(Vt);0;return n.reduce(r?Bt:Ht,t)}(d.default,c):d),p=o.tag&&!0!==o.tag||!1===o.tag?o.tag:"span";return p?n(p,t,u):u}}};function Bt(n,e){return e.data&&e.data.attrs&&e.data.attrs.place&&(n[e.data.attrs.place]=e),n}function Ht(n,e,t){return n[t]=e,n}function Vt(n){return Boolean(n.data&&n.data.attrs&&n.data.attrs.place)}var Wt,Xt={name:"i18n-n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},value:{type:Number,required:!0},format:{type:[String,Object]},locale:{type:String}},render:function(n,e){var t=e.props,r=e.parent,o=e.data,a=r.$i18n;if(!a)return null;var i=null,s=null;zt(t.format)?i=t.format:Ct(t.format)&&(t.format.key&&(i=t.format.key),s=Object.keys(t.format).reduce((function(n,e){var r;return Nt(_t,e)?Object.assign({},n,((r={})[e]=t.format[e],r)):n}),null));var l=t.locale||a.locale,c=a._ntp(t.value,l,i,s),d=c.map((function(n,e){var t,r=o.scopedSlots&&o.scopedSlots[n.type];return r?r(((t={})[n.type]=n.value,t.index=e,t.parts=c,t)):n.value})),u=t.tag&&!0!==t.tag||!1===t.tag?t.tag:"span";return u?n(u,{attrs:o.attrs,class:o.class,staticClass:o.staticClass},d):d}};function Gt(n,e,t){Kt(n,t)&&Qt(n,e,t)}function Jt(n,e,t,r){if(Kt(n,t)){var o=t.context.$i18n;(function(n,e){var t=e.context;return n._locale===t.$i18n.locale})(n,t)&&Dt(e.value,e.oldValue)&&Dt(n._localeMessage,o.getLocaleMessage(o.locale))||Qt(n,e,t)}}function Yt(n,e,t,r){if(t.context){var o=t.context.$i18n||{};e.modifiers.preserve||o.preserveDirectiveContent||(n.textContent=""),n._vt=void 0,delete n._vt,n._locale=void 0,delete n._locale,n._localeMessage=void 0,delete n._localeMessage}else Tt("Vue instance does not exists in VNode context")}function Kt(n,e){var t=e.context;return t?!!t.$i18n||(Tt("VueI18n instance does not exists in Vue instance"),!1):(Tt("Vue instance does not exists in VNode context"),!1)}function Qt(n,e,t){var r,o,a=function(n){var e,t,r,o;zt(n)?e=n:It(n)&&(e=n.path,t=n.locale,r=n.args,o=n.choice);return{path:e,locale:t,args:r,choice:o}}(e.value),i=a.path,s=a.locale,l=a.args,c=a.choice;if(i||s||l)if(i){var d=t.context;n._vt=n.textContent=null!=c?(r=d.$i18n).tc.apply(r,[i,c].concat(Zt(s,l))):(o=d.$i18n).t.apply(o,[i].concat(Zt(s,l))),n._locale=d.$i18n.locale,n._localeMessage=d.$i18n.getLocaleMessage(d.$i18n.locale)}else Tt("`path` is required in v-t directive");else Tt("value type not supported")}function Zt(n,e){var t=[];return n&&t.push(n),e&&(Array.isArray(e)||It(e))&&t.push(e),t}function nr(n){nr.installed=!0;var e;(Wt=n).version&&Number(Wt.version.split(".")[0]);(e=Wt).prototype.hasOwnProperty("$i18n")||Object.defineProperty(e.prototype,"$i18n",{get:function(){return this._i18n}}),e.prototype.$t=function(n){for(var e=[],t=arguments.length-1;t-- >0;)e[t]=arguments[t+1];var r=this.$i18n;return r._t.apply(r,[n,r.locale,r._getMessages(),this].concat(e))},e.prototype.$tc=function(n,e){for(var t=[],r=arguments.length-2;r-- >0;)t[r]=arguments[r+2];var o=this.$i18n;return o._tc.apply(o,[n,o.locale,o._getMessages(),this,e].concat(t))},e.prototype.$te=function(n,e){var t=this.$i18n;return t._te(n,t.locale,t._getMessages(),e)},e.prototype.$d=function(n){for(var e,t=[],r=arguments.length-1;r-- >0;)t[r]=arguments[r+1];return(e=this.$i18n).d.apply(e,[n].concat(t))},e.prototype.$n=function(n){for(var e,t=[],r=arguments.length-1;r-- >0;)t[r]=arguments[r+1];return(e=this.$i18n).n.apply(e,[n].concat(t))},Wt.mixin(Ft),Wt.directive("t",{bind:Gt,update:Jt,unbind:Yt}),Wt.component(Ut.name,Ut),Wt.component(Xt.name,Xt),Wt.config.optionMergeStrategies.i18n=function(n,e){return void 0===e?n:e}}var er=function(){this._caches=Object.create(null)};er.prototype.interpolate=function(n,e){if(!e)return[n];var t=this._caches[n];return t||(t=function(n){var e=[],t=0,r="";for(;t<n.length;){var o=n[t++];if("{"===o){r&&e.push({type:"text",value:r}),r="";var a="";for(o=n[t++];void 0!==o&&"}"!==o;)a+=o,o=n[t++];var i="}"===o,s=tr.test(a)?"list":i&&rr.test(a)?"named":"unknown";e.push({value:a,type:s})}else"%"===o?"{"!==n[t]&&(r+=o):r+=o}return r&&e.push({type:"text",value:r}),e}(n),this._caches[n]=t),function(n,e){var t=[],r=0,o=Array.isArray(e)?"list":Ct(e)?"named":"unknown";if("unknown"===o)return t;for(;r<n.length;){var a=n[r];switch(a.type){case"text":t.push(a.value);break;case"list":t.push(e[parseInt(a.value,10)]);break;case"named":"named"===o&&t.push(e[a.value]);break;case"unknown":0}r++}return t}(t,e)};var tr=/^(?:\d)+/,rr=/^(?:\w)+/;var or=[];or[0]={ws:[0],ident:[3,0],"[":[4],eof:[7]},or[1]={ws:[1],".":[2],"[":[4],eof:[7]},or[2]={ws:[2],ident:[3,0],0:[3,0],number:[3,0]},or[3]={ident:[3,0],0:[3,0],number:[3,0],ws:[1,1],".":[2,1],"[":[4,1],eof:[7,1]},or[4]={"'":[5,0],'"':[6,0],"[":[4,2],"]":[1,3],eof:8,else:[4,0]},or[5]={"'":[4,0],eof:8,else:[5,0]},or[6]={'"':[4,0],eof:8,else:[6,0]};var ar=/^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;function ir(n){if(null==n)return"eof";switch(n.charCodeAt(0)){case 91:case 93:case 46:case 34:case 39:return n;case 95:case 36:case 45:return"ident";case 9:case 10:case 13:case 160:case 65279:case 8232:case 8233:return"ws"}return"ident"}function sr(n){var e,t,r,o=n.trim();return("0"!==n.charAt(0)||!isNaN(n))&&(r=o,ar.test(r)?(t=(e=o).charCodeAt(0))!==e.charCodeAt(e.length-1)||34!==t&&39!==t?e:e.slice(1,-1):"*"+o)}var lr=function(){this._cache=Object.create(null)};lr.prototype.parsePath=function(n){var e=this._cache[n];return e||(e=function(n){var e,t,r,o,a,i,s,l=[],c=-1,d=0,u=0,p=[];function m(){var e=n[c+1];if(5===d&&"'"===e||6===d&&'"'===e)return c++,r="\\"+e,p[0](),!0}for(p[1]=function(){void 0!==t&&(l.push(t),t=void 0)},p[0]=function(){void 0===t?t=r:t+=r},p[2]=function(){p[0](),u++},p[3]=function(){if(u>0)u--,d=4,p[0]();else{if(u=0,void 0===t)return!1;if(!1===(t=sr(t)))return!1;p[1]()}};null!==d;)if(c++,"\\"!==(e=n[c])||!m()){if(o=ir(e),8===(a=(s=or[d])[o]||s.else||8))return;if(d=a[0],(i=p[a[1]])&&(r=void 0===(r=a[2])?e:r,!1===i()))return;if(7===d)return l}}(n))&&(this._cache[n]=e),e||[]},lr.prototype.getPathValue=function(n,e){if(!Ct(n))return null;var t=this.parsePath(e);if(0===t.length)return null;for(var r=t.length,o=n,a=0;a<r;){var i=o[t[a]];if(void 0===i)return null;o=i,a++}return o};var cr,dr=/<\/?[\w\s="/.':;#-\/]+>/,ur=/(?:@(?:\.[a-z]+)?:(?:[\w\-_|.]+|\([\w\-_|.]+\)))/g,pr=/^@(?:\.([a-z]+))?:/,mr=/[()]/g,hr={upper:function(n){return n.toLocaleUpperCase()},lower:function(n){return n.toLocaleLowerCase()},capitalize:function(n){return""+n.charAt(0).toLocaleUpperCase()+n.substr(1)}},fr=new er,gr=function(n){var e=this;void 0===n&&(n={}),!Wt&&"undefined"!=typeof window&&window.Vue&&nr(window.Vue);var t=n.locale||"en-US",r=!1!==n.fallbackLocale&&(n.fallbackLocale||"en-US"),o=n.messages||{},a=n.dateTimeFormats||{},i=n.numberFormats||{};this._vm=null,this._formatter=n.formatter||fr,this._modifiers=n.modifiers||{},this._missing=n.missing||null,this._root=n.root||null,this._sync=void 0===n.sync||!!n.sync,this._fallbackRoot=void 0===n.fallbackRoot||!!n.fallbackRoot,this._formatFallbackMessages=void 0!==n.formatFallbackMessages&&!!n.formatFallbackMessages,this._silentTranslationWarn=void 0!==n.silentTranslationWarn&&n.silentTranslationWarn,this._silentFallbackWarn=void 0!==n.silentFallbackWarn&&!!n.silentFallbackWarn,this._dateTimeFormatters={},this._numberFormatters={},this._path=new lr,this._dataListeners=[],this._componentInstanceCreatedListener=n.componentInstanceCreatedListener||null,this._preserveDirectiveContent=void 0!==n.preserveDirectiveContent&&!!n.preserveDirectiveContent,this.pluralizationRules=n.pluralizationRules||{},this._warnHtmlInMessage=n.warnHtmlInMessage||"off",this._postTranslation=n.postTranslation||null,this._escapeParameterHtml=n.escapeParameterHtml||!1,this.getChoiceIndex=function(n,t){var r=Object.getPrototypeOf(e);if(r&&r.getChoiceIndex)return r.getChoiceIndex.call(e,n,t);var o,a;return e.locale in e.pluralizationRules?e.pluralizationRules[e.locale].apply(e,[n,t]):(o=n,a=t,o=Math.abs(o),2===a?o?o>1?1:0:1:o?Math.min(o,2):0)},this._exist=function(n,t){return!(!n||!t)&&(!Ot(e._path.getPathValue(n,t))||!!n[t])},"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||Object.keys(o).forEach((function(n){e._checkLocaleMessage(n,e._warnHtmlInMessage,o[n])})),this._initVM({locale:t,fallbackLocale:r,messages:o,dateTimeFormats:a,numberFormats:i})},vr={vm:{configurable:!0},messages:{configurable:!0},dateTimeFormats:{configurable:!0},numberFormats:{configurable:!0},availableLocales:{configurable:!0},locale:{configurable:!0},fallbackLocale:{configurable:!0},formatFallbackMessages:{configurable:!0},missing:{configurable:!0},formatter:{configurable:!0},silentTranslationWarn:{configurable:!0},silentFallbackWarn:{configurable:!0},preserveDirectiveContent:{configurable:!0},warnHtmlInMessage:{configurable:!0},postTranslation:{configurable:!0}};gr.prototype._checkLocaleMessage=function(n,e,t){var r=function(n,e,t,o){if(It(t))Object.keys(t).forEach((function(a){var i=t[a];It(i)?(o.push(a),o.push("."),r(n,e,i,o),o.pop(),o.pop()):(o.push(a),r(n,e,i,o),o.pop())}));else if(St(t))t.forEach((function(t,a){It(t)?(o.push("["+a+"]"),o.push("."),r(n,e,t,o),o.pop(),o.pop()):(o.push("["+a+"]"),r(n,e,t,o),o.pop())}));else if(zt(t)){if(dr.test(t)){var a="Detected HTML in message '"+t+"' of keypath '"+o.join("")+"' at '"+e+"'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp";"warn"===n?Tt(a):"error"===n&&function(n,e){"undefined"!=typeof console&&(console.error("[vue-i18n] "+n),e&&console.error(e.stack))}(a)}}};r(e,n,t,[])},gr.prototype._initVM=function(n){var e=Wt.config.silent;Wt.config.silent=!0,this._vm=new Wt({data:n}),Wt.config.silent=e},gr.prototype.destroyVM=function(){this._vm.$destroy()},gr.prototype.subscribeDataChanging=function(n){this._dataListeners.push(n)},gr.prototype.unsubscribeDataChanging=function(n){!function(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)n.splice(t,1)}}(this._dataListeners,n)},gr.prototype.watchI18nData=function(){var n=this;return this._vm.$watch("$data",(function(){for(var e=n._dataListeners.length;e--;)Wt.nextTick((function(){n._dataListeners[e]&&n._dataListeners[e].$forceUpdate()}))}),{deep:!0})},gr.prototype.watchLocale=function(){if(!this._sync||!this._root)return null;var n=this._vm;return this._root.$i18n.vm.$watch("locale",(function(e){n.$set(n,"locale",e),n.$forceUpdate()}),{immediate:!0})},gr.prototype.onComponentInstanceCreated=function(n){this._componentInstanceCreatedListener&&this._componentInstanceCreatedListener(n,this)},vr.vm.get=function(){return this._vm},vr.messages.get=function(){return Pt(this._getMessages())},vr.dateTimeFormats.get=function(){return Pt(this._getDateTimeFormats())},vr.numberFormats.get=function(){return Pt(this._getNumberFormats())},vr.availableLocales.get=function(){return Object.keys(this.messages).sort()},vr.locale.get=function(){return this._vm.locale},vr.locale.set=function(n){this._vm.$set(this._vm,"locale",n)},vr.fallbackLocale.get=function(){return this._vm.fallbackLocale},vr.fallbackLocale.set=function(n){this._localeChainCache={},this._vm.$set(this._vm,"fallbackLocale",n)},vr.formatFallbackMessages.get=function(){return this._formatFallbackMessages},vr.formatFallbackMessages.set=function(n){this._formatFallbackMessages=n},vr.missing.get=function(){return this._missing},vr.missing.set=function(n){this._missing=n},vr.formatter.get=function(){return this._formatter},vr.formatter.set=function(n){this._formatter=n},vr.silentTranslationWarn.get=function(){return this._silentTranslationWarn},vr.silentTranslationWarn.set=function(n){this._silentTranslationWarn=n},vr.silentFallbackWarn.get=function(){return this._silentFallbackWarn},vr.silentFallbackWarn.set=function(n){this._silentFallbackWarn=n},vr.preserveDirectiveContent.get=function(){return this._preserveDirectiveContent},vr.preserveDirectiveContent.set=function(n){this._preserveDirectiveContent=n},vr.warnHtmlInMessage.get=function(){return this._warnHtmlInMessage},vr.warnHtmlInMessage.set=function(n){var e=this,t=this._warnHtmlInMessage;if(this._warnHtmlInMessage=n,t!==n&&("warn"===n||"error"===n)){var r=this._getMessages();Object.keys(r).forEach((function(n){e._checkLocaleMessage(n,e._warnHtmlInMessage,r[n])}))}},vr.postTranslation.get=function(){return this._postTranslation},vr.postTranslation.set=function(n){this._postTranslation=n},gr.prototype._getMessages=function(){return this._vm.messages},gr.prototype._getDateTimeFormats=function(){return this._vm.dateTimeFormats},gr.prototype._getNumberFormats=function(){return this._vm.numberFormats},gr.prototype._warnDefault=function(n,e,t,r,o,a){if(!Ot(t))return t;if(this._missing){var i=this._missing.apply(null,[n,e,r,o]);if(zt(i))return i}else 0;if(this._formatFallbackMessages){var s=At.apply(void 0,o);return this._render(e,a,s.params,e)}return e},gr.prototype._isFallbackRoot=function(n){return!n&&!Ot(this._root)&&this._fallbackRoot},gr.prototype._isSilentFallbackWarn=function(n){return this._silentFallbackWarn instanceof RegExp?this._silentFallbackWarn.test(n):this._silentFallbackWarn},gr.prototype._isSilentFallback=function(n,e){return this._isSilentFallbackWarn(e)&&(this._isFallbackRoot()||n!==this.fallbackLocale)},gr.prototype._isSilentTranslationWarn=function(n){return this._silentTranslationWarn instanceof RegExp?this._silentTranslationWarn.test(n):this._silentTranslationWarn},gr.prototype._interpolate=function(n,e,t,r,o,a,i){if(!e)return null;var s,l=this._path.getPathValue(e,t);if(St(l)||It(l))return l;if(Ot(l)){if(!It(e))return null;if(!zt(s=e[t])&&!Et(s))return null}else{if(!zt(l)&&!Et(l))return null;s=l}return zt(s)&&(s.indexOf("@:")>=0||s.indexOf("@.")>=0)&&(s=this._link(n,e,s,r,"raw",a,i)),this._render(s,o,a,t)},gr.prototype._link=function(n,e,t,r,o,a,i){var s=t,l=s.match(ur);for(var c in l)if(l.hasOwnProperty(c)){var d=l[c],u=d.match(pr),p=u[0],m=u[1],h=d.replace(p,"").replace(mr,"");if(Nt(i,h))return s;i.push(h);var f=this._interpolate(n,e,h,r,"raw"===o?"string":o,"raw"===o?void 0:a,i);if(this._isFallbackRoot(f)){if(!this._root)throw Error("unexpected error");var g=this._root.$i18n;f=g._translate(g._getMessages(),g.locale,g.fallbackLocale,h,r,o,a)}f=this._warnDefault(n,h,f,r,St(a)?a:[a],o),this._modifiers.hasOwnProperty(m)?f=this._modifiers[m](f):hr.hasOwnProperty(m)&&(f=hr[m](f)),i.pop(),s=f?s.replace(d,f):s}return s},gr.prototype._createMessageContext=function(n){var e=St(n)?n:[],t=Ct(n)?n:{};return{list:function(n){return e[n]},named:function(n){return t[n]}}},gr.prototype._render=function(n,e,t,r){if(Et(n))return n(this._createMessageContext(t));var o=this._formatter.interpolate(n,t,r);return o||(o=fr.interpolate(n,t,r)),"string"!==e||zt(o)?o:o.join("")},gr.prototype._appendItemToChain=function(n,e,t){var r=!1;return Nt(n,e)||(r=!0,e&&(r="!"!==e[e.length-1],e=e.replace(/!/g,""),n.push(e),t&&t[e]&&(r=t[e]))),r},gr.prototype._appendLocaleToChain=function(n,e,t){var r,o=e.split("-");do{var a=o.join("-");r=this._appendItemToChain(n,a,t),o.splice(-1,1)}while(o.length&&!0===r);return r},gr.prototype._appendBlockToChain=function(n,e,t){for(var r=!0,o=0;o<e.length&&"boolean"==typeof r;o++){var a=e[o];zt(a)&&(r=this._appendLocaleToChain(n,a,t))}return r},gr.prototype._getLocaleChain=function(n,e){if(""===n)return[];this._localeChainCache||(this._localeChainCache={});var t=this._localeChainCache[n];if(!t){e||(e=this.fallbackLocale),t=[];for(var r,o=[n];St(o);)o=this._appendBlockToChain(t,o,e);(o=zt(r=St(e)?e:Ct(e)?e.default?e.default:null:e)?[r]:r)&&this._appendBlockToChain(t,o,null),this._localeChainCache[n]=t}return t},gr.prototype._translate=function(n,e,t,r,o,a,i){for(var s,l=this._getLocaleChain(e,t),c=0;c<l.length;c++){var d=l[c];if(!Ot(s=this._interpolate(d,n[d],r,o,a,i,[r])))return s}return null},gr.prototype._t=function(n,e,t,r){for(var o,a=[],i=arguments.length-4;i-- >0;)a[i]=arguments[i+4];if(!n)return"";var s=At.apply(void 0,a);this._escapeParameterHtml&&(s.params=qt(s.params));var l=s.locale||e,c=this._translate(t,l,this.fallbackLocale,n,r,"string",s.params);if(this._isFallbackRoot(c)){if(!this._root)throw Error("unexpected error");return(o=this._root).$t.apply(o,[n].concat(a))}return c=this._warnDefault(l,n,c,r,a,"string"),this._postTranslation&&null!=c&&(c=this._postTranslation(c,n)),c},gr.prototype.t=function(n){for(var e,t=[],r=arguments.length-1;r-- >0;)t[r]=arguments[r+1];return(e=this)._t.apply(e,[n,this.locale,this._getMessages(),null].concat(t))},gr.prototype._i=function(n,e,t,r,o){var a=this._translate(t,e,this.fallbackLocale,n,r,"raw",o);if(this._isFallbackRoot(a)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.i(n,e,o)}return this._warnDefault(e,n,a,r,[o],"raw")},gr.prototype.i=function(n,e,t){return n?(zt(e)||(e=this.locale),this._i(n,e,this._getMessages(),null,t)):""},gr.prototype._tc=function(n,e,t,r,o){for(var a,i=[],s=arguments.length-5;s-- >0;)i[s]=arguments[s+5];if(!n)return"";void 0===o&&(o=1);var l={count:o,n:o},c=At.apply(void 0,i);return c.params=Object.assign(l,c.params),i=null===c.locale?[c.params]:[c.locale,c.params],this.fetchChoice((a=this)._t.apply(a,[n,e,t,r].concat(i)),o)},gr.prototype.fetchChoice=function(n,e){if(!n||!zt(n))return null;var t=n.split("|");return t[e=this.getChoiceIndex(e,t.length)]?t[e].trim():n},gr.prototype.tc=function(n,e){for(var t,r=[],o=arguments.length-2;o-- >0;)r[o]=arguments[o+2];return(t=this)._tc.apply(t,[n,this.locale,this._getMessages(),null,e].concat(r))},gr.prototype._te=function(n,e,t){for(var r=[],o=arguments.length-3;o-- >0;)r[o]=arguments[o+3];var a=At.apply(void 0,r).locale||e;return this._exist(t[a],n)},gr.prototype.te=function(n,e){return this._te(n,this.locale,this._getMessages(),e)},gr.prototype.getLocaleMessage=function(n){return Pt(this._vm.messages[n]||{})},gr.prototype.setLocaleMessage=function(n,e){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(n,this._warnHtmlInMessage,e),this._vm.$set(this._vm.messages,n,e)},gr.prototype.mergeLocaleMessage=function(n,e){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(n,this._warnHtmlInMessage,e),this._vm.$set(this._vm.messages,n,Lt({},this._vm.messages[n]||{},e))},gr.prototype.getDateTimeFormat=function(n){return Pt(this._vm.dateTimeFormats[n]||{})},gr.prototype.setDateTimeFormat=function(n,e){this._vm.$set(this._vm.dateTimeFormats,n,e),this._clearDateTimeFormat(n,e)},gr.prototype.mergeDateTimeFormat=function(n,e){this._vm.$set(this._vm.dateTimeFormats,n,Lt(this._vm.dateTimeFormats[n]||{},e)),this._clearDateTimeFormat(n,e)},gr.prototype._clearDateTimeFormat=function(n,e){for(var t in e){var r=n+"__"+t;this._dateTimeFormatters.hasOwnProperty(r)&&delete this._dateTimeFormatters[r]}},gr.prototype._localizeDateTime=function(n,e,t,r,o){for(var a=e,i=r[a],s=this._getLocaleChain(e,t),l=0;l<s.length;l++){var c=s[l];if(a=c,!Ot(i=r[c])&&!Ot(i[o]))break}if(Ot(i)||Ot(i[o]))return null;var d=i[o],u=a+"__"+o,p=this._dateTimeFormatters[u];return p||(p=this._dateTimeFormatters[u]=new Intl.DateTimeFormat(a,d)),p.format(n)},gr.prototype._d=function(n,e,t){if(!t)return new Intl.DateTimeFormat(e).format(n);var r=this._localizeDateTime(n,e,this.fallbackLocale,this._getDateTimeFormats(),t);if(this._isFallbackRoot(r)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.d(n,t,e)}return r||""},gr.prototype.d=function(n){for(var e=[],t=arguments.length-1;t-- >0;)e[t]=arguments[t+1];var r=this.locale,o=null;return 1===e.length?zt(e[0])?o=e[0]:Ct(e[0])&&(e[0].locale&&(r=e[0].locale),e[0].key&&(o=e[0].key)):2===e.length&&(zt(e[0])&&(o=e[0]),zt(e[1])&&(r=e[1])),this._d(n,r,o)},gr.prototype.getNumberFormat=function(n){return Pt(this._vm.numberFormats[n]||{})},gr.prototype.setNumberFormat=function(n,e){this._vm.$set(this._vm.numberFormats,n,e),this._clearNumberFormat(n,e)},gr.prototype.mergeNumberFormat=function(n,e){this._vm.$set(this._vm.numberFormats,n,Lt(this._vm.numberFormats[n]||{},e)),this._clearNumberFormat(n,e)},gr.prototype._clearNumberFormat=function(n,e){for(var t in e){var r=n+"__"+t;this._numberFormatters.hasOwnProperty(r)&&delete this._numberFormatters[r]}},gr.prototype._getNumberFormatter=function(n,e,t,r,o,a){for(var i=e,s=r[i],l=this._getLocaleChain(e,t),c=0;c<l.length;c++){var d=l[c];if(i=d,!Ot(s=r[d])&&!Ot(s[o]))break}if(Ot(s)||Ot(s[o]))return null;var u,p=s[o];if(a)u=new Intl.NumberFormat(i,Object.assign({},p,a));else{var m=i+"__"+o;(u=this._numberFormatters[m])||(u=this._numberFormatters[m]=new Intl.NumberFormat(i,p))}return u},gr.prototype._n=function(n,e,t,r){if(!gr.availabilities.numberFormat)return"";if(!t)return(r?new Intl.NumberFormat(e,r):new Intl.NumberFormat(e)).format(n);var o=this._getNumberFormatter(n,e,this.fallbackLocale,this._getNumberFormats(),t,r),a=o&&o.format(n);if(this._isFallbackRoot(a)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.n(n,Object.assign({},{key:t,locale:e},r))}return a||""},gr.prototype.n=function(n){for(var e=[],t=arguments.length-1;t-- >0;)e[t]=arguments[t+1];var r=this.locale,o=null,a=null;return 1===e.length?zt(e[0])?o=e[0]:Ct(e[0])&&(e[0].locale&&(r=e[0].locale),e[0].key&&(o=e[0].key),a=Object.keys(e[0]).reduce((function(n,t){var r;return Nt(_t,t)?Object.assign({},n,((r={})[t]=e[0][t],r)):n}),null)):2===e.length&&(zt(e[0])&&(o=e[0]),zt(e[1])&&(r=e[1])),this._n(n,r,o,a)},gr.prototype._ntp=function(n,e,t,r){if(!gr.availabilities.numberFormat)return[];if(!t)return(r?new Intl.NumberFormat(e,r):new Intl.NumberFormat(e)).formatToParts(n);var o=this._getNumberFormatter(n,e,this.fallbackLocale,this._getNumberFormats(),t,r),a=o&&o.formatToParts(n);if(this._isFallbackRoot(a)){if(!this._root)throw Error("unexpected error");return this._root.$i18n._ntp(n,e,t,r)}return a||[]},Object.defineProperties(gr.prototype,vr),Object.defineProperty(gr,"availabilities",{get:function(){if(!cr){var n="undefined"!=typeof Intl;cr={dateTimeFormat:n&&void 0!==Intl.DateTimeFormat,numberFormat:n&&void 0!==Intl.NumberFormat}}return cr}}),gr.install=nr,gr.version="8.22.2";var br=gr;
/*!
 * vssue - A vue-powered issue-based comment plugin
 *
 * @version v1.4.7
 * @link https://vssue.js.org
 * @license MIT
 * @copyright 2018-2021 meteorlxy
 */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function yr(n,e,t,r){var o,a=arguments.length,i=a<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(o=n[s])&&(i=(a<3?o(i):a>3?o(e,t,i):o(e,t))||i);return a>3&&i&&Object.defineProperty(e,t,i),i}var xr=o.default.extend({name:"Iconfont"});function wr(n,e,t,r,o,a,i,s,l,c){"boolean"!=typeof i&&(l=s,s=i,i=!1);const d="function"==typeof t?t.options:t;let u;if(n&&n.render&&(d.render=n.render,d.staticRenderFns=n.staticRenderFns,d._compiled=!0,o&&(d.functional=!0)),r&&(d._scopeId=r),a?(u=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),e&&e.call(this,l(n)),n&&n._registeredComponents&&n._registeredComponents.add(a)},d._ssrRegister=u):e&&(u=i?function(n){e.call(this,c(n,this.$root.$options.shadowRoot))}:function(n){e.call(this,s(n))}),u)if(d.functional){const n=d.render;d.render=function(e,t){return u.call(t),n(e,t)}}else{const n=d.beforeCreate;d.beforeCreate=n?[].concat(n,u):[u]}return t}"undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());const kr=wr({render:function(n,e){var t=e._c;return t("svg",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}]},[t("symbol",{attrs:{id:"vssue-icon-bitbucket",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M579.5522464 489.45249493q4.8371808 38.38537173-30.81752427 61.55702827t-67.95459093 3.66689493q-23.79580907-10.37653333-32.6119616-35.34262826t-0.31207573-50.01020907 31.67573333-35.34262827q21.92335253-11.00068587 44.1587808-7.33379093t39.00952427 21.61127573 16.77409493 41.1160384zM647.19476053 476.65737173q-8.50407573-65.22392427-68.8908192-99.9424t-120.07131413-7.9579424q-38.38537173 17.08617173-61.24495253 53.9111616t-21.0651424 78.95527574q2.41859093 55.4715424 47.20152426 94.48106666t100.87862827 34.1723424q55.4715424-4.8371808 92.60860907-51.18049493t30.50544746-102.43900907zM792.93434133 146.32472427q-12.17097173-16.4620192-34.1723424-27.15062827t-35.34262826-13.41927573-43.30057174-7.64586667q-177.33729493-28.63299093-345.00022826 1.24830507-26.2144 4.29104747-40.25782827 7.33379093t-33.54819093 13.41927573-30.50544747 26.2144q18.2564576 17.08617173 46.34331413 27.6967616t44.78293334 13.41927574 53.36502826 7.02171413q138.95192427 17.71032427 273.06666667 0.62415253 38.38537173-4.8371808 54.53531413-7.33379093t44.1587808-13.1072 45.7191616-28.32091413zM827.65281813 777.10872427q-4.8371808 15.83786667-9.44030506 46.65539093t-8.50407574 51.18049493-17.39824746 42.6764192-35.34262827 34.4064q-52.4288 29.2571424-115.46819093 43.61264747t-123.1140576 13.41927573-122.8019808-11.3127616q-28.0088384-4.8371808-49.69813334-11.00068586t-46.65539093-16.4620192-44.4708576-26.52647574-31.67573333-37.4491424q-15.21371413-58.51428587-34.71847574-177.96144746l3.66689494-9.7523808 11.00068586-5.46133334q135.9091808 90.1900192 308.72137174 90.1900192t309.34552426-90.1900192q12.79512427 3.66689493 14.5895616 14.04342827t-3.0427424 27.46270507-4.8371808 22.54750506zM937.97175147 191.41973333q-15.83786667 101.8148576-67.64251414 399.22346667-3.0427424 18.2564576-16.4620192 34.1723424t-26.52647573 24.3419424-33.23611413 18.88060907q-153.61950507 76.7707424-371.8387808 53.67710506-151.12289493-16.4620192-240.14262827-84.72868586-9.12822827-7.33379093-15.52579093-16.1499424t-10.37653334-21.2992-5.46133333-20.75306667-3.66689493-24.10788587-3.3548192-21.2992q-5.46133333-30.50544747-16.1499424-91.43832426t-17.08617174-98.4600384-14.35550506-89.8779424-13.41927574-96.27550507q1.7944384-15.83786667 10.68860907-29.5692192t19.19268587-22.8595808 27.46270506-18.2564576 28.0088384-13.73135253 29.2571424-11.3127616q76.22460907-28.0088384 190.75657174-39.00952427 231.0144-22.54750507 412.01859093 30.50544747 94.48106667 28.0088384 131.072 74.35215253 9.7523808 12.17097173 10.0644576 31.0515808t-3.3548192 32.9240384z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-gitea",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M184.31868985 236.10860742C106.94832667 235.94086648 3.32655508 285.13080468 9.02973665 408.46209936c8.93218827 192.65010787 206.32096845 210.5144844 285.20099725 212.06608453 8.63864186 36.14810496 101.48307766 160.77938883 170.21479898 167.32127321h301.09442177c180.57278288-11.99345499 315.77172611-546.07960359 215.54670217-548.09249109-165.7696721 7.79993906-264.02374305 11.74184405-348.27147151 12.41280591v166.69224585l-26.25140843-11.61603761-0.16773997-154.99233728c-96.70246985-0.04193548-181.83083757-4.52899687-343.4069947-12.49667687-20.21274496-0.12580547-48.39316992-3.5644886-78.67035236-3.64835859z m10.94507577 68.14462849h9.22573371c10.98701124 98.75729283 28.85138778 156.50200291 64.99949274 244.73357185-92.25734394-10.90314029-170.75995634-37.69970509-185.18564974-137.75698809-7.46445813-51.78991757 17.69663558-105.84433456 110.96042329-107.01851827z m358.83913087 97.07988723c6.29027343 0.08386999 12.70635233 1.25805468 18.74501482 4.02577499l31.40943263 13.54505513-22.51917887 41.05451824a28.18042496 25.03528825 0 0 0-10.10637297 1.59353561 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 4.69673781 7.29671718l-38.83195528 70.70267333a28.18042496 25.03528825 0 0 0-9.30960467 1.59353659 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 36.06423497 15.09665623 28.18042496 25.03528825 0 0 0 16.94180276-32.08039449 28.18042496 25.03528825 0 0 0-6.62575434-9.22573468l37.82551056-68.85752581a28.18042496 25.03528825 0 0 0 12.28700044-1.25805469 28.18042496 25.03528825 0 0 0 8.93218826-4.69673783c14.59343435 6.12253248 26.54495386 11.11281671 35.14166122 15.34826717 12.91602778 6.37414341 17.48696012 10.60959485 18.87082027 15.30633169 1.38386015 4.61286685-0.12580547 13.50312062-7.42252263 29.10299872-5.45157063 11.61603859-14.46762889 28.09655497-25.11915823 47.51253164a28.18042496 25.03528825 0 0 0-10.52572486 1.59353659 28.18042496 25.03528825 0 0 0-16.98373826 32.038459 28.18042496 25.03528825 0 0 0 36.06423498 15.09665623 28.18042496 25.03528825 0 0 0 16.94180278-32.03845901 28.18042496 25.03528825 0 0 0-5.74511608-8.47090188c10.52572388-19.20630122 19.58371762-35.72875308 25.41270465-48.14155897 7.88380904-16.85793279 11.99345499-29.39654416 8.38703091-41.51580463-3.60642311-12.11926046-14.67730434-20.0030695-29.35460966-27.25785217-9.6450856-4.73867233-21.68047607-9.77089106-36.06423399-15.80955357a28.18042496 25.03528825 0 0 0-1.59353562-10.022502 28.18042496 25.03528825 0 0 0-6.08059796-8.7644483l22.14176246-40.38355541 122.61839638 52.96410227c22.14176247 9.6031511 31.2836262 33.12877372 20.54822685 52.8382968l-84.28966393 154.32137544c-10.77733482 19.66758857-37.23841869 27.80300855-59.38018118 18.24179293l-173.48574115-74.98005927c-22.14176247-9.5612156-31.32556167-33.12877372-20.54822687-52.83829679l84.28966395-154.27943995c7.38058716-13.54505513 22.22563246-21.59660511 37.951317-22.22563246h2.68384935z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-gitee",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M978.404275 409.561604H455.061338c-25.117645 0-45.499734 20.382089-45.499734 45.499734l-0.031997 113.781333c0 25.117645 20.350092 45.499734 45.499734 45.531731h318.594132c25.117645 0 45.499734 20.382089 45.499734 45.499735v22.749867a136.5312 136.5312 0 0 1-136.5312 136.5312H250.248539a45.499734 45.499734 0 0 1-45.499734-45.499734V341.343999a136.5312 136.5312 0 0 1 136.5312-136.5312L978.308284 204.780802c25.117645 0 45.499734-20.350092 45.499734-45.467738L1023.904009 45.531731h0.031997A45.499734 45.499734 0 0 0 978.468269 0h-0.031997L341.343999 0.031997C152.84967 0.031997 0.031997 152.84967 0.031997 341.343999v637.092273c0 25.117645 20.382089 45.499734 45.499734 45.499734h671.233072a307.171203 307.171203 0 0 0 307.171203-307.171203v-261.671468c0-25.117645-20.382089-45.499734-45.499734-45.499734z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-github",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M512 20.4425c-278.334 0-504 225.6345-504 504 0 222.6735 144.4275 411.6105 344.673 478.233 25.2 4.662 34.461-10.9305 34.461-24.255 0-12.0015-0.4725-51.723-0.693-93.8385-140.238 30.492-169.8165-59.472-169.8165-59.472-22.932-58.2435-55.944-73.7415-55.944-73.7415-45.738-31.2795 3.465-30.6495 3.465-30.6495 50.589 3.5595 77.238 51.9435 77.238 51.9435 44.9505 77.049 117.9045 54.7785 146.664 41.895 4.5045-32.571 17.577-54.81 32.004-67.41-111.951-12.726-229.635-55.9755-229.635-249.0705 0-55.0305 19.6875-99.981 51.9435-135.2925-5.229-12.6945-22.491-63.945 4.8825-133.371 0 0 42.336-13.545 138.6315 51.66 40.194-11.1825 83.3175-16.758 126.1575-16.9785 42.8085 0.189 85.9635 5.796 126.252 16.9785 96.201-65.205 138.4425-51.66 138.4425-51.66 27.4365 69.426 10.1745 120.6765 4.9455 133.371 32.319 35.28 51.8805 80.262 51.8805 135.2925 0 193.5675-117.9045 236.187-230.139 248.6925 18.081 15.6555 34.1775 46.305 34.1775 93.3345 0 67.4415-0.5985 121.716-0.5985 138.3165 0 13.419 9.072 29.1375 34.6185 24.192 200.151-66.717 344.3895-255.5595 344.3895-478.17 0-278.3655-225.666-504-504-504z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-gitlab",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M66.61375986 405.11600042L512.11376028 976.03999972 23.84576 621.65599958a39.312 39.312 0 0 1-14.07600042-43.30799944l56.8080007-173.26800028z m259.88400014 0h371.26800014L512.14975986 976.03999972zM215.11376 60.88400042l111.384 344.232H66.61375986l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z m742.49999972 344.232l56.8080007 173.2679993a39.23999986 39.23999986 0 0 1-14.07600042 43.30800042l-488.26800028 354.38400014 445.50000042-570.92400028z m0 0h-259.88400014l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-loading",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M843.307 742.24c0 3.217 2.607 5.824 5.824 5.824s5.824-2.607 5.824-5.824a5.823 5.823 0 0 0-5.824-5.824 5.823 5.823 0 0 0-5.824 5.824zM714.731 874.912c0 6.398 5.186 11.584 11.584 11.584s11.584-5.186 11.584-11.584-5.186-11.584-11.584-11.584-11.584 5.186-11.584 11.584zM541.419 943.2c0 9.614 7.794 17.408 17.408 17.408s17.408-7.794 17.408-17.408-7.794-17.408-17.408-17.408-17.408 7.794-17.408 17.408z m-186.56-9.152c0 12.795 10.373 23.168 23.168 23.168s23.168-10.373 23.168-23.168-10.373-23.168-23.168-23.168-23.168 10.373-23.168 23.168zM189.355 849.12c0 16.012 12.98 28.992 28.992 28.992s28.992-12.98 28.992-28.992-12.98-28.992-28.992-28.992-28.992 12.98-28.992 28.992zM74.731 704.736c0 19.228 15.588 34.816 34.816 34.816s34.816-15.588 34.816-34.816-15.588-34.816-34.816-34.816-34.816 15.588-34.816 34.816z m-43.008-177.28c0 22.41 18.166 40.576 40.576 40.576s40.576-18.166 40.576-40.576-18.166-40.576-40.576-40.576-40.576 18.166-40.576 40.576z m35.392-176.128c0 25.626 20.774 46.4 46.4 46.4s46.4-20.774 46.4-46.4c0-25.626-20.774-46.4-46.4-46.4-25.626 0-46.4 20.774-46.4 46.4z m106.176-142.016c0 28.843 23.381 52.224 52.224 52.224s52.224-23.381 52.224-52.224c0-28.843-23.381-52.224-52.224-52.224-28.843 0-52.224 23.381-52.224 52.224z m155.904-81.344c0 32.024 25.96 57.984 57.984 57.984s57.984-25.96 57.984-57.984-25.96-57.984-57.984-57.984-57.984 25.96-57.984 57.984z m175.104-5.056c0 35.24 28.568 63.808 63.808 63.808s63.808-28.568 63.808-63.808c0-35.24-28.568-63.808-63.808-63.808-35.24 0-63.808 28.568-63.808 63.808z m160.32 72.128c0 38.421 31.147 69.568 69.568 69.568s69.568-31.147 69.568-69.568-31.147-69.568-69.568-69.568-69.568 31.147-69.568 69.568z m113.92 135.488c0 41.638 33.754 75.392 75.392 75.392s75.392-33.754 75.392-75.392-33.754-75.392-75.392-75.392-75.392 33.754-75.392 75.392z m45.312 175.488c0 44.854 36.362 81.216 81.216 81.216s81.216-36.362 81.216-81.216c0-44.854-36.362-81.216-81.216-81.216-44.854 0-81.216 36.362-81.216 81.216z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-like",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 0 0-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4-20.5-21.5-48.1-33.4-77.9-33.4-52 0-98 35-111.8 85.1l-85.9 311H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h601.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-0.2-12.6-2-25.1-5.6-37.1zM184 852V568h81v284h-81z m636.4-353l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 22.4-13.2 42.6-33.6 51.8H329V564.8l99.5-360.5c5.2-18.9 22.5-32.2 42.2-32.3 7.6 0 15.1 2.2 21.1 6.7 9.9 7.4 15.2 18.6 14.6 30.5l-9.6 198.4h314.4C829 418.5 840 436.9 840 456c0 16.5-7.2 32.1-19.6 43z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-unlike",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M885.9 490.3c3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-51.6-30.7-98.1-78.3-118.4-8.3-3.6-17.2-5.4-26.5-5.4H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h129.3l85.8 310.8C372.9 889 418.9 924 470.9 924c29.7 0 57.4-11.8 77.9-33.4 20.5-21.5 31-49.7 29.5-79.4l-6-122.9h239.9c12.1 0 23.9-3.2 34.3-9.3 40.4-23.5 65.5-66.1 65.5-111 0-28.3-9.3-55.5-26.1-77.7zM184 456V172h81v284h-81z m627.2 160.4H496.8l9.6 198.4c0.6 11.9-4.7 23.1-14.6 30.5-6.1 4.5-13.6 6.8-21.1 6.7-19.6-0.1-36.9-13.4-42.2-32.3L329 459.2V172h415.4c20.4 9.2 33.6 29.4 33.6 51.8 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-14 25.5 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 19.1-11 37.5-28.8 48.4z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-heart",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9zM512 814.8S156 586.7 156 385.5C156 283.6 240.3 201 344.3 201c73.1 0 136.5 40.8 167.7 100.4C543.2 241.8 606.6 201 679.7 201c104 0 188.3 82.6 188.3 184.5 0 201.2-356 429.3-356 429.3z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-edit",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M723.2 917.76H286.72c-65.28 0-118.4-51.2-118.4-113.92V261.76C168.32 198.4 221.44 147.2 286.72 147.2h375.04c17.92 0 32 14.08 32 32s-14.08 32-32 32H286.72c-30.08 0-54.4 22.4-54.4 49.92v542.08c0 27.52 24.32 49.92 54.4 49.92H723.2c30.08 0 54.4-22.4 54.4-49.92V440.32c0-17.92 14.08-32 32-32s32 14.08 32 32v363.52c0 62.72-53.12 113.92-118.4 113.92z"}}),e._v(" "),t("path",{attrs:{d:"M499.84 602.24c-7.68 0-14.72-2.56-21.12-7.68-13.44-11.52-14.72-32-3.2-45.44L780.16 198.4c11.52-13.44 32-14.72 45.44-3.2s14.72 32 3.2 45.44L524.16 591.36c-6.4 7.04-15.36 10.88-24.32 10.88z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-delete",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M677.647059 256l0-90.352941c0-37.436235-23.461647-60.235294-61.771294-60.235294L408.094118 105.411765c-38.249412 0-61.741176 22.799059-61.741176 60.235294l0 90.352941-180.705882 0 0 60.235294 60.235294 0 0 512c0 54.272 33.972706 90.352941 90.352941 90.352941l391.529412 0c55.085176 0 90.352941-33.490824 90.352941-90.352941l0-512 60.235294 0 0-60.235294L677.647059 256zM406.588235 165.647059l210.823529 0-1.264941 90.352941L406.588235 256 406.588235 165.647059zM737.882353 858.352941l-451.764706 0 0-542.117647 451.764706 0L737.882353 858.352941zM466.823529 376.470588l-58.729412 0-1.505882 391.529412 60.235294 0L466.823529 376.470588zM617.411765 376.470588l-60.235294 0 0 391.529412 60.235294 0L617.411765 376.470588z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-reply",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M426.666667 384 426.666667 213.333333 128 512 426.666667 810.666667 426.666667 635.733333C640 635.733333 789.333333 704 896 853.333333 853.333333 640 725.333333 426.666667 426.666667 384Z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-error",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M512 720m-48 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0Z"}}),e._v(" "),t("path",{attrs:{d:"M480 416v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z"}}),e._v(" "),t("path",{attrs:{d:"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48z m-783.5-27.9L512 239.9l339.8 588.2H172.2z"}})])])},staticRenderFns:[]},void 0,xr,void 0,!0,void 0,!1,void 0,void 0,void 0);const jr=wr({},void 0,o.default.extend({name:"TransitionFade",functional:!0,props:{group:{type:Boolean,required:!1,default:!1},tag:{type:String,required:!1,default:"div"}},render:(n,{props:e,children:t})=>n(e.group?"TransitionGroup":"Transition",{props:{name:"fade",mode:"out-in",appear:!0,tag:e.tag}},t)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);const _r=wr({},void 0,o.default.extend({name:"VssueIcon",functional:!0,props:{name:{type:String,required:!0},title:{type:String,required:!1,default:null}},render:(n,{props:e,data:t})=>n("svg",Object.assign(Object.assign({},t),{class:["vssue-icon","vssue-icon-"+e.name],attrs:{"aria-hidden":"true"}}),[n("title",e.title),n("use",{attrs:{"xlink:href":"#vssue-icon-"+e.name}})])}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Tr=class extends o.default{constructor(){super(...arguments),this.editMode=!1,this.editContent=this.comment.contentRaw,this.creatingReactions=[],this.isPutingComment=!1,this.isDeletingComment=!1}get currentUser(){return this.vssue.user?this.vssue.user.username:null}get content(){return this.comment.content}get author(){return this.comment.author}get createdAt(){return wt(this.comment.createdAt)}get updatedAt(){return wt(this.comment.updatedAt)}get showReactions(){return Boolean(this.vssue.API&&this.vssue.API.platform.meta.reactable&&this.comment.reactions&&!this.editMode)}get reactionKeys(){return["heart","like","unlike"]}get editContentRows(){return this.editContent.split("\n").length-1}get editInputRows(){return this.editContentRows<3?5:this.editContentRows+2}async postReaction({reaction:n}){try{if(this.creatingReactions.includes(n))return;this.creatingReactions.push(n);await this.vssue.postCommentReaction({commentId:this.comment.id,reaction:n})||this.vssue.$emit("error",new Error(this.vssue.$t("reactionGiven",{reaction:this.vssue.$t(n)})));const e=await this.vssue.getCommentReactions({commentId:this.comment.id});e&&(this.comment.reactions=e)}finally{this.creatingReactions.splice(this.creatingReactions.findIndex(e=>e===n),1)}}enterEdit(){this.editMode=!0,this.$nextTick(()=>{this.$refs.input.focus()})}resetEdit(){this.editMode=!1,this.editContent=this.comment.contentRaw}async putComment(){try{if(this.vssue.isPending)return;if(this.editContent!==this.comment.contentRaw){this.isPutingComment=!0,this.vssue.isUpdatingComment=!0;const n=await this.vssue.putComment({commentId:this.comment.id,content:this.editContent});n&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(n=>n.id===this.comment.id),1,n)}this.editMode=!1}finally{this.isPutingComment=!1,this.vssue.isUpdatingComment=!1}}async deleteComment(){try{if(this.vssue.isPending)return;if(!window.confirm(this.vssue.$t("deleteConfirm")))return;this.isDeletingComment=!0,this.vssue.isUpdatingComment=!0;await this.vssue.deleteComment({commentId:this.comment.id})?(this.vssue.comments.count-=1,this.vssue.comments.data.length>1&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(n=>n.id===this.comment.id),1),this.vssue.query.page>1&&this.vssue.query.page>Math.ceil(this.vssue.comments.count/this.vssue.query.perPage)?this.vssue.query.page-=1:await this.vssue.getComments()):this.vssue.$emit("error",new Error(this.vssue.$t("deleteFailed")))}finally{this.isDeletingComment=!1,this.vssue.isUpdatingComment=!1}}};yr([mt({type:Object,required:!0})],Tr.prototype,"comment",void 0),yr([it()],Tr.prototype,"vssue",void 0),Tr=yr([Object(at.b)({components:{VssueIcon:_r}})],Tr);const Sr=wr({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"vssue-comment",class:{"vssue-comment-edit-mode":n.editMode,"vssue-comment-disabled":n.isDeletingComment||n.isPutingComment}},[t("div",{staticClass:"vssue-comment-avatar"},[t("a",{attrs:{href:n.author.homepage,title:n.author.username,target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:n.author.avatar,alt:n.author.username}})])]),n._v(" "),t("div",{staticClass:"vssue-comment-body"},[n._t("body",[t("div",{staticClass:"vssue-comment-header"},[t("span",{staticClass:"vssue-comment-author"},[t("a",{attrs:{href:n.author.homepage,title:n.author.username,target:"_blank",rel:"noopener noreferrer"}},[n._v("\n            "+n._s(n.author.username)+"\n          ")])]),n._v(" "),t("span",{staticClass:"vssue-comment-created-at"},[n._v("\n          "+n._s(n.createdAt)+"\n        ")])]),n._v(" "),t("div",{staticClass:"vssue-comment-main"},[n.editMode?t("textarea",{directives:[{name:"model",rawName:"v-model",value:n.editContent,expression:"editContent"}],ref:"input",staticClass:"vssue-edit-comment-input",attrs:{rows:n.editInputRows},domProps:{value:n.editContent},on:{keyup:function(e){return!e.type.indexOf("key")&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:e.ctrlKey?n.putComment():null},input:function(e){e.target.composing||(n.editContent=e.target.value)}}}):t("article",{staticClass:"markdown-body",domProps:{innerHTML:n._s(n.content)}})]),n._v(" "),t("div",{staticClass:"vssue-comment-footer"},[n.editMode?t("span",{staticClass:"vssue-comment-hint"},[n._v("\n          "+n._s(n.vssue.$t("editMode"))+"\n        ")]):n._e(),n._v(" "),n.showReactions?t("span",{staticClass:"vssue-comment-reactions"},n._l(n.reactionKeys,(function(e){return t("span",{key:e,staticClass:"vssue-comment-reaction",attrs:{title:n.vssue.$t(n.creatingReactions.includes(e)?"loading":e)},on:{click:function(t){return n.postReaction({reaction:e})}}},[t("VssueIcon",{attrs:{name:n.creatingReactions.includes(e)?"loading":e,title:n.vssue.$t(n.creatingReactions.includes(e)?"loading":e)}}),n._v(" "),t("span",{staticClass:"vssue-comment-reaction-number"},[n._v("\n              "+n._s(n.comment.reactions[e])+"\n            ")])],1)})),0):n._e(),n._v(" "),t("span",{staticClass:"vssue-comment-operations"},[n.comment.author.username===n.currentUser&&n.editMode?t("span",{staticClass:"vssue-comment-operation",class:{"vssue-comment-operation-muted":n.isPutingComment},attrs:{title:n.vssue.$t(n.isPutingComment?"loading":"submit")},on:{click:function(e){return n.putComment()}}},[t("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:n.isPutingComment,expression:"isPutingComment"}],attrs:{name:"loading",title:n.vssue.$t("loading")}}),n._v("\n\n            "+n._s(n.vssue.$t("submit"))+"\n          ")],1):n._e(),n._v(" "),n.comment.author.username===n.currentUser&&n.editMode?t("span",{staticClass:"vssue-comment-operation vssue-comment-operation-muted",attrs:{title:n.vssue.$t("cancel")},on:{click:function(e){return n.resetEdit()}}},[n._v("\n            "+n._s(n.vssue.$t("cancel"))+"\n          ")]):n._e(),n._v(" "),n.comment.author.username===n.currentUser?t("span",{directives:[{name:"show",rawName:"v-show",value:!n.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return n.enterEdit()}}},[t("VssueIcon",{attrs:{name:"edit",title:n.vssue.$t("edit")}})],1):n._e(),n._v(" "),n.comment.author.username===n.currentUser||n.vssue.isAdmin?t("span",{directives:[{name:"show",rawName:"v-show",value:!n.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return n.deleteComment()}}},[t("VssueIcon",{attrs:{name:n.isDeletingComment?"loading":"delete",title:n.vssue.$t(n.isDeletingComment?"loading":"delete")}})],1):n._e(),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:!n.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return n.vssue.$emit("reply-comment",n.comment)}}},[t("VssueIcon",{attrs:{name:"reply",title:n.vssue.$t("reply")}})],1)])])])],2)])},staticRenderFns:[]},void 0,Tr,void 0,!1,void 0,!1,void 0,void 0,void 0);let Cr=class extends o.default{get disabled(){return this.vssue.isPending}get pageCount(){const n=Math.ceil(this.vssue.comments.count/this.vssue.comments.perPage);return n>1?n:1}get perPageOptions(){const n=[5,10,20,50];return!n.includes(this.vssue.options.perPage)&&this.vssue.options.perPage<100&&n.push(this.vssue.options.perPage),n.sort((n,e)=>n-e)}get page(){return this.vssue.query.page>this.pageCount?this.pageCount:this.vssue.query.page}set page(n){n>0&&n<=this.pageCount&&(this.vssue.query.page=n)}get perPage(){return this.vssue.query.perPage}set perPage(n){this.perPageOptions.includes(n)&&(this.vssue.query.perPage=n)}};yr([it()],Cr.prototype,"vssue",void 0),Cr=yr([Object(at.b)({components:{VssueIcon:_r}})],Cr);const zr=wr({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"vssue-pagination"},[t("div",{staticClass:"vssue-pagination-per-page"},[t("label",[t("select",{directives:[{name:"model",rawName:"v-model",value:n.perPage,expression:"perPage"}],staticClass:"vssue-pagination-select",attrs:{disabled:n.disabled},on:{change:function(e){var t=Array.prototype.filter.call(e.target.options,(function(n){return n.selected})).map((function(n){return"_value"in n?n._value:n.value}));n.perPage=e.target.multiple?t:t[0]}}},n._l(n.perPageOptions,(function(e){return t("option",{key:e,domProps:{value:e}},[n._v("\n          "+n._s(e)+"\n        ")])})),0),n._v(" "),t("span",[n._v("\n        "+n._s(n.vssue.$t("perPage"))+"\n      ")])]),n._v(" "),n.vssue.API.platform.meta.sortable?t("span",{class:{"vssue-pagination-link":!0,disabled:n.disabled},attrs:{title:n.vssue.$t("sort")},on:{click:function(e){n.vssue.query.sort="asc"===n.vssue.query.sort?"desc":"asc"}}},[n._v("\n      "+n._s("asc"===n.vssue.query.sort?"↑":"↓")+"\n    ")]):n._e()]),n._v(" "),t("div",{staticClass:"vssue-pagination-page"},[t("span",{class:{"vssue-pagination-link":!0,disabled:1===n.page||n.disabled},attrs:{title:n.vssue.$t("prev")},domProps:{textContent:n._s("<")},on:{click:function(e){n.page-=1}}}),n._v(" "),t("label",[t("span",[n._v("\n        "+n._s(n.vssue.$t("page"))+"\n      ")]),n._v(" "),t("select",{directives:[{name:"show",rawName:"v-show",value:n.pageCount>1,expression:"pageCount > 1"},{name:"model",rawName:"v-model",value:n.page,expression:"page"}],staticClass:"vssue-pagination-select",attrs:{disabled:n.disabled},on:{change:function(e){var t=Array.prototype.filter.call(e.target.options,(function(n){return n.selected})).map((function(n){return"_value"in n?n._value:n.value}));n.page=e.target.multiple?t:t[0]}}},n._l(n.pageCount,(function(e){return t("option",{key:e,domProps:{value:e}},[n._v("\n          "+n._s(e)+"\n        ")])})),0),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.pageCount<2,expression:"pageCount < 2"}],domProps:{textContent:n._s(n.page)}}),n._v(" "),t("span",{domProps:{textContent:n._s(" / "+n.pageCount+" ")}})]),n._v(" "),t("span",{class:{"vssue-pagination-link":!0,disabled:n.page===n.pageCount||n.disabled},attrs:{title:n.vssue.$t("next")},domProps:{textContent:n._s(">")},on:{click:function(e){n.page+=1}}})])])},staticRenderFns:[]},void 0,Cr,void 0,!1,void 0,!1,void 0,void 0,void 0);let $r=class extends o.default{};yr([it()],$r.prototype,"vssue",void 0),$r=yr([Object(at.b)({components:{TransitionFade:jr,VssueComment:Sr,VssuePagination:zr}})],$r);const Ir=wr({render:function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"vssue-comments"},[e("VssuePagination"),this._v(" "),e("TransitionFade",{attrs:{group:""}},this._l(this.vssue.comments.data,(function(n){return e("VssueComment",{key:n.id,attrs:{comment:n}})})),1),this._v(" "),e("VssuePagination",{directives:[{name:"show",rawName:"v-show",value:this.vssue.comments.data.length>5,expression:"vssue.comments.data.length > 5"}]})],1)},staticRenderFns:[]},void 0,$r,void 0,!1,void 0,!1,void 0,void 0,void 0);const Or=wr({},void 0,o.default.extend({name:"VssueIcon",functional:!0,props:{type:{type:String,required:!1,default:"default"}},render:(n,{props:e,data:t,children:r})=>n("button",Object.assign(Object.assign({},t),{class:["vssue-button","vssue-button-"+e.type]}),r)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Er=class extends o.default{constructor(){super(...arguments),this.content=""}get user(){return this.vssue.user}get platform(){return this.vssue.API&&this.vssue.API.platform.name}get isInputDisabled(){return this.loading||null===this.user||null===this.vssue.issue}get isSubmitDisabled(){return""===this.content||this.vssue.isPending||null===this.vssue.issue}get loading(){return this.vssue.isCreatingComment}get contentRows(){return this.content.split("\n").length-1}get inputRows(){return this.contentRows<3?5:this.contentRows+2}created(){this.vssue.$on("reply-comment",n=>{const e=n.contentRaw.replace(/\n/g,"\n> "),t=`@${n.author.username}\n\n> ${e}\n\n`;this.content=this.content.concat(t),this.focus()})}beforeDestroy(){this.vssue.$off("reply-comment")}focus(){this.$refs.input.focus()}async submit(){this.isSubmitDisabled||(await this.vssue.postComment({content:this.content}),this.content="",await this.vssue.getComments())}};yr([it()],Er.prototype,"vssue",void 0),Er=yr([Object(at.b)({components:{VssueButton:Or,VssueIcon:_r}})],Er);const Ar=wr({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"vssue-new-comment"},[t("div",{staticClass:"vssue-comment-avatar"},[n.user?t("a",{attrs:{href:n.user.homepage,title:n.user.username,target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:n.user.avatar,alt:n.user.username}})]):t("VssueIcon",{attrs:{name:n.platform.toLowerCase(),title:n.vssue.$t("loginToComment",{platform:n.platform})},on:{click:function(e){return n.vssue.login()}}})],1),n._v(" "),t("div",{staticClass:"vssue-new-comment-body"},[t("textarea",{directives:[{name:"model",rawName:"v-model",value:n.content,expression:"content"}],ref:"input",staticClass:"vssue-new-comment-input",attrs:{rows:n.inputRows,disabled:n.isInputDisabled,placeholder:n.vssue.$t(n.user?"placeholder":"noLoginPlaceHolder"),spellcheck:!1,"aria-label":"leave a comment"},domProps:{value:n.content},on:{keyup:function(e){return!e.type.indexOf("key")&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:e.ctrlKey?n.submit():null},input:function(e){e.target.composing||(n.content=e.target.value)}}})]),n._v(" "),t("div",{staticClass:"vssue-new-comment-footer"},[n.user?t("span",{staticClass:"vssue-current-user"},[t("span",[n._v(n._s(n.vssue.$t("currentUser"))+" - "+n._s(n.user.username)+" - ")]),n._v(" "),t("a",{staticClass:"vssue-logout",on:{click:function(e){return n.vssue.logout()}}},[n._v("\n        "+n._s(n.vssue.$t("logout"))+"\n      ")])]):t("span",{staticClass:"vssue-current-user"},[n._v("\n      "+n._s(n.vssue.$t("loginToComment",{platform:n.platform}))+"\n    ")]),n._v(" "),t("div",{staticClass:"vssue-new-comment-operations"},[n.user?t("VssueButton",{staticClass:"vssue-button-submit-comment",attrs:{type:"primary",disabled:n.isSubmitDisabled},on:{click:function(e){return n.submit()}}},[t("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:n.loading,expression:"loading"}],attrs:{name:"loading"}}),n._v("\n\n        "+n._s(n.vssue.$t(n.loading?"submitting":"submitComment"))+"\n      ")],1):t("VssueButton",{staticClass:"vssue-button-login",attrs:{type:"primary",title:n.vssue.$t("loginToComment",{platform:n.platform})},on:{click:function(e){return n.vssue.login()}}},[n._v("\n        "+n._s(n.vssue.$t("login",{platform:n.platform}))+"\n      ")])],1)])])},staticRenderFns:[]},void 0,Er,void 0,!1,void 0,!1,void 0,void 0,void 0);let Pr=class extends o.default{constructor(){super(...arguments),this.progress={show:!1,percent:0,timer:null,speed:200},this.alert={show:!1,message:null,timer:null}}onLoadingCommentsChange(n){this.vssue.comments&&(n?this.progressStart():this.progressDone())}created(){this.vssue.$on("error",n=>this.alertShow(n.message))}beforeDestroy(){this.vssue.$off("error"),null!==this.progress.timer&&window.clearTimeout(this.progress.timer),null!==this.alert.timer&&window.clearTimeout(this.alert.timer)}progressStart(){this.progress.show=!0,this.progress.percent=0,this.progress.timer=window.setInterval(()=>{this.progress.percent+=5,this.progress.percent>94&&null!==this.progress.timer&&window.clearInterval(this.progress.timer)},this.progress.speed)}progressDone(){this.progress.percent=100,null!==this.progress.timer&&window.clearTimeout(this.progress.timer),this.progress.timer=null,window.setTimeout(()=>{this.progress.show=!1},this.progress.speed)}alertShow(n){this.alert.show=!0,this.alert.message=n,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=window.setTimeout(()=>{this.alertHide()},3e3)}alertHide(){this.alert.show=!1,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=null}};yr([it()],Pr.prototype,"vssue",void 0),yr([ht("vssue.isLoadingComments")],Pr.prototype,"onLoadingCommentsChange",null),Pr=yr([Object(at.b)({components:{TransitionFade:jr}})],Pr);const Nr=wr({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"vssue-notice"},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.progress.show,expression:"progress.show"}],staticClass:"vssue-progress",style:{width:n.progress.percent+"%",transition:"all "+n.progress.speed+"ms linear"}}),n._v(" "),t("TransitionFade",[t("div",{directives:[{name:"show",rawName:"v-show",value:n.alert.show,expression:"alert.show"}],staticClass:"vssue-alert",domProps:{textContent:n._s(n.alert.message)},on:{click:function(e){return n.alertHide()}}})])],1)},staticRenderFns:[]},void 0,Pr,void 0,!1,void 0,!1,void 0,void 0,void 0);let Mr=class extends o.default{get status(){return this.vssue.isFailed?"failed":this.vssue.isInitializing?"initializing":this.vssue.isIssueNotCreated&&!this.vssue.isCreatingIssue?this.vssue.isAdmin||!this.vssue.isLogined?"issueNotCreated":"failed":this.vssue.isLoginRequired?"loginRequired":!this.vssue.comments||this.vssue.isCreatingIssue?"loadingComments":0===this.vssue.comments.data.length?"noComments":null}handleClick(){"issueNotCreated"===this.status?this.vssue.postIssue():"loginRequired"===this.status&&this.vssue.login()}};yr([it()],Mr.prototype,"vssue",void 0),Mr=yr([Object(at.b)({components:{TransitionFade:jr,VssueIcon:_r}})],Mr);const Rr=wr({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("TransitionFade",[n.status?t("div",{key:n.status,staticClass:"vssue-status"},[["failed","loadingComments","initializing"].includes(n.status)?t("VssueIcon",{attrs:{name:"failed"===n.status?"error":"loading"}}):n._e(),n._v(" "),t("p",{staticClass:"vssue-status-info"},[t(["issueNotCreated","loginRequired"].includes(n.status)?"a":"span",{tag:"Component",on:{click:n.handleClick}},[n._v("\n        "+n._s(n.vssue.$t(n.status))+"\n      ")])],1)],1):n._e()])},staticRenderFns:[]},void 0,Mr,void 0,!1,void 0,!1,void 0,void 0,void 0);let Lr=class extends o.default{};yr([it()],Lr.prototype,"vssue",void 0),Lr=yr([Object(at.b)({components:{TransitionFade:jr,VssueIcon:_r,VssueComments:Ir,VssueNewComment:Ar,VssueNotice:Nr,VssueStatus:Rr}})],Lr);const Dr=wr({render:function(){var n=this.$createElement,e=this._self._c||n;return e("TransitionFade",[this.vssue.isInitializing?e("VssueStatus"):e("div",{staticClass:"vssue-body"},[this.vssue.API?e("VssueNewComment"):this._e(),this._v(" "),e("VssueNotice"),this._v(" "),e("TransitionFade",[this.vssue.comments&&this.vssue.comments.data.length>0?e("VssueComments"):e("VssueStatus")],1)],1)],1)},staticRenderFns:[]},void 0,Lr,void 0,!1,void 0,!1,void 0,void 0,void 0);let qr=class extends o.default{};yr([it()],qr.prototype,"vssue",void 0),qr=yr([at.b],qr);const Fr=wr({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"vssue-header"},[t("a",{staticClass:"vssue-header-comments-count",attrs:{href:n.vssue.issue?n.vssue.issue.link:null,target:"_blank",rel:"noopener noreferrer"}},[t("span",[n._v("\n      "+n._s(n.vssue.comments?n.vssue.$tc("comments",n.vssue.comments.count,{count:n.vssue.comments.count}):n.vssue.$tc("comments",0))+"\n    ")])]),n._v(" "),t("span",{staticClass:"vssue-header-powered-by"},[t("span",[n._v("Powered by")]),n._v(" "),n.vssue.API?t("span",[t("a",{attrs:{href:n.vssue.API.platform.link,title:n.vssue.API.platform.name+" API "+n.vssue.API.platform.version,target:"_blank",rel:"noopener noreferrer"}},[n._v("\n        "+n._s(n.vssue.API.platform.name)+"\n      ")]),n._v(" "),t("span",[n._v("&")])]):n._e(),n._v(" "),t("a",{attrs:{href:"https://github.com/meteorlxy/vssue",title:"Vssue v"+n.vssue.version,target:"_blank",rel:"noopener noreferrer"}},[n._v("\n      Vssue\n    ")])])])},staticRenderFns:[]},void 0,qr,void 0,!1,void 0,!1,void 0,void 0,void 0),Ur={login:"Login with {platform}",logout:"Logout",currentUser:"Current User",loading:"Loading",submit:"Submit",submitting:"Submitting",submitComment:"Submit Comment",cancel:"Cancel",edit:"Edit",editMode:"Edit Mode",delete:"Delete",reply:"Reply",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comments per page",sort:"Click to change the sort direction",page:"Page",prev:"Previous Page",next:"Next Page",comments:"Comments | {count} Comment | {count} Comments",loginToComment:"Login with {platform} account to leave a comment",placeholder:"Leave a comment. Styling with Markdown is supported. Ctrl + Enter to submit.",noLoginPlaceHolder:"Login to leave a comment. Styling with Markdown is supported. ",failed:"Failed to load comments",initializing:"Initializing...",issueNotCreated:"Click to create issue",loadingComments:"Loading comments...",loginRequired:"Login to view comments",noComments:"No comments yet. Leave the first comment !",reactionGiven:"Already given '{reaction}' reaction",deleteConfirm:"Confirm to delete this comment ?",deleteFailed:"Failed to delete comment"},Br={login:"使用 {platform} 登录",logout:"退出登录",currentUser:"当前用户",loading:"加载中",submit:"提交",submitting:"发表中",submitComment:"发表评论",cancel:"取消",edit:"编辑",editMode:"编辑模式",delete:"删除",reply:"回复",heart:"喜欢",like:"赞",unlike:"踩",perPage:"每页评论数",sort:"点击改变排序方式",page:"页数",prev:"上一页",next:"下一页",comments:"评论 | {count} 条评论 | {count} 条评论",loginToComment:"使用 {platform} 帐号登录后发表评论",placeholder:"留下你的评论丨支持 Markdown 语法丨Ctrl + Enter 发表评论",noLoginPlaceHolder:"登录后才能发表评论丨支持 Markdown 语法",failed:"评论加载失败",initializing:"正在初始化...",issueNotCreated:"点击创建 Issue",loadingComments:"正在加载评论...",loginRequired:"登录后查看评论",noComments:"还没有评论，来发表第一条评论吧！",reactionGiven:"已经添加过 '{reaction}' 了",deleteConfirm:"确认要删除该评论吗？",deleteFailed:"评论删除失败"},Hr={login:"Entrar com {platform}",logout:"Sair",currentUser:"Usuário Atual",loading:"Carregando",submit:"Enviar",submitting:"Enviando",submitComment:"Enviar Comentário",cancel:"Cancelar",edit:"Editar",editMode:"Modo de Edição",delete:"Apagar",reply:"Responder",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comentários por página",sort:"Clique para alterar a ordenação",page:"Página",prev:"Página Anterior",next:"Próxima Página",comments:"Comentários | {count} Comentário | {count} Comentários",loginToComment:"Entre com uma conta {platform} para deixar um comentário",placeholder:"Deixe um comentário. Estilos com Markdown suportados. Ctrl + Enter para enviar.",noLoginPlaceHolder:"Entre para deixar um comentário. Estilos com Markdown suportados. ",failed:"Falha ao carregar comentários",initializing:"Inicializando...",issueNotCreated:"Click to create issue",loadingComments:"Carregando comentários...",loginRequired:"Entrar para visualizar comentários",noComments:"Nenhum comentário. Deixe o primeiro comentário!",reactionGiven:"Já reagiu com '{reaction}'",deleteConfirm:"Apagar este comentário?",deleteFailed:"Falha ao apagar comentário"},Vr={login:"{platform} でログイン",logout:"ログアウト",currentUser:"現在のユーザー",loading:"読み込み中",submit:"送信",submitting:"送信中",submitComment:"コメントを送信",cancel:"キャンセル",edit:"編集",editMode:"編集モード",delete:"削除",reply:"返信",heart:"ハート",like:"高評価",unlike:"低評価",perPage:"コメント/ページ",sort:"並び順を変更するにはクリックしてください",page:"ページ",prev:"前のページ",next:"次のページ",comments:"コメント | {count} コメント | {count} コメント",loginToComment:"コメントを残すには {platform} アカウントでログインしてください。",placeholder:"コメントを残してください。Markdown 記法をサポートしています。 Ctrl + Enter で送信できます。",noLoginPlaceHolder:"コメントを残すにはログインしてください。マークダウン記法をサポートしています。",failed:"コメントの読み込みに失敗しました",initializing:"初期化中...",issueNotCreated:"Click to create issue",loadingComments:"コメントの読み込み中...",loginRequired:"コメントを見るにはログインしてください",noComments:"まだコメントがありません。最初のコメントを残しましょう！",reactionGiven:"既に '{reaction}' のリアクションをしています",deleteConfirm:"本当にコメントを削除してもいいですか？",deleteFailed:"コメントの削除に失敗しました"},Wr={login:"התחברו עם {platform}",logout:"התנתקו",currentUser:"משתמש/ת נוכחי/ת",loading:"טוען",submit:"שליחה",submitting:"שולח",submitComment:"שליחת תגובה",cancel:"ביטל",edit:"עריכה",editMode:"מצב עריכה",delete:"מחיקה",reply:"תשובה",heart:"לב",like:"לייק",unlike:"אנלייק",perPage:"תגובות לדף",sort:"לחצו כדי לשנות את כיוון המיון",page:"דף",prev:"הדף הקודם",next:"הדף הבא",comments:"תגובות | {count} תגובה | {count} תגובות",loginToComment:"התחברו עם חשבון {platform} כדי להשאיר תגובה",placeholder:"השאירו תגובה. יש תמיכה בעיצוב בעזרת Markdown. Ctrl + Enter כדי לשלוח.",noLoginPlaceHolder:"התחברו כדי להשאיר תגובה. יש תמיכה בעיצוב בעזרת Markdown. ",failed:"כשלון בטעינת התגובות",initializing:"מאתחל...",issueNotCreated:"לחצו ליצירת issue",loadingComments:"טוען תגובות...",loginRequired:"התחברו כדי לצפות בתגובות",noComments:"עדיין אין תגובות. השאירו תגובה ראשונה !",reactionGiven:"כבר ניתן חיווי '{reaction}'",deleteConfirm:"בטוחים במחיקת התגובה ?",deleteFailed:"כשלון במחיקת התגובה"};Object.prototype.hasOwnProperty.call(o.default,"$i18n")||o.default.use(br);const Xr=new br({locale:"en",fallbackLocale:"en",messages:{en:Ur,"en-US":Ur,zh:Br,"zh-CN":Br,pt:Hr,"pt-BR":Hr,ja:Vr,"ja-JP":Vr,he:Wr,"he-IL":Wr}});let Gr=class extends o.default{constructor(){super(...arguments),this.title=n=>`${n.prefix}${document.title}`,this.issueId=null,this.options=null,this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:10,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1}get version(){return"1.4.7"}get issueTitle(){return null===this.options?"":"function"==typeof this.title?this.title(this.options):`${this.options.prefix}${this.title}`}get isPending(){return this.isLoadingComments||this.isCreatingComment||this.isUpdatingComment}get isLogined(){return null!==this.accessToken&&null!==this.user}get isAdmin(){return null!==this.options&&null!==this.accessToken&&null!==this.user&&(this.user.username===this.options.owner||this.options.admins.includes(this.user.username))}get accessTokenKey(){return this.API?`Vssue.${this.API.platform.name.toLowerCase()}.access_token`:""}onQueryPerPageChange(){this.query.page=1,this.getComments()}onQueryChange(){this.getComments()}setOptions(n){this.options=Object.assign({labels:["Vssue"],state:"Vssue",prefix:"[Vssue]",admins:[],perPage:10,proxy:n=>"https://cors-anywhere.herokuapp.com/"+n,issueContent:({url:n})=>n,autoCreateIssue:!1},n);const e=["api","owner","repo","clientId"];for(const n of e)this.options[n]||console.warn(`[Vssue] the option '${n}' is required`);if(this.options.locale)this.$i18n.locale=this.options.locale;else{const n=Object.keys(this.$i18n.messages),e=window.navigator.languages;this.$i18n.locale=e.filter(e=>n.includes(e)).shift()||"en"}}async init(){try{await this.initStore(),await this.initComments()}catch(n){n.response&&[401,403].includes(n.response.status)?this.isLoginRequired=!0:this.isFailed=!0,console.error(n)}}async initStore(){try{if(!this.options)throw new Error("Options are required to initialize Vssue");this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:this.options.perPage,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1;const n=this.options.api;this.API=new n({baseURL:this.options.baseURL,labels:this.options.labels,state:this.options.state,owner:this.options.owner,repo:this.options.repo,clientId:this.options.clientId,clientSecret:this.options.clientSecret,proxy:this.options.proxy}),await this.handleAuth()}finally{this.isInitializing=!1}}async initComments(){if(this.API&&this.options)if(this.issueId){const[n,e]=await Promise.all([this.API.getIssue({accessToken:this.accessToken,issueId:this.issueId}),this.API.getComments({accessToken:this.accessToken,issueId:this.issueId,query:this.query})]);this.issue=n,this.comments=e}else this.issue=await this.API.getIssue({accessToken:this.accessToken,issueTitle:this.issueTitle}),null===this.issue?(this.isIssueNotCreated=!0,this.options.autoCreateIssue&&await this.postIssue()):await this.getComments()}async postIssue(){if(this.API&&this.options&&!this.issue&&!this.issueId&&(this.isLogined||this.login(),this.isAdmin))try{this.isCreatingIssue=!0;const n=await this.API.postIssue({title:this.issueTitle,content:await this.options.issueContent({options:this.options,url:kt(window.location.href)}),accessToken:this.accessToken});this.issue=n,this.isIssueNotCreated=!1,await this.getComments()}catch(n){this.isFailed=!0}finally{this.isCreatingIssue=!1}}async getComments(){try{if(!this.API||!this.issue||this.isLoadingComments)return;this.isLoadingComments=!0;const n=await this.API.getComments({accessToken:this.accessToken,issueId:this.issue.id,query:this.query});return this.comments=n,this.query.page!==n.page&&(this.query.page=n.page),this.query.perPage!==n.perPage&&(this.query.perPage=n.perPage),n}catch(n){if(!n.response||![401,403].includes(n.response.status)||this.isLogined)throw this.$emit("error",n),n;this.isLoginRequired=!0}finally{this.isLoadingComments=!1}}async postComment({content:n}){try{if(!this.API||!this.issue||this.isCreatingComment)return;this.isCreatingComment=!0;return await this.API.postComment({accessToken:this.accessToken,content:n,issueId:this.issue.id})}catch(n){throw this.$emit("error",n),n}finally{this.isCreatingComment=!1}}async putComment({commentId:n,content:e}){try{if(!this.API||!this.issue)return;return await this.API.putComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:n,content:e})}catch(n){throw this.$emit("error",n),n}}async deleteComment({commentId:n}){try{if(!this.API||!this.issue)return;return await this.API.deleteComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:n})}catch(n){throw this.$emit("error",n),n}}async getCommentReactions({commentId:n}){try{if(!this.API||!this.issue)return;return await this.API.getCommentReactions({accessToken:this.accessToken,issueId:this.issue.id,commentId:n})}catch(n){throw this.$emit("error",n),n}}async postCommentReaction({commentId:n,reaction:e}){try{if(!this.API||!this.issue)return!1;return await this.API.postCommentReaction({accessToken:this.accessToken,issueId:this.issue.id,commentId:n,reaction:e})}catch(n){throw this.$emit("error",n),n}}login(){this.API&&this.API.redirectAuth()}logout(){this.setAccessToken(null),this.user=null}async handleAuth(){if(!this.API)return;const n=await this.API.handleAuth();n?(this.setAccessToken(n),this.user=await this.API.getUser({accessToken:n})):this.getAccessToken()?this.user=await this.API.getUser({accessToken:this.accessToken}):(this.setAccessToken(null),this.user=null)}getAccessToken(){return this.accessToken=window.localStorage.getItem(this.accessTokenKey),this.accessToken}setAccessToken(n){null===n?window.localStorage.removeItem(this.accessTokenKey):window.localStorage.setItem(this.accessTokenKey,n),this.accessToken=n}};yr([ht("query.perPage")],Gr.prototype,"onQueryPerPageChange",null),yr([ht("query.page"),ht("query.sort")],Gr.prototype,"onQueryChange",null),Gr=yr([Object(at.b)({i18n:Xr})],Gr);var Jr=Gr;let Yr=class extends o.default{constructor(){super(...arguments),this.vssue=new Jr}onOptionsChange(n){this.vssue.setOptions(n)}mounted(){null!==this.title&&(this.vssue.title=this.title),null!==this.issueId&&(this.vssue.issueId=this.issueId),this.vssue.setOptions(this.options),this.vssue.init()}};var Kr;yr([mt({type:[String,Function],required:!1,default:null})],Yr.prototype,"title",void 0),yr([mt({type:[String,Number],required:!1,default:null})],Yr.prototype,"issueId",void 0),yr([mt({type:Object,required:!1,default:()=>({})})],Yr.prototype,"options",void 0),yr([(Kr="vssue",Object(at.a)((function(n,e){var t=n.provide;dt(n),st(t)&&(t=n.provide=lt(t)),t.managed[e]=Kr||e})))],Yr.prototype,"vssue",void 0),yr([ht("options",{deep:!0})],Yr.prototype,"onOptionsChange",null),Yr=yr([Object(at.b)({components:{Iconfont:kr,VssueBody:Dr,VssueHeader:Fr}})],Yr);const Qr=wr({render:function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"vssue"},[e("Iconfont"),this._v(" "),e("VssueHeader"),this._v(" "),e("VssueBody")],1)},staticRenderFns:[]},void 0,Yr,void 0,!1,void 0,!1,void 0,void 0,void 0);var Zr=t(26),no=t.n(Zr);function eo(n){return{username:n.login,avatar:n.avatar_url,homepage:n.html_url}}function to(n){return{id:n.number,title:n.title,content:n.body,link:n.html_url}}function ro(n){return{like:n["+1"],unlike:n[-1],heart:n.heart}}function oo(n){return{id:n.id,content:n.body_html,contentRaw:n.body,author:eo(n.user),createdAt:n.created_at,updatedAt:n.updated_at,reactions:ro(n.reactions)}}function ao(n){return"like"===n?"+1":"unlike"===n?"-1":n}class io{constructor({baseURL:n="https://github.com",owner:e,repo:t,labels:r,clientId:o,clientSecret:a,state:i,proxy:s}){if(void 0===a||void 0===s)throw new Error("clientSecret and proxy is required for GitHub V3");this.baseURL=n,this.owner=e,this.repo=t,this.labels=r,this.clientId=o,this.clientSecret=a,this.state=i,this.proxy=s,this.$http=no.a.create({baseURL:"https://github.com"===n?"https://api.github.com":bt(n,"api/v3"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(n=>n.data&&n.data.error?Promise.reject(new Error(n.data.error_description)):n,n=>(void 0===n.response&&"Network Error"===n.message&&(n.response={status:403}),Promise.reject(n)))}get platform(){return{name:"GitHub",link:this.baseURL,version:"v3",meta:{reactable:!0,sortable:!1}}}redirectAuth(){window.location.href=vt(bt(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const n=jt(window.location.search);if(n.code){if(n.state!==this.state)return null;const e=n.code;delete n.code,delete n.state;const t=vt(kt(window.location.href),n)+window.location.hash;window.history.replaceState(null,"",t);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:n}){const e=bt(this.baseURL,"login/oauth/access_token"),t="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:r}=await this.$http.post(t,{client_id:this.clientId,client_secret:this.clientSecret,code:n},{headers:{Accept:"application/json"}});return r.access_token}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"token "+n}});return eo(e)}async getIssue({accessToken:n,issueId:e,issueTitle:t}){const r={};if(n&&(r.headers={Authorization:"token "+n}),!e){r.params={q:[`"${t}"`,"is:issue","in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(n=>"label:"+n)].join(" "),timestamp:Date.now()};const{data:n}=await this.$http.get("search/issues",r);return n.items.map(to).find(n=>n.title===t)||null}try{r.params={timestamp:Date.now()};const{data:n}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,r);return to(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:t}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:e,body:t,labels:this.labels},{headers:{Authorization:"token "+n}});return to(r)}async getComments({accessToken:n,issueId:e,query:{page:t=1,perPage:r=10}={}}){const o={params:{timestamp:Date.now()}},a={params:{page:t,per_page:r,timestamp:Date.now()},headers:{Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}};n&&(o.headers={Authorization:"token "+n},a.headers.Authorization="token "+n);const[i,s]=await Promise.all([this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,o),this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,a)]),l=s.headers.link||null,c=/rel="next"/.test(l)?Number(l.replace(/^.*[^_]page=(\d*).*rel="next".*$/,"$1"))-1:/rel="prev"/.test(l)?Number(l.replace(/^.*[^_]page=(\d*).*rel="prev".*$/,"$1"))+1:1,d=l?Number(l.replace(/^.*per_page=(\d*).*$/,"$1")):r;return{count:Number(i.data.comments),page:c,perPage:d,data:s.data.map(oo)}}async postComment({accessToken:n,issueId:e,content:t}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,{body:t},{headers:{Authorization:"token "+n,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return oo(r)}async putComment({accessToken:n,commentId:e,content:t}){const{data:r}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{body:t},{headers:{Authorization:"token "+n,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return oo(r)}async deleteComment({accessToken:n,commentId:e}){const{status:t}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{headers:{Authorization:"token "+n}});return 204===t}async getCommentReactions({accessToken:n,commentId:e}){const{data:t}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{params:{timestamp:Date.now()},headers:{Authorization:"token "+n,Accept:"application/vnd.github.squirrel-girl-preview"}});return ro(t.reactions)}async postCommentReaction({accessToken:n,commentId:e,reaction:t}){const r=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/comments/${e}/reactions`,{content:ao(t)},{headers:{Authorization:"token "+n,Accept:"application/vnd.github.squirrel-girl-preview"}});return 200===r.status?this.deleteCommentReaction({accessToken:n,commentId:e,reactionId:r.data.id}):201===r.status}async deleteCommentReaction({accessToken:n,commentId:e,reactionId:t}){return 204===(await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}/reactions/${t}`,{headers:{Authorization:"token "+n,Accept:"application/vnd.github.squirrel-girl-preview"}})).status}}function so(n){return null===n?{username:"ghost",avatar:"https://avatars3.githubusercontent.com/u/10137?v=4",homepage:"https://github.com/ghost"}:{username:n.login,avatar:n.avatarUrl,homepage:n.url}}function lo(n){return{id:n.number,title:n.title,content:n.body,link:n.url}}function co(n){return{like:n.find(n=>"THUMBS_UP"===n.content).users.totalCount,unlike:n.find(n=>"THUMBS_DOWN"===n.content).users.totalCount,heart:n.find(n=>"HEART"===n.content).users.totalCount}}function uo(n){return{id:n.id,content:n.bodyHTML,contentRaw:n.body,author:so(n.author),createdAt:n.createdAt,updatedAt:n.updatedAt,reactions:co(n.reactionGroups)}}function po(n){return"like"===n?"THUMBS_UP":"unlike"===n?"THUMBS_DOWN":"heart"===n?"HEART":n}class mo{constructor({baseURL:n="https://github.com",owner:e,repo:t,labels:r,clientId:o,clientSecret:a,state:i,proxy:s}){if(void 0===a||void 0===s)throw new Error("clientSecret and proxy is required for GitHub V4");this.baseURL=n,this.owner=e,this.repo=t,this.labels=r,this.clientId=o,this.clientSecret=a,this.state=i,this.proxy=s,this._pageInfo={page:1,startCursor:null,endCursor:null,sort:null,perPage:null},this._issueNodeId=null,this.$http=no.a.create({baseURL:"https://github.com"===n?"https://api.github.com":bt(n,"api"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(n=>n.data.error?Promise.reject(n.data.error_description):n.data.errors?Promise.reject(n.data.errors[0].message):n)}get platform(){return{name:"GitHub",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=vt(bt(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const n=jt(window.location.search);if(n.code){if(n.state!==this.state)return null;const e=n.code;delete n.code,delete n.state;const t=vt(kt(window.location.href),n)+window.location.hash;window.history.replaceState(null,"",t);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:n}){const e=bt(this.baseURL,"login/oauth/access_token"),t="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:r}=await this.$http.post(t,{client_id:this.clientId,client_secret:this.clientSecret,code:n},{headers:{Accept:"application/json"}});return r.access_token}async getUser({accessToken:n}){const{data:e}=await this.$http.post("graphql",{query:"query getUser {\n  viewer {\n    login\n    avatarUrl\n    url\n  }\n}"},{headers:{Authorization:"token "+n}});return so(e.data.viewer)}async getIssue({accessToken:n,issueId:e,issueTitle:t}){const r={};if(n&&(r.headers={Authorization:"token "+n}),!e){const n=[`"${t}"`,"in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(n=>"label:"+n)].join(" "),{data:e}=await this.$http.post("graphql",{variables:{query:n},query:"query getIssueByTitle(\n  $query: String!\n) {\n  search(\n    query: $query\n    type: ISSUE\n    first: 20\n    ) {\n      nodes {\n      ... on Issue {\n        id\n        number\n        title\n        body\n        url\n      }\n    }\n  }\n}"},r),o=e.data.search.nodes.find(n=>n.title===t);return o?(this._issueNodeId=o.id,lo(o)):null}try{const{data:n}=await this.$http.post("graphql",{query:`query getIssueById {\n  repository(owner: "${this.owner}", name: "${this.repo}") {\n    issue (number: ${e}) {\n      id\n      number\n      title\n      body\n      url\n    }\n  }\n}`},r);return this._issueNodeId=n.data.repository.issue.id,lo(n.data.repository.issue)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:t}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:e,body:t,labels:this.labels},{headers:{Authorization:"token "+n}});return r.url=r.html_url,this._issueNodeId=r.node_id,lo(r)}async getComments({accessToken:n,issueId:e,query:{page:t=1,perPage:r=10,sort:o="desc"}={}}){const a={};n&&(a.headers={Authorization:"token "+n}),null!==this._pageInfo.sort&&o!==this._pageInfo.sort&&(t=1);const{firstOrLast:i,afterOrBefore:s,cursor:l}=this._getQueryParams({page:t,sort:o}),{data:c}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:e,perPage:r},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${i}: $perPage\n        ${null===s?"":`${s}: "${l}"`}\n      ) {\n        totalCount\n        pageInfo {\n          endCursor\n          startCursor\n        }\n        nodes {\n          id\n          body\n          bodyHTML\n          createdAt\n          updatedAt\n          author {\n            avatarUrl\n            login\n            url\n          }\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},a),d=c.data.repository.issue.comments;return"desc"===o&&d.nodes.reverse(),this._pageInfo={page:t,startCursor:d.pageInfo.startCursor,endCursor:d.pageInfo.endCursor,sort:o,perPage:r},{count:d.totalCount,page:t,perPage:r,data:d.nodes.map(uo)}}async postComment({accessToken:n,content:e}){const{data:t}=await this.$http.post("graphql",{variables:{issueNodeId:this._issueNodeId,content:e},query:"mutation postComment(\n  $issueNodeId: ID!\n  $content: String!\n) {\n  addComment(\n    input: {\n      subjectId: $issueNodeId\n      body: $content\n    }\n  ) {\n    commentEdge {\n      node {\n        id\n        body\n        bodyHTML\n        createdAt\n        updatedAt\n        author {\n          avatarUrl\n          login\n          url\n        }\n        reactionGroups {\n          users (first: 0) {\n            totalCount\n          }\n          content\n        }\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+n}});return uo(t.data.addComment.commentEdge.node)}async putComment({accessToken:n,commentId:e,content:t}){const{data:r}=await this.$http.post("graphql",{variables:{commentId:e,content:t},query:"mutation putComment(\n  $commentId: ID!,\n  $content: String!,\n) {\n  updateIssueComment(input: {\n    id: $commentId\n    body: $content\n  }) {\n    issueComment {\n      id\n      body\n      bodyHTML\n      createdAt\n      updatedAt\n      author {\n        avatarUrl\n        login\n        url\n      }\n      reactionGroups {\n        users (first: 0) {\n          totalCount\n        }\n        content\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+n}});return uo(r.data.updateIssueComment.issueComment)}async deleteComment({accessToken:n,commentId:e}){return await this.$http.post("graphql",{variables:{commentId:e},query:"mutation deleteComment(\n  $commentId: ID!,\n) {\n  deleteIssueComment(input: {\n    id: $commentId\n  }) {\n    clientMutationId\n  }\n}"},{headers:{Authorization:"token "+n}}),!0}async getCommentReactions({accessToken:n,issueId:e,commentId:t}){const{firstOrLast:r,afterOrBefore:o,cursor:a}=this._getQueryParams(),{data:i}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:e,perPage:this._pageInfo.perPage},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${r}: $perPage\n        ${null===o?"":`${o}: "${a}"`}\n      ) {\n        nodes {\n          id\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},{headers:{Authorization:"token "+n}});return co(i.data.repository.issue.comments.nodes.find(n=>n.id===t).reactionGroups)}async postCommentReaction({accessToken:n,commentId:e,reaction:t}){return await this.$http.post("graphql",{variables:{commentId:e,content:po(t)},query:"mutation postCommentReaction(\n  $commentId: ID!,\n  $content: ReactionContent!,\n) {\n  addReaction(input: {\n    subjectId: $commentId\n    content: $content\n  }) {\n    reaction {\n      databaseId\n    }\n  }\n}"},{headers:{Authorization:"token "+n}}),!0}_getQueryParams({page:n=this._pageInfo.page,sort:e=this._pageInfo.sort}={}){let t,r,o;return 1===n?(t="asc"===e?"first":"last",r=null,o=null):"asc"===e?n>this._pageInfo.page?(t="first",r="after",o=this._pageInfo.endCursor):(t="last",r="before",o=this._pageInfo.startCursor):n>this._pageInfo.page?(t="last",r="before",o=this._pageInfo.startCursor):(t="first",r="after",o=this._pageInfo.endCursor),{firstOrLast:t,afterOrBefore:r,cursor:o}}}function ho(n){return{username:n.username,avatar:n.avatar_url,homepage:n.web_url}}function fo(n){return{id:n.iid,title:n.title,content:n.description,link:n.web_url}}function go(n){return{id:n.id,content:n.body_html||"",contentRaw:n.body,author:ho(n.author),createdAt:n.created_at,updatedAt:n.updated_at,reactions:n.reactions}}function vo(n){return{like:n.filter(n=>"thumbsup"===n.name).length,unlike:n.filter(n=>"thumbsdown"===n.name).length,heart:n.filter(n=>"heart"===n.name).length}}function bo(n){return"like"===n?"thumbsup":"unlike"===n?"thumbsdown":n}class yo{constructor({baseURL:n="https://gitlab.com",owner:e,repo:t,labels:r,clientId:o,state:a}){this.baseURL=n,this.owner=e,this.repo=t,this.labels=r,this.clientId=o,this.state=a,this._encodedRepo=encodeURIComponent(`${this.owner}/${this.repo}`),this.$http=no.a.create({baseURL:bt(n,"api/v4"),headers:{Accept:"application/json"}})}get platform(){return{name:"GitLab",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=vt(bt(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const n=jt(window.location.hash.slice(1));if(!n.access_token||n.state!==this.state)return null;const e=n.access_token;delete n.access_token,delete n.token_type,delete n.expires_in,delete n.state;const t=gt(n),r=t?"#"+t:"",o=`${kt(window.location.href)}${window.location.search}${r}`;return window.history.replaceState(null,"",o),e}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"Bearer "+n}});return ho(e)}async getIssue({accessToken:n,issueId:e,issueTitle:t}){const r={};if(n&&(r.headers={Authorization:"Bearer "+n}),!e){r.params={labels:this.labels.join(","),order_by:"created_at",sort:"asc",search:t};const{data:n}=await this.$http.get(`projects/${this._encodedRepo}/issues`,r);return n.map(fo).find(n=>n.title===t)||null}try{const{data:n}=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}`,r);return fo(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:t}){const{data:r}=await this.$http.post(`projects/${this._encodedRepo}/issues`,{title:e,description:t,labels:this.labels.join(",")},{headers:{Authorization:"Bearer "+n}});return fo(r)}async getComments({accessToken:n,issueId:e,query:{page:t=1,perPage:r=10,sort:o="desc"}={}}){const a={params:{page:t,per_page:r,order_by:"created_at",sort:o}};n&&(a.headers={Authorization:"Bearer "+n});const i=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}/notes`,a),s=i.data,l=[];for(const t of s)l.push((async()=>{t.body_html=await this.getMarkdownContent({accessToken:n,contentRaw:t.body})})()),l.push((async()=>{t.reactions=await this.getCommentReactions({accessToken:n,issueId:e,commentId:t.id})})());return await Promise.all(l),{count:Number(i.headers["x-total"]),page:Number(i.headers["x-page"]),perPage:Number(i.headers["x-per-page"]),data:s.map(go)}}async postComment({accessToken:n,issueId:e,content:t}){const{data:r}=await this.$http.post(`projects/${this._encodedRepo}/issues/${e}/notes`,{body:t},{headers:{Authorization:"Bearer "+n}});return go(r)}async putComment({accessToken:n,issueId:e,commentId:t,content:r}){const{data:o}=await this.$http.put(`projects/${this._encodedRepo}/issues/${e}/notes/${t}`,{body:r},{headers:{Authorization:"Bearer "+n}}),[a,i]=await Promise.all([this.getMarkdownContent({accessToken:n,contentRaw:o.body}),this.getCommentReactions({accessToken:n,issueId:e,commentId:o.id})]);return o.body_html=a,o.reactions=i,go(o)}async deleteComment({accessToken:n,issueId:e,commentId:t}){const{status:r}=await this.$http.delete(`projects/${this._encodedRepo}/issues/${e}/notes/${t}`,{headers:{Authorization:"Bearer "+n}});return 204===r}async getCommentReactions({accessToken:n,issueId:e,commentId:t}){const{data:r}=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}/notes/${t}/award_emoji`,{headers:{Authorization:"Bearer "+n}});return vo(r)}async postCommentReaction({issueId:n,commentId:e,reaction:t,accessToken:r}){try{return 201===(await this.$http.post(`projects/${this._encodedRepo}/issues/${n}/notes/${e}/award_emoji`,{name:bo(t)},{headers:{Authorization:"Bearer "+r}})).status}catch(n){if(n.response&&404===n.response.status)return!1;throw n}}async getMarkdownContent({accessToken:n,contentRaw:e}){const t={};n&&(t.headers={Authorization:"Bearer "+n});const{data:r}=await this.$http.post("markdown",{text:e,gfm:!0},t);return r.html}}function xo(n){return{username:n.nickname,avatar:n.links.avatar.href,homepage:n.links.html.href}}function wo(n){return{id:n.id,title:n.title,content:n.content.raw,link:n.links.html.href}}function ko(n){return{id:n.id,content:n.content.html,contentRaw:n.content.raw,author:xo(n.user),createdAt:n.created_on,updatedAt:n.updated_on,reactions:null}}class jo{constructor({baseURL:n="https://bitbucket.org",owner:e,repo:t,clientId:r,state:o}){this.baseURL=n,this.owner=e,this.repo=t,this.clientId=r,this.state=o,this.$http=no.a.create({baseURL:"https://api.bitbucket.org/2.0",headers:{Accept:"application/json"}})}get platform(){return{name:"Bitbucket",link:this.baseURL,version:"v2",meta:{reactable:!1,sortable:!0}}}redirectAuth(){window.location.href=vt(bt(this.baseURL,"site/oauth2/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const n=jt(window.location.hash.slice(1));if(!n.access_token||n.state!==this.state)return null;const e=n.access_token;delete n.access_token,delete n.token_type,delete n.expires_in,delete n.state,delete n.scopes;const t=gt(n),r=t?"#"+t:"",o=`${kt(window.location.href)}${window.location.search}${r}`;return window.history.replaceState(null,"",o),e}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"Bearer "+n}});return xo(e)}async getIssue({accessToken:n,issueId:e,issueTitle:t}){const r={};if(n&&(r.headers={Authorization:"Bearer "+n}),!e){r.params={sort:"created_on",q:`title="${t}"`,timestamp:Date.now()};const{data:n}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues`,r);return n.size>0?wo(n.values[0]):null}try{r.params={timestamp:Date.now()};const{data:n}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${e}`,r);return wo(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:t}){const{data:r}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues`,{title:e,content:{raw:t},priority:"trivial",kind:"task"},{headers:{Authorization:"Bearer "+n}});return r.links.html={href:bt(this.baseURL,`${this.owner}/${this.repo}/issues/${r.id}`)},wo(r)}async getComments({accessToken:n,issueId:e,query:{page:t=1,perPage:r=10,sort:o="desc"}={}}){const a={params:{page:t,pagelen:r,sort:"desc"===o?"-created_on":"created_on",timestamp:Date.now()}};n&&(a.headers={Authorization:"Bearer "+n});const{data:i}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${e}/comments`,a);return{count:i.size,page:i.page,perPage:i.pagelen,data:i.values.filter(n=>null!==n.content.raw).map(ko)}}async postComment({accessToken:n,issueId:e,content:t}){const{data:r}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues/${e}/comments`,{content:{raw:t}},{headers:{Authorization:"Bearer "+n}});return ko(r)}async putComment({accessToken:n,issueId:e,commentId:t,content:r}){const{data:o}=await this.$http.put(`repositories/${this.owner}/${this.repo}/issues/${e}/comments/${t}`,{content:{raw:r}},{headers:{Authorization:"Bearer "+n}});return ko(o)}async deleteComment({accessToken:n,issueId:e,commentId:t}){const{status:r}=await this.$http.delete(`repositories/${this.owner}/${this.repo}/issues/${e}/comments/${t}`,{headers:{Authorization:"Bearer "+n}});return 204===r}async getCommentReactions(n){throw new Error("501 Not Implemented")}async postCommentReaction(n){throw new Error("501 Not Implemented")}}function _o(n){return{username:n.login,avatar:n.avatar_url,homepage:n.html_url}}function To(n){return{id:n.number,title:n.title,content:n.body,link:n.html_url}}function So(n){return{id:n.id,content:n.body_html||"",contentRaw:n.body,author:_o(n.user),createdAt:n.created_at,updatedAt:n.updated_at||"",reactions:null}}class Co{constructor({baseURL:n="https://gitee.com",owner:e,repo:t,labels:r,clientId:o,clientSecret:a,state:i,proxy:s}){if(void 0===a||void 0===s)throw new Error("clientSecret and proxy is required for Gitee V5");this.baseURL=n,this.owner=e,this.repo=t,this.labels=r,this.clientId=o,this.clientSecret=a,this.state=i,this.proxy=s,this.$http=no.a.create({baseURL:bt(n,"api/v5")}),this.$http.interceptors.response.use(n=>n,n=>(n.response.data&&n.response.data.message&&(n.message=n.response.data.message),Promise.reject(n)))}get platform(){return{name:"Gitee",link:this.baseURL,version:"v5",meta:{reactable:!1,sortable:!1}}}redirectAuth(){window.location.href=vt(bt(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"user_info issues notes",response_type:"code",state:this.state})}async handleAuth(){const n=jt(window.location.search);if(n.code){if(n.state!==this.state)return null;const e=n.code;delete n.code,delete n.state;const t=vt(kt(window.location.href),n)+window.location.hash;window.history.replaceState(null,"",t);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:n}){const e=bt(this.baseURL,"oauth/token"),t="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:r}=await this.$http.post(t,{client_id:this.clientId,client_secret:this.clientSecret,code:n,grant_type:"authorization_code",redirect_uri:window.location.href});return r.access_token}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{params:{access_token:n}});return _o(e)}async getIssue({accessToken:n,issueId:e,issueTitle:t}){const r={params:{timestamp:Date.now()}};if(n&&(r.params.access_token=n),!e){Object.assign(r.params,{q:t,repo:`${this.owner}/${this.repo}`,per_page:1});const{data:n}=await this.$http.get("search/issues",r);return n.map(To).find(n=>n.title===t)||null}try{const{data:n}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,r);return To(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:t}){const{data:r}=await this.$http.post(`repos/${this.owner}/issues`,{access_token:n,repo:this.repo,title:e,body:t,labels:this.labels.join(",")});return To(r)}async getComments({accessToken:n,issueId:e,query:{page:t=1,perPage:r=10}={}}){const o={params:{page:t,per_page:r,timestamp:Date.now()},headers:{Accept:["application/vnd.gitee.html+json"]}};n&&(o.params.access_token=n);const a=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,o);return{count:Number(a.headers.total_count),page:t,perPage:r,data:a.data.map(So)}}async postComment({accessToken:n,issueId:e,content:t}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,{body:t,access_token:n},{headers:{Accept:["application/vnd.gitee.html+json"]}});return So(r)}async putComment({accessToken:n,commentId:e,content:t}){const{data:r}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{body:t,access_token:n},{headers:{Accept:["application/vnd.gitee.html+json"]}});return So(r)}async deleteComment({accessToken:n,commentId:e}){const{status:t}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{params:{access_token:n}});return 204===t}async getCommentReactions(n){throw new Error("501 Not Implemented")}async postCommentReaction(n){throw new Error("501 Not Implemented")}}t(485);var zo={name:"Vssue",components:{VssueComponent:Qr},props:{options:{type:Object,default:function(){return{}}}},data:function(){return{key:"key",platformOptions:{github:io,"github-v4":mo,gitlab:yo,bitbucket:jo,gitee:Co}}},computed:{vssueOptions:function(){var n=this.platformOptions,e=this.options,t=n[e.platform];return Object(Re.a)(Object(Re.a)({},e),{},{api:t})}},watch:{$route:function(n,e){var t=this;n.path!==e.path&&setTimeout((function(){t.key="reco-".concat((new Date).getTime())}),300)}}},$o=(t(486),{components:{Valine:ot,Vssue:Object(Ie.a)(zo,(function(){var n=this.$createElement;return(this._self._c||n)("VssueComponent",{key:this.key,staticClass:"vssue-wrapper",attrs:{options:this.vssueOptions}})}),[],!1,null,null,null).exports},props:{isShowComments:{type:Boolean,default:!0}},data:function(){return{commentsOptions:{}}},computed:{solution:function(){var n=this.commentsOptions.solution,e=this.$themeConfig,t=e.valineConfig,r=e.vssueConfig,o=this.$themeLocaleConfig,a=o.valineConfig,i=o.vssueConfig,s="";return void 0!==n?s=n:void 0!==a||void 0!==t?s="valine":void 0===i&&void 0===r||(s="vssue"),s},options:function(){var n=this.commentsOptions.options,e=this.$themeConfig,t=e.valineConfig,r=e.vssueConfig,o=this.$themeLocaleConfig,a=o.valineConfig,i=o.vssueConfig;return void 0!==n?n:void 0!==a||void 0!==t?a||t:void 0!==i||void 0!==r?i||r:null},componentName:function(){var n=this.solution;return"valine"===n?"Valine":"vssue"===n?"Vssue":""}},mounted:function(){this.$themeConfig.commentsSolution=this.solution}}),Io=Object(Ie.a)($o,(function(){var n=this.$createElement,e=this._self._c||n;return e("div",{directives:[{name:"show",rawName:"v-show",value:this.isShowComments,expression:"isShowComments"}],staticClass:"comments-wrapper"},[e("ClientOnly",[e(this.componentName,{tag:"component",attrs:{options:this.options}})],1)],1)}),[],!1,null,null,null).exports,Oo={props:{idVal:String,numStyle:Object,flagTitle:{type:String,default:"Your Article Title"}},methods:{getIdVal:function(n){var e=this.$site.base;return e.slice(0,e.length-1)+n}}},Eo=Object(Ie.a)(Oo,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",{staticClass:"leancloud-visitors",attrs:{id:this.getIdVal(this.idVal),"data-flag-title":this.flagTitle}},[e("a",{staticClass:"leancloud-visitors-count",style:this.numStyle})])}),[],!1,null,null,null).exports,Ao=(t(487),t(82)),Po={tags:{mongodb:{key:"mongodb",scope:"tags",path:"/tag/mongodb/",pageKeys:["v-12b6f6ca","v-2393b2ea"]},mysql:{key:"mysql",scope:"tags",path:"/tag/mysql/",pageKeys:["v-f6b60f8a"]},"CSR & SSR":{key:"CSR & SSR",scope:"tags",path:"/tag/CSR & SSR/",pageKeys:["v-73897db4"]},"angular.js":{key:"angular.js",scope:"tags",path:"/tag/angular.js/",pageKeys:["v-0f06b62b"]},"微信小程序":{key:"微信小程序",scope:"tags",path:"/tag/微信小程序/",pageKeys:["v-1100e1ea"]},blog:{key:"blog",scope:"tags",path:"/tag/blog/",pageKeys:["v-26fec7c0"]},graphql:{key:"graphql",scope:"tags",path:"/tag/graphql/",pageKeys:["v-898c4eaa"]},github:{key:"github",scope:"tags",path:"/tag/github/",pageKeys:["v-898c4eaa","v-f1c651ee"]},"性能优化":{key:"性能优化",scope:"tags",path:"/tag/性能优化/",pageKeys:["v-c4dcad62"]},"get/post":{key:"get/post",scope:"tags",path:"/tag/get/post/",pageKeys:["v-c4dcad62"]},"async&defer":{key:"async&defer",scope:"tags",path:"/tag/async&defer/",pageKeys:["v-c4dcad62"]},Cookie:{key:"Cookie",scope:"tags",path:"/tag/Cookie/",pageKeys:["v-416fae73"]},jwt:{key:"jwt",scope:"tags",path:"/tag/jwt/",pageKeys:["v-416fae73"]},token:{key:"token",scope:"tags",path:"/tag/token/",pageKeys:["v-416fae73"]},"html/render":{key:"html/render",scope:"tags",path:"/tag/html/render/",pageKeys:["v-07a67efd"]},cors:{key:"cors",scope:"tags",path:"/tag/cors/",pageKeys:["v-2d684fe3"]},XMLHttpRequest:{key:"XMLHttpRequest",scope:"tags",path:"/tag/XMLHttpRequest/",pageKeys:["v-2d684fe3"]},array:{key:"array",scope:"tags",path:"/tag/array/",pageKeys:["v-759141f1"]},client:{key:"client",scope:"tags",path:"/tag/client/",pageKeys:["v-237eb20e"]},offset:{key:"offset",scope:"tags",path:"/tag/offset/",pageKeys:["v-237eb20e"]},scroll:{key:"scroll",scope:"tags",path:"/tag/scroll/",pageKeys:["v-237eb20e"]},console:{key:"console",scope:"tags",path:"/tag/console/",pageKeys:["v-10abb235"]},Date:{key:"Date",scope:"tags",path:"/tag/Date/",pageKeys:["v-73b9822b"]},element:{key:"element",scope:"tags",path:"/tag/element/",pageKeys:["v-3dfb9b42"]},event:{key:"event",scope:"tags",path:"/tag/event/",pageKeys:["v-1c92ac2f"]},function:{key:"function",scope:"tags",path:"/tag/function/",pageKeys:["v-1cdf13eb"]},object:{key:"object",scope:"tags",path:"/tag/object/",pageKeys:["v-44ff270b"]},regexp:{key:"regexp",scope:"tags",path:"/tag/regexp/",pageKeys:["v-25a66a6a","v-d6a7842a"]},string:{key:"string",scope:"tags",path:"/tag/string/",pageKeys:["v-477b89cb"]},this:{key:"this",scope:"tags",path:"/tag/this/",pageKeys:["v-71f3782b"]},"工具函数":{key:"工具函数",scope:"tags",path:"/tag/工具函数/",pageKeys:["v-4e03900b","v-221adb60","v-0eb1eaaa","v-d40032aa","v-26ab0fa5","v-43e29632"]},"算法":{key:"算法",scope:"tags",path:"/tag/算法/",pageKeys:["v-909fc8aa","v-1e971e6a"]},currying:{key:"currying",scope:"tags",path:"/tag/currying/",pageKeys:["v-0eb1eaaa"]},debounce:{key:"debounce",scope:"tags",path:"/tag/debounce/",pageKeys:["v-01608806"]},throttle:{key:"throttle",scope:"tags",path:"/tag/throttle/",pageKeys:["v-01608806"]},mobile:{key:"mobile",scope:"tags",path:"/tag/mobile/",pageKeys:["v-2f8561ea","v-21d64666"]},typeOf:{key:"typeOf",scope:"tags",path:"/tag/typeOf/",pageKeys:["v-43e29632"]},instanceof:{key:"instanceof",scope:"tags",path:"/tag/instanceof/",pageKeys:["v-43e29632"]},_hasOwnProperty:{key:"_hasOwnProperty",scope:"tags",path:"/tag/_hasOwnProperty/",pageKeys:["v-43e29632"]},centos7:{key:"centos7",scope:"tags",path:"/tag/centos7/",pageKeys:["v-5f067c2b","v-cd67ccaa","v-fd43afaa"]},linux:{key:"linux",scope:"tags",path:"/tag/linux/",pageKeys:["v-4392c46a"]},manjaro:{key:"manjaro",scope:"tags",path:"/tag/manjaro/",pageKeys:["v-54bc546a"]},ubuntu:{key:"ubuntu",scope:"tags",path:"/tag/ubuntu/",pageKeys:["v-696b2493"]},vim:{key:"vim",scope:"tags",path:"/tag/vim/",pageKeys:["v-51221e6a"]},react:{key:"react",scope:"tags",path:"/tag/react/",pageKeys:["v-663c3184","v-39a24c06","v-69dc8923","v-40d1a56d","v-d4461d4e"]},docker:{key:"docker",scope:"tags",path:"/tag/docker/",pageKeys:["v-68f2ea4d","v-13384609","v-20211497"]},gitlab:{key:"gitlab",scope:"tags",path:"/tag/gitlab/",pageKeys:["v-498c77a1"]},"网络协议":{key:"网络协议",scope:"tags",path:"/tag/网络协议/",pageKeys:["v-57d0c947"]},nginx:{key:"nginx",scope:"tags",path:"/tag/nginx/",pageKeys:["v-cd67ccaa","v-fd43afaa","v-bf44082a"]},"node.js":{key:"node.js",scope:"tags",path:"/tag/node.js/",pageKeys:["v-19de71fe"]},"travis-ci":{key:"travis-ci",scope:"tags",path:"/tag/travis-ci/",pageKeys:["v-f757d046"]},vagrant:{key:"vagrant",scope:"tags",path:"/tag/vagrant/",pageKeys:["v-800333ea"]},ascii:{key:"ascii",scope:"tags",path:"/tag/ascii/",pageKeys:["v-5df87458"]},commitizen:{key:"commitizen",scope:"tags",path:"/tag/commitizen/",pageKeys:["v-5290c2e6"]},proxy:{key:"proxy",scope:"tags",path:"/tag/proxy/",pageKeys:["v-45d5daeb"]},editorConfig:{key:"editorConfig",scope:"tags",path:"/tag/editorConfig/",pageKeys:["v-74169cd1"]},eslint:{key:"eslint",scope:"tags",path:"/tag/eslint/",pageKeys:["v-7b6d1e4d"]},"vue-cli":{key:"vue-cli",scope:"tags",path:"/tag/vue-cli/",pageKeys:["v-7b6d1e4d"]},git:{key:"git",scope:"tags",path:"/tag/git/",pageKeys:["v-36067c56","v-331a0a4b","v-66e4e26b"]},prettier:{key:"prettier",scope:"tags",path:"/tag/prettier/",pageKeys:["v-1a60816e"]},sentry:{key:"sentry",scope:"tags",path:"/tag/sentry/",pageKeys:["v-6da2cf71"]},editor:{key:"editor",scope:"tags",path:"/tag/editor/",pageKeys:["v-75920260"]},webpack:{key:"webpack",scope:"tags",path:"/tag/webpack/",pageKeys:["v-73fc990b"]},gulp:{key:"gulp",scope:"tags",path:"/tag/gulp/",pageKeys:["v-73fc990b"]},pxtorem:{key:"pxtorem",scope:"tags",path:"/tag/pxtorem/",pageKeys:["v-73fc990b"]},vue:{key:"vue",scope:"tags",path:"/tag/vue/",pageKeys:["v-5d5f8230","v-0bc04495","v-568b66a6","v-6158e156","v-01f8c78b","v-e3a2eb6a","v-4f096bb7","v-14db9dcd"]},"浏览器":{key:"浏览器",scope:"tags",path:"/tag/浏览器/",pageKeys:["v-0cc8204b"]},ie:{key:"ie",scope:"tags",path:"/tag/ie/",pageKeys:["v-d4a672aa"]},css:{key:"css",scope:"tags",path:"/tag/css/",pageKeys:["v-d4a672aa"]},emmet:{key:"emmet",scope:"tags",path:"/tag/emmet/",pageKeys:["v-0e770a8b"]},html:{key:"html",scope:"tags",path:"/tag/html/",pageKeys:["v-252b916a"]},less:{key:"less",scope:"tags",path:"/tag/less/",pageKeys:["v-373cc9a0"]},"1像素问题":{key:"1像素问题",scope:"tags",path:"/tag/1像素问题/",pageKeys:["v-373cc9a0","v-3ac5b8eb"]},viewport:{key:"viewport",scope:"tags",path:"/tag/viewport/",pageKeys:["v-26103f0b"]},rem:{key:"rem",scope:"tags",path:"/tag/rem/",pageKeys:["v-26103f0b"]},sass:{key:"sass",scope:"tags",path:"/tag/sass/",pageKeys:["v-6b871485"]},"清除浮动":{key:"清除浮动",scope:"tags",path:"/tag/清除浮动/",pageKeys:["v-3ac5b8eb"]},"css三角形":{key:"css三角形",scope:"tags",path:"/tag/css三角形/",pageKeys:["v-3ac5b8eb"]},"百分比单位":{key:"百分比单位",scope:"tags",path:"/tag/百分比单位/",pageKeys:["v-3ac5b8eb"]},"字体超出省略":{key:"字体超出省略",scope:"tags",path:"/tag/字体超出省略/",pageKeys:["v-3ac5b8eb"]},layout:{key:"layout",scope:"tags",path:"/tag/layout/",pageKeys:["v-374104bf"]}},categories:{faq:{key:"faq",scope:"categories",path:"/categories/faq/",pageKeys:["v-26fec7c0","v-898c4eaa","v-c4dcad62","v-416fae73","v-07a67efd","v-2d684fe3","v-f1c651ee"]},libs:{key:"libs",scope:"categories",path:"/categories/libs/",pageKeys:["v-4e03900b","v-221adb60","v-909fc8aa","v-0eb1eaaa","v-01608806","v-d40032aa","v-26ab0fa5","v-2f8561ea","v-d6a7842a","v-1e971e6a","v-43e29632"]},server:{key:"server",scope:"categories",path:"/categories/server/",pageKeys:["v-5f067c2b","v-4392c46a","v-54bc546a","v-696b2493","v-51221e6a","v-68f2ea4d","v-13384609","v-20211497","v-498c77a1","v-57d0c947","v-cd67ccaa","v-fd43afaa","v-bf44082a","v-19de71fe","v-f757d046","v-800333ea"]},tools:{key:"tools",scope:"categories",path:"/categories/tools/",pageKeys:["v-5df87458","v-5290c2e6","v-45d5daeb","v-74169cd1","v-7b6d1e4d","v-36067c56","v-331a0a4b","v-66e4e26b","v-1a60816e","v-6da2cf71","v-75920260","v-73fc990b"]},web:{key:"web",scope:"categories",path:"/categories/web/",pageKeys:["v-21d64666","v-0cc8204b","v-d4a672aa","v-0e770a8b","v-252b916a","v-373cc9a0","v-26103f0b","v-6b871485","v-3ac5b8eb","v-374104bf"]}},timeline:{}},No=function(){function n(e,t){var r=this;Object(Te.a)(this,n),this._metaMap=Object.assign({},e),Object.keys(this._metaMap).forEach((function(n){var e=r._metaMap[n].pageKeys;r._metaMap[n].pages=e.map((function(n){return Object(Kn.b)(t,n)}))}))}return Object(Se.a)(n,[{key:"toArray",value:function(){var n=this,e=[];return Object.keys(this._metaMap).forEach((function(t){var r=n._metaMap[t],o=r.pages,a=r.path;e.push({name:t,pages:o,path:a})})),e}},{key:"getItemByName",value:function(n){return this._metaMap[n]}},{key:"length",get:function(){return Object.keys(this._metaMap).length}},{key:"map",get:function(){return this._metaMap}},{key:"pages",get:function(){return this.list}},{key:"list",get:function(){return this.toArray()}}]),n}(),Mo=(t(243),{tags:function(n,e){var r=t(261);return r(n.frontmatter.date)-r(e.frontmatter.date)>0?-1:1},categories:function(n,e){var r=t(261);return r(n.frontmatter.date)-r(e.frontmatter.date)>0?-1:1}}),Ro={tags:function(n,e,t){var r=e;return["tags"].some((function(e){var t=n.frontmatter[e];return Array.isArray(t)?t.some((function(n){return n===r})):t===r}))},categories:function(n,e,t){var r=e;return["categories"].some((function(e){var t=n.frontmatter[e];return Array.isArray(t)?t.some((function(n){return n===r})):t===r}))}},Lo=[{pid:"tags",id:"mongodb",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/mongodb/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"mysql",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/mysql/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"CSR & SSR",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/CSR & SSR/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"angular.js",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/angular.js/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"微信小程序",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/微信小程序/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"blog",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/blog/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"graphql",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/graphql/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"github",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/github/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"性能优化",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/性能优化/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"get/post",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/get/post/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"async&defer",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/async&defer/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Cookie",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/Cookie/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"jwt",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/jwt/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"token",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/token/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"html/render",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/html/render/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"cors",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/cors/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"XMLHttpRequest",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/XMLHttpRequest/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"array",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/array/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"client",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/client/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"offset",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/offset/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"scroll",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/scroll/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"console",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/console/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Date",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/Date/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"element",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/element/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"event",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/event/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"function",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/function/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"object",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/object/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"regexp",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/regexp/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"string",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/string/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"this",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/this/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"工具函数",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/工具函数/",interval:[0,6]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"算法",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/算法/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"currying",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/currying/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"debounce",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/debounce/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"throttle",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/throttle/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"mobile",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/mobile/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"typeOf",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/typeOf/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"instanceof",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/instanceof/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"_hasOwnProperty",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/_hasOwnProperty/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"centos7",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/centos7/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"linux",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/linux/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"manjaro",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/manjaro/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"ubuntu",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/ubuntu/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"vim",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/vim/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"react",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/react/",interval:[0,5]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"docker",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/docker/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"gitlab",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/gitlab/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"网络协议",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/网络协议/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"nginx",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/nginx/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"node.js",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/node.js/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"travis-ci",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/travis-ci/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"vagrant",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/vagrant/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"ascii",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/ascii/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"commitizen",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/commitizen/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"proxy",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/proxy/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"editorConfig",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/editorConfig/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"eslint",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/eslint/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"vue-cli",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/vue-cli/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"git",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/git/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"prettier",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/prettier/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"sentry",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/sentry/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"editor",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/editor/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"webpack",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/webpack/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"gulp",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/gulp/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"pxtorem",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/pxtorem/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"vue",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/vue/",interval:[0,8]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"浏览器",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/浏览器/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"ie",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/ie/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"css",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/css/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"emmet",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/emmet/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"html",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/html/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"less",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/less/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"1像素问题",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/1像素问题/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"viewport",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/viewport/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"rem",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/rem/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"sass",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/sass/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"清除浮动",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/清除浮动/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"css三角形",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/css三角形/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"百分比单位",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/百分比单位/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"字体超出省略",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/字体超出省略/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"layout",filter:Ro.tags,sorter:Mo.tags,pages:[{path:"/tag/layout/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"faq",filter:Ro.categories,sorter:Mo.categories,pages:[{path:"/categories/faq/",interval:[0,7]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"libs",filter:Ro.categories,sorter:Mo.categories,pages:[{path:"/categories/libs/",interval:[0,9]},{path:"/categories/libs/page/2/",interval:[10,11]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"server",filter:Ro.categories,sorter:Mo.categories,pages:[{path:"/categories/server/",interval:[0,9]},{path:"/categories/server/page/2/",interval:[10,16]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"tools",filter:Ro.categories,sorter:Mo.categories,pages:[{path:"/categories/tools/",interval:[0,9]},{path:"/categories/tools/page/2/",interval:[10,12]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"web",filter:Ro.categories,sorter:Mo.categories,pages:[{path:"/categories/web/",interval:[0,9]}],prevText:"Prev",nextText:"Next"}],Do=t(272),qo=t.n(Do)()("plugin-blog:pagination"),Fo=function(){function n(e,t,r){Object(Te.a)(this,n),qo("pagination",e);var o=e.pages,a=e.prevText,i=e.nextText,s=r.path;this._prevText=a,this._nextText=i;for(var l=0,c=o.length;l<c;l++){if(o[l].path===s){this.paginationIndex=l;break}}this.paginationIndex||(this.paginationIndex=0),this._paginationPages=o,this._currentPage=o[this.paginationIndex],this._matchedPages=t.filter((function(n){return e.filter(n,e.id,e.pid)})).sort(e.sorter)}return Object(Se.a)(n,[{key:"setIndexPage",value:function(n){this._indexPage=n}},{key:"getSpecificPageLink",value:function(n){return this._paginationPages[n].path}},{key:"length",get:function(){return this._paginationPages.length}},{key:"pages",get:function(){var n=Object(Zn.a)(this._currentPage.interval,2),e=n[0],t=n[1];return this._matchedPages.slice(e,t+1)}},{key:"hasPrev",get:function(){return 0!==this.paginationIndex}},{key:"prevLink",get:function(){return this.hasPrev?this.paginationIndex-1==0&&this._indexPage?this._indexPage:this._paginationPages[this.paginationIndex-1].path:null}},{key:"hasNext",get:function(){return this.paginationIndex!==this.length-1}},{key:"nextLink",get:function(){return this.hasNext?this._paginationPages[this.paginationIndex+1].path:null}},{key:"prevText",get:function(){return this._prevText}},{key:"nextText",get:function(){return this._nextText}}]),n}(),Uo=new(function(){function n(e){Object(Te.a)(this,n),this.paginations=e}return Object(Se.a)(n,[{key:"getPagination",value:function(n,e,t){qo("id",e),qo("pid",n);var r=this.paginations.filter((function(t){return t.id===e&&t.pid===n}))[0];return new Fo(r,this.pages,t)}},{key:"pages",get:function(){return o.default.$vuepress.$get("siteData").pages}}]),n}())(Lo),Bo={comment:{enabled:!1,service:""},email:{enabled:!1},feed:{rss:!1,atom:!1,json:!1}};var Ho=function(n){var e=n.Vue;n.router.options.scrollBehavior=function(n,t,r){if(r)return window.scrollTo({top:r.y,behavior:"smooth"});if(!n.hash)return window.scrollTo({top:0,behavior:"smooth"});if(!e.$vuepress.$get("disableScrollBehavior")){var o,a,i,s=n.hash.slice(1),l=document.getElementById(s)||document.querySelector("[name='".concat(s,"']"));return l?window.scrollTo({top:(o=l,a=document.documentElement.getBoundingClientRect(),i=o.getBoundingClientRect(),{x:i.left-a.left,y:i.top-a.top}).y,behavior:"smooth"}):void 0}}},Vo=(t(88),function(){function n(e){Object(Te.a)(this,n),Object.defineProperty(this,"registration",{value:e,configurable:!0,writable:!0})}return Object(Se.a)(n,[{key:"update",value:function(){return this.registration.update()}},{key:"skipWaiting",value:function(){var n=this.registration.waiting;return n?(console.log("[vuepress:sw] Doing worker.skipWaiting()."),new Promise((function(e,t){var r=new MessageChannel;r.port1.onmessage=function(n){console.log("[vuepress:sw] Done worker.skipWaiting()."),n.data.error?t(n.data.error):e(n.data)},n.postMessage({type:"skip-waiting"},[r.port2])}))):Promise.resolve()}}]),n}()),Wo=t(63);o.default.component("SWUpdatePopup",(function(){return Promise.all([t.e(0),t.e(110)]).then(t.bind(null,670))}));var Xo=function(){var n=Object(r.a)(regeneratorRuntime.mark((function n(e){var r,o,a;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=e.router,e.isServer){n.next=7;break}return n.next=4,t.e(113).then(t.bind(null,667));case 4:o=n.sent,a=o.register,r.onReady((function(){a("".concat("/","service-worker.js"),{registrationOptions:{},ready:function(){console.log("[vuepress:sw] Service worker is active."),Wo.a.$emit("sw-ready")},cached:function(n){console.log("[vuepress:sw] Content has been cached for offline use."),Wo.a.$emit("sw-cached",new Vo(n))},updated:function(n){console.log("[vuepress:sw] Content updated."),Wo.a.$emit("sw-updated",new Vo(n))},offline:function(){console.log("[vuepress:sw] No internet connection found. App is running in offline mode."),Wo.a.$emit("sw-offline")},error:function(n){console.error("[vuepress:sw] Error during service worker registration:",n),Wo.a.$emit("sw-error",n),ga("send","exception",{exDescription:n.message,exFatal:!1})}})}));case 7:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}(),Go=(t(170),{name:"ReadingProgress",data:function(){return{readingTop:0,readingHeight:1,progressStyle:null,transform:void 0,running:!1}},watch:{$readingShow:function(){this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)}},mounted:function(){this.transform=this.getTransform(),this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)},beforeDestroy:function(){this.$readingShow&&window.removeEventListener("scroll",this.base)},methods:{base:function(){this.running||(this.running=!0,requestAnimationFrame(this.getReadingBase))},getReadingBase:function(){this.readingHeight=this.getReadingHeight()-this.getScreenHeight(),this.readingTop=this.getReadingTop(),this.progressStyle=this.getProgressStyle(),this.running=!1},getReadingHeight:function(){return Math.max(document.body.scrollHeight,document.body.offsetHeight,0)},getScreenHeight:function(){return Math.max(window.innerHeight,document.documentElement.clientHeight,0)},getReadingTop:function(){return Math.max(window.pageYOffset,document.documentElement.scrollTop,0)},getTransform:function(){var n=document.createElement("div");return["transform","-webkit-transform","-moz-transform","-o-transform","-ms-transform"].find((function(e){return e in n.style}))||void 0},getProgressStyle:function(){var n=this.readingTop/this.readingHeight;switch(this.$readingShow){case"top":case"bottom":return this.transform?"".concat(this.transform,": scaleX(").concat(n,")"):"width: ".concat(100*n,"%");case"left":case"right":return this.transform?"".concat(this.transform,": scaleY(").concat(n,")"):"height: ".concat(100*n,"%");default:return null}}}}),Jo=(t(490),Object(Ie.a)(Go,(function(){var n=this.$createElement,e=this._self._c||n;return e("ClientOnly",[this.$readingShow?e("div",{staticClass:"reading-progress",class:this.$readingShow},[e("div",{staticClass:"progress",style:this.progressStyle})]):this._e()])}),[],!1,null,"3640397f",null).exports),Yo=!0,Ko="lazy",Qo="200px",Zo={name:"Demo",props:{collapse:{type:Boolean,default:!1}},data:function(){return{showCode:!1,copied:!1,codeNavIndex:0,codeNavConfigs:[]}},created:function(){this.showCode=this.collapse,this.makeCodeNavConfigs()},methods:{toggleCode:function(){this.showCode=!this.showCode},copyCode:function(){var n=this,e=this.$el.querySelectorAll("pre")[this.codeNavIndex];e.setAttribute("contenteditable","true"),e.focus(),document.execCommand("selectAll",!1,null),this.copied=document.execCommand("copy"),e.removeAttribute("contenteditable"),setTimeout((function(){n.copied=!1}),1e3)},codeNavBtnHandler:function(n){this.codeNavIndex=n},makeCodeNavConfigs:function(){var n,e=this.$slots,t=[];for(var r in e)0==r.indexOf("code-")&&(n=r.replace("code-","").replace(/^\S/,(function(n){return n.toUpperCase()})),t.push({title:n,slotName:r}));this.codeNavConfigs=t}}},na=(t(491),Object(Ie.a)(Zo,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"demo-wrap"},[t("div",{staticClass:"demo-nav"},[t("i",{staticClass:"demo-nav-btn",on:{click:n.toggleCode}},[t("svg",{staticClass:"icon",attrs:{t:"1572515960134",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"1097",width:"20",height:"20"}},[t("path",{attrs:{d:"M888 64H136q-30.016 0-51.008 20.992T64 136v752.992q0 28.992 20.992 50.496t51.008 21.504h752.992q28.992 0 50.496-21.504t21.504-50.496V136q0-30.016-21.504-51.008T888 64zM228.992 548.992q-15.008 0-25.504-10.496t-10.496-25.504 10.016-26.016l115.008-115.008-115.008-116.992q-10.016-11.008-10.016-25.504t10.496-24.992 25.504-10.496 24.992 10.016l140.992 142.016q10.016 11.008 10.016 26.016t-11.008 24.992l-140 140.992q-10.016 11.008-24.992 11.008z m389.024 0l-199.008-0.992q-15.008 0-25.504-10.496T383.008 512t10.496-25.504 25.504-10.496l199.008 0.992q15.008 0 25.504 10.496t10.496 25.504-11.008 25.504-24.992 10.496z","p-id":"1098"}})])]),n._v(" "),t("i",{class:n.showCode?"demo-icon-arrow active":"demo-icon-arrow"},[t("svg",{staticClass:"icon",attrs:{t:"1572587847226",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"3297",width:"16",height:"16"}},[t("path",{attrs:{d:"M830.687738 603.071182c0 9.614985-3.933589 17.949814-11.799744 25.007557-7.867178 7.05672-17.222243 10.56052-28.065196 10.512425L232.716714 638.591163c-10.789741 0-20.144806-3.5038-28.064172-10.512425-7.919367-7.009647-11.852956-15.344476-11.799744-25.007557 0.053212-9.660011 3.986801-17.996886 11.799744-25.00551l279.05253-248.641917c7.867178-7.009647 17.22122-10.513448 28.065196-10.513448 10.842952 0 20.196994 3.504824 28.064172 10.513448l279.05253 248.641917C826.754149 585.074296 830.687738 593.411171 830.687738 603.071182z","p-id":"3298"}})])])]),n._v(" "),t("transition",{attrs:{name:"code-fade"}},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.showCode,expression:"showCode"}],staticClass:"demo-code"},[t("div",{staticClass:"demo-code-nav"},n._l(n.codeNavConfigs,(function(e,r){return t("button",{key:r,class:["demo-code-btn",n.codeNavIndex===r?"active":""],on:{click:function(e){return n.codeNavBtnHandler(r)}}},[n._v(n._s(e.title))])})),0),n._v(" "),t("div",{staticClass:"demo-code-content"},[n._l(n.codeNavConfigs,(function(e,r){return t("div",{directives:[{name:"show",rawName:"v-show",value:n.codeNavIndex===r,expression:"codeNavIndex === index"}],key:r,staticClass:"demo-code-item"},[n._t(e.slotName)],2)})),n._v(" "),t("i",{staticClass:"demo-code-content-copy",on:{click:n.copyCode}},[t("svg",{staticClass:"icon",staticStyle:{fill:"#fff"},attrs:{t:"1572585974849",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"1695",width:"20",height:"20"}},[t("path",{attrs:{d:"M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z","p-id":"1696"}})])]),n._v(" "),t("transition",{attrs:{name:"slide-fade"}},[n.copied?t("span",{staticClass:"demo-code-content-copied"},[n._v("Copied")]):n._e()])],2)])]),n._v(" "),t("div",{staticClass:"demo-main"},[n.$slots.demo?t("div",{staticClass:"demo-component-wrap"},[n._t("demo")],2):n._e()])],1)}),[],!1,null,null,null).exports),ea={inheritAttrs:!1,data:function(){return{dynamicComponent:null}},mounted:function(){var n=this;Promise.all([t.e(0),t.e(108)]).then(t.bind(null,669)).then((function(e){n.dynamicComponent=e.default}))}},ta=Object(Ie.a)(ea,(function(){var n=this.$createElement,e=this._self._c||n;return this.dynamicComponent?e("div",{staticClass:"vuepress-run"},[e(this.dynamicComponent,this._b({tag:"component"},"component",this.$attrs,!1))],1):this._e()}),[],!1,null,null,null).exports,ra=(t(492),[function(n){n.Vue,n.options,n.router,n.siteData},function(n){var e=n.Vue,t=n.siteData,r=n.isServer,o=n.router;e.use(We.b),e.mixin(Ne),e.mixin(Be),r||(Object(He.a)("//at.alicdn.com/t/font_1030519_2ciwdtb4x65.css"),Object(He.b)("//kit.fontawesome.com/51b01de608.js"),Object(Ve.c)(t.themeConfig.codeTheme)),Object(Ve.b)(o)},{},function(n){n.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},function(n){n.Vue.component("BackToTop",Ge)},function(n){n.Vue.component("LoadingPage",Je)},function(n){n.Vue.component("Pagation",tt)},function(n){n.Vue.mixin({computed:{$perPage:function(){return 10}}})},function(n){var e=n.Vue;e.component("Comments",Io),e.component("AccessNumber",Eo)},{},function(n){var e=n.Vue,t=Object.keys(Po).map((function(n){var e,t=Po[n],r="$".concat(n);return e={},Object(Ao.a)(e,r,(function(){var n=this.$site.pages;return new No(t,n)})),Object(Ao.a)(e,"$current".concat(n.charAt(0).toUpperCase()+n.slice(1)),(function(){var n=this.$route.meta.id;return this[r].getItemByName(n)})),e})).reduce((function(n,e){return Object.assign(n,e),n}),{});t.$frontmatterKey=function(){var n=this["$".concat(this.$route.meta.id)];return n||null},e.mixin({computed:t})},function(n){n.Vue.mixin({computed:{$pagination:function(){return this.$route.meta.pid&&this.$route.meta.id?this.$getPagination(this.$route.meta.pid,this.$route.meta.id):null}},methods:{$getPagination:function(n,e){return e=e||n,Uo.getPagination(n,e,this.$route)}}})},function(n){var e={$service:function(){return Bo}};n.Vue.mixin({computed:e})},Ho,function(n){var e,t,r,o,a,i,s=n.router;"undefined"!=typeof window&&(e=window,t=document,r="script",o="ga",e.GoogleAnalyticsObject=o,e.ga=e.ga||function(){(e.ga.q=e.ga.q||[]).push(arguments)},e.ga.l=1*new Date,a=t.createElement(r),i=t.getElementsByTagName(r)[0],a.async=1,a.src="https://www.google-analytics.com/analytics.js",i.parentNode.insertBefore(a,i),ga("create","UA-126651722-1","auto"),ga("set","anonymizeIp",!0),s.afterEach((function(n){ga("set","page",s.app.$withBase(n.fullPath)),ga("send","pageview")})))},Xo,function(n){var e=n.Vue;e.component(Jo.name,Jo),e.mixin({computed:{$readingShow:function(){return this.$page.frontmatter.readingShow}}})},function(n){n.Vue.mixin({data:function(){return{$io:void 0}},mounted:function(){var n=this,e=document.querySelectorAll("img."+Ko);Yo&&"loading"in HTMLImageElement.prototype?e.forEach((function(n){!n.getAttribute("src")&&n.setAttribute("src",n.getAttribute("data-src"))})):(this.setObserver(),e.forEach((function(e){n.$io.observe(e)})))},methods:{setObserver:function(){var n=this;this.$io=new IntersectionObserver((function(e){e.forEach((function(e){if(e.isIntersecting){var t=n.getSrc(e.target);t&&(e.target.src=t),n.$io.unobserve(e.target)}}))}),{rootMargin:Qo})},getSrc:function(n){if(n.dataset)return n.dataset.src;var e=n.attributes.find((function(n){return"data-src"===n.nodeName}));return e&&e.nodeValue}}})},function(n){n.Vue.component("RecoDemo",na)},function(n){n.Vue.component("vuepress-run",ta)}]),oa=["BackToTop","SWUpdatePopup","ReadingProgress"];t(78),t(98);var aa=t(172),ia=t(171),sa=function(n){Object(aa.a)(t,n);var e=Object(ia.a)(t);function t(){return Object(Te.a)(this,t),e.apply(this,arguments)}return t}(function(){function n(){Object(Te.a)(this,n),this.store=new o.default({data:{state:{}}})}return Object(Se.a)(n,[{key:"$get",value:function(n){return this.store.state[n]}},{key:"$set",value:function(n,e){o.default.set(this.store.state,n,e)}},{key:"$emit",value:function(){var n;(n=this.store).$emit.apply(n,arguments)}},{key:"$on",value:function(){var n;(n=this.store).$on.apply(n,arguments)}}]),n}());Object.assign(sa.prototype,{getPageAsyncComponent:Kn.e,getLayoutAsyncComponent:Kn.d,getAsyncComponent:Kn.c,getVueComponent:Kn.f});var la={install:function(n){var e=new sa;n.$vuepress=e,n.prototype.$vuepress=e}};function ca(n){n.beforeEach((function(e,t,r){if(da(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){var o=e.path.replace(/\/$/,"")+".html";da(n,o)?r(o):r()}else r();else{var a=e.path+"/",i=e.path+".html";da(n,i)?r(i):da(n,a)?r(a):r()}}))}function da(n,e){return n.options.routes.filter((function(n){return n.path.toLowerCase()===e.toLowerCase()})).length>0}var ua={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(n){var e=this.pageKey||this.$parent.$page.key;return Object(Kn.i)("pageKey",e),o.default.component(e)||o.default.component(e,Object(Kn.e)(e)),o.default.component(e)?n(e):n("")}},pa={functional:!0,props:{slotKey:String,required:!0},render:function(n,e){var t=e.props,r=e.slots;return n("div",{class:["content__".concat(t.slotKey)]},r()[t.slotKey])}},ma={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},ha=(t(493),t(494),Object(Ie.a)(ma,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function fa(){return(fa=Object(r.a)(regeneratorRuntime.mark((function n(e){var t,r,a,i;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Ae.routerBase||Ae.base,ca(r=new Jn({base:t,mode:"history",fallback:!1,routes:Ee,scrollBehavior:function(n,e,t){return t||(n.hash?!o.default.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})}})),a={},n.prev=4,n.next=7,Promise.all(ra.filter((function(n){return"function"==typeof n})).map((function(n){return n({Vue:o.default,options:a,router:r,siteData:Ae,isServer:e})})));case 7:n.next=12;break;case 9:n.prev=9,n.t0=n.catch(4),console.error(n.t0);case 12:return i=new o.default(Object.assign(a,{router:r,render:function(n){return n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},oa.map((function(e){return n(e)})))])}})),n.abrupt("return",{app:i,router:r});case 14:case"end":return n.stop()}}),n,null,[[4,9]])})))).apply(this,arguments)}o.default.config.productionTip=!1,o.default.use(Jn),o.default.use(la),o.default.mixin(function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o.default;Yn(e),t.$vuepress.$set("siteData",e);var r=n(t.$vuepress.$get("siteData")),a=new r,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),s={};return Object.keys(i).reduce((function(n,e){return e.startsWith("$")&&(n[e]=i[e].get),n}),s),{computed:s}}((function(n){return function(){function e(){Object(Te.a)(this,e)}return Object(Se.a)(e,[{key:"setPage",value:function(n){this.__page=n}},{key:"$site",get:function(){return n}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var n,e,t=this.$site.locales,r=void 0===t?{}:t;for(var o in r)"/"===o?e=r[o]:0===this.$page.path.indexOf(o)&&(n=r[o]);return n||e||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var n=this.$page.frontmatter.canonicalUrl;return"string"==typeof n&&n}},{key:"$title",get:function(){var n=this.$page,e=this.$page.frontmatter.metaTitle;if("string"==typeof e)return e;var t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}},{key:"$description",get:function(){var n=function(n){if(n){var e=n.filter((function(n){return"description"===n.name}))[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(n,e){for(var t=0;t<n.length;t++){var r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),e}()}),Ae)),o.default.component("Content",ua),o.default.component("ContentSlotsDistributor",pa),o.default.component("OutboundLink",ha),o.default.component("ClientOnly",{functional:!0,render:function(n,e){var t=e.parent,r=e.children;if(t._isMounted)return r;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),o.default.component("Layout",Object(Kn.d)("Layout")),o.default.component("NotFound",Object(Kn.d)("NotFound")),o.default.prototype.$withBase=function(n){var e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.8.0",hash:"98ec772"},function(n){return fa.apply(this,arguments)}(!1).then((function(n){var e=n.app;n.router.onReady((function(){e.$mount("#app")}))}))}]);